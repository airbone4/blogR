[
{"uri": "/blogR//rlang/hw/dataset_class.html","title": "資料集",
	"tags": [],
	"description": "練習",
	"content": "\r\r\r\r\r❓\n 要知道目前有哪些資料集   📝data()可以列出目前有甚麼資料可以用,也可以放入參數,只列出某個package的資料集。   寫個函數,判斷目前我們要的資料集是不是存在  ❓\n 要知道資料集cars的欄位 列出前10筆資料   normal pretty: 📝 安裝DT: install.pacakges(“DT”),參考 💣 會缺失各種程式庫  hint  data() names(cars)  List of 4 #🏷👍跟我們說這是list ,有4個元素\r$ title : chr \u0026quot;Data sets\u0026quot;\r$ header : NULL\r$ results: chr [1:104, 1:4] # 🏷(這是一個字串矩陣,可以大致資料在這裡) \u0026quot;datasets\u0026quot; \u0026quot;datasets\u0026quot; \u0026quot;datasets\u0026quot; \u0026quot;datasets\u0026quot; ...\r..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2 ## 🏷(2維度的名稱,這裡可以看到沒有ROW名稱,但是有欄位名稱) .. ..$ : NULL .. ..$ : chr [1:4] #🏷(這裡可以看出是一個矩陣) \u0026quot;Package\u0026quot; \u0026quot;LibPath\u0026quot; \u0026quot;Item\u0026quot; \u0026quot;Title\u0026quot;\r$ footer : chr \u0026quot;Use ‘data(package = .packages(all.available = TRUE))’\\nto list the data sets in all *available* packages.\u0026quot;\r- attr(*, \u0026quot;class\u0026quot;)= chr \u0026quot;packageIQR\u0026quot;\r 📝 安裝DT: install.pacakges(“DT”),參考  practice \r展開\r``` r\rlibrary(DT)\rdn\u0026lt;-data()\rss\u0026lt;-dn$results[,\u0026#34;Title\u0026#34;]\rds\u0026lt;-data.frame(ss)\rdatatable(ds)\r```\r\u0026lt;div id=\u0026quot;htmlwidget-1\u0026quot; style=\u0026quot;width:100%;height:auto;\u0026quot; class=\u0026quot;datatables html-widget\u0026quot;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script type=\u0026quot;application/json\u0026quot; data-for=\u0026quot;htmlwidget-1\u0026quot;\u0026gt;{\u0026quot;x\u0026quot;:{\u0026quot;filter\u0026quot;:\u0026quot;none\u0026quot;,\u0026quot;vertical\u0026quot;:false,\u0026quot;data\u0026quot;:[[\u0026quot;1\u0026quot;,\u0026quot;2\u0026quot;,\u0026quot;3\u0026quot;,\u0026quot;4\u0026quot;,\u0026quot;5\u0026quot;,\u0026quot;6\u0026quot;,\u0026quot;7\u0026quot;,\u0026quot;8\u0026quot;,\u0026quot;9\u0026quot;,\u0026quot;10\u0026quot;,\u0026quot;11\u0026quot;,\u0026quot;12\u0026quot;,\u0026quot;13\u0026quot;,\u0026quot;14\u0026quot;,\u0026quot;15\u0026quot;,\u0026quot;16\u0026quot;,\u0026quot;17\u0026quot;,\u0026quot;18\u0026quot;,\u0026quot;19\u0026quot;,\u0026quot;20\u0026quot;,\u0026quot;21\u0026quot;,\u0026quot;22\u0026quot;,\u0026quot;23\u0026quot;,\u0026quot;24\u0026quot;,\u0026quot;25\u0026quot;,\u0026quot;26\u0026quot;,\u0026quot;27\u0026quot;,\u0026quot;28\u0026quot;,\u0026quot;29\u0026quot;,\u0026quot;30\u0026quot;,\u0026quot;31\u0026quot;,\u0026quot;32\u0026quot;,\u0026quot;33\u0026quot;,\u0026quot;34\u0026quot;,\u0026quot;35\u0026quot;,\u0026quot;36\u0026quot;,\u0026quot;37\u0026quot;,\u0026quot;38\u0026quot;,\u0026quot;39\u0026quot;,\u0026quot;40\u0026quot;,\u0026quot;41\u0026quot;,\u0026quot;42\u0026quot;,\u0026quot;43\u0026quot;,\u0026quot;44\u0026quot;,\u0026quot;45\u0026quot;,\u0026quot;46\u0026quot;,\u0026quot;47\u0026quot;,\u0026quot;48\u0026quot;,\u0026quot;49\u0026quot;,\u0026quot;50\u0026quot;,\u0026quot;51\u0026quot;,\u0026quot;52\u0026quot;,\u0026quot;53\u0026quot;,\u0026quot;54\u0026quot;,\u0026quot;55\u0026quot;,\u0026quot;56\u0026quot;,\u0026quot;57\u0026quot;,\u0026quot;58\u0026quot;,\u0026quot;59\u0026quot;,\u0026quot;60\u0026quot;,\u0026quot;61\u0026quot;,\u0026quot;62\u0026quot;,\u0026quot;63\u0026quot;,\u0026quot;64\u0026quot;,\u0026quot;65\u0026quot;,\u0026quot;66\u0026quot;,\u0026quot;67\u0026quot;,\u0026quot;68\u0026quot;,\u0026quot;69\u0026quot;,\u0026quot;70\u0026quot;,\u0026quot;71\u0026quot;,\u0026quot;72\u0026quot;,\u0026quot;73\u0026quot;,\u0026quot;74\u0026quot;,\u0026quot;75\u0026quot;,\u0026quot;76\u0026quot;,\u0026quot;77\u0026quot;,\u0026quot;78\u0026quot;,\u0026quot;79\u0026quot;,\u0026quot;80\u0026quot;,\u0026quot;81\u0026quot;,\u0026quot;82\u0026quot;,\u0026quot;83\u0026quot;,\u0026quot;84\u0026quot;,\u0026quot;85\u0026quot;,\u0026quot;86\u0026quot;,\u0026quot;87\u0026quot;,\u0026quot;88\u0026quot;,\u0026quot;89\u0026quot;,\u0026quot;90\u0026quot;,\u0026quot;91\u0026quot;,\u0026quot;92\u0026quot;,\u0026quot;93\u0026quot;,\u0026quot;94\u0026quot;,\u0026quot;95\u0026quot;,\u0026quot;96\u0026quot;,\u0026quot;97\u0026quot;,\u0026quot;98\u0026quot;,\u0026quot;99\u0026quot;,\u0026quot;100\u0026quot;,\u0026quot;101\u0026quot;,\u0026quot;102\u0026quot;,\u0026quot;103\u0026quot;,\u0026quot;104\u0026quot;],[\u0026quot;Monthly Airline Passenger Numbers 1949-1960\u0026quot;,\u0026quot;Sales Data with Leading Indicator\u0026quot;,\u0026quot;Sales Data with Leading Indicator\u0026quot;,\u0026quot;Biochemical Oxygen Demand\u0026quot;,\u0026quot;Carbon Dioxide Uptake in Grass Plants\u0026quot;,\u0026quot;Weight versus age of chicks on different diets\u0026quot;,\u0026quot;Elisa assay of DNase\u0026quot;,\u0026quot;Daily Closing Prices of Major European Stock Indices, 1991-1998\u0026quot;,\u0026quot;Determination of Formaldehyde\u0026quot;,\u0026quot;Hair and Eye Color of Statistics Students\u0026quot;,\u0026quot;Harman Example 2.3\u0026quot;,\u0026quot;Harman Example 7.4\u0026quot;,\u0026quot;Pharmacokinetics of Indomethacin\u0026quot;,\u0026quot;Effectiveness of Insect Sprays\u0026quot;,\u0026quot;Quarterly Earnings per Johnson \u0026amp;amp; Johnson Share\u0026quot;,\u0026quot;Level of Lake Huron 1875-1972\u0026quot;,\u0026quot;Intercountry Life-Cycle Savings Data\u0026quot;,\u0026quot;Growth of Loblolly pine trees\u0026quot;,\u0026quot;Flow of the River Nile\u0026quot;,\u0026quot;Growth of Orange Trees\u0026quot;,\u0026quot;Potency of Orchard Sprays\u0026quot;,\u0026quot;Results from an Experiment on Plant Growth\u0026quot;,\u0026quot;Reaction Velocity of an Enzymatic Reaction\u0026quot;,\u0026quot;Road Casualties in Great Britain 1969-84\u0026quot;,\u0026quot;Pharmacokinetics of Theophylline\u0026quot;,\u0026quot;Survival of passengers on the Titanic\u0026quot;,\u0026quot;The Effect of Vitamin C on Tooth Growth in Guinea Pigs\u0026quot;,\u0026quot;Student Admissions at UC Berkeley\u0026quot;,\u0026quot;Road Casualties in Great Britain 1969-84\u0026quot;,\u0026quot;UK Quarterly Gas Consumption\u0026quot;,\u0026quot;Accidental Deaths in the US 1973-1978\u0026quot;,\u0026quot;Violent Crime Rates by US State\u0026quot;,\u0026quot;Lawyers' Ratings of State Judges in the US Superior Court\u0026quot;,\u0026quot;Personal Expenditure Data\u0026quot;,\u0026quot;Distances Between European Cities and Between US Cities\u0026quot;,\u0026quot;Death Rates in Virginia (1940)\u0026quot;,\u0026quot;Internet Usage per Minute\u0026quot;,\u0026quot;The World's Telephones\u0026quot;,\u0026quot;Ability and Intelligence Tests\u0026quot;,\u0026quot;Passenger Miles on Commercial US Airlines, 1937-1960\u0026quot;,\u0026quot;New York Air Quality Measurements\u0026quot;,\u0026quot;Anscombe's Quartet of 'Identical' Simple Linear Regressions\u0026quot;,\u0026quot;The Joyner-Boore Attenuation Data\u0026quot;,\u0026quot;The Chatterjee-Price Attitude Data\u0026quot;,\u0026quot;Quarterly Time Series of the Number of Australian Residents\u0026quot;,\u0026quot;Body Temperature Series of Two Beavers\u0026quot;,\u0026quot;Body Temperature Series of Two Beavers\u0026quot;,\u0026quot;Speed and Stopping Distances of Cars\u0026quot;,\u0026quot;Chicken Weights by Feed Type\u0026quot;,\u0026quot;Mauna Loa Atmospheric CO2 Concentration\u0026quot;,\u0026quot;Student's 3000 Criminals Data\u0026quot;,\u0026quot;Yearly Numbers of Important Discoveries\u0026quot;,\u0026quot;Smoking, Alcohol and (O)esophageal Cancer\u0026quot;,\u0026quot;Conversion Rates of Euro Currencies\u0026quot;,\u0026quot;Conversion Rates of Euro Currencies\u0026quot;,\u0026quot;Distances Between European Cities and Between US Cities\u0026quot;,\u0026quot;Old Faithful Geyser Data\u0026quot;,\u0026quot;Monthly Deaths from Lung Diseases in the UK\u0026quot;,\u0026quot;Freeny's Revenue Data\u0026quot;,\u0026quot;Freeny's Revenue Data\u0026quot;,\u0026quot;Freeny's Revenue Data\u0026quot;,\u0026quot;Infertility after Spontaneous and Induced Abortion\u0026quot;,\u0026quot;Edgar Anderson's Iris Data\u0026quot;,\u0026quot;Edgar Anderson's Iris Data\u0026quot;,\u0026quot;Areas of the World's Major Landmasses\u0026quot;,\u0026quot;Monthly Deaths from Lung Diseases in the UK\u0026quot;,\u0026quot;Luteinizing Hormone in Blood Samples\u0026quot;,\u0026quot;Longley's Economic Regression Data\u0026quot;,\u0026quot;Annual Canadian Lynx trappings 1821-1934\u0026quot;,\u0026quot;Monthly Deaths from Lung Diseases in the UK\u0026quot;,\u0026quot;Michelson Speed of Light Data\u0026quot;,\u0026quot;Motor Trend Car Road Tests\u0026quot;,\u0026quot;Average Yearly Temperatures in New Haven\u0026quot;,\u0026quot;Average Monthly Temperatures at Nottingham, 1920-1939\u0026quot;,\u0026quot;Classical N, P, K Factorial Experiment\u0026quot;,\u0026quot;Occupational Status of Fathers and their Sons\u0026quot;,\u0026quot;Annual Precipitation in US Cities\u0026quot;,\u0026quot;Quarterly Approval Ratings of US Presidents\u0026quot;,\u0026quot;Vapor Pressure of Mercury as a Function of Temperature\u0026quot;,\u0026quot;Locations of Earthquakes off Fiji\u0026quot;,\u0026quot;Random Numbers from Congruential Generator RANDU\u0026quot;,\u0026quot;Lengths of Major North American Rivers\u0026quot;,\u0026quot;Measurements on Petroleum Rock Samples\u0026quot;,\u0026quot;Student's Sleep Data\u0026quot;,\u0026quot;Brownlee's Stack Loss Plant Data\u0026quot;,\u0026quot;Brownlee's Stack Loss Plant Data\u0026quot;,\u0026quot;Brownlee's Stack Loss Plant Data\u0026quot;,\u0026quot;US State Facts and Figures\u0026quot;,\u0026quot;US State Facts and Figures\u0026quot;,\u0026quot;US State Facts and Figures\u0026quot;,\u0026quot;US State Facts and Figures\u0026quot;,\u0026quot;US State Facts and Figures\u0026quot;,\u0026quot;US State Facts and Figures\u0026quot;,\u0026quot;US State Facts and Figures\u0026quot;,\u0026quot;Monthly Sunspot Data, from 1749 to \u0026amp;#34;Present\u0026amp;#34;\u0026quot;,\u0026quot;Yearly Sunspot Data, 1700-1988\u0026quot;,\u0026quot;Monthly Sunspot Numbers, 1749-1983\u0026quot;,\u0026quot;Swiss Fertility and Socioeconomic Indicators (1888) Data\u0026quot;,\u0026quot;Yearly Treering Data, -6000-1979\u0026quot;,\u0026quot;Diameter, Height and Volume for Black Cherry Trees\u0026quot;,\u0026quot;Populations Recorded by the US Census\u0026quot;,\u0026quot;Topographic Information on Auckland's Maunga Whau Volcano\u0026quot;,\u0026quot;The Number of Breaks in Yarn during Weaving\u0026quot;,\u0026quot;Average Heights and Weights for American Women\u0026quot;]],\u0026quot;container\u0026quot;:\u0026quot;\u0026lt;table class=\u0026amp;#34;display\u0026amp;#34;\u0026gt;\\n \u0026lt;thead\u0026gt;\\n \u0026lt;tr\u0026gt;\\n \u0026lt;th\u0026gt; \u0026lt;/th\u0026gt;\\n \u0026lt;th\u0026gt;ss\u0026lt;/th\u0026gt;\\n \u0026lt;/tr\u0026gt;\\n \u0026lt;/thead\u0026gt;\\n\u0026lt;/table\u0026gt;\u0026quot;,\u0026quot;options\u0026quot;:{\u0026quot;order\u0026quot;:[],\u0026quot;autoWidth\u0026quot;:false,\u0026quot;orderClasses\u0026quot;:false,\u0026quot;columnDefs\u0026quot;:[{\u0026quot;orderable\u0026quot;:false,\u0026quot;targets\u0026quot;:0}]}},\u0026quot;evals\u0026quot;:[],\u0026quot;jsHooks\u0026quot;:[]}\u0026lt;/script\u0026gt;\nx \u0026lt;- sample(replace = TRUE, 20, x = c(1:10, NA))\ry \u0026lt;- runif(min = 0, max = 1, 20)\rcor(m = \u0026quot;k\u0026quot;, y = y, u = \u0026quot;p\u0026quot;, x = x)\r "},
{"uri": "/blogR//rlang/hw/hw_basic.html","title": "assignment-1",
	"tags": [],
	"description": "assignment",
	"content": "part 1 basic  參考程式碼,數學上,e既然是純量,那就是1X1的矩陣。在R中,如果 e\u0026lt;-3那麼在R中判斷e是不是相量,是不是矩陣?  e\u0026lt;-3\rlength(e)\r#\u0026gt; [1] 1\ris.vector(e) # q1: true or false\r#\u0026gt; [1] TRUE\ris.matrix(e) # q2: true or false\r#\u0026gt; [1] FALSE\r# 指定沒有任何資料的向量\re1\u0026lt;-numeric(0)\rlength(e1)\r#\u0026gt; [1] 0\ris.vector(e) # q3: true or false\r#\u0026gt; [1] TRUE\r 建立向量e21,e22,e23 解釋出現的訊息  e21\u0026lt;-1:3 # 向量,內容為[1,2,3] 也可以e2\u0026lt;-seq(1,3),e2\u0026lt;-c(1,2,3)\re22\u0026lt;-1:4\re23\u0026lt;-1:6\re21==e23\r#\u0026gt; [1] TRUE TRUE TRUE FALSE FALSE FALSE\re21==e22\r#\u0026gt; Warning in e21 == e22: 較長的物件長度並非較短物件長度的倍數\r#\u0026gt; [1] TRUE TRUE TRUE FALSE\r \u0026gt; e21==e23\r[1] TRUE TRUE TRUE FALSE FALSE FALSE\r\u0026gt; e21==e22\r[1] TRUE TRUE TRUE FALSE\rWarning message:\rIn e21 == e22 : 較長的物件長度並非較短物件長度的倍數\r 3.解釋第2行alpha的長度,如果只要保持前3個元素?\nalpha\u0026lt;-1:10\ralpha \u0026lt;- alpha[2 * 1:5]\r hint: 也可以length(alpha)\u0026lt;-3 但是不建議。\n合併成矩陣 利用前述的e21,e22,e23 ,分別解釋下面兩行  c(e21,e22)\r#\u0026gt; [1] 1 2 3 1 2 3 4\rcbind(e21,e22)\r#\u0026gt; Warning in cbind(e21, e22): number of rows of result is not a multiple of vector\r#\u0026gt; length (arg 1)\r#\u0026gt; e21 e22\r#\u0026gt; [1,] 1 1\r#\u0026gt; [2,] 2 2\r#\u0026gt; [3,] 3 3\r#\u0026gt; [4,] 1 4\r  產生5x20的亂數矩陣\n  為甚麼有a[\u0026quot;x1\u0026quot;]? 這題的用意只是記住甚麼是c()函數。\n  a\u0026lt;-c(x=1:2,y=3:4)\ra[\u0026quot;x1\u0026quot;] # 不是a[x1]\r ❓ 回答x2 是甚麼型態\nx1\u0026lt;-list(3,4,5)\rx2\u0026lt;-c(1,2,x1)  ❓ 怎樣把list,e.g.x2, 轉vector ?\n❓把偶數找出來\nx \u0026lt;- rpois(40, lambda=5)\r \rhint\r```r\rx[x %% 2 == 0]\r```\rfunction 寫一個matlab 的矩陣函數\nmm\u0026lt;-function(rcnt,ccnt,value){\rtotal\u0026lt;-rcnt*ccnt\rv\u0026lt;-double(total)\rv[1:total]\u0026lt;-value\rreturn(matrix(v,rcnt,ccnt))\r}\r 寫一個函數,判斷目前的資料夾中,有沒有檔案mm.R\nisExists\u0026lt;-function(afile){\rall\u0026lt;-dir()\rrst\u0026lt;-length(all[all==afile])\rreturn (rst)\r}\r "},
{"uri": "/blogR//rlang/hw/hw_regexp.html","title": "regexpr",
	"tags": [],
	"description": "assignment",
	"content": "reference cheatsheet\n抽取字組 看看是不是#開頭的字串,如果是的話要置換,例如 \u0026quot;# hello\u0026quot; -\u0026gt;\u0026quot;# hello \u0026quot;\nstr\u0026lt;-\u0026quot;# hello\u0026quot;\rif(grepl(\u0026quot;^[#]* \u0026quot;,str)) {\rx\u0026lt;-sub(\u0026quot;(^[#]* )(.*$)\u0026quot;,\u0026quot;\\\\1 \u0026lt;font color='red'\u0026gt; \\\\2 \u0026lt;/font\u0026gt;\u0026quot;,str, perl=TRUE)\rprint(x)\r}\r#\u0026gt; [1] \u0026quot;# \u0026lt;font color='red'\u0026gt; hello \u0026lt;/font\u0026gt;\u0026quot;\r 類似上題 divtitle\u0026lt;-function (str){\rif(grepl(\u0026quot;^[#]* \u0026quot;,str)) {\rrst\u0026lt;-sub(\u0026quot;(^[#]* )(.*$)\u0026quot;,\u0026quot;\\\\1 \u0026lt;div class='outposix'\u0026gt; \\\\2 \u0026lt;/div\u0026gt;\u0026quot;,str, perl=TRUE)\r}else{\rrst\u0026lt;-paste0(\u0026quot;\u0026lt;div class='outposix'\u0026gt;\u0026quot;,str,\u0026quot;\u0026lt;/div\u0026gt;\u0026quot;)\r}\r}\r 測試what1 pattern\u0026lt;-\u0026quot;out\u0026quot;\rext\u0026lt;-\u0026quot;oo\u0026quot;\rlist\u0026lt;-list(\u0026quot;out_中文_1.oo\u0026quot;,\u0026quot;out_1.oo\u0026quot;,\u0026quot;out_xx_1.oo\u0026quot;)\rwhat\u0026lt;-paste0(\u0026quot;(?\u0026lt;=\u0026quot;,pattern,\u0026quot;_).*\u0026quot;,\u0026quot;(?=\\\\.\u0026quot;,ext,\u0026quot;)\u0026quot;);\ridxlist\u0026lt;-as.integer(stringr::str_extract(list,what));\r#\u0026gt; Warning: 強制變更過程中產生了 NA\ridxlist\r#\u0026gt; [1] NA 1 NA\r 執行結果\n#\u0026gt; Warning: 強制變更過程中產生了 NA\ridxlist\r#\u0026gt; [1] NA 1 NA\r  解釋 NA, 和 為甚麼?  測試what2 pattern\u0026lt;-\u0026quot;out\u0026quot;\rext\u0026lt;-\u0026quot;oo\u0026quot;\rlist\u0026lt;-list(\u0026quot;out_中文_1.oo\u0026quot;,\u0026quot;out_1.oo\u0026quot;,\u0026quot;out_xx_1.oo\u0026quot;,\u0026quot;out_中文2_1.oo\u0026quot;)\rwhat\u0026lt;-paste0(\u0026quot;(?\u0026lt;=\u0026quot;,pattern,\u0026quot;_).*(\\\\d)+\u0026quot;,\u0026quot;(?=\\\\.\u0026quot;,ext,\u0026quot;)\u0026quot;);\rr1\u0026lt;-stringr::str_extract(list,what)\rr1\r#\u0026gt; [1] \u0026quot;中文_1\u0026quot; \u0026quot;1\u0026quot; \u0026quot;xx_1\u0026quot; \u0026quot;中文2_1\u0026quot;\rstringr::str_extract(r1,\u0026quot;\\\\d$\u0026quot;)\r#\u0026gt; [1] \u0026quot;1\u0026quot; \u0026quot;1\u0026quot; \u0026quot;1\u0026quot; \u0026quot;1\u0026quot;\r shopping_list \u0026lt;- c(\u0026quot;apples x4\u0026quot;, \u0026quot;bag of flour\u0026quot;, \u0026quot;bag of sugar\u0026quot;, \u0026quot;milk x2\u0026quot;)\rstringr::str_extract(shopping_list, \u0026quot;\\\\d\u0026quot;)\r#\u0026gt; [1] \u0026quot;4\u0026quot; NA NA \u0026quot;2\u0026quot;\r "},
{"uri": "/blogR//rlang/hw/hw_filesystem.html","title": "檔案系統",
	"tags": [],
	"description": "練習",
	"content": "\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r❓ 1   要知道目前有哪些套件\n View 列表(datatable) 寫入檔案(3個欄位,套件名稱、套件路徑和套件版本,按照名稱排序) 如果不要row.names,而且欄位名稱是中文。    分析\n 主要版本第2版的有幾個,有哪些? 平均每個套件有幾個檔案?  pkgs\u0026lt;-installed.packages()\rstr(pkgs) #\u0026gt; chr [1:231, 1:16] \u0026quot;abind\u0026quot; \u0026quot;AER\u0026quot; \u0026quot;askpass\u0026quot; \u0026quot;assertthat\u0026quot; \u0026quot;babynames\u0026quot; ...\r#\u0026gt; - attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r#\u0026gt; ..$ : chr [1:231] \u0026quot;abind\u0026quot; \u0026quot;AER\u0026quot; \u0026quot;askpass\u0026quot; \u0026quot;assertthat\u0026quot; ...\r#\u0026gt; ..$ : chr [1:16] \u0026quot;Package\u0026quot; \u0026quot;LibPath\u0026quot; \u0026quot;Version\u0026quot; \u0026quot;Priority\u0026quot; ...\r# 🏷上面可以知道是matrix\rhead(rownames(pkgs),5)\r#\u0026gt; [1] \u0026quot;abind\u0026quot; \u0026quot;AER\u0026quot; \u0026quot;askpass\u0026quot; \u0026quot;assertthat\u0026quot; \u0026quot;babynames\u0026quot;\rhead(colnames(pkgs),5)\r#\u0026gt; [1] \u0026quot;Package\u0026quot; \u0026quot;LibPath\u0026quot; \u0026quot;Version\u0026quot; \u0026quot;Priority\u0026quot; \u0026quot;Depends\u0026quot;\r library(DT)\rfm\u0026lt;-data.frame(pkgs[,c(1,2,3)])\rdatatable(fm)\r \r{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"abind\",\"AER\",\"askpass\",\"assertthat\",\"babynames\",\"backports\",\"base64enc\",\"bindr\",\"bindrcpp\",\"bit\",\"bit64\",\"blob\",\"blogdown\",\"bookdown\",\"brew\",\"brio\",\"broom\",\"bslib\",\"bsplus\",\"cachem\",\"callr\",\"car\",\"carData\",\"cellranger\",\"cli\",\"clipr\",\"codetools\",\"colorspace\",\"commonmark\",\"conquer\",\"corrplot\",\"cowplot\",\"cpp11\",\"crayon\",\"credentials\",\"crosstalk\",\"curl\",\"data.table\",\"DBI\",\"dbplyr\",\"desc\",\"devtools\",\"diffobj\",\"digest\",\"dplyr\",\"DT\",\"dtplyr\",\"dygraphs\",\"e1071\",\"ellipsis\",\"emo\",\"evaluate\",\"fansi\",\"farver\",\"fastmap\",\"forcats\",\"formatR\",\"Formula\",\"fs\",\"gargle\",\"generics\",\"gert\",\"ggplot2\",\"ggpubr\",\"ggrepel\",\"ggsci\",\"ggsignif\",\"gh\",\"gitcreds\",\"gld\",\"glue\",\"googledrive\",\"googlesheets4\",\"gridExtra\",\"gtable\",\"haven\",\"highr\",\"hms\",\"htmltools\",\"htmlwidgets\",\"httpuv\",\"httr\",\"ids\",\"ini\",\"isoband\",\"jquerylib\",\"jsonlite\",\"knitr\",\"labeling\",\"later\",\"lazyeval\",\"lifecycle\",\"lme4\",\"lmom\",\"lmtest\",\"lubridate\",\"magrittr\",\"maptools\",\"markdown\",\"matlab\",\"matlib\",\"MatrixModels\",\"matrixStats\",\"memoise\",\"mime\",\"miniUI\",\"minqa\",\"modelr\",\"moments\",\"munsell\",\"mvtnorm\",\"nloptr\",\"numDeriv\",\"openssl\",\"openxlsx\",\"PairedData\",\"pbkrtest\",\"pillar\",\"pkgbuild\",\"pkgconfig\",\"pkgload\",\"plogr\",\"polynom\",\"praise\",\"prettyunits\",\"processx\",\"progress\",\"promises\",\"proxy\",\"ps\",\"purrr\",\"quantreg\",\"R6\",\"rappdirs\",\"rcmdcheck\",\"RColorBrewer\",\"Rcpp\",\"RcppArmadillo\",\"RcppEigen\",\"readr\",\"readxl\",\"rematch\",\"rematch2\",\"remotes\",\"reprex\",\"rgl\",\"rio\",\"rjson\",\"RJSONIO\",\"rlang\",\"rmarkdown\",\"roxygen2\",\"rprojroot\",\"rstatix\",\"rstudioapi\",\"rversions\",\"rvest\",\"sandwich\",\"sass\",\"scales\",\"selectr\",\"servr\",\"sessioninfo\",\"shiny\",\"sloop\",\"sm\",\"SmdAid\",\"sourcetools\",\"sp\",\"SparseM\",\"Statamarkdown\",\"stringi\",\"stringr\",\"sys\",\"testit\",\"testthat\",\"tibble\",\"tidyr\",\"tidyselect\",\"tidyverse\",\"tinytex\",\"tzdb\",\"usethis\",\"utf8\",\"uuid\",\"vctrs\",\"viridisLite\",\"vroom\",\"waldo\",\"WDI\",\"whisker\",\"withr\",\"wooldridge\",\"xfun\",\"xml2\",\"xopen\",\"xtable\",\"xts\",\"yaml\",\"zip\",\"zoo\",\"base\",\"boot\",\"class\",\"cluster\",\"codetools.1\",\"compiler\",\"datasets\",\"foreign\",\"graphics\",\"grDevices\",\"grid\",\"KernSmooth\",\"lattice\",\"MASS\",\"Matrix\",\"methods\",\"mgcv\",\"nlme\",\"nnet\",\"parallel\",\"rpart\",\"spatial\",\"splines\",\"stats\",\"stats4\",\"survival\",\"tcltk\",\"tools\",\"translations\",\"utils\"],[\"abind\",\"AER\",\"askpass\",\"assertthat\",\"babynames\",\"backports\",\"base64enc\",\"bindr\",\"bindrcpp\",\"bit\",\"bit64\",\"blob\",\"blogdown\",\"bookdown\",\"brew\",\"brio\",\"broom\",\"bslib\",\"bsplus\",\"cachem\",\"callr\",\"car\",\"carData\",\"cellranger\",\"cli\",\"clipr\",\"codetools\",\"colorspace\",\"commonmark\",\"conquer\",\"corrplot\",\"cowplot\",\"cpp11\",\"crayon\",\"credentials\",\"crosstalk\",\"curl\",\"data.table\",\"DBI\",\"dbplyr\",\"desc\",\"devtools\",\"diffobj\",\"digest\",\"dplyr\",\"DT\",\"dtplyr\",\"dygraphs\",\"e1071\",\"ellipsis\",\"emo\",\"evaluate\",\"fansi\",\"farver\",\"fastmap\",\"forcats\",\"formatR\",\"Formula\",\"fs\",\"gargle\",\"generics\",\"gert\",\"ggplot2\",\"ggpubr\",\"ggrepel\",\"ggsci\",\"ggsignif\",\"gh\",\"gitcreds\",\"gld\",\"glue\",\"googledrive\",\"googlesheets4\",\"gridExtra\",\"gtable\",\"haven\",\"highr\",\"hms\",\"htmltools\",\"htmlwidgets\",\"httpuv\",\"httr\",\"ids\",\"ini\",\"isoband\",\"jquerylib\",\"jsonlite\",\"knitr\",\"labeling\",\"later\",\"lazyeval\",\"lifecycle\",\"lme4\",\"lmom\",\"lmtest\",\"lubridate\",\"magrittr\",\"maptools\",\"markdown\",\"matlab\",\"matlib\",\"MatrixModels\",\"matrixStats\",\"memoise\",\"mime\",\"miniUI\",\"minqa\",\"modelr\",\"moments\",\"munsell\",\"mvtnorm\",\"nloptr\",\"numDeriv\",\"openssl\",\"openxlsx\",\"PairedData\",\"pbkrtest\",\"pillar\",\"pkgbuild\",\"pkgconfig\",\"pkgload\",\"plogr\",\"polynom\",\"praise\",\"prettyunits\",\"processx\",\"progress\",\"promises\",\"proxy\",\"ps\",\"purrr\",\"quantreg\",\"R6\",\"rappdirs\",\"rcmdcheck\",\"RColorBrewer\",\"Rcpp\",\"RcppArmadillo\",\"RcppEigen\",\"readr\",\"readxl\",\"rematch\",\"rematch2\",\"remotes\",\"reprex\",\"rgl\",\"rio\",\"rjson\",\"RJSONIO\",\"rlang\",\"rmarkdown\",\"roxygen2\",\"rprojroot\",\"rstatix\",\"rstudioapi\",\"rversions\",\"rvest\",\"sandwich\",\"sass\",\"scales\",\"selectr\",\"servr\",\"sessioninfo\",\"shiny\",\"sloop\",\"sm\",\"SmdAid\",\"sourcetools\",\"sp\",\"SparseM\",\"Statamarkdown\",\"stringi\",\"stringr\",\"sys\",\"testit\",\"testthat\",\"tibble\",\"tidyr\",\"tidyselect\",\"tidyverse\",\"tinytex\",\"tzdb\",\"usethis\",\"utf8\",\"uuid\",\"vctrs\",\"viridisLite\",\"vroom\",\"waldo\",\"WDI\",\"whisker\",\"withr\",\"wooldridge\",\"xfun\",\"xml2\",\"xopen\",\"xtable\",\"xts\",\"yaml\",\"zip\",\"zoo\",\"base\",\"boot\",\"class\",\"cluster\",\"codetools\",\"compiler\",\"datasets\",\"foreign\",\"graphics\",\"grDevices\",\"grid\",\"KernSmooth\",\"lattice\",\"MASS\",\"Matrix\",\"methods\",\"mgcv\",\"nlme\",\"nnet\",\"parallel\",\"rpart\",\"spatial\",\"splines\",\"stats\",\"stats4\",\"survival\",\"tcltk\",\"tools\",\"translations\",\"utils\"],[\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\"],[\"1.4-5\",\"1.2-9\",\"1.1\",\"0.2.1\",\"1.0.1\",\"1.2.1\",\"0.1-3\",\"0.1.1\",\"0.2.2\",\"4.0.4\",\"4.0.5\",\"1.2.2\",\"1.4\",\"0.23\",\"1.0-6\",\"1.1.2\",\"0.7.9\",\"0.2.5.1\",\"0.1.2\",\"1.0.6\",\"3.7.0\",\"3.0-11\",\"3.0-4\",\"1.1.0\",\"3.0.1\",\"0.7.1\",\"0.2-18\",\"2.0-2\",\"1.7\",\"1.0.2\",\"0.90\",\"1.1.1\",\"0.4.0\",\"1.4.1\",\"1.3.1\",\"1.1.1\",\"4.3.2\",\"1.14.2\",\"1.1.1\",\"2.1.1\",\"1.3.0\",\"2.4.2\",\"0.3.4\",\"0.6.27\",\"1.0.7\",\"0.19\",\"1.1.0\",\"1.1.1.6\",\"1.7-9\",\"0.3.2\",\"0.0.0.9000\",\"0.14\",\"0.5.0\",\"2.1.0\",\"1.1.0\",\"0.5.1\",\"1.11\",\"1.2-4\",\"1.5.0\",\"1.2.0\",\"0.1.0\",\"1.3.2\",\"3.3.5\",\"0.4.0.999\",\"0.9.1\",\"2.9\",\"0.6.3\",\"1.3.0\",\"0.1.1\",\"2.6.2\",\"1.4.2\",\"2.0.0\",\"1.0.0\",\"2.3\",\"0.3.0\",\"2.4.3\",\"0.9\",\"1.1.1\",\"0.5.2\",\"1.5.4\",\"1.6.2\",\"1.4.2\",\"1.0.1\",\"0.3.1\",\"0.2.5\",\"0.1.4\",\"1.7.2\",\"1.33\",\"0.4.2\",\"1.3.0\",\"0.2.2\",\"1.0.1\",\"1.1-27.1\",\"2.8\",\"0.9-38\",\"1.7.10\",\"2.0.1\",\"1.1-2\",\"1.1\",\"1.0.2\",\"0.9.5\",\"0.5-0\",\"0.61.0\",\"2.0.0\",\"0.11\",\"0.1.1.1\",\"1.2.4\",\"0.1.8\",\"0.14\",\"0.5.0\",\"1.1-3\",\"1.2.2.2\",\"2016.8-1.1\",\"1.4.5\",\"4.2.4\",\"1.1.1\",\"0.5.1\",\"1.6.3\",\"1.2.0\",\"2.0.3\",\"1.2.1\",\"0.2.0\",\"1.4-0\",\"1.0.0\",\"1.1.1\",\"3.5.2\",\"1.2.2\",\"1.2.0.1\",\"0.4-26\",\"1.6.0\",\"0.3.4\",\"5.86\",\"2.5.1\",\"0.3.3\",\"1.3.3\",\"1.1-2\",\"1.0.7\",\"0.10.7.0.0\",\"0.3.3.9.1\",\"2.0.1\",\"1.3.1\",\"1.0.1\",\"2.1.2\",\"2.4.0\",\"2.0.1\",\"0.107.14\",\"0.5.27\",\"0.2.20\",\"1.3-1.5\",\"0.4.11\",\"2.10\",\"7.1.1\",\"2.0.2\",\"0.7.0\",\"0.13\",\"2.1.1\",\"1.0.1\",\"3.0-1\",\"0.4.0\",\"1.1.1\",\"0.4-2\",\"0.23\",\"1.1.1\",\"1.6.0\",\"1.0.1\",\"2.2-5.6\",\"0.0.0.9000\",\"0.1.7\",\"1.4-5\",\"1.81\",\"0.4.5\",\"1.7.4\",\"1.4.0\",\"3.4\",\"0.13\",\"3.0.4\",\"3.1.4\",\"1.1.4\",\"1.1.1\",\"1.3.1\",\"0.33\",\"0.1.2\",\"2.0.1\",\"1.2.2\",\"0.1-4\",\"0.3.8\",\"0.4.0\",\"1.5.5\",\"0.3.0\",\"2.7.4\",\"0.4\",\"2.4.2\",\"1.4-1\",\"0.25\",\"1.3.2\",\"1.0.0\",\"1.8-4\",\"0.12.1\",\"2.2.1\",\"2.2.0\",\"1.8-9\",\"4.1.1\",\"1.3-28\",\"7.3-19\",\"2.1.2\",\"0.2-18\",\"4.1.1\",\"4.1.1\",\"0.8-81\",\"4.1.1\",\"4.1.1\",\"4.1.1\",\"2.23-20\",\"0.20-44\",\"7.3-54\",\"1.3-4\",\"4.1.1\",\"1.8-36\",\"3.1-152\",\"7.3-16\",\"4.1.1\",\"4.1-15\",\"7.3-14\",\"4.1.1\",\"4.1.1\",\"4.1.1\",\"3.2-11\",\"4.1.1\",\"4.1.1\",\"4.1.1\",\"4.1.1\"]],\"container\":\"\\n \\n \\n  \\n Package\\n LibPath\\n Version\\n \\n \\n\",\"options\":{\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"columnDefs\":[{\"orderable\":false,\"targets\":0}]}},\"evals\":[],\"jsHooks\":[]}\r  檔案 write.csv(fm,file=\u0026quot;c:\\temp\\xx.csv\u0026quot;,useB) # 🏷為甚麼錯,如何修正\r 修正\n  輸出檔案,帶有row.names,參數:row.names 可以是T,F,也可以是一串名稱\nwrite.csv(fm,file=\u0026quot;c:/temp/foo.csv\u0026quot;) #\r   .\n#🏷不要列名稱\rwrite.csv(fm,file=\u0026quot;c:/temp/foo1.csv\u0026quot;,row.names=F)    .\n#🏷利用write.table\rwrite.table(x, file = \u0026quot;foo.csv\u0026quot;, sep = \u0026quot;,\u0026quot;, col.names = NA,\rqmethod = \u0026quot;double\u0026quot;)\rread.table(\u0026quot;foo.csv\u0026quot;, header = TRUE, sep = \u0026quot;,\u0026quot;, row.names = 1)    colnames(fm)\u0026lt;-c(\u0026quot;套件,路徑,版本\u0026quot;)\r##🏷修正:\u0026quot;套件\u0026quot;,\u0026quot;路徑\u0026quot;,\u0026quot;版本\u0026quot;\rdatatable(fm )  \r{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"abind\",\"AER\",\"askpass\",\"assertthat\",\"babynames\",\"backports\",\"base64enc\",\"bindr\",\"bindrcpp\",\"bit\",\"bit64\",\"blob\",\"blogdown\",\"bookdown\",\"brew\",\"brio\",\"broom\",\"bslib\",\"bsplus\",\"cachem\",\"callr\",\"car\",\"carData\",\"cellranger\",\"cli\",\"clipr\",\"codetools\",\"colorspace\",\"commonmark\",\"conquer\",\"corrplot\",\"cowplot\",\"cpp11\",\"crayon\",\"credentials\",\"crosstalk\",\"curl\",\"data.table\",\"DBI\",\"dbplyr\",\"desc\",\"devtools\",\"diffobj\",\"digest\",\"dplyr\",\"DT\",\"dtplyr\",\"dygraphs\",\"e1071\",\"ellipsis\",\"emo\",\"evaluate\",\"fansi\",\"farver\",\"fastmap\",\"forcats\",\"formatR\",\"Formula\",\"fs\",\"gargle\",\"generics\",\"gert\",\"ggplot2\",\"ggpubr\",\"ggrepel\",\"ggsci\",\"ggsignif\",\"gh\",\"gitcreds\",\"gld\",\"glue\",\"googledrive\",\"googlesheets4\",\"gridExtra\",\"gtable\",\"haven\",\"highr\",\"hms\",\"htmltools\",\"htmlwidgets\",\"httpuv\",\"httr\",\"ids\",\"ini\",\"isoband\",\"jquerylib\",\"jsonlite\",\"knitr\",\"labeling\",\"later\",\"lazyeval\",\"lifecycle\",\"lme4\",\"lmom\",\"lmtest\",\"lubridate\",\"magrittr\",\"maptools\",\"markdown\",\"matlab\",\"matlib\",\"MatrixModels\",\"matrixStats\",\"memoise\",\"mime\",\"miniUI\",\"minqa\",\"modelr\",\"moments\",\"munsell\",\"mvtnorm\",\"nloptr\",\"numDeriv\",\"openssl\",\"openxlsx\",\"PairedData\",\"pbkrtest\",\"pillar\",\"pkgbuild\",\"pkgconfig\",\"pkgload\",\"plogr\",\"polynom\",\"praise\",\"prettyunits\",\"processx\",\"progress\",\"promises\",\"proxy\",\"ps\",\"purrr\",\"quantreg\",\"R6\",\"rappdirs\",\"rcmdcheck\",\"RColorBrewer\",\"Rcpp\",\"RcppArmadillo\",\"RcppEigen\",\"readr\",\"readxl\",\"rematch\",\"rematch2\",\"remotes\",\"reprex\",\"rgl\",\"rio\",\"rjson\",\"RJSONIO\",\"rlang\",\"rmarkdown\",\"roxygen2\",\"rprojroot\",\"rstatix\",\"rstudioapi\",\"rversions\",\"rvest\",\"sandwich\",\"sass\",\"scales\",\"selectr\",\"servr\",\"sessioninfo\",\"shiny\",\"sloop\",\"sm\",\"SmdAid\",\"sourcetools\",\"sp\",\"SparseM\",\"Statamarkdown\",\"stringi\",\"stringr\",\"sys\",\"testit\",\"testthat\",\"tibble\",\"tidyr\",\"tidyselect\",\"tidyverse\",\"tinytex\",\"tzdb\",\"usethis\",\"utf8\",\"uuid\",\"vctrs\",\"viridisLite\",\"vroom\",\"waldo\",\"WDI\",\"whisker\",\"withr\",\"wooldridge\",\"xfun\",\"xml2\",\"xopen\",\"xtable\",\"xts\",\"yaml\",\"zip\",\"zoo\",\"base\",\"boot\",\"class\",\"cluster\",\"codetools.1\",\"compiler\",\"datasets\",\"foreign\",\"graphics\",\"grDevices\",\"grid\",\"KernSmooth\",\"lattice\",\"MASS\",\"Matrix\",\"methods\",\"mgcv\",\"nlme\",\"nnet\",\"parallel\",\"rpart\",\"spatial\",\"splines\",\"stats\",\"stats4\",\"survival\",\"tcltk\",\"tools\",\"translations\",\"utils\"],[\"abind\",\"AER\",\"askpass\",\"assertthat\",\"babynames\",\"backports\",\"base64enc\",\"bindr\",\"bindrcpp\",\"bit\",\"bit64\",\"blob\",\"blogdown\",\"bookdown\",\"brew\",\"brio\",\"broom\",\"bslib\",\"bsplus\",\"cachem\",\"callr\",\"car\",\"carData\",\"cellranger\",\"cli\",\"clipr\",\"codetools\",\"colorspace\",\"commonmark\",\"conquer\",\"corrplot\",\"cowplot\",\"cpp11\",\"crayon\",\"credentials\",\"crosstalk\",\"curl\",\"data.table\",\"DBI\",\"dbplyr\",\"desc\",\"devtools\",\"diffobj\",\"digest\",\"dplyr\",\"DT\",\"dtplyr\",\"dygraphs\",\"e1071\",\"ellipsis\",\"emo\",\"evaluate\",\"fansi\",\"farver\",\"fastmap\",\"forcats\",\"formatR\",\"Formula\",\"fs\",\"gargle\",\"generics\",\"gert\",\"ggplot2\",\"ggpubr\",\"ggrepel\",\"ggsci\",\"ggsignif\",\"gh\",\"gitcreds\",\"gld\",\"glue\",\"googledrive\",\"googlesheets4\",\"gridExtra\",\"gtable\",\"haven\",\"highr\",\"hms\",\"htmltools\",\"htmlwidgets\",\"httpuv\",\"httr\",\"ids\",\"ini\",\"isoband\",\"jquerylib\",\"jsonlite\",\"knitr\",\"labeling\",\"later\",\"lazyeval\",\"lifecycle\",\"lme4\",\"lmom\",\"lmtest\",\"lubridate\",\"magrittr\",\"maptools\",\"markdown\",\"matlab\",\"matlib\",\"MatrixModels\",\"matrixStats\",\"memoise\",\"mime\",\"miniUI\",\"minqa\",\"modelr\",\"moments\",\"munsell\",\"mvtnorm\",\"nloptr\",\"numDeriv\",\"openssl\",\"openxlsx\",\"PairedData\",\"pbkrtest\",\"pillar\",\"pkgbuild\",\"pkgconfig\",\"pkgload\",\"plogr\",\"polynom\",\"praise\",\"prettyunits\",\"processx\",\"progress\",\"promises\",\"proxy\",\"ps\",\"purrr\",\"quantreg\",\"R6\",\"rappdirs\",\"rcmdcheck\",\"RColorBrewer\",\"Rcpp\",\"RcppArmadillo\",\"RcppEigen\",\"readr\",\"readxl\",\"rematch\",\"rematch2\",\"remotes\",\"reprex\",\"rgl\",\"rio\",\"rjson\",\"RJSONIO\",\"rlang\",\"rmarkdown\",\"roxygen2\",\"rprojroot\",\"rstatix\",\"rstudioapi\",\"rversions\",\"rvest\",\"sandwich\",\"sass\",\"scales\",\"selectr\",\"servr\",\"sessioninfo\",\"shiny\",\"sloop\",\"sm\",\"SmdAid\",\"sourcetools\",\"sp\",\"SparseM\",\"Statamarkdown\",\"stringi\",\"stringr\",\"sys\",\"testit\",\"testthat\",\"tibble\",\"tidyr\",\"tidyselect\",\"tidyverse\",\"tinytex\",\"tzdb\",\"usethis\",\"utf8\",\"uuid\",\"vctrs\",\"viridisLite\",\"vroom\",\"waldo\",\"WDI\",\"whisker\",\"withr\",\"wooldridge\",\"xfun\",\"xml2\",\"xopen\",\"xtable\",\"xts\",\"yaml\",\"zip\",\"zoo\",\"base\",\"boot\",\"class\",\"cluster\",\"codetools\",\"compiler\",\"datasets\",\"foreign\",\"graphics\",\"grDevices\",\"grid\",\"KernSmooth\",\"lattice\",\"MASS\",\"Matrix\",\"methods\",\"mgcv\",\"nlme\",\"nnet\",\"parallel\",\"rpart\",\"spatial\",\"splines\",\"stats\",\"stats4\",\"survival\",\"tcltk\",\"tools\",\"translations\",\"utils\"],[\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\"],[\"1.4-5\",\"1.2-9\",\"1.1\",\"0.2.1\",\"1.0.1\",\"1.2.1\",\"0.1-3\",\"0.1.1\",\"0.2.2\",\"4.0.4\",\"4.0.5\",\"1.2.2\",\"1.4\",\"0.23\",\"1.0-6\",\"1.1.2\",\"0.7.9\",\"0.2.5.1\",\"0.1.2\",\"1.0.6\",\"3.7.0\",\"3.0-11\",\"3.0-4\",\"1.1.0\",\"3.0.1\",\"0.7.1\",\"0.2-18\",\"2.0-2\",\"1.7\",\"1.0.2\",\"0.90\",\"1.1.1\",\"0.4.0\",\"1.4.1\",\"1.3.1\",\"1.1.1\",\"4.3.2\",\"1.14.2\",\"1.1.1\",\"2.1.1\",\"1.3.0\",\"2.4.2\",\"0.3.4\",\"0.6.27\",\"1.0.7\",\"0.19\",\"1.1.0\",\"1.1.1.6\",\"1.7-9\",\"0.3.2\",\"0.0.0.9000\",\"0.14\",\"0.5.0\",\"2.1.0\",\"1.1.0\",\"0.5.1\",\"1.11\",\"1.2-4\",\"1.5.0\",\"1.2.0\",\"0.1.0\",\"1.3.2\",\"3.3.5\",\"0.4.0.999\",\"0.9.1\",\"2.9\",\"0.6.3\",\"1.3.0\",\"0.1.1\",\"2.6.2\",\"1.4.2\",\"2.0.0\",\"1.0.0\",\"2.3\",\"0.3.0\",\"2.4.3\",\"0.9\",\"1.1.1\",\"0.5.2\",\"1.5.4\",\"1.6.2\",\"1.4.2\",\"1.0.1\",\"0.3.1\",\"0.2.5\",\"0.1.4\",\"1.7.2\",\"1.33\",\"0.4.2\",\"1.3.0\",\"0.2.2\",\"1.0.1\",\"1.1-27.1\",\"2.8\",\"0.9-38\",\"1.7.10\",\"2.0.1\",\"1.1-2\",\"1.1\",\"1.0.2\",\"0.9.5\",\"0.5-0\",\"0.61.0\",\"2.0.0\",\"0.11\",\"0.1.1.1\",\"1.2.4\",\"0.1.8\",\"0.14\",\"0.5.0\",\"1.1-3\",\"1.2.2.2\",\"2016.8-1.1\",\"1.4.5\",\"4.2.4\",\"1.1.1\",\"0.5.1\",\"1.6.3\",\"1.2.0\",\"2.0.3\",\"1.2.1\",\"0.2.0\",\"1.4-0\",\"1.0.0\",\"1.1.1\",\"3.5.2\",\"1.2.2\",\"1.2.0.1\",\"0.4-26\",\"1.6.0\",\"0.3.4\",\"5.86\",\"2.5.1\",\"0.3.3\",\"1.3.3\",\"1.1-2\",\"1.0.7\",\"0.10.7.0.0\",\"0.3.3.9.1\",\"2.0.1\",\"1.3.1\",\"1.0.1\",\"2.1.2\",\"2.4.0\",\"2.0.1\",\"0.107.14\",\"0.5.27\",\"0.2.20\",\"1.3-1.5\",\"0.4.11\",\"2.10\",\"7.1.1\",\"2.0.2\",\"0.7.0\",\"0.13\",\"2.1.1\",\"1.0.1\",\"3.0-1\",\"0.4.0\",\"1.1.1\",\"0.4-2\",\"0.23\",\"1.1.1\",\"1.6.0\",\"1.0.1\",\"2.2-5.6\",\"0.0.0.9000\",\"0.1.7\",\"1.4-5\",\"1.81\",\"0.4.5\",\"1.7.4\",\"1.4.0\",\"3.4\",\"0.13\",\"3.0.4\",\"3.1.4\",\"1.1.4\",\"1.1.1\",\"1.3.1\",\"0.33\",\"0.1.2\",\"2.0.1\",\"1.2.2\",\"0.1-4\",\"0.3.8\",\"0.4.0\",\"1.5.5\",\"0.3.0\",\"2.7.4\",\"0.4\",\"2.4.2\",\"1.4-1\",\"0.25\",\"1.3.2\",\"1.0.0\",\"1.8-4\",\"0.12.1\",\"2.2.1\",\"2.2.0\",\"1.8-9\",\"4.1.1\",\"1.3-28\",\"7.3-19\",\"2.1.2\",\"0.2-18\",\"4.1.1\",\"4.1.1\",\"0.8-81\",\"4.1.1\",\"4.1.1\",\"4.1.1\",\"2.23-20\",\"0.20-44\",\"7.3-54\",\"1.3-4\",\"4.1.1\",\"1.8-36\",\"3.1-152\",\"7.3-16\",\"4.1.1\",\"4.1-15\",\"7.3-14\",\"4.1.1\",\"4.1.1\",\"4.1.1\",\"3.2-11\",\"4.1.1\",\"4.1.1\",\"4.1.1\",\"4.1.1\"]],\"container\":\"\\n \\n \\n  \\n 套件,路徑,版本\\n NA\\n NA\\n \\n \\n\",\"options\":{\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"columnDefs\":[{\"orderable\":false,\"targets\":0}]}},\"evals\":[],\"jsHooks\":[]}\r# 🏷❓怎樣把表格中的row.names去掉? # 🏷datatable(fm,rownames=F)  colnames(fm)\u0026lt;-c(\u0026quot;套件\u0026quot;,\u0026quot;路徑\u0026quot;,\u0026quot;版本\u0026quot;)\rdatatable(fm,rownames=F )  \r{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"abind\",\"AER\",\"askpass\",\"assertthat\",\"babynames\",\"backports\",\"base64enc\",\"bindr\",\"bindrcpp\",\"bit\",\"bit64\",\"blob\",\"blogdown\",\"bookdown\",\"brew\",\"brio\",\"broom\",\"bslib\",\"bsplus\",\"cachem\",\"callr\",\"car\",\"carData\",\"cellranger\",\"cli\",\"clipr\",\"codetools\",\"colorspace\",\"commonmark\",\"conquer\",\"corrplot\",\"cowplot\",\"cpp11\",\"crayon\",\"credentials\",\"crosstalk\",\"curl\",\"data.table\",\"DBI\",\"dbplyr\",\"desc\",\"devtools\",\"diffobj\",\"digest\",\"dplyr\",\"DT\",\"dtplyr\",\"dygraphs\",\"e1071\",\"ellipsis\",\"emo\",\"evaluate\",\"fansi\",\"farver\",\"fastmap\",\"forcats\",\"formatR\",\"Formula\",\"fs\",\"gargle\",\"generics\",\"gert\",\"ggplot2\",\"ggpubr\",\"ggrepel\",\"ggsci\",\"ggsignif\",\"gh\",\"gitcreds\",\"gld\",\"glue\",\"googledrive\",\"googlesheets4\",\"gridExtra\",\"gtable\",\"haven\",\"highr\",\"hms\",\"htmltools\",\"htmlwidgets\",\"httpuv\",\"httr\",\"ids\",\"ini\",\"isoband\",\"jquerylib\",\"jsonlite\",\"knitr\",\"labeling\",\"later\",\"lazyeval\",\"lifecycle\",\"lme4\",\"lmom\",\"lmtest\",\"lubridate\",\"magrittr\",\"maptools\",\"markdown\",\"matlab\",\"matlib\",\"MatrixModels\",\"matrixStats\",\"memoise\",\"mime\",\"miniUI\",\"minqa\",\"modelr\",\"moments\",\"munsell\",\"mvtnorm\",\"nloptr\",\"numDeriv\",\"openssl\",\"openxlsx\",\"PairedData\",\"pbkrtest\",\"pillar\",\"pkgbuild\",\"pkgconfig\",\"pkgload\",\"plogr\",\"polynom\",\"praise\",\"prettyunits\",\"processx\",\"progress\",\"promises\",\"proxy\",\"ps\",\"purrr\",\"quantreg\",\"R6\",\"rappdirs\",\"rcmdcheck\",\"RColorBrewer\",\"Rcpp\",\"RcppArmadillo\",\"RcppEigen\",\"readr\",\"readxl\",\"rematch\",\"rematch2\",\"remotes\",\"reprex\",\"rgl\",\"rio\",\"rjson\",\"RJSONIO\",\"rlang\",\"rmarkdown\",\"roxygen2\",\"rprojroot\",\"rstatix\",\"rstudioapi\",\"rversions\",\"rvest\",\"sandwich\",\"sass\",\"scales\",\"selectr\",\"servr\",\"sessioninfo\",\"shiny\",\"sloop\",\"sm\",\"SmdAid\",\"sourcetools\",\"sp\",\"SparseM\",\"Statamarkdown\",\"stringi\",\"stringr\",\"sys\",\"testit\",\"testthat\",\"tibble\",\"tidyr\",\"tidyselect\",\"tidyverse\",\"tinytex\",\"tzdb\",\"usethis\",\"utf8\",\"uuid\",\"vctrs\",\"viridisLite\",\"vroom\",\"waldo\",\"WDI\",\"whisker\",\"withr\",\"wooldridge\",\"xfun\",\"xml2\",\"xopen\",\"xtable\",\"xts\",\"yaml\",\"zip\",\"zoo\",\"base\",\"boot\",\"class\",\"cluster\",\"codetools\",\"compiler\",\"datasets\",\"foreign\",\"graphics\",\"grDevices\",\"grid\",\"KernSmooth\",\"lattice\",\"MASS\",\"Matrix\",\"methods\",\"mgcv\",\"nlme\",\"nnet\",\"parallel\",\"rpart\",\"spatial\",\"splines\",\"stats\",\"stats4\",\"survival\",\"tcltk\",\"tools\",\"translations\",\"utils\"],[\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\"],[\"1.4-5\",\"1.2-9\",\"1.1\",\"0.2.1\",\"1.0.1\",\"1.2.1\",\"0.1-3\",\"0.1.1\",\"0.2.2\",\"4.0.4\",\"4.0.5\",\"1.2.2\",\"1.4\",\"0.23\",\"1.0-6\",\"1.1.2\",\"0.7.9\",\"0.2.5.1\",\"0.1.2\",\"1.0.6\",\"3.7.0\",\"3.0-11\",\"3.0-4\",\"1.1.0\",\"3.0.1\",\"0.7.1\",\"0.2-18\",\"2.0-2\",\"1.7\",\"1.0.2\",\"0.90\",\"1.1.1\",\"0.4.0\",\"1.4.1\",\"1.3.1\",\"1.1.1\",\"4.3.2\",\"1.14.2\",\"1.1.1\",\"2.1.1\",\"1.3.0\",\"2.4.2\",\"0.3.4\",\"0.6.27\",\"1.0.7\",\"0.19\",\"1.1.0\",\"1.1.1.6\",\"1.7-9\",\"0.3.2\",\"0.0.0.9000\",\"0.14\",\"0.5.0\",\"2.1.0\",\"1.1.0\",\"0.5.1\",\"1.11\",\"1.2-4\",\"1.5.0\",\"1.2.0\",\"0.1.0\",\"1.3.2\",\"3.3.5\",\"0.4.0.999\",\"0.9.1\",\"2.9\",\"0.6.3\",\"1.3.0\",\"0.1.1\",\"2.6.2\",\"1.4.2\",\"2.0.0\",\"1.0.0\",\"2.3\",\"0.3.0\",\"2.4.3\",\"0.9\",\"1.1.1\",\"0.5.2\",\"1.5.4\",\"1.6.2\",\"1.4.2\",\"1.0.1\",\"0.3.1\",\"0.2.5\",\"0.1.4\",\"1.7.2\",\"1.33\",\"0.4.2\",\"1.3.0\",\"0.2.2\",\"1.0.1\",\"1.1-27.1\",\"2.8\",\"0.9-38\",\"1.7.10\",\"2.0.1\",\"1.1-2\",\"1.1\",\"1.0.2\",\"0.9.5\",\"0.5-0\",\"0.61.0\",\"2.0.0\",\"0.11\",\"0.1.1.1\",\"1.2.4\",\"0.1.8\",\"0.14\",\"0.5.0\",\"1.1-3\",\"1.2.2.2\",\"2016.8-1.1\",\"1.4.5\",\"4.2.4\",\"1.1.1\",\"0.5.1\",\"1.6.3\",\"1.2.0\",\"2.0.3\",\"1.2.1\",\"0.2.0\",\"1.4-0\",\"1.0.0\",\"1.1.1\",\"3.5.2\",\"1.2.2\",\"1.2.0.1\",\"0.4-26\",\"1.6.0\",\"0.3.4\",\"5.86\",\"2.5.1\",\"0.3.3\",\"1.3.3\",\"1.1-2\",\"1.0.7\",\"0.10.7.0.0\",\"0.3.3.9.1\",\"2.0.1\",\"1.3.1\",\"1.0.1\",\"2.1.2\",\"2.4.0\",\"2.0.1\",\"0.107.14\",\"0.5.27\",\"0.2.20\",\"1.3-1.5\",\"0.4.11\",\"2.10\",\"7.1.1\",\"2.0.2\",\"0.7.0\",\"0.13\",\"2.1.1\",\"1.0.1\",\"3.0-1\",\"0.4.0\",\"1.1.1\",\"0.4-2\",\"0.23\",\"1.1.1\",\"1.6.0\",\"1.0.1\",\"2.2-5.6\",\"0.0.0.9000\",\"0.1.7\",\"1.4-5\",\"1.81\",\"0.4.5\",\"1.7.4\",\"1.4.0\",\"3.4\",\"0.13\",\"3.0.4\",\"3.1.4\",\"1.1.4\",\"1.1.1\",\"1.3.1\",\"0.33\",\"0.1.2\",\"2.0.1\",\"1.2.2\",\"0.1-4\",\"0.3.8\",\"0.4.0\",\"1.5.5\",\"0.3.0\",\"2.7.4\",\"0.4\",\"2.4.2\",\"1.4-1\",\"0.25\",\"1.3.2\",\"1.0.0\",\"1.8-4\",\"0.12.1\",\"2.2.1\",\"2.2.0\",\"1.8-9\",\"4.1.1\",\"1.3-28\",\"7.3-19\",\"2.1.2\",\"0.2-18\",\"4.1.1\",\"4.1.1\",\"0.8-81\",\"4.1.1\",\"4.1.1\",\"4.1.1\",\"2.23-20\",\"0.20-44\",\"7.3-54\",\"1.3-4\",\"4.1.1\",\"1.8-36\",\"3.1-152\",\"7.3-16\",\"4.1.1\",\"4.1-15\",\"7.3-14\",\"4.1.1\",\"4.1.1\",\"4.1.1\",\"3.2-11\",\"4.1.1\",\"4.1.1\",\"4.1.1\",\"4.1.1\"]],\"container\":\"\\n \\n \\n 套件\\n 路徑\\n 版本\\n \\n \\n\",\"options\":{\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}\r拿到主要版本 x\u0026lt;-strsplit(fm[,3],\u0026quot;\\\\.\u0026quot;)\rsapply(x,head,1)\r"},
{"uri": "/blogR//rlang/demo/citation.html","title": "引用",
	"tags": [],
	"description": "暫時",
	"content": "introduction Goal: Estimate the effect of the price per citation on the number of library subscriptions\n\rJournals.csv\r\rJournals.csv\r\r\rinitial options(prompt = \u0026quot;R\u0026gt; \u0026quot;, continue = \u0026quot;+ \u0026quot;, width = 64, digits = 4, show.signif.stars = FALSE, useFancyQuotes = FALSE) library(\u0026quot;AER\u0026quot;) set.seed(1071)\nlibrary(\u0026quot;AER\u0026quot;)\r#\u0026gt; 載入需要的套件：car\r#\u0026gt; 載入需要的套件：carData\r#\u0026gt; 載入需要的套件：lmtest\r#\u0026gt; 載入需要的套件：zoo\r#\u0026gt; #\u0026gt; 載入套件：'zoo'\r#\u0026gt; 下列物件被遮斷自 'package:base':\r#\u0026gt; #\u0026gt; as.Date, as.Date.numeric\r#\u0026gt; 載入需要的套件：sandwich\r#\u0026gt; 載入需要的套件：survival\rdata(\u0026quot;Journals\u0026quot;, package = \u0026quot;AER\u0026quot;)\r#View(Journals)\rjournals \u0026lt;- Journals[, c(\u0026quot;subs\u0026quot;, \u0026quot;price\u0026quot;)]\rjournals$citeprice \u0026lt;- Journals$price/Journals$citations\rsummary(journals)\r#\u0026gt; subs price citeprice #\u0026gt; Min. : 2.0 Min. : 20.0 Min. : 0.005223 #\u0026gt; 1st Qu.: 52.0 1st Qu.: 134.5 1st Qu.: 0.464495 #\u0026gt; Median : 122.5 Median : 282.0 Median : 1.320513 #\u0026gt; Mean : 196.9 Mean : 417.7 Mean : 2.548455 #\u0026gt; 3rd Qu.: 268.2 3rd Qu.: 540.8 3rd Qu.: 3.440171 #\u0026gt; Max. :1098.0 Max. :2120.0 Max. :24.459459\r ❓ 練習: 改成datatable\nplot(log(subs) ~ log(citeprice), data = journals)\rjour_lm \u0026lt;- lm(log(subs) ~ log(citeprice), data = journals)\rabline(jour_lm)\r ❓ what is jour_lm ?\nclass(jour_lm)\r#\u0026gt; [1] \u0026quot;lm\u0026quot;\rnames(jour_lm)\r#\u0026gt; [1] \u0026quot;coefficients\u0026quot; \u0026quot;residuals\u0026quot; \u0026quot;effects\u0026quot; \u0026quot;rank\u0026quot; #\u0026gt; [5] \u0026quot;fitted.values\u0026quot; \u0026quot;assign\u0026quot; \u0026quot;qr\u0026quot; \u0026quot;df.residual\u0026quot; #\u0026gt; [9] \u0026quot;xlevels\u0026quot; \u0026quot;call\u0026quot; \u0026quot;terms\u0026quot; \u0026quot;model\u0026quot;\rstr(jour_lm) #🏷注意list of 12\r#\u0026gt; List of 12\r#\u0026gt; $ coefficients : Named num [1:2] 4.766 -0.533\r#\u0026gt; ..- attr(*, \u0026quot;names\u0026quot;)= chr [1:2] \u0026quot;(Intercept)\u0026quot; \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; $ residuals : Named num [1:180] -1.185 -0.739 -0.332 -2.725 1.136 ...\r#\u0026gt; ..- attr(*, \u0026quot;names\u0026quot;)= chr [1:180] \u0026quot;APEL\u0026quot; \u0026quot;SAJoEH\u0026quot; \u0026quot;CE\u0026quot; \u0026quot;MEPiTE\u0026quot; ...\r#\u0026gt; $ effects : Named num [1:180] -63.599 -11.222 -0.338 -2.715 1.146 ...\r#\u0026gt; ..- attr(*, \u0026quot;names\u0026quot;)= chr [1:180] \u0026quot;(Intercept)\u0026quot; \u0026quot;log(citeprice)\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; ...\r#\u0026gt; $ rank : int 2\r#\u0026gt; $ fitted.values: Named num [1:180] 3.82 4.82 3.17 3.42 3.43 ...\r#\u0026gt; ..- attr(*, \u0026quot;names\u0026quot;)= chr [1:180] \u0026quot;APEL\u0026quot; \u0026quot;SAJoEH\u0026quot; \u0026quot;CE\u0026quot; \u0026quot;MEPiTE\u0026quot; ...\r#\u0026gt; $ assign : int [1:2] 0 1\r#\u0026gt; $ qr :List of 5\r#\u0026gt; ..$ qr : num [1:180, 1:2] -13.4164 0.0745 0.0745 0.0745 0.0745 ...\r#\u0026gt; .. ..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r#\u0026gt; .. .. ..$ : chr [1:180] \u0026quot;APEL\u0026quot; \u0026quot;SAJoEH\u0026quot; \u0026quot;CE\u0026quot; \u0026quot;MEPiTE\u0026quot; ...\r#\u0026gt; .. .. ..$ : chr [1:2] \u0026quot;(Intercept)\u0026quot; \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; .. ..- attr(*, \u0026quot;assign\u0026quot;)= int [1:2] 0 1\r#\u0026gt; ..$ qraux: num [1:2] 1.07 1.01\r#\u0026gt; ..$ pivot: int [1:2] 1 2\r#\u0026gt; ..$ tol : num 1e-07\r#\u0026gt; ..$ rank : int 2\r#\u0026gt; ..- attr(*, \u0026quot;class\u0026quot;)= chr \u0026quot;qr\u0026quot;\r#\u0026gt; $ df.residual : int 178\r#\u0026gt; $ xlevels : Named list()\r#\u0026gt; $ call : language lm(formula = log(subs) ~ log(citeprice), data = journals)\r#\u0026gt; $ terms :Classes 'terms', 'formula' language log(subs) ~ log(citeprice)\r#\u0026gt; .. ..- attr(*, \u0026quot;variables\u0026quot;)= language list(log(subs), log(citeprice))\r#\u0026gt; .. ..- attr(*, \u0026quot;factors\u0026quot;)= int [1:2, 1] 0 1\r#\u0026gt; .. .. ..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r#\u0026gt; .. .. .. ..$ : chr [1:2] \u0026quot;log(subs)\u0026quot; \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; .. .. .. ..$ : chr \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; .. ..- attr(*, \u0026quot;term.labels\u0026quot;)= chr \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; .. ..- attr(*, \u0026quot;order\u0026quot;)= int 1\r#\u0026gt; .. ..- attr(*, \u0026quot;intercept\u0026quot;)= int 1\r#\u0026gt; .. ..- attr(*, \u0026quot;response\u0026quot;)= int 1\r#\u0026gt; .. ..- attr(*, \u0026quot;.Environment\u0026quot;)=\u0026lt;environment: R_GlobalEnv\u0026gt; #\u0026gt; .. ..- attr(*, \u0026quot;predvars\u0026quot;)= language list(log(subs), log(citeprice))\r#\u0026gt; .. ..- attr(*, \u0026quot;dataClasses\u0026quot;)= Named chr [1:2] \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot;\r#\u0026gt; .. .. ..- attr(*, \u0026quot;names\u0026quot;)= chr [1:2] \u0026quot;log(subs)\u0026quot; \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; $ model :'data.frame':\t180 obs. of 2 variables:\r#\u0026gt; ..$ log(subs) : num [1:180] 2.639 4.078 2.833 0.693 4.564 ...\r#\u0026gt; ..$ log(citeprice): num [1:180] 1.7677 -0.0953 3.0025 2.5294 2.5089 ...\r#\u0026gt; ..- attr(*, \u0026quot;terms\u0026quot;)=Classes 'terms', 'formula' language log(subs) ~ log(citeprice)\r#\u0026gt; .. .. ..- attr(*, \u0026quot;variables\u0026quot;)= language list(log(subs), log(citeprice))\r#\u0026gt; .. .. ..- attr(*, \u0026quot;factors\u0026quot;)= int [1:2, 1] 0 1\r#\u0026gt; .. .. .. ..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r#\u0026gt; .. .. .. .. ..$ : chr [1:2] \u0026quot;log(subs)\u0026quot; \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; .. .. .. .. ..$ : chr \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; .. .. ..- attr(*, \u0026quot;term.labels\u0026quot;)= chr \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; .. .. ..- attr(*, \u0026quot;order\u0026quot;)= int 1\r#\u0026gt; .. .. ..- attr(*, \u0026quot;intercept\u0026quot;)= int 1\r#\u0026gt; .. .. ..- attr(*, \u0026quot;response\u0026quot;)= int 1\r#\u0026gt; .. .. ..- attr(*, \u0026quot;.Environment\u0026quot;)=\u0026lt;environment: R_GlobalEnv\u0026gt; #\u0026gt; .. .. ..- attr(*, \u0026quot;predvars\u0026quot;)= language list(log(subs), log(citeprice))\r#\u0026gt; .. .. ..- attr(*, \u0026quot;dataClasses\u0026quot;)= Named chr [1:2] \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot;\r#\u0026gt; .. .. .. ..- attr(*, \u0026quot;names\u0026quot;)= chr [1:2] \u0026quot;log(subs)\u0026quot; \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; - attr(*, \u0026quot;class\u0026quot;)= chr \u0026quot;lm\u0026quot;\r ❓ 自由度在哪?\n\r提示\r```r\rjour_lm$rank\r#\u0026gt; [1] 2\r```\r最簡單的報告產生函數 summary(jour_lm)\r#\u0026gt; #\u0026gt; Call:\r#\u0026gt; lm(formula = log(subs) ~ log(citeprice), data = journals)\r#\u0026gt; #\u0026gt; Residuals:\r#\u0026gt; Min 1Q Median 3Q Max #\u0026gt; -2.72478 -0.53609 0.03721 0.46619 1.84808 #\u0026gt; #\u0026gt; Coefficients:\r#\u0026gt; Estimate Std. Error t value Pr(\u0026gt;|t|) #\u0026gt; (Intercept) 4.76621 0.05591 85.25 \u0026lt;2e-16 ***\r#\u0026gt; log(citeprice) -0.53305 0.03561 -14.97 \u0026lt;2e-16 ***\r#\u0026gt; ---\r#\u0026gt; Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r#\u0026gt; #\u0026gt; Residual standard error: 0.7497 on 178 degrees of freedom\r#\u0026gt; Multiple R-squared: 0.5573,\tAdjusted R-squared: 0.5548 #\u0026gt; F-statistic: 224 on 1 and 178 DF, p-value: \u0026lt; 2.2e-16\r  jour_slm \u0026lt;- summary(jour_lm)\rclass(jour_slm)\r#\u0026gt; [1] \u0026quot;summary.lm\u0026quot;\rnames(jour_slm)\r#\u0026gt; [1] \u0026quot;call\u0026quot; \u0026quot;terms\u0026quot; \u0026quot;residuals\u0026quot; \u0026quot;coefficients\u0026quot; #\u0026gt; [5] \u0026quot;aliased\u0026quot; \u0026quot;sigma\u0026quot; \u0026quot;df\u0026quot; \u0026quot;r.squared\u0026quot; #\u0026gt; [9] \u0026quot;adj.r.squared\u0026quot; \u0026quot;fstatistic\u0026quot; \u0026quot;cov.unscaled\u0026quot;\rjour_slm$coefficients\r#\u0026gt; Estimate Std. Error t value Pr(\u0026gt;|t|)\r#\u0026gt; (Intercept) 4.7662121 0.05590908 85.24934 2.953913e-146\r#\u0026gt; log(citeprice) -0.5330535 0.03561320 -14.96786 2.563943e-33\r  anova(jour_lm)\r#\u0026gt; Analysis of Variance Table\r#\u0026gt; #\u0026gt; Response: log(subs)\r#\u0026gt; Df Sum Sq Mean Sq F value Pr(\u0026gt;F) #\u0026gt; log(citeprice) 1 125.93 125.934 224.04 \u0026lt; 2.2e-16 ***\r#\u0026gt; Residuals 178 100.06 0.562 #\u0026gt; ---\r#\u0026gt; Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\rcoef(jour_lm)\r#\u0026gt; (Intercept) log(citeprice) #\u0026gt; 4.7662121 -0.5330535\rconfint(jour_lm, level = 0.95)\r#\u0026gt; 2.5 % 97.5 %\r#\u0026gt; (Intercept) 4.6558822 4.8765420\r#\u0026gt; log(citeprice) -0.6033319 -0.4627751\r predict(jour_lm, newdata = data.frame(citeprice = 2.11),\rinterval = \u0026quot;confidence\u0026quot;)\r#\u0026gt; fit lwr upr\r#\u0026gt; 1 4.368188 4.247485 4.48889\rpredict(jour_lm, newdata = data.frame(citeprice = 2.11), interval = \u0026quot;prediction\u0026quot;)\r#\u0026gt; fit lwr upr\r#\u0026gt; 1 4.368188 2.883746 5.852629\r  lciteprice \u0026lt;- seq(from = -6, to = 4, by = 0.25)\rjour_pred \u0026lt;- predict(jour_lm, interval = \u0026quot;prediction\u0026quot;,\rnewdata = data.frame(citeprice = exp(lciteprice))) plot(log(subs) ~ log(citeprice), data = journals)\rlines(jour_pred[, 1] ~ lciteprice, col = 1) lines(jour_pred[, 2] ~ lciteprice, col = 1, lty = 2)\rlines(jour_pred[, 3] ~ lciteprice, col = 1, lty = 2)\r 參數為模型類別的plot() 產生6種,預設4種\n residuals versus fitted values, QQ plot for normality, scale-location plot, standardized residuals versus leverages.  個別的圖:例如QQ plot:　plot(jour_lm, which = 2)\npar(mfrow = c(2, 2))\rplot(jour_lm)\rpar(mfrow = c(1, 1))\rlinearHypothesis(jour_lm, \u0026quot;log(citeprice) = -0.5\u0026quot;)\r#\u0026gt; Linear hypothesis test\r#\u0026gt; #\u0026gt; Hypothesis:\r#\u0026gt; log(citeprice) = - 0.5\r#\u0026gt; #\u0026gt; Model 1: restricted model\r#\u0026gt; Model 2: log(subs) ~ log(citeprice)\r#\u0026gt; #\u0026gt; Res.Df RSS Df Sum of Sq F Pr(\u0026gt;F)\r#\u0026gt; 1 179 100.54 #\u0026gt; 2 178 100.06 1 0.48421 0.8614 0.3546\r ❓ 利用資料集 cars : dist ~ speed\n 分別給出 speed=12,19,24 的信賴區間和預測區間 畫圖  "},
{"uri": "/blogR//rlang/1_0_requirement.html","title": "1 Requirement",
	"tags": [],
	"description": "軟體環境",
	"content": "安裝軟體 部份軟體列表 另外於linux 安裝 tidyverse時需要:\nsudo apt-get install -y libxml2-dev libcurl4-openssl-dev libssl-dev\r install.packages()\ninstall.packages('devtools')\rinstall.packages('bookdown')\rinstall.packages('rlang')\rinstall.packages('tidyr')\rinstall.packages('babynames')\rinstall.packages('ggplot2')\rinstall.packages('sm')\rinstall.packages('bindrcpp')\rinstall.packages('tidyverse')\rinstall.packages('codetools')\rinstall.packages('moments')\rlibrary('devtools')\rinstall_github(\u0026quot;Hadley/emo\u0026quot;)\rinstall.packages(\u0026quot;blogdown\u0026quot;)\rinstall.packages(\u0026quot;wooldridge\u0026quot;)\rinstall.packages(\u0026quot;WDI\u0026quot;)\rinstall.packages(\u0026quot;rjson\u0026quot;)\rinstall.packages(\u0026quot;AER\u0026quot;)\rinstall.packages(\u0026quot;DT\u0026quot;)\rinstall.packages(\u0026quot;dplyr\u0026quot;)\rinstall.packages(\u0026quot;jsonlite)\r##\roptions(repos = c(CRAN = \u0026quot;https://cran.revolutionanalytics.com\u0026quot;))\r 如果是linux系統要先:\n# sudo visudo\r# 然後加入\r# username ALL = NOPASSWD: /fullpath/to/command, /fullpath/to/othercommand\r# 下面這個system 需要上面兩行\rsystem('sudo apt update;sudo apt upgrade;sudo apt-get install curl')\rsystem('sudo apt-get install -y libxml2-dev libcurl4-openssl-dev libssl-dev')\r \r\r更新套件  update all available packages  update.packages()   update, without prompts for permission/clarification  update.packages(ask = FALSE,checkBuild=T)   💡先把專案關掉 例如: all.packages \u0026lt;- installed.packages()\rr.version \u0026lt;- paste(version[['major']], '.', version[['minor']], sep = '')\rfor (i in 1:nrow(all.packages))\r{\rpackage.name \u0026lt;- all.packages[i, 1]\rpackage.version \u0026lt;- all.packages[i, 3]\rif (package.version != r.version)\r{\rprint(paste('Installing', package.name))\rinstall.packages(package.name)\r}\r}\r   Rtools 在windows中安裝完以後，在R主控台上執行\nwriteLines('PATH=\u0026quot;${RTOOLS40_HOME}\\\\usr\\\\bin;${PATH}\u0026quot;', con = \u0026quot;~/.Renviron\u0026quot;)\r 重啟動，然後測試下面指令\nSys.which(\u0026quot;make\u0026quot;)\r 反安裝 在R console中，利用指令 .libPaths()，或者在shell(terminal)中利用 R -e '.libPaths()' 知道套裝被安裝在哪裡，然後可以移除所有的相關套件 uinstall.packages()\n"},
{"uri": "/blogR//rlang/4_2_type_vector.html","title": "4.2 向量",
	"tags": [],
	"description": "基本語法",
	"content": "vector 函數範例 cbind,rbind x\u0026lt;-runif(5)\ry\u0026lt;-runif(6)\rcbind(x,y)\r#\u0026gt; Warning in cbind(x, y): number of rows of result is not a multiple of vector\r#\u0026gt; length (arg 1)\r#\u0026gt; x y\r#\u0026gt; [1,] 0.05555426 0.81078837\r#\u0026gt; [2,] 0.39638526 0.83144706\r#\u0026gt; [3,] 0.26659782 0.42948876\r#\u0026gt; [4,] 0.14729596 0.21873952\r#\u0026gt; [5,] 0.50746265 0.03657459\r#\u0026gt; [6,] 0.05555426 0.50790482\r 函數diff 可以用在差分計算\nArguments\n x: a numeric vector or matrix containing the values to be differenced. lag: an integer indicating which lag to use. differences: an integer indicating the order of the difference.\n例如  diff(x,lag=d,differences=n)\rx[(1+d):n] - x[1:(n-d)]\r 練習: 刪除向量中的一個元素 x\u0026lt;-c(1,2,3)\r 如何刪除x中的第2個元素 ?\nhint:\n數字向量元素的刪除 ，不能像是list[2]\u0026lt;-NULL ，請問你的解法？ 並說明\n物件元素的刪除，簡單一點的像是list，\nx\u0026lt;-list(1,2,3)\rx[2]\u0026lt;-NULL\rx\r 但是向量元素的刪除沒有捷徑\nx\u0026lt;-c(1,2,3)\rx[2]\u0026lt;-NULL\r#\u0026gt; Error in x[2] \u0026lt;- NULL: 置換的長度為零\r 因此，需要變通的辦法\n方法1：\nx\u0026lt;-c(1,2,3)\rt\u0026lt;-as.list(x) # note: 使用list(x)而不是as.list(x)會有什麼不同\rt[2]\u0026lt;-NULL\rx\u0026lt;-unlist(t)\rx\r#\u0026gt; [1] 1 3\r 方法2：\nx\u0026lt;-c(1,2,3)\ry\u0026lt;-x[-2]\rx\u0026lt;-y\r 練習：改為函數\ndelElement\u0026lt;-function(x,idx){\rif (is.vector(x)){\rt\u0026lt;-as.list(x)\rt[idx]\u0026lt;-NULL\rt\u0026lt;-unlist(t)\rreturn(t) } else {\rstop('must be vector')\r}\r}\rx\u0026lt;-c(1,2,3)\rx\u0026lt;-delElement(x,2)\rx\r#\u0026gt; [1] 1 3\r Adding Attributes to Vectors 函數attributes() 可以讓我們有能力給一個普通的物件加入一些註解或是名稱。以向量為例,如下,一開始設定向量的時候,內定屬性是NULL\nv1 \u0026lt;- 8:17\rattributes(v1)\r#\u0026gt; NULL\r 現在可以給元素名稱\n# assigning names to a pre-existing vector\rnames(v1) \u0026lt;- letters[1:length(v1)] #🏷👏根據實際長度給定a,b,c,d...\rv1\r#\u0026gt; a b c d e f g h i j #\u0026gt; 8 9 10 11 12 13 14 15 16 17\r 然後看看屬性\nattributes(v1)\r#\u0026gt; $names\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; \u0026quot;e\u0026quot; \u0026quot;f\u0026quot; \u0026quot;g\u0026quot; \u0026quot;h\u0026quot; \u0026quot;i\u0026quot; \u0026quot;j\u0026quot;\r 那，什麼是names(v1)\nnames(v1)\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; \u0026quot;e\u0026quot; \u0026quot;f\u0026quot; \u0026quot;g\u0026quot; \u0026quot;h\u0026quot; \u0026quot;i\u0026quot; \u0026quot;j\u0026quot;\r 也就是說names()函數返回每個元素的名子，而attributes()返回的是有什麼屬性。但是再仔細看看，可以發現指派attribute 給\nattributes(v1)\u0026lt;-list(x='',y='',z='')\rv1\r#\u0026gt; [1] 8 9 10 11 12 13 14 15 16 17\r#\u0026gt; attr(,\u0026quot;x\u0026quot;)\r#\u0026gt; [1] \u0026quot;\u0026quot;\r#\u0026gt; attr(,\u0026quot;y\u0026quot;)\r#\u0026gt; [1] \u0026quot;\u0026quot;\r#\u0026gt; attr(,\u0026quot;z\u0026quot;)\r#\u0026gt; [1] \u0026quot;\u0026quot;\rattributes(v1)\r#\u0026gt; $x\r#\u0026gt; [1] \u0026quot;\u0026quot;\r#\u0026gt; #\u0026gt; $y\r#\u0026gt; [1] \u0026quot;\u0026quot;\r#\u0026gt; #\u0026gt; $z\r#\u0026gt; [1] \u0026quot;\u0026quot;\r 測試是否可以自行加入attributes，然後讓names()可以運作，如下：\nattributes(v1)\u0026lt;-list(names=letters[1:10])\rv1\r#\u0026gt; a b c d e f g h i j #\u0026gt; 8 9 10 11 12 13 14 15 16 17\rattributes(v1)\r#\u0026gt; $names\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; \u0026quot;e\u0026quot; \u0026quot;f\u0026quot; \u0026quot;g\u0026quot; \u0026quot;h\u0026quot; \u0026quot;i\u0026quot; \u0026quot;j\u0026quot;\rnames(v1)\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; \u0026quot;e\u0026quot; \u0026quot;f\u0026quot; \u0026quot;g\u0026quot; \u0026quot;h\u0026quot; \u0026quot;i\u0026quot; \u0026quot;j\u0026quot;\r 上面這個程式暗示了什麼？\n 函數names()只是attributes()\u0026lt;-的一個特例，我們總是可以自行加入一個屬性，名稱為names讓函數names()可以把每個元素的名稱列印出來。\n 後面這段程式碼只是對照一下之前每個元素加入名稱的作法，本身沒意義：\n# adding names when creating vectors\rv2 \u0026lt;- c(name1 = 1, name2 = 2, name3 = 3)\rv2\r#\u0026gt; name1 name2 name3 #\u0026gt; 1 2 3\rattributes(v2)\r#\u0026gt; $names\r#\u0026gt; [1] \u0026quot;name1\u0026quot; \u0026quot;name2\u0026quot; \u0026quot;name3\u0026quot;\r 也可以加入註解：\ncomment(v1) \u0026lt;- \u0026quot;This is a comment on a vector\u0026quot;\rv1\r#\u0026gt; a b c d e f g h i j #\u0026gt; 8 9 10 11 12 13 14 15 16 17\rattributes(v1)\r#\u0026gt; $names\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; \u0026quot;e\u0026quot; \u0026quot;f\u0026quot; \u0026quot;g\u0026quot; \u0026quot;h\u0026quot; \u0026quot;i\u0026quot; \u0026quot;j\u0026quot;\r#\u0026gt; #\u0026gt; $comment\r#\u0026gt; [1] \u0026quot;This is a comment on a vector\u0026quot;\r "},
{"uri": "/blogR//rlang/1_2_filesystem.html","title": "1.2 檔案系統",
	"tags": [],
	"description": "讀取資料",
	"content": "分解、合成檔案路徑 合成路徑 workingdir \u0026lt;- \u0026quot;work\u0026quot;\rprojectdir \u0026lt;- \u0026quot;demo\u0026quot;\rdatadir \u0026lt;- \u0026quot;data\u0026quot;\ry\u0026lt;-file.path(workingdir, projectdir, datadir)\ry\r#\u0026gt; [1] \u0026quot;work/demo/data\u0026quot;\rtypeof(y)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r 上面是windows 10系統上的結果,在 Linux-based 的作業系統執行結果一樣,注意斜線都一樣。\n利用函數 file.path()合成檔案路徑，其分隔是斜線,而不是反斜線 (例如for example C:/Program Files/R/R-3.5.1)?\n路徑分解  dirname() :分解路徑用，例如＂c:/temp/text.txt\u0026quot; 得到\u0026quot;c:/temp\u0026quot;，但是\u0026quot;c:/temp/\u0026quot;,\u0026quot;c:/temp\u0026quot;, \u0026quot;c:/temp.txt\u0026quot;都得到\u0026quot;c:/\u0026quot;。😒🏷有時候有後綴\u0026quot;/\u0026quot;,有時候沒有 basename()  dirname(\u0026quot;c:\\\\temp\\\\demo.txt\u0026quot;)\r#\u0026gt; [1] \u0026quot;c:/temp\u0026quot;\rbasename(\u0026quot;c:\\\\temp\\\\demo.txt\u0026quot;)\r#\u0026gt; [1] \u0026quot;demo.txt\u0026quot;\rdirname(\u0026quot;c:/temp/\u0026quot;) #🏷👏沒有正確拿出DIR\r#\u0026gt; [1] \u0026quot;c:/\u0026quot;\rdirname(\u0026quot;c:/temp\u0026quot;) #🏷👏沒有正確拿出DIR\r#\u0026gt; [1] \u0026quot;c:/\u0026quot;\r 檔案系統相關操作  dir():包括資料夾、檔案名稱 list.files() : 僅檔案 list.dirs():僅資料夾  判別是否目標檔案或資料夾已經存在(我們不希望刪除或更動已經存在的檔案):\n  file.exists(\u0026quot;xx.txt\u0026quot;): 是否存在xx.txt\n  dir.exists(\u0026quot;xx\u0026quot;): 是否存在子目錄xx\n  工作區相關\n getwd() setwd() .libPaths() : 目前套件安裝的地方。 R.Home() : 目前R安裝的地方,例如\u0026quot;C:/PROGRA~1/R/R-41~1.1\u0026quot;    範例\ncurrentwd\u0026lt;-getwd()\rsetwd(\u0026quot;~\u0026quot;) # 🏷這是使用者目錄,看你是甚麼系統而定,我的是windows\rgetwd()\r#\u0026gt; [1] \u0026quot;C:/Users/you/Documents\u0026quot;\rsetwd(currentwd)\rpath.expand(\u0026quot;~\u0026quot;) # 🏷👏展開路徑~\rR.home()\rlibPaths()\rlist.files(R.home()) #:可以列出R的安裝的位置,然後list.files()列出檔案\rlist.dirs(R.home(\u0026quot;doc\u0026quot;))\rlist.dirs(R.home(\u0026quot;doc\u0026quot;), full.names = FALSE)\r## 在使用者指定的目錄,列出 檔案的開頭是 a到l 或 r。\rdir(\u0026quot;../..\u0026quot;, pattern = \u0026quot;^[a-lr]\u0026quot;, full.names = TRUE, ignore.case = TRUE)\r 練習 按照上面的結果,如果我要判斷我拿到是檔案而不是資料夾,怎麼做?提示\r file.exists(f) \u0026amp;\u0026amp; !dir.exists(f)\r \n問題: 利用.libPaths() 、 list.files()問題:列出所有套件提示\r list.files(.libPaths())\r \n操作檔案系統   暫時子目錄的路徑tempdir()，暫時檔案tempfile()\n 函數 tempfile() 不是真正的建立新檔案,而是在目前的r session中隨機產生唯一檔案名稱，檔案位置預設是在暫時子目錄中。  mydirname \u0026lt;- tempfile(pattern = \u0026quot;mydir\u0026quot;)\rmydirname\r#\u0026gt; C:\\\\Users\\\\使用者名稱\\\\AppData\\\\Local\\\\Temp\\\\RtmpSg2qRA\\\\mydir326845a02140\r     函數 file.exists() 可以用來知道檔案是否存在,\n  函數 dir() 用來列出子目錄中的檔案,例如dir(tempdir())\n  \r範例\rs\u0026lt;-\u0026quot;C:\\\\Users\\\\使用者名稱\\\\AppData\\\\Local\\\\Temp\u0026quot;\rdir(s)\r    建立目錄 dir.create 建立子目錄\ndir.create(mydirname) file.exists(mydirname) # 上面指令建立的子目錄是否存在\rdir(tempdir(), full.names = TRUE) #列出目前子目錄內容(全名)\rfile.mtime(mydirname) #子目錄建立時間,make time\r 結果\n[1] TRUE [1] \u0026quot;C:\\\\Users\\\\xxx\\\\AppData\\\\Local\\\\Temp\\\\RtmpIp3ZiD/file87e8755a1876\u0026quot; [2] \u0026quot;C:\\\\Users\\\\xxx\\\\AppData\\\\Local\\\\Temp\\\\RtmpIp3ZiD/mydir87e86b51384d\u0026quot; [3] \u0026quot;C:\\\\Users\\\\xxx\\\\AppData\\\\Local\\\\Temp\\\\RtmpIp3ZiD/rs-graphics-0f3f81af-32b7-49c4-a272-ad1a859f222f\u0026quot; [1] \u0026quot;2018-10-25 23:42:51 CST\u0026quot;\r R系統檔案列表 如果要觀察安裝套件的檔案位置,可以使用指令system.file(),這個指令可以列出內建某個套建的全路徑。例如,\nsystem.file(package = \u0026quot;stats\u0026quot;)\r# \u0026gt; [1] \u0026quot;C:/PROGRA~1/R/R-3.5.1/library/stats\u0026quot;\rsystem.file() 🏷基本套件路徑\r# \u0026gt; [1] \u0026quot;C:/PROGRA~1/R/R-41~1.1/library/base\u0026quot; .libPaths() 🏷另外安裝的套件路徑\r# \u0026gt; [1] \u0026quot;C:/Users/you/Documents/R/win-library/4.1\u0026quot;\r# \u0026gt; [2] \u0026quot;C:/Program Files/R/R-4.1.1/library\u0026quot;\r system.file()的結果是一個目錄,因此可以利用dir()列出套件stats中,所有的檔案\ndir(system.file(package = \u0026quot;stats\u0026quot;))\r#\u0026gt; [1] \u0026quot;COPYRIGHTS.modreg\u0026quot; \u0026quot;demo\u0026quot; \u0026quot;DESCRIPTION\u0026quot; #\u0026gt; [4] \u0026quot;help\u0026quot; \u0026quot;html\u0026quot; \u0026quot;INDEX\u0026quot; #\u0026gt; [7] \u0026quot;libs\u0026quot; \u0026quot;Meta\u0026quot; \u0026quot;NAMESPACE\u0026quot; #\u0026gt; [10] \u0026quot;R\u0026quot; \u0026quot;SOURCES.ts\u0026quot;  上面可以看到套件中包含子目錄demo，如果還要查看demo中的檔案內容:\ndir(system.file(\u0026quot;demo\u0026quot;, package = \u0026quot;stats\u0026quot;))\r#\u0026gt; [1] \u0026quot;glm.vr.R\u0026quot; \u0026quot;lm.glm.R\u0026quot; \u0026quot;nlm.R\u0026quot; \u0026quot;smooth.R\u0026quot;\r 上面只有檔案名稱,如果要看全路徑，可以利用參數full.names:\ndir(system.file(\u0026quot;demo\u0026quot;, package = \u0026quot;stats\u0026quot;), full.names = TRUE)\r#\u0026gt; [1] \u0026quot;/usr/lib64/R/library/stats/demo/glm.vr.R\u0026quot;\r#\u0026gt; [2] \u0026quot;/usr/lib64/R/library/stats/demo/lm.glm.R\u0026quot;\r#\u0026gt; [3] \u0026quot;/usr/lib64/R/library/stats/demo/nlm.R\u0026quot; #\u0026gt; [4] \u0026quot;/usr/lib64/R/library/stats/demo/smooth.R\u0026quot;\r 應用範例 列出目前工作目錄上的檔案 x \u0026lt;- dir()\rfor (item in x) {\rprint(item) # show(item) }\r 或者,僅列出前幾個檔案\nx\u0026lt;-dir()\rhead(x)\r 檢查在目前的工作目錄下,是否存在使用者傳遞進來的目錄? 例如\nfolderlist\u0026lt;-c(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;c\u0026quot;)\rcheckdir(folderlist)  📝 利用file.exists()\n\r\r進階 use RStudio to open the file if possible\nopen_file = function(x, open = interactive(), line = -1L) {\rif (open) tryCatch(rstudioapi::navigateToFile(x, line), error = function(e) file.edit(x))\r}\r pkg_file = function(..., mustWork = TRUE) {\rsystem.file(..., package = 'blogdown', mustWork = mustWork)\r}\r# tempfile under the current working directory\rwd_tempfile = function(..., pattern = '') {\rbasename(tempfile(pattern, '.', ...))\r}\r# only copy files/dirs if they exist\rfile.copy2 = function(from, to, ...) {\ri = file.exists(from); from = from[i]\rif (length(from) == 0) return()\rif (length(to) \u0026gt; 1) {\rto = to[i]\rif (length(unique(to)) == 1) to = unique(to)\r}\rif (length(to) == 1) {\rfile.copy(from, to, ...)\r} else mapply(file.copy, from, to, ...)\r}\rdir_rename = function(from, to, clean = FALSE) {\rif (!dir_exists(from)) return()\rif (clean) unlink(to, recursive = TRUE)\rdir_create(dirname(to))\r# I don't know why file.rename() might fail, but if it fails, fall back to\r# file.copy(): https://github.com/rstudio/blogdown/issues/232\rsuppressWarnings(file.rename(from, to)) || {\rfile.copy(from, dirname(to), recursive = TRUE) \u0026amp;\u0026amp; unlink(from, recursive = TRUE)\r}\r}\rdirs_rename = function(from, to, ...) {\rn = length(from); if (n == 0) return()\rif (length(to) != n) stop(\r'The number of source dirs must be equal to the number of target dirs'\r)\rfor (i in seq_len(n)) dir_rename(from[i], to[i], ...)\r}\r# relative path with '/' as the path separator\rrel_path = function(x) {\rxfun::relative_path(xfun::normalize_path(x))\r}\r# change the default of full.names and recursive in list.files() because these\r# values are used much more frequently than the original defaults\rlist_files = function(..., full.names = TRUE, recursive = TRUE) {\rlist.files(..., full.names = full.names, recursive = recursive, no.. = TRUE)\r}\r "},
{"uri": "/blogR//rlang/11_00_sampling.html","title": "11. sampling",
	"tags": [],
	"description": "基本抽樣",
	"content": "Sample and Distribution 01 N\u0026lt;-100\rpop\u0026lt;-rnorm(N,5,2)\rrndno\u0026lt;-as.integer(runif(N)*N)+1\rsmp\u0026lt;-pop[rndno]\rss\u0026lt;-summary(smp)\rs1\u0026lt;-hist(smp)\rrug(quantile(smp), col=2, lwd=2.5)\rplot(s1$mids,s1$density,type=\u0026quot;s\u0026quot;) #quiz:barplot??\rs2\u0026lt;-hist(pop)\rplot(s1,col=\u0026quot;red\u0026quot;)\rlines(s2,col=\u0026quot;blue\u0026quot;)  內建隨機抽樣 函數sample(x,n,replace=FALSE ). 其中x為要抽取的向量, n為樣本容量. replace 預設為false\n no replacement, 等機率:  例如從52張撲克牌中抽取5張:\nsample(1:52, 5)\r#\u0026gt; [1] 15 7 10 12 23\r replacement: 例如拋一枚均勻的硬幣10次  sample(c(\u0026quot;H\u0026quot;, \u0026quot;T\u0026quot;), 10, replace=T)\r#\u0026gt; [1] \u0026quot;T\u0026quot; \u0026quot;H\u0026quot; \u0026quot;T\u0026quot; \u0026quot;H\u0026quot; \u0026quot;T\u0026quot; \u0026quot;T\u0026quot; \u0026quot;H\u0026quot; \u0026quot;T\u0026quot; \u0026quot;T\u0026quot; \u0026quot;H\u0026quot;\r 練習:一棵骰子擲10次可表示為:\n不等可能的隨機抽樣: sample(x, n, replace=TRUE, prob=y) prob=y指定x中元素出現的概率, 向量y與x等長度. 例如一娃娃機取出成功的概率為0.6, 那麼10次的試驗為:  sample(c(\u0026quot;sucess\u0026quot;, \u0026quot;fail\u0026quot;), 10, replace=T, prob=c(0.6,0.4))\r#\u0026gt; [1] \u0026quot;sucess\u0026quot; \u0026quot;sucess\u0026quot; \u0026quot;fail\u0026quot; \u0026quot;sucess\u0026quot; \u0026quot;sucess\u0026quot; \u0026quot;fail\u0026quot; \u0026quot;fail\u0026quot; \u0026quot;sucess\u0026quot;\r#\u0026gt; [9] \u0026quot;sucess\u0026quot; \u0026quot;fail\u0026quot;\r 排列組合與概率的計算 例 從一副52張撲克中取4張, 求以下事件的概率:\n 抽取的4張依次為紅心A，方塊A，黑桃A和梅花A的概率; 一次抽取4張為紅心A，方塊A，黑桃A和梅花A的概率.  解\n 抽取的4張是有次序的, 因此使用排列來求解. 所求的事件(記為A)概率為 ($P(A)=\\frac{1}{52 \\times 51 \\times 50 \\times 49}$) 利用R函數  1/prod(52:49)\r#\u0026gt; [1] 1.539077e-07\r 沒有次序的, 可以使用組合數來求解.  $$ P(B)=\\frac{1}{(52,4)} $$\n其中 ($(n,m)=\\frac{n!}{m!(n-m)!}$),可以利用函數choose(),例如\n1/choose(52,4)\r#\u0026gt; [1] 3.693785e-06\r distribution 標準表格上下沒有線條,左右有\n   名稱 R函數 選項     beta beta shape1, shape2   binomial binom size, prob   Cauchy cauchy location=0, scale=1   chi-sqaured ($\\chi^2$) chisq df, ncp   exponential exp rate   Fisher (F) f df1, df2, ncp   gamma gamma shape, scale=1   geometric geom prob   hypergeometric hyper m, n, k   lognormal lnorm meanlog=0, sdlog=1   logistic logis location=0, scale=1   multinomial multinom size, prob   normal norm mean=0, sd=1   negative binomial nbinom size, prob   Poisson pois lambda   Student’s (t) t df   uniform unif min=0, max=1   Weibull weibull shape, scale=1   Wilcoxon’s statistics wilcox m, n    signrank n    對於所給的分佈名稱，有四類。\n以func為例， 四類函數的對應為:\n 「d」概率密度函數: dfunc(x, p1, p2, ...), x為數值向量; 「p」(累積)分佈函數: pfunc(q, p1, p2, ...), q為數值向量; 「q」分位數函數: qfunc(p, p1, p2, ...), p為由概率構成的向量; 「r」隨機數函數: rfunc(n, p1, p2, ...), n為生成數據的個數  這四類函數的第一個參數是有規律的: 形為dfunc的函數為x，pfunc的函數為q，qfunc的函數為p，rfunc的函數為n\nnote: (但rhyper和rwilcox是特例，他們的第一個參數為nn). 非中心參數(non-centrality parameter)僅對CDF和 少數其它幾個函數有效.\n$$ \\frac{{\\sum\\limits_{i = 1}^n {{x_i} - n\\mu } }}{{\\sqrt {n{\\sigma ^2}} }} \\sim N(0,1) $$\n$$ \\bar X = \\frac{{\\sum_{i = 1}^n {{x_i} } }}{n} \\sim N(\\mu, \\sigma^2/n) $$\nuniform a~b\n$$\\mu = (a+b)/2$$\n$$\\sigma^2=\\frac{(b-a)^2}{12} $$\ndata的每一個ROW有sample size (=i=column)\n共1000次(=N=row)\nN=1000 i=3 #sample size\rmu=0.5\rsigma=1/sqrt(12)\rdata\u0026lt;-matrix(runif(i*N),ncol=i)\rrs\u0026lt;-rowSums(data)\rrs\u0026lt;-rs/i\rz\u0026lt;-(rs-mu)/(sigma/sqrt(i))\rhist(z)\rlines(density(z), col = 'red', lwd = 3)\rx\u0026lt;-z\rcurve(dnorm(x), col = 'blue', lwd = 3, lty = 3, add = T)\rrug(sample(z,100))\r limite.central \u0026lt;-\rfunction (r = runif, distpar = c(0, 1), m = .5, s = 1 / sqrt(12), n = c(1, 3, 10, 30), N = 1000) {\rfor (i in n) {\rif (length(distpar) == 2) {\rx \u0026lt;-matrix(r(i * N, distpar[1], distpar[2]), nc = i)\r} else {\rx \u0026lt;-matrix(r(i * N, distpar), nc = i)\r}\rx \u0026lt;-(apply(x, 1, sum) - i * m) / (sqrt(i) * s)\rhist(x, col = 'light blue', probability = T, main = paste(\u0026quot;n=\u0026quot;, i),\rylim = c(0, max(.4, density(x) $y)))\rlines(density(x), col = 'red', lwd = 3)\rcurve(dnorm(x), col = 'blue', lwd = 3, lty = 3, add = T)\rif (N \u0026gt; 100) {\rrug(sample(x, 100))\r} else {\rrug(x)\r}\r}\r}\rop \u0026lt;- par(mfrow=c(2,2))\rlimite.central(rbinom, distpar=c(10 ,0.1), m=1, s=0.9)\rpar(op)\r  apply(x,1,sum) 第2個參數1表示row 方向,如果是2表示column 和matlab 相反。  "},
{"uri": "/blogR//rlang/1_1_%E7%B3%BB%E7%B5%B1.html","title": "1.1 運作環境",
	"tags": ["環境變數"],
	"description": "作業系統, R套裝的環境",
	"content": "讓R好用一點 Viewer  Viewer viewer \u0026lt;- getOption(\u0026quot;viewer\u0026quot;)\rif (!is.null(viewer))\rviewer(\u0026quot;http://localhost:8100\u0026quot;) else\rutils::browseURL(\u0026quot;http://localhost:8100\u0026quot;)\r  😜viewer(\u0026quot;URL網址\u0026quot;, height = 500)可以指定高度。   (暫時)[https://stackoverflow.com/questions/33312891/force-rstudio-to-use-browser-instead-of-viewer]  options(viewer = NULL) 的問題    我要讓help出現在瀏覽器: options(browser=NULL)\n和程式設計有關 環境變數  windows 幾個常用的資料夾  %USERPROFILE% %LOCALAPPDATA% %APPDATA%    \r\r存取作業系統的環境變數 指令開頭是Sys\nhugocmd(\u0026quot;expand\u0026quot; ,'title=\u0026quot;\u0026quot; incode=true')\r#\u0026gt; \r展開\rSys.getenv()\r#\u0026gt; ALLUSERSPROFILE C:\\ProgramData\r#\u0026gt; APPDATA C:\\Users\\linchao\\AppData\\Roaming\r#\u0026gt; CHROME_CRASHPAD_PIPE_NAME\r#\u0026gt; \\\\.\\pipe\\crashpad_15568_QBGATGEVDHVHFXZV\r#\u0026gt; COLORTERM truecolor\r#\u0026gt; CommonProgramFiles C:\\Program Files\\Common Files\r#\u0026gt; CommonProgramFiles(x86)\r#\u0026gt; C:\\Program Files (x86)\\Common Files\r#\u0026gt; CommonProgramW6432 C:\\Program Files\\Common Files\r#\u0026gt; COMPUTERNAME TALI\r#\u0026gt; ComSpec C:\\WINDOWS\\system32\\cmd.exe\r#\u0026gt; DriverData C:\\Windows\\System32\\Drivers\\DriverData\r#\u0026gt; EDITURL D:/work/rmi_r\r#\u0026gt; GIT_ASKPASS c:\\Users\\linchao\\AppData\\Local\\Programs\\Microsoft\r#\u0026gt; VS\r#\u0026gt; Code\\resources\\app\\extensions\\git\\dist\\askpass.sh\r#\u0026gt; HOME C:\\Users\\linchao\\Documents\r#\u0026gt; HOMEDRIVE C:\r#\u0026gt; HOMEPATH \\Users\\linchao\r#\u0026gt; LANG zh_TW.UTF-8\r#\u0026gt; LANGUAGE zh_TW\r#\u0026gt; LOCALAPPDATA C:\\Users\\linchao\\AppData\\Local\r#\u0026gt; LOGONSERVER \\\\TALI\r#\u0026gt; MSYS2_ENV_CONV_EXCL R_ARCH\r#\u0026gt; NUMBER_OF_PROCESSORS 32\r#\u0026gt; OneDrive C:\\Users\\linchao\\OneDrive\r#\u0026gt; ORIGINAL_XDG_CURRENT_DESKTOP\r#\u0026gt; undefined\r#\u0026gt; OS Windows_NT\r#\u0026gt; PATH C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program\r#\u0026gt; Files\\Git\\cmd;C:\\Program\r#\u0026gt; Files\\R\\R-4.1.1\\bin\\x64;C:\\Users\\linchao\\AppData\\Roaming\\Hugo\\0.88.0;C:\\Program\r#\u0026gt; Files\\PowerShell\\7\\;C:\\Program\r#\u0026gt; Files\\nodejs\\;C:\\Program\r#\u0026gt; Files\\Docker\\Docker\\resources\\bin;C:\\ProgramData\\DockerDesktop\\version-bin;C:\\rtools40\\mingw64\\bin;C:\\rtools40\\usr\\bin;C:\\DesktopUtils\\mytool;C:\\Users\\linchao\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\linchao\\AppData\\Local\\Programs\\Microsoft\r#\u0026gt; VS\r#\u0026gt; Code\\bin;C:\\Users\\linchao\\AppData\\Local\\Pandoc\\;C:\\Users\\linchao\\AppData\\Roaming\\npm;C:\\Program\r#\u0026gt; Files (x86)\\EaseUS\\Todo Backup\\bin\\x64\\\r#\u0026gt; PATHEXT .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC\r#\u0026gt; POWERSHELL_DISTRIBUTION_CHANNEL\r#\u0026gt; MSI:Windows 10 Pro\r#\u0026gt; PROCESSOR_ARCHITECTURE\r#\u0026gt; AMD64\r#\u0026gt; PROCESSOR_IDENTIFIER AMD64 Family 25 Model 33 Stepping 0,\r#\u0026gt; AuthenticAMD\r#\u0026gt; PROCESSOR_LEVEL 25\r#\u0026gt; PROCESSOR_REVISION 2100\r#\u0026gt; ProgramData C:\\ProgramData\r#\u0026gt; ProgramFiles C:\\Program Files\r#\u0026gt; ProgramFiles(x86) C:\\Program Files (x86)\r#\u0026gt; ProgramW6432 C:\\Program Files\r#\u0026gt; PROMPT $P$G\r#\u0026gt; PSModulePath %ProgramFiles%\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\r#\u0026gt; PUBLIC C:\\Users\\Public\r#\u0026gt; R_ARCH /x64\r#\u0026gt; R_COMPILED_BY gcc 8.3.0\r#\u0026gt; R_HOME C:/PROGRA~1/R/R-41~1.1\r#\u0026gt; R_LIBS_USER C:\\Users\\linchao\\Documents/R/win-library/4.1\r#\u0026gt; R_USER C:\\Users\\linchao\\Documents\r#\u0026gt; RTOOLS40_HOME C:\\rtools40\r#\u0026gt; SystemDrive C:\r#\u0026gt; SystemRoot C:\\WINDOWS\r#\u0026gt; TEMP C:\\Users\\linchao\\AppData\\Local\\Temp\r#\u0026gt; TERM_PROGRAM vscode\r#\u0026gt; TERM_PROGRAM_VERSION 1.61.2\r#\u0026gt; TMP C:\\Users\\linchao\\AppData\\Local\\Temp\r#\u0026gt; USERDOMAIN TALI\r#\u0026gt; USERDOMAIN_ROAMINGPROFILE\r#\u0026gt; TALI\r#\u0026gt; USERNAME linchao\r#\u0026gt; USERPROFILE C:\\Users\\linchao\r#\u0026gt; VSCODE_GIT_ASKPASS_MAIN\r#\u0026gt; c:\\Users\\linchao\\AppData\\Local\\Programs\\Microsoft\r#\u0026gt; VS\r#\u0026gt; Code\\resources\\app\\extensions\\git\\dist\\askpass-main.js\r#\u0026gt; VSCODE_GIT_ASKPASS_NODE\r#\u0026gt; C:\\Users\\linchao\\AppData\\Local\\Programs\\Microsoft\r#\u0026gt; VS Code\\Code.exe\r#\u0026gt; VSCODE_GIT_IPC_HANDLE \\\\.\\pipe\\vscode-git-787abf7477-sock\r#\u0026gt; windir C:\\WINDOWS\rhugocmd(m=\u0026#34;expand\u0026#34; ,end=T)\r#\u0026gt; \rSys.setenv(R_TEST = \u0026quot;testit\u0026quot;)\rSys.getenv(\u0026quot;R_TEST\u0026quot;)\r#\u0026gt; [1] \u0026quot;testit\u0026quot;\rSys.unsetenv(\u0026quot;R_TEST\u0026quot;) # on Unix-alike may warn and not succeed\rSys.getenv(\u0026quot;R_TEST\u0026quot;, unset = NA)\r#\u0026gt; [1] NA\r (待補充)比較有趣的指令\nSys.sleep(0.1)\r \r\rR的環境變數 在作業系統中的檔案,例如.Renviron,.Rprofile會影響R的啟動環境(✔參考)。\n .Platform = .Platform$OS.type .Renviron - which contains environment variables to be set in R sessions.  .Renviron 在%USERPROFILE%中(預設是沒有的)。用來在R啟動之前,設定系統的環境變數，內容是文字檔,以KEY=VALUE的方式設定。例如rtools的位置(參考1)。   .Rprofile - which contains R code to be run in each session. \r範例 ~/.Renviron on Unix\r## 範例 ~/.Renviron on Unix\rR_LIBS=~/R/library\rPAGER=/usr/local/bin/less\r## 範例 .Renviron on Windows ✔\rR_LIBS=C:/R/library\rMY_TCLTK=\u0026quot;c:/Program Files/Tcl/bin\u0026quot;\r## 範例 setting R_DEFAULT_PACKAGES (from R CMD check)\rR_DEFAULT_PACKAGES='utils,grDevices,graphics,stats'\r# 依次載入上述的套件,因此在搜尋路徑上是反過來的。\r   前面提過每次啟動R的時候會產生一個session,同時會載入.Rrofile(利用source),在這個session載入之後,會執行.First(),在脫離的時候,會執行.Last()。\n  \r範例 .Rprofile .First .Last\roptions(width=65, digits=5)\roptions(show.signif.stars=FALSE)\rsetHook(packageEvent(\u0026quot;grDevices\u0026quot;, \u0026quot;onLoad\u0026quot;),\rfunction(...) grDevices::ps.options(horizontal=FALSE))\rset.seed(1234)\r.First \u0026lt;- function() cat(\u0026quot;\\n headache!\\n\\n\u0026quot;)\r.Last \u0026lt;- function() cat(\u0026quot;\\n headacue cured!\\n\\n\u0026quot;)\r    \r範例 Rprofile.site\rlocal({\r# add MASS to the default packages, set a CRAN mirror\rold \u0026lt;- getOption(\u0026quot;defaultPackages\u0026quot;); r \u0026lt;- getOption(\u0026quot;repos\u0026quot;)\rr[\u0026quot;CRAN\u0026quot;] \u0026lt;- \u0026quot;http://my.local.cran\u0026quot;\roptions(defaultPackages = c(old, \u0026quot;MASS\u0026quot;), repos = r)\r## (for Unix terminal users) set the width from COLUMNS if set\rcols \u0026lt;- Sys.getenv(\u0026quot;COLUMNS\u0026quot;)\rif(nzchar(cols)) options(width = as.integer(cols))\r# interactive sessions get a fortune cookie (needs fortunes package)\rif (interactive())\rfortunes::fortune()\r})\r## if .Renviron contains\rFOOBAR=\u0026quot;coo\\bar\u0026quot;doh\\ex\u0026quot;abc\\\u0026quot;def'\u0026quot;\r## then we get\r# \u0026gt; cat(Sys.getenv(\u0026quot;FOOBAR\u0026quot;), \u0026quot;\\n\u0026quot;)\r# coo\\bardoh\\exabc\u0026quot;def'\r    R.home() Sys.getenv(\u0026quot;R_HOME\u0026quot;) 都可以知道安裝的目錄\n  目前的設定 - 函數options()\n  options()\rgetOption(\u0026quot;windowsTimeouts\u0026quot;)\r \roptions()的執行結果\r#\u0026gt; $add.smooth\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $blogdown.method\r#\u0026gt; [1] \u0026quot;markdown\u0026quot;\r#\u0026gt; #\u0026gt; $blogdown.serve_site.startup\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $browserNLdisabled\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $CBoundsCheck\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $check.bounds\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $citation.bibtex.max\r#\u0026gt; [1] 1\r#\u0026gt; #\u0026gt; $continue\r#\u0026gt; [1] \u0026quot;+ \u0026quot;\r#\u0026gt; #\u0026gt; $contrasts\r#\u0026gt; unordered ordered #\u0026gt; \u0026quot;contr.treatment\u0026quot; \u0026quot;contr.poly\u0026quot; #\u0026gt; #\u0026gt; $defaultPackages\r#\u0026gt; [1] \u0026quot;datasets\u0026quot; \u0026quot;utils\u0026quot; \u0026quot;grDevices\u0026quot; \u0026quot;graphics\u0026quot; \u0026quot;stats\u0026quot; \u0026quot;methods\u0026quot; #\u0026gt; #\u0026gt; $demo.ask\r#\u0026gt; [1] \u0026quot;default\u0026quot;\r#\u0026gt; #\u0026gt; $deparse.cutoff\r#\u0026gt; [1] 60\r#\u0026gt; #\u0026gt; $device\r#\u0026gt; function (width = 7, height = 7, ...) #\u0026gt; {\r#\u0026gt; grDevices::pdf(NULL, width, height, ...)\r#\u0026gt; }\r#\u0026gt; \u0026lt;bytecode: 0x000000001a675208\u0026gt;\r#\u0026gt; \u0026lt;environment: namespace:knitr\u0026gt;\r#\u0026gt; #\u0026gt; $device.ask.default\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $digits\r#\u0026gt; [1] 7\r#\u0026gt; #\u0026gt; $echo\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $editor\r#\u0026gt; [1] \u0026quot;notepad\u0026quot;\r#\u0026gt; #\u0026gt; $encoding\r#\u0026gt; [1] \u0026quot;native.enc\u0026quot; \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;讀檔時會用到,例如readLine()\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; #\u0026gt; $example.ask\r#\u0026gt; [1] \u0026quot;default\u0026quot;\r#\u0026gt; #\u0026gt; $expressions\r#\u0026gt; [1] 5000\r#\u0026gt; #\u0026gt; $help.search.types\r#\u0026gt; [1] \u0026quot;vignette\u0026quot; \u0026quot;demo\u0026quot; \u0026quot;help\u0026quot; #\u0026gt; #\u0026gt; $help.try.all.packages\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $help_type\r#\u0026gt; [1] \u0026quot;html\u0026quot;\r#\u0026gt; #\u0026gt; $HTTPUserAgent\r#\u0026gt; [1] \u0026quot;R (4.1.1 x86_64-w64-mingw32 x86_64 mingw32)\u0026quot;\r#\u0026gt; #\u0026gt; $install.packages.compile.from.source\r#\u0026gt; [1] \u0026quot;interactive\u0026quot;\r#\u0026gt; #\u0026gt; $internet.info\r#\u0026gt; [1] 2\r#\u0026gt; #\u0026gt; $keep.parse.data\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $keep.parse.data.pkgs\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $keep.source\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $keep.source.pkgs\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $knitr.in.progress \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;目前的文件在RMD中產生\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $locatorBell\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $mailer\r#\u0026gt; [1] \u0026quot;mailto\u0026quot;\r#\u0026gt; #\u0026gt; $matprod\r#\u0026gt; [1] \u0026quot;default\u0026quot;\r#\u0026gt; #\u0026gt; $max.print\r#\u0026gt; [1] 99999\r#\u0026gt; #\u0026gt; $menu.graphics\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $na.action\r#\u0026gt; [1] \u0026quot;na.omit\u0026quot;\r#\u0026gt; #\u0026gt; $nwarnings\r#\u0026gt; [1] 50\r#\u0026gt; #\u0026gt; $OutDec\r#\u0026gt; [1] \u0026quot;.\u0026quot;\r#\u0026gt; #\u0026gt; $pager\r#\u0026gt; [1] \u0026quot;internal\u0026quot;\r#\u0026gt; #\u0026gt; $papersize\r#\u0026gt; [1] \u0026quot;a4\u0026quot;\r#\u0026gt; #\u0026gt; $PCRE_limit_recursion\r#\u0026gt; [1] NA\r#\u0026gt; #\u0026gt; $PCRE_study\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $PCRE_use_JIT\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $pdfviewer\r#\u0026gt; [1] \u0026quot;C:/PROGRA~1/R/R-41~1.1/bin/x64/open.exe\u0026quot;\r#\u0026gt; #\u0026gt; $pkgType\r#\u0026gt; [1] \u0026quot;both\u0026quot;\r#\u0026gt; #\u0026gt; $prompt\r#\u0026gt; [1] \u0026quot;\u0026gt; \u0026quot;\r#\u0026gt; #\u0026gt; $repos\r#\u0026gt; CRAN #\u0026gt; \u0026quot;@CRAN@\u0026quot; #\u0026gt; #\u0026gt; $scipen\r#\u0026gt; [1] 0\r#\u0026gt; #\u0026gt; $show.coef.Pvalues\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $show.error.messages\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $show.signif.stars\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $showErrorCalls\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $str\r#\u0026gt; $str$strict.width\r#\u0026gt; [1] \u0026quot;no\u0026quot;\r#\u0026gt; #\u0026gt; $str$digits.d\r#\u0026gt; [1] 3\r#\u0026gt; #\u0026gt; $str$vec.len\r#\u0026gt; [1] 4\r#\u0026gt; #\u0026gt; $str$list.len\r#\u0026gt; [1] 99\r#\u0026gt; #\u0026gt; $str$deparse.lines\r#\u0026gt; NULL\r#\u0026gt; #\u0026gt; $str$drop.deparse.attr\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $str$formatNum\r#\u0026gt; function (x, ...) #\u0026gt; format(x, trim = TRUE, drop0trailing = TRUE, ...)\r#\u0026gt; \u0026lt;environment: 0x00000000193f2900\u0026gt;\r#\u0026gt; #\u0026gt; #\u0026gt; $str.dendrogram.last\r#\u0026gt; [1] \u0026quot;`\u0026quot;\r#\u0026gt; #\u0026gt; $stringsAsFactors\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $tikzMetricsDictionary\r#\u0026gt; [1] \u0026quot;1_0_requirement-tikzDictionary\u0026quot;\r#\u0026gt; #\u0026gt; $timeout\r#\u0026gt; [1] 60\r#\u0026gt; #\u0026gt; $try.outFile\r#\u0026gt; A connection with #\u0026gt; description \u0026quot;output\u0026quot; #\u0026gt; class \u0026quot;textConnection\u0026quot;\r#\u0026gt; mode \u0026quot;wr\u0026quot; #\u0026gt; text \u0026quot;text\u0026quot; #\u0026gt; opened \u0026quot;opened\u0026quot; #\u0026gt; can read \u0026quot;no\u0026quot; #\u0026gt; can write \u0026quot;yes\u0026quot; #\u0026gt; #\u0026gt; $ts.eps\r#\u0026gt; [1] 1e-05\r#\u0026gt; #\u0026gt; $ts.S.compat\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $unzip\r#\u0026gt; [1] \u0026quot;internal\u0026quot;\r#\u0026gt; #\u0026gt; $useFancyQuotes\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $verbose\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $warn\r#\u0026gt; [1] 0\r#\u0026gt; #\u0026gt; $warning.length\r#\u0026gt; [1] 1000\r#\u0026gt; #\u0026gt; $width\r#\u0026gt; [1] 80\r#\u0026gt; #\u0026gt; $windowsTimeouts\r#\u0026gt; [1] 100 500\r  安裝的時候,出現找不到repos,可以如下,這樣不用第二次定義\nr = getOption(\u0026quot;repos\u0026quot;) \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;options()$\u0026quot;repos\u0026quot;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rr[\u0026quot;CRAN\u0026quot;] = \u0026quot;http://cran.us.r-project.org\u0026quot;\roptions(repos = r)\r 解釋\nr # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;帶名字的字串,簡單理解為元素編號可以用元素名字代替\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; CRAN #\u0026gt; \u0026quot;http://cran.us.r-project.org\u0026quot; #\u0026gt; attr(,\u0026quot;RStudio\u0026quot;)\r#\u0026gt; [1] TRUE\rr[\u0026quot;CRAN\u0026quot;] # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;=r[1]\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; CRAN #\u0026gt; \u0026quot;http://cran.us.r-project.org\u0026quot;  \r\r練習 比較一下environments()這個函數，可以列出目前工作區上的變數。environment() 傳回一個frame,相當於R提供的總體變數.GlobalEnv\nnames(environment()) # 🏷因為是結構frame 因此可以利用names()列出欄位\ridentical(.GlobalEnv, environment()) #🏷用來比較兩個參數是否相同,包括值和類別\rnames(.GlobalEnv)\r"},
{"uri": "/blogR//rlang/1_3_%E5%9F%B7%E8%A1%8C.html","title": "1.3 執行",
	"tags": [],
	"description": "1_1_run",
	"content": "無法啟動bash args \u0026lt;- commandArgs()\rprint(args)\rscript in .R 怎樣知道Script 的工作目錄(參考)\nscript.dir \u0026lt;- dirname(sys.frame(1)$ofile)\r .Rprofile  詳細的範例\n debug  函數:debug()  例如有一個函數為g(),則debug(g)可以開始偵錯。   函數Stopifnot(x\u0026gt;0): 放在函數中間,確定變數x\u0026gt;0。 函數traceback()控制台出現紅色訊息顯示錯誤時,在控制台敲入traceback()可以追蹤錯誤。 函數browser()放在函數中,執行到這行的時候會進入偵錯的步進模式，然後一步一步偵錯。 函數tracer() 函數recover()  自訂套件的偵錯，可以設定options(error = recover)。這樣遇到錯誤的時候,會進入步進模式。\n"},
{"uri": "/blogR//rlang/1_4_rpackages.html","title": "1.4 R Package",
	"tags": [],
	"description": "套件",
	"content": "基本 參考\n R package and Github 建立R套件  套件在哪裡   先知道一下R被安裝在哪裡\nR.home() #🏷👏R被安裝在哪裡\rsystem.file() #🏷👏預設套件base被裝在哪裡\r   如果要知道安裝的套件在電腦的哪個地方: .libPaths()\n.libPaths()\r #\u0026gt; [1] \u0026quot;C:/Users/linchao/Documents/R/win-library/4.1\u0026quot;\r#\u0026gt; [2] \u0026quot;C:/Program Files/R/R-4.1.1/library\u0026quot;\r   如果要自己預設指定安裝套件位置，可以在使用者文件夾上找到.Rprofile 然後寫上這一行: .libPaths(\u0026quot;C:/myRlibary\u0026quot;)\n  套件的安裝 install.packages('Rcpp', dependencies = TRUE) #🏷👏dependencies = TRUE,可以讓依存的檔案自動安裝。\r 目前使用中的套件 search()可以列出在批次模式下使用的套件,另外一個指令sessionInfo() 可以列出更多相關訊息。\n搜尋套件中的檔案 對函數system.file()的理解為,輸入是以套件為根路徑,然後相對路徑,傳回的是絕對路徑。 範例\nsystem.file(\u0026quot;help\u0026quot;, \u0026quot;AnIndex\u0026quot;, package = \u0026quot;splines\u0026quot;) # 🏷👏解釋：在套件splines 中的根目錄中搜尋子目錄help，找出名稱為AnIndex的檔案，並傳回路徑名稱。\r#\u0026gt; [1] \u0026quot;C:/PROGRA~1/MICROS~4/RCLIEN~1/R_SERVER/library/splines/help/AnIndex\u0026quot; #🏷👏傳回絕對路徑\r 大致上的搜索步驟\n  列出套件stats所在的子目錄\nsystem.file(package = \u0026quot;stats\u0026quot;)\r #\u0026gt; [1] \u0026quot;C:/PROGRA~1/R/R-41~1.1/library/stats\u0026quot;\r   知道了子目錄,可以列出其中的檔案\ndir(system.file(package = \u0026quot;stats\u0026quot;))\r #\u0026gt; [1] \u0026quot;COPYRIGHTS.modreg\u0026quot; \u0026quot;demo\u0026quot; \u0026quot;DESCRIPTION\u0026quot; #\u0026gt; [4] \u0026quot;help\u0026quot; \u0026quot;html\u0026quot; \u0026quot;INDEX\u0026quot; #\u0026gt; [7] \u0026quot;libs\u0026quot; \u0026quot;Meta\u0026quot; \u0026quot;NAMESPACE\u0026quot; #\u0026gt; [10] \u0026quot;R\u0026quot; \u0026quot;SOURCES.ts\u0026quot; \u0026quot;tests\u0026quot;\r   上面知道有子目錄demo,可以再進一步看其中的檔案:\ndir(system.file(\u0026quot;demo\u0026quot;, package = \u0026quot;stats\u0026quot;))\r #\u0026gt; [1] \u0026quot;glm.vr.R\u0026quot; \u0026quot;lm.glm.R\u0026quot; \u0026quot;nlm.R\u0026quot; \u0026quot;smooth.R\u0026quot;\r   如果要知道套件中有哪些函數可以用,則\nlibrary(help = \u0026quot;base\u0026quot;) # 🏷👏列出基本套件所有可用函數\rlibrary(help = \u0026quot;utils\u0026quot;)\r 哪個函數屬於哪個套件?  可以直接打入函數名稱但是不要有括號，看最後一行:  R.home \u0026lt;-\rfunction (component = \u0026quot;home\u0026quot;) {\rrh \u0026lt;- .Internal(R.home())\rswitch(component, home = rh, bin = if (.Platform$OS.type == \u0026quot;windows\u0026quot; \u0026amp;\u0026amp; nzchar(p \u0026lt;- .Platform$r_arch)) file.path(rh, component, p) else file.path(rh, component), share = if (nzchar(p \u0026lt;- Sys.getenv(\u0026quot;R_SHARE_DIR\u0026quot;))) p else file.path(rh, component), doc = if (nzchar(p \u0026lt;- Sys.getenv(\u0026quot;R_DOC_DIR\u0026quot;))) p else file.path(rh, component), include = if (nzchar(p \u0026lt;- Sys.getenv(\u0026quot;R_INCLUDE_DIR\u0026quot;))) p else file.path(rh, component), modules = if (nzchar(p \u0026lt;- .Platform$r_arch)) file.path(rh, component, p) else file.path(rh, component), file.path(rh, component))\r}\r\u0026lt;bytecode: 0x3183948\u0026gt;\r\u0026lt;environment: namespace:base\u0026gt;\r 資料集 有三個方法可以從套件存取資料。例如，\n 利用:: ggplot2::diamonds %\u0026gt;% head()\r  library() library(ggplot2)\rdiamonds %\u0026gt;% head()\r  data() data(\u0026quot;diamonds\u0026quot;, package=\u0026quot;ggplot2\u0026quot;)\rls()\r   練習 除了上面的資料集存取以外,有時候也會想要存取其他檔案的內容,這裡就是相關的練習。\n例如,套件epuRate的安裝目錄為D:\\RSTUDIO\\RMD\\RPACK\\EPURATE-MASTER\\INST，目錄結構如下：\nD:\\RSTUDIO\\RMD\\RPACK\\EPURATE-MASTER\\INST\r└─rmarkdown\r└─templates\r├─basic\r│ └─skeleton\r├─epurate\r│ ├─resources\r│ └─skeleton\r└─PCTG\r├─resources\r└─skeleton\r 參考上面的目錄結構，則下面程式執行的結果css,header, template 分別是什麼? css \u0026lt;- system.file(\u0026quot;rmarkdown\u0026quot;, \u0026quot;templates\u0026quot;, \u0026quot;epurate\u0026quot; ,\u0026quot;resources\u0026quot;, \u0026quot;style.css\u0026quot;, package = \u0026quot;epuRate\u0026quot;)\rheader \u0026lt;- system.file(\u0026quot;rmarkdown\u0026quot;, \u0026quot;templates\u0026quot;, \u0026quot;epurate\u0026quot; ,\u0026quot;resources\u0026quot;, \u0026quot;header.html\u0026quot;, package = \u0026quot;epuRate\u0026quot;)\rtemplate \u0026lt;- system.file(\u0026quot;rmarkdown\u0026quot;, \u0026quot;templates\u0026quot;, \u0026quot;epurate\u0026quot; ,\u0026quot;resources\u0026quot;, \u0026quot;template_epurate.html\u0026quot;, package = \u0026quot;epuRate\u0026quot;)\r 提示\r hint:\ncss: D:\\RSTUDIO\\RMD\\RPACK\\EPURATE-MASTER\\INST\\rmarkdown\\templates\\eurate\\resouces\\style.css\r \n問題：\nsystem.file('rmarkdown')\r #\u0026gt; [1] \u0026quot;\u0026quot;\r 為什麼傳回空值 : \u0026quot;\u0026quot; ?\n提示\r hint 沒有指定套件名稱，因此預設為base，而base的根目錄中，找不到子目錄或檔案為rmarkdown的檔案。\n實驗記錄\nlist.dirs(system.file()) #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏沒有任何參數,預設是\u0026lt;code\u0026gt;base\u0026lt;/code\u0026gt;套件 👏因此\u0026lt;code\u0026gt;system.file()\u0026lt;/code\u0026gt;傳回套件\u0026lt;code\u0026gt;base\u0026lt;/code\u0026gt;的根目錄\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r #\u0026gt; [1] \u0026quot;C:/PROGRA~1/R/R-41~1.1/library/base\u0026quot; #\u0026gt; [2] \u0026quot;C:/PROGRA~1/R/R-41~1.1/library/base/demo\u0026quot;\r#\u0026gt; [3] \u0026quot;C:/PROGRA~1/R/R-41~1.1/library/base/help\u0026quot;\r#\u0026gt; [4] \u0026quot;C:/PROGRA~1/R/R-41~1.1/library/base/html\u0026quot;\r#\u0026gt; [5] \u0026quot;C:/PROGRA~1/R/R-41~1.1/library/base/Meta\u0026quot;\r#\u0026gt; [6] \u0026quot;C:/PROGRA~1/R/R-41~1.1/library/base/R\u0026quot;\r list.files(system.file()) #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏\u0026lt;code\u0026gt;list.files\u0026lt;/code\u0026gt; 的另一個名子是\u0026lt;code\u0026gt;dir()\u0026lt;/code\u0026gt;列出所有檔案和目錄\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r #\u0026gt; [1] \u0026quot;CITATION\u0026quot; \u0026quot;demo\u0026quot; \u0026quot;DESCRIPTION\u0026quot; \u0026quot;help\u0026quot; \u0026quot;html\u0026quot; #\u0026gt; [6] \u0026quot;INDEX\u0026quot; \u0026quot;Meta\u0026quot; \u0026quot;R\u0026quot;\r  list.dirs(system.file()) 傳回上述根目錄的所有子目錄。 system.file()的傳回的項目包括子目錄和檔案名稱。下面的參數，一個是子目錄html一個是檔案INDEX，都傳回路徑名稱。 system.file(\u0026quot;html\u0026quot;)\r#\u0026gt; [1] \u0026quot;C:/PROGRA~1/R/R-41~1.1/library/base/html\u0026quot; \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏這是folder\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rsystem.file(\u0026quot;INDEX\u0026quot;)\r#\u0026gt; [1] \u0026quot;C:/PROGRA~1/R/R-41~1.1/library/base/INDEX\u0026quot; \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏這是file\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r   \r\rlibrary() vs require() if (!require(\u0026quot;套件名稱\u0026quot;)){\rinstall.pacakges(\u0026quot;套件名稱\u0026quot;)\r}\r detach 範例 detach_package() 討論內建函數detach_package()\n使用方法：\ndetach_package(vegan)\rdetach_package(\u0026quot;vegan\u0026quot;, TRUE)#🏷👏 因為第1個參數是字串,所以第2個參數`character.only'=T：\r \r看一下detach_package()這個函數是怎麼寫的\rdetach_package \u0026lt;- function(pkg, character.only = FALSE)\r{\rif(!character.only) #如果沒有指定參數是字串\r{\rpkg \u0026lt;- deparse(substitute(pkg)) # 轉字串\r}\rsearch_item \u0026lt;- paste(\u0026quot;package\u0026quot;, pkg, sep = \u0026quot;:\u0026quot;)\rwhile(search_item %in% search())\r{\rdetach(search_item, unload = TRUE, character.only = TRUE)\r}\r}\r "},
{"uri": "/blogR//rlang/1_5_%E7%B7%A8%E7%A2%BC.html","title": "1.5 編碼",
	"tags": [],
	"description": "1_5_編碼",
	"content": "編碼   每一種特定的語言，都存在一種或數種的 code page(但是在不同廠商(例如IBM), code page 的數字不同) 。 例如：\n code page = 950 : 正體中文big5 windows-1252 的 code page = 1252 :西歐的英語系使用 shift_jis 的 code page = 932 : 日語中的漢字使用。    textmining\n  更多\n  參考\n  最佳編碼👍\n  看看系統本身的編碼(Current Locale)\nl10n_info()\r#\u0026gt; $MBCS ⛳ \r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $`UTF-8` 🏷👏在linux系統中,這兩個(UTF-8,Latin-1)有一個是真，意思就是說，不是這個，就是那個，但是在windows中，都是Ｆ🤷‍♀️\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $`Latin-1`\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $codepage\r#\u0026gt; [1] 950\r#\u0026gt; #\u0026gt; $system.codepage\r#\u0026gt; [1] 950\rsessionInfo() # 裡的 local🏷因為傳回的是結構list因此sessionInfo()$local可以看到結果\r#\u0026gt; R version 4.1.1 (2021-08-10)\r#\u0026gt; Platform: x86_64-w64-mingw32/x64 (64-bit)\r#\u0026gt; Running under: Windows 10 x64 (build 19043)\r#\u0026gt; #\u0026gt; Matrix products: default\r#\u0026gt; #\u0026gt; locale:\r#\u0026gt; [1] LC_COLLATE=Chinese (Traditional)_Taiwan.950 🏷👏當前編碼的排序和比較規則\r#\u0026gt; [2] LC_CTYPE=Chinese (Traditional)_Taiwan.950 🏷👏 用於字元分類和字串處理，控制所有字元的處理方式，包括字元編碼，字元是單字節還是多位元組，如何列印等\r#\u0026gt; [3] LC_MONETARY=Chinese (Traditional)_Taiwan.950 🏷👏貨幣格式\r#\u0026gt; [4] LC_NUMERIC=C 🏷👏 非貨幣的數字顯示格式\r#\u0026gt; [5] LC_TIME=Chinese (Traditional)_Taiwan.950 🏷👏 時間和日期格式 #\u0026gt; #\u0026gt; attached base packages:\r#\u0026gt; [1] stats graphics grDevices utils datasets methods base #\u0026gt; #\u0026gt; loaded via a namespace (and not attached):\r#\u0026gt; [1] compiler_4.1.1 magrittr_2.0.1 tools_4.1.1 glue_1.4.2 stringi_1.7.4 #\u0026gt; [6] knitr_1.33 stringr_1.4.0 xfun_0.25 evaluate_0.14\rSys.getlocale(\u0026quot;LC_ALL\u0026quot;) # 🏷✔由開頭Sys，可以知道這是作業系統變數存取 🏷✔也可以只打Sys.getlocale()\r#\u0026gt; [1] \u0026quot;LC_COLLATE=Chinese (Traditional)_Taiwan.950;LC_CTYPE=Chinese (Traditional)_Taiwan.950;LC_MONETARY=Chinese (Traditional)_Taiwan.950;LC_NUMERIC=C;LC_TIME=Chinese (Traditional)_Taiwan.950\u0026quot;\rgetOption(\u0026quot;encoding\u0026quot;) # 🏷✔其實是從前面的options()中的鍵值encoding拿資料，所以options()$encoding也可以 🏷✔這個選項是用來編碼串流(例如檔案,URL等等)而不是解讀程式碼中的字串向量。內定是 \u0026quot;native.enc\u0026quot; 。白話文的意思就是通訊協定內定是ASCII（因此需要將各種不是ASCII的字元編碼，可以利用UTF-8）,考慮網路協定都是ASCII,因此,不用費腦筋在這裡了,除非要重寫系統\r#\u0026gt; [1] \u0026quot;native.enc\u0026quot;\r 更改系統的語系，以下更改為 UTF-8\n# for mac\rSys.setlocale(category = \u0026quot;LC_ALL\u0026quot;, locale = \u0026quot;en_US.UTF-8\u0026quot;)\r# for windows\rSys.setlocale(category = \u0026quot;LC_ALL\u0026quot;, locale = \u0026quot;UTF-8\u0026quot;)\rx=\u0026quot;hello\u0026quot;\r# x is a vector\rEncoding(x) #🏷✔不是用來知道系統的編碼,而是Ｒ程式碼變數（例如這裡的x)中的資料編碼\r Encoding()的使用範例\n 👺ascii 字串例如 x=\u0026quot;hello\u0026quot; ,Encoding(x)的結果都是 unknown,因為ASCII不用編碼,在所有的編碼系統都一致。\n x\u0026lt;- '非白馬' Encoding(x) ## [1] \u0026quot;unknown\u0026quot; \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;a href=\u0026quot;#%e6%8f%90%e7%a4%ba1\u0026quot;\u0026gt;註解\u0026lt;/a\u0026gt;\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;❓為甚麼是unknown❓❓按照說明書,非ASCII內定都是給目前指定的locale語系，就是l10n_info()為TRUE的那個\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r# 如果是big5\rx2\u0026lt;- iconv(x, 'big5', 'UTF-8') #轉UTF-8，轉完以後可以用Encoding(x)再次驗證\r# 如果是GB2312\rx2\u0026lt;- iconv(x, 'GB2312', 'UTF-8') #轉UTF-8\rEncoding(x2) ## [1] \u0026quot;UTF-8\u0026quot;  讀檔案的時候,如果要自行指定編碼,那麼下面是一些相關程式碼\nsource(\u0026quot;myRcode.R\u0026quot;, encoding = \u0026quot;utf-8\u0026quot;)\rreadLines(\u0026quot;mydata.csv\u0026quot;, encoding = \u0026quot;big5\u0026quot;)\rread.table(..., fileEncoding = \u0026quot;\u0026quot;, encoding = \u0026quot;unknown\u0026quot;,...)\rdata \u0026lt;- iconv(data, \u0026quot;big5\u0026quot;, \u0026quot;utf8\u0026quot;) # 將資料轉成 UTF-8\r \r\r亂碼常用的判斷查詢 😒只在WIN上測試\n 查看目前R使用的語系: 輸入 Sys.getlocale() 或 Sys.getlocale(category = \u0026quot;LC_ALL\u0026quot;)，  \r我的系統上顯示的是\rSys.getlocale()\r# \u0026quot;LC_COLLATE=Chinese (Traditional)_Taiwan.950;LC_CTYPE=Chinese (Traditional)_Taiwan.950;LC_MONETARY=Chinese (Traditional)_Taiwan.950;LC_NUMERIC=C;LC_TIME=Chinese (Traditional)_Taiwan.950\u0026quot;\r# 😒有些系統是用/分隔，例如\r#.UTF-8/C/en_US.UTF-8/en_US.UTF-8\u0026quot;      如果不是 Chinese (Traditional)_Taiwan.950 者，可以輸入下列指令設定 RStudio/R 的語系\n 英文：  Sys.setlocale(category = \u0026quot;LC_ALL\u0026quot;, locale = “UTF-8\u0026quot;)   中文：  Sys.setlocale(\u0026quot;LC_ALL\u0026quot;,\u0026quot;Chinese (Traditional)_Taiwan.950\u0026quot;) 或Sys.setlocale(\u0026quot;LC_ALL\u0026quot;,\u0026quot;cht\u0026quot;)  \r執行結果\r😒設定的結果,就是預設的安裝環境,如下所示\r \u0026gt; Sys.setlocale(category = \u0026quot;LC_ALL\u0026quot;, locale = \u0026quot;cht\u0026quot;) # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏 等同於Sys.setlocale(\u0026amp;quot;LC_ALL\u0026amp;quot;,\u0026amp;quot;Chinese (Traditional)_Taiwan.950\u0026amp;quot;)\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r[1] \u0026quot;LC_COLLATE=Chinese (Traditional)_Taiwan.950;LC_CTYPE=Chinese (Traditional)_Taiwan.950;LC_MONETARY=Chinese (Traditional)_Taiwan.950;LC_NUMERIC=C;LC_TIME=Chinese (Traditional)_Taiwan.950\u0026quot;\r    Sys.setlocale(category = \u0026quot;LC_ALL\u0026quot;, locale = \u0026quot;zh_TW.UTF-8\u0026quot;) 或 Sys.setlocale(category = \u0026quot;LC_ALL\u0026quot;, locale = \u0026quot;zh_TW\u0026quot;) #🏷👏這是linux在視窗中不行  這應該是linux 在windows 無作用,需要超級使用者      試試看(雖然也沒什麼用)\n 找到Rconsole 檔案（用everything搜尋軟體,可能位置 R的安裝目錄\\etc\\Rconsole）,。這是一個文字檔。 在其中找到 language 然後改成language = English 或 zh_TW  read.csv  stack overflow  在linux 中,如果是UTF-8,這樣就可以 read.csv(\u0026quot;japanese_utf8.csv\u0026quot;) 但是如果不是UTF-8,則指定編碼 read.csv(\u0026quot;japanese_shiftjis.csv\u0026quot;, fileEncoding = \u0026quot;SHIFT-JIS\u0026quot;) 問題是windows:\nif(!require(readr)){\rinstall.packages(\u0026quot;readr\u0026quot;,dependencies=T)\r}\r #\u0026gt; 載入需要的套件：readr\r options(stringsAsFactors = FALSE)\rdf\u0026lt;-read_csv(\u0026quot;resources/wh_zh_utf8.csv\u0026quot;,\rcomment=\u0026quot;#\u0026quot;,\rlocale = locale(encoding = \u0026quot;UTF-8\u0026quot;))\r #\u0026gt; Error: 'resources/wh_zh_utf8.csv' does not exist in current working directory ('D:/work/rmi_r').\r knitr::kable(df)\r #\u0026gt; Error in as.data.frame.default(x): 不能把 \u0026quot;'\u0026quot;function\u0026quot;'\u0026quot; 類別強迫變成 data.frame\r df\u0026lt;-read_csv(\u0026quot;resources/wh_zh_950.csv\u0026quot;,\rcomment=\u0026quot;#\u0026quot;,\rlocale = locale(encoding = \u0026quot;big5\u0026quot;) )\r #\u0026gt; Error: 'resources/wh_zh_950.csv' does not exist in current working directory ('D:/work/rmi_r').\r #🏷❌zh_TW,cht, Chinese (Traditional)_Taiwan.950。✔:big5\rknitr::kable(df)\r #\u0026gt; Error in as.data.frame.default(x): 不能把 \u0026quot;'\u0026quot;function\u0026quot;'\u0026quot; 類別強迫變成 data.frame\r 輔助 hugocmd(\u0026quot;expand\u0026quot; ,'title=\u0026quot;\u0026quot; incode=true')\r#\u0026gt;  \r展開\riconvlist()\r#\u0026gt; [1] \u0026#34;437\u0026#34; \u0026#34;850\u0026#34; #\u0026gt; [3] \u0026#34;852\u0026#34; \u0026#34;855\u0026#34; #\u0026gt; [5] \u0026#34;857\u0026#34; \u0026#34;860\u0026#34; #\u0026gt; [7] \u0026#34;861\u0026#34; \u0026#34;862\u0026#34; #\u0026gt; [9] \u0026#34;863\u0026#34; \u0026#34;865\u0026#34; #\u0026gt; [11] \u0026#34;866\u0026#34; \u0026#34;869\u0026#34; #\u0026gt; [13] \u0026#34;ANSI_X3.4-1968\u0026#34; \u0026#34;ANSI_X3.4-1986\u0026#34; #\u0026gt; [15] \u0026#34;ASCII\u0026#34; \u0026#34;ASMO-708\u0026#34; #\u0026gt; [17] \u0026#34;BIG-5\u0026#34; \u0026#34;BIG-FIVE\u0026#34; #\u0026gt; [19] \u0026#34;big5\u0026#34; \u0026#34;BIG5\u0026#34; #\u0026gt; [21] \u0026#34;big5-hkscs\u0026#34; \u0026#34;BIG5-HKSCS\u0026#34; #\u0026gt; [23] \u0026#34;big5hkscs\u0026#34; \u0026#34;BIG5HKSCS\u0026#34; #\u0026gt; [25] \u0026#34;CP-GR\u0026#34; \u0026#34;CP-IS\u0026#34; #\u0026gt; [27] \u0026#34;cp1025\u0026#34; \u0026#34;CP1125\u0026#34; #\u0026gt; [29] \u0026#34;CP1133\u0026#34; \u0026#34;CP1200\u0026#34; #\u0026gt; [31] \u0026#34;CP12000\u0026#34; \u0026#34;CP12001\u0026#34; #\u0026gt; [33] \u0026#34;CP1201\u0026#34; \u0026#34;CP1250\u0026#34; #\u0026gt; [35] \u0026#34;CP1251\u0026#34; \u0026#34;CP1252\u0026#34; #\u0026gt; [37] \u0026#34;CP1253\u0026#34; \u0026#34;CP1254\u0026#34; #\u0026gt; [39] \u0026#34;CP1255\u0026#34; \u0026#34;CP1256\u0026#34; #\u0026gt; [41] \u0026#34;CP1257\u0026#34; \u0026#34;CP1258\u0026#34; #\u0026gt; [43] \u0026#34;CP1361\u0026#34; \u0026#34;CP154\u0026#34; #\u0026gt; [45] \u0026#34;CP367\u0026#34; \u0026#34;CP437\u0026#34; #\u0026gt; [47] \u0026#34;CP50221\u0026#34; \u0026#34;CP51932\u0026#34; #\u0026gt; [49] \u0026#34;CP65001\u0026#34; \u0026#34;CP737\u0026#34; #\u0026gt; [51] \u0026#34;CP775\u0026#34; \u0026#34;CP819\u0026#34; #\u0026gt; [53] \u0026#34;CP850\u0026#34; \u0026#34;CP852\u0026#34; #\u0026gt; [55] \u0026#34;CP853\u0026#34; \u0026#34;CP855\u0026#34; #\u0026gt; [57] \u0026#34;CP857\u0026#34; \u0026#34;CP858\u0026#34; #\u0026gt; [59] \u0026#34;CP860\u0026#34; \u0026#34;CP861\u0026#34; #\u0026gt; [61] \u0026#34;CP862\u0026#34; \u0026#34;CP863\u0026#34; #\u0026gt; [63] \u0026#34;CP864\u0026#34; \u0026#34;CP865\u0026#34; #\u0026gt; [65] \u0026#34;cp866\u0026#34; \u0026#34;CP866\u0026#34; #\u0026gt; [67] \u0026#34;CP869\u0026#34; \u0026#34;CP874\u0026#34; #\u0026gt; [69] \u0026#34;cp875\u0026#34; \u0026#34;CP932\u0026#34; #\u0026gt; [71] \u0026#34;CP936\u0026#34; \u0026#34;CP949\u0026#34; #\u0026gt; [73] \u0026#34;CP950\u0026#34; \u0026#34;CSASCII\u0026#34; #\u0026gt; [75] \u0026#34;CSIBM855\u0026#34; \u0026#34;CSIBM857\u0026#34; #\u0026gt; [77] \u0026#34;CSIBM860\u0026#34; \u0026#34;CSIBM861\u0026#34; #\u0026gt; [79] \u0026#34;CSIBM863\u0026#34; \u0026#34;CSIBM864\u0026#34; #\u0026gt; [81] \u0026#34;CSIBM865\u0026#34; \u0026#34;CSIBM866\u0026#34; #\u0026gt; [83] \u0026#34;CSIBM869\u0026#34; \u0026#34;csISO2022JP\u0026#34; #\u0026gt; [85] \u0026#34;CSISOLATIN1\u0026#34; \u0026#34;CSPC775BALTIC\u0026#34; #\u0026gt; [87] \u0026#34;CSPC850MULTILINGUAL\u0026#34; \u0026#34;CSPC862LATINHEBREW\u0026#34; #\u0026gt; [89] \u0026#34;CSPC8CODEPAGE437\u0026#34; \u0026#34;CSPCP852\u0026#34; #\u0026gt; [91] \u0026#34;CSPTCP154\u0026#34; \u0026#34;CSWINDOWS31J\u0026#34; #\u0026gt; [93] \u0026#34;CYRILLIC-ASIAN\u0026#34; \u0026#34;DOS-720\u0026#34; #\u0026gt; [95] \u0026#34;DOS-862\u0026#34; \u0026#34;EUC-CN\u0026#34; #\u0026gt; [97] \u0026#34;euc-jp\u0026#34; \u0026#34;euc-kr\u0026#34; #\u0026gt; [99] \u0026#34;EUC-KR\u0026#34; \u0026#34;EUCCN\u0026#34; #\u0026gt; [101] \u0026#34;eucjp\u0026#34; \u0026#34;euckr\u0026#34; #\u0026gt; [103] \u0026#34;GB18030\u0026#34; \u0026#34;gb2312\u0026#34; #\u0026gt; [105] \u0026#34;GBK\u0026#34; \u0026#34;hz-gb-2312\u0026#34; #\u0026gt; [107] \u0026#34;IBM-CP1133\u0026#34; \u0026#34;IBM-Thai\u0026#34; #\u0026gt; [109] \u0026#34;IBM00858\u0026#34; \u0026#34;IBM00924\u0026#34; #\u0026gt; [111] \u0026#34;IBM01047\u0026#34; \u0026#34;IBM01140\u0026#34; #\u0026gt; [113] \u0026#34;IBM01141\u0026#34; \u0026#34;IBM01142\u0026#34; #\u0026gt; [115] \u0026#34;IBM01143\u0026#34; \u0026#34;IBM01144\u0026#34; #\u0026gt; [117] \u0026#34;IBM01145\u0026#34; \u0026#34;IBM01146\u0026#34; #\u0026gt; [119] \u0026#34;IBM01147\u0026#34; \u0026#34;IBM01148\u0026#34; #\u0026gt; [121] \u0026#34;IBM01149\u0026#34; \u0026#34;IBM037\u0026#34; #\u0026gt; [123] \u0026#34;IBM1026\u0026#34; \u0026#34;IBM273\u0026#34; #\u0026gt; [125] \u0026#34;IBM277\u0026#34; \u0026#34;IBM278\u0026#34; #\u0026gt; [127] \u0026#34;IBM280\u0026#34; \u0026#34;IBM284\u0026#34; #\u0026gt; [129] \u0026#34;IBM285\u0026#34; \u0026#34;IBM290\u0026#34; #\u0026gt; [131] \u0026#34;IBM297\u0026#34; \u0026#34;IBM367\u0026#34; #\u0026gt; [133] \u0026#34;IBM420\u0026#34; \u0026#34;IBM423\u0026#34; #\u0026gt; [135] \u0026#34;IBM424\u0026#34; \u0026#34;IBM437\u0026#34; #\u0026gt; [137] \u0026#34;IBM437\u0026#34; \u0026#34;IBM500\u0026#34; #\u0026gt; [139] \u0026#34;ibm737\u0026#34; \u0026#34;ibm775\u0026#34; #\u0026gt; [141] \u0026#34;IBM775\u0026#34; \u0026#34;IBM819\u0026#34; #\u0026gt; [143] \u0026#34;ibm850\u0026#34; \u0026#34;IBM850\u0026#34; #\u0026gt; [145] \u0026#34;ibm852\u0026#34; \u0026#34;IBM852\u0026#34; #\u0026gt; [147] \u0026#34;IBM855\u0026#34; \u0026#34;IBM855\u0026#34; #\u0026gt; [149] \u0026#34;ibm857\u0026#34; \u0026#34;IBM857\u0026#34; #\u0026gt; [151] \u0026#34;IBM860\u0026#34; \u0026#34;IBM860\u0026#34; #\u0026gt; [153] \u0026#34;ibm861\u0026#34; \u0026#34;IBM861\u0026#34; #\u0026gt; [155] \u0026#34;IBM862\u0026#34; \u0026#34;IBM863\u0026#34; #\u0026gt; [157] \u0026#34;IBM863\u0026#34; \u0026#34;IBM864\u0026#34; #\u0026gt; [159] \u0026#34;IBM864\u0026#34; \u0026#34;IBM865\u0026#34; #\u0026gt; [161] \u0026#34;IBM865\u0026#34; \u0026#34;IBM866\u0026#34; #\u0026gt; [163] \u0026#34;ibm869\u0026#34; \u0026#34;IBM869\u0026#34; #\u0026gt; [165] \u0026#34;IBM870\u0026#34; \u0026#34;IBM871\u0026#34; #\u0026gt; [167] \u0026#34;IBM880\u0026#34; \u0026#34;IBM905\u0026#34; #\u0026gt; [169] \u0026#34;iso-2022-jp\u0026#34; \u0026#34;iso-2022-jp\u0026#34; #\u0026gt; [171] \u0026#34;ISO-2022-JP\u0026#34; \u0026#34;ISO-2022-JP-MS\u0026#34; #\u0026gt; [173] \u0026#34;iso-2022-kr\u0026#34; \u0026#34;ISO-8859-1\u0026#34; #\u0026gt; [175] \u0026#34;iso-8859-13\u0026#34; \u0026#34;iso-8859-15\u0026#34; #\u0026gt; [177] \u0026#34;iso-8859-2\u0026#34; \u0026#34;iso-8859-3\u0026#34; #\u0026gt; [179] \u0026#34;iso-8859-4\u0026#34; \u0026#34;iso-8859-5\u0026#34; #\u0026gt; [181] \u0026#34;iso-8859-6\u0026#34; \u0026#34;iso-8859-7\u0026#34; #\u0026gt; [183] \u0026#34;iso-8859-8\u0026#34; \u0026#34;iso-8859-8-i\u0026#34; #\u0026gt; [185] \u0026#34;iso-8859-9\u0026#34; \u0026#34;ISO-IR-100\u0026#34; #\u0026gt; [187] \u0026#34;ISO-IR-6\u0026#34; \u0026#34;ISO_646.IRV:1991\u0026#34; #\u0026gt; [189] \u0026#34;iso_8859-1\u0026#34; \u0026#34;ISO_8859-1\u0026#34; #\u0026gt; [191] \u0026#34;ISO_8859-1:1987\u0026#34; \u0026#34;iso_8859-13\u0026#34; #\u0026gt; [193] \u0026#34;iso_8859-15\u0026#34; \u0026#34;iso_8859-2\u0026#34; #\u0026gt; [195] \u0026#34;iso_8859-3\u0026#34; \u0026#34;iso_8859-4\u0026#34; #\u0026gt; [197] \u0026#34;iso_8859-5\u0026#34; \u0026#34;iso_8859-6\u0026#34; #\u0026gt; [199] \u0026#34;iso_8859-7\u0026#34; \u0026#34;iso_8859-8\u0026#34; #\u0026gt; [201] \u0026#34;iso_8859-8-i\u0026#34; \u0026#34;iso_8859-9\u0026#34; #\u0026gt; [203] \u0026#34;iso_8859_1\u0026#34; \u0026#34;iso_8859_13\u0026#34; #\u0026gt; [205] \u0026#34;iso_8859_15\u0026#34; \u0026#34;iso_8859_2\u0026#34; #\u0026gt; [207] \u0026#34;iso_8859_3\u0026#34; \u0026#34;iso_8859_4\u0026#34; #\u0026gt; [209] \u0026#34;iso_8859_5\u0026#34; \u0026#34;iso_8859_6\u0026#34; #\u0026gt; [211] \u0026#34;iso_8859_7\u0026#34; \u0026#34;iso_8859_8\u0026#34; #\u0026gt; [213] \u0026#34;iso_8859_8-i\u0026#34; \u0026#34;iso_8859_9\u0026#34; #\u0026gt; [215] \u0026#34;ISO2022-JP\u0026#34; \u0026#34;ISO2022-JP-MS\u0026#34; #\u0026gt; [217] \u0026#34;iso2022-kr\u0026#34; \u0026#34;ISO646-US\u0026#34; #\u0026gt; [219] \u0026#34;iso8859-1\u0026#34; \u0026#34;ISO8859-1\u0026#34; #\u0026gt; [221] \u0026#34;iso8859-13\u0026#34; \u0026#34;iso8859-15\u0026#34; #\u0026gt; [223] \u0026#34;iso8859-2\u0026#34; \u0026#34;iso8859-3\u0026#34; #\u0026gt; [225] \u0026#34;iso8859-4\u0026#34; \u0026#34;iso8859-5\u0026#34; #\u0026gt; [227] \u0026#34;iso8859-6\u0026#34; \u0026#34;iso8859-7\u0026#34; #\u0026gt; [229] \u0026#34;iso8859-8\u0026#34; \u0026#34;iso8859-8-i\u0026#34; #\u0026gt; [231] \u0026#34;iso8859-9\u0026#34; \u0026#34;Johab\u0026#34; #\u0026gt; [233] \u0026#34;JOHAB\u0026#34; \u0026#34;koi8-r\u0026#34; #\u0026gt; [235] \u0026#34;koi8-u\u0026#34; \u0026#34;ks_c_5601-1987\u0026#34; #\u0026gt; [237] \u0026#34;L1\u0026#34; \u0026#34;latin-9\u0026#34; #\u0026gt; [239] \u0026#34;LATIN1\u0026#34; \u0026#34;latin2\u0026#34; #\u0026gt; [241] \u0026#34;latin3\u0026#34; \u0026#34;latin4\u0026#34; #\u0026gt; [243] \u0026#34;latin5\u0026#34; \u0026#34;latin7\u0026#34; #\u0026gt; [245] \u0026#34;latin9\u0026#34; \u0026#34;mac\u0026#34; #\u0026gt; [247] \u0026#34;mac-centraleurope\u0026#34; \u0026#34;mac-is\u0026#34; #\u0026gt; [249] \u0026#34;macarabic\u0026#34; \u0026#34;maccentraleurope\u0026#34; #\u0026gt; [251] \u0026#34;maccroatian\u0026#34; \u0026#34;maccyrillic\u0026#34; #\u0026gt; [253] \u0026#34;macgreek\u0026#34; \u0026#34;machebrew\u0026#34; #\u0026gt; [255] \u0026#34;maciceland\u0026#34; \u0026#34;macintosh\u0026#34; #\u0026gt; [257] \u0026#34;macis\u0026#34; \u0026#34;macroman\u0026#34; #\u0026gt; [259] \u0026#34;macromania\u0026#34; \u0026#34;macthai\u0026#34; #\u0026gt; [261] \u0026#34;macturkish\u0026#34; \u0026#34;macukraine\u0026#34; #\u0026gt; [263] \u0026#34;macukrainian\u0026#34; \u0026#34;MS-ANSI\u0026#34; #\u0026gt; [265] \u0026#34;MS-ARAB\u0026#34; \u0026#34;MS-CYRL\u0026#34; #\u0026gt; [267] \u0026#34;MS-EE\u0026#34; \u0026#34;MS-GREEK\u0026#34; #\u0026gt; [269] \u0026#34;MS-HEBR\u0026#34; \u0026#34;MS-TURK\u0026#34; #\u0026gt; [271] \u0026#34;MS50221\u0026#34; \u0026#34;MS51932\u0026#34; #\u0026gt; [273] \u0026#34;MS932\u0026#34; \u0026#34;MS936\u0026#34; #\u0026gt; [275] \u0026#34;PT154\u0026#34; \u0026#34;PTCP154\u0026#34; #\u0026gt; [277] \u0026#34;SHIFFT_JIS\u0026#34; \u0026#34;SHIFFT_JIS-MS\u0026#34; #\u0026gt; [279] \u0026#34;shift-jis\u0026#34; \u0026#34;shift_jis\u0026#34; #\u0026gt; [281] \u0026#34;SJIS\u0026#34; \u0026#34;SJIS-MS\u0026#34; #\u0026gt; [283] \u0026#34;SJIS-OPEN\u0026#34; \u0026#34;SJIS-WIN\u0026#34; #\u0026gt; [285] \u0026#34;UCS-2\u0026#34; \u0026#34;UCS-2BE\u0026#34; #\u0026gt; [287] \u0026#34;UCS-2LE\u0026#34; \u0026#34;UCS-4\u0026#34; #\u0026gt; [289] \u0026#34;UCS-4BE\u0026#34; \u0026#34;UCS-4BE\u0026#34; #\u0026gt; [291] \u0026#34;UCS-4LE\u0026#34; \u0026#34;UCS-4LE\u0026#34; #\u0026gt; [293] \u0026#34;UCS2\u0026#34; \u0026#34;UCS2BE\u0026#34; #\u0026gt; [295] \u0026#34;UCS2LE\u0026#34; \u0026#34;UCS4\u0026#34; #\u0026gt; [297] \u0026#34;UCS4BE\u0026#34; \u0026#34;UCS4LE\u0026#34; #\u0026gt; [299] \u0026#34;UHC\u0026#34; \u0026#34;unicodeFFFE\u0026#34; #\u0026gt; [301] \u0026#34;US\u0026#34; \u0026#34;US-ASCII\u0026#34; #\u0026gt; [303] \u0026#34;UTF-16\u0026#34; \u0026#34;UTF-16BE\u0026#34; #\u0026gt; [305] \u0026#34;UTF-16LE\u0026#34; \u0026#34;UTF-32\u0026#34; #\u0026gt; [307] \u0026#34;UTF-32BE\u0026#34; \u0026#34;UTF-32LE\u0026#34; #\u0026gt; [309] \u0026#34;UTF-8\u0026#34; \u0026#34;UTF16\u0026#34; #\u0026gt; [311] \u0026#34;UTF16BE\u0026#34; \u0026#34;UTF16LE\u0026#34; #\u0026gt; [313] \u0026#34;UTF32\u0026#34; \u0026#34;UTF32BE\u0026#34; #\u0026gt; [315] \u0026#34;UTF32LE\u0026#34; \u0026#34;UTF8\u0026#34; #\u0026gt; [317] \u0026#34;WINBALTRIM\u0026#34; \u0026#34;windows-1250\u0026#34; #\u0026gt; [319] \u0026#34;windows-1251\u0026#34; \u0026#34;windows-1252\u0026#34; #\u0026gt; [321] \u0026#34;windows-1253\u0026#34; \u0026#34;windows-1254\u0026#34; #\u0026gt; [323] \u0026#34;windows-1255\u0026#34; \u0026#34;windows-1256\u0026#34; #\u0026gt; [325] \u0026#34;windows-1257\u0026#34; \u0026#34;windows-1258\u0026#34; #\u0026gt; [327] \u0026#34;WINDOWS-31J\u0026#34; \u0026#34;WINDOWS-50221\u0026#34; #\u0026gt; [329] \u0026#34;WINDOWS-51932\u0026#34; \u0026#34;windows-874\u0026#34; #\u0026gt; [331] \u0026#34;WINDOWS-932\u0026#34; \u0026#34;WINDOWS-936\u0026#34; #\u0026gt; [333] \u0026#34;x-Chinese_CNS\u0026#34; \u0026#34;x-cp20001\u0026#34; #\u0026gt; [335] \u0026#34;x-cp20003\u0026#34; \u0026#34;x-cp20004\u0026#34; #\u0026gt; [337] \u0026#34;x-cp20005\u0026#34; \u0026#34;x-cp20261\u0026#34; #\u0026gt; [339] \u0026#34;x-cp20269\u0026#34; \u0026#34;x-cp20936\u0026#34; #\u0026gt; [341] \u0026#34;x-cp20949\u0026#34; \u0026#34;x-cp50227\u0026#34; #\u0026gt; [343] \u0026#34;x-EBCDIC-KoreanExtended\u0026#34; \u0026#34;x-Europa\u0026#34; #\u0026gt; [345] \u0026#34;x-IA5\u0026#34; \u0026#34;x-IA5-German\u0026#34; #\u0026gt; [347] \u0026#34;x-IA5-Norwegian\u0026#34; \u0026#34;x-IA5-Swedish\u0026#34; #\u0026gt; [349] \u0026#34;x-iscii-as\u0026#34; \u0026#34;x-iscii-be\u0026#34; #\u0026gt; [351] \u0026#34;x-iscii-de\u0026#34; \u0026#34;x-iscii-gu\u0026#34; #\u0026gt; [353] \u0026#34;x-iscii-ka\u0026#34; \u0026#34;x-iscii-ma\u0026#34; #\u0026gt; [355] \u0026#34;x-iscii-or\u0026#34; \u0026#34;x-iscii-pa\u0026#34; #\u0026gt; [357] \u0026#34;x-iscii-ta\u0026#34; \u0026#34;x-iscii-te\u0026#34; #\u0026gt; [359] \u0026#34;x-mac-arabic\u0026#34; \u0026#34;x-mac-ce\u0026#34; #\u0026gt; [361] \u0026#34;x-mac-chinesesimp\u0026#34; \u0026#34;x-mac-chinesetrad\u0026#34; #\u0026gt; [363] \u0026#34;x-mac-croatian\u0026#34; \u0026#34;x-mac-cyrillic\u0026#34; #\u0026gt; [365] \u0026#34;x-mac-greek\u0026#34; \u0026#34;x-mac-hebrew\u0026#34; #\u0026gt; [367] \u0026#34;x-mac-icelandic\u0026#34; \u0026#34;x-mac-japanese\u0026#34; #\u0026gt; [369] \u0026#34;x-mac-korean\u0026#34; \u0026#34;x-mac-romanian\u0026#34; #\u0026gt; [371] \u0026#34;x-mac-thai\u0026#34; \u0026#34;x-mac-turkish\u0026#34; #\u0026gt; [373] \u0026#34;x-mac-ukrainian\u0026#34; \u0026#34;x_Chinese-Eten\u0026#34;\rhugocmd(m=\u0026#34;expand\u0026#34; ,end=T)\r#\u0026gt;  和作業系統一致的編碼\nlocaleToCharset(locale =Sys.getlocale(\u0026quot;LC_CTYPE\u0026quot;))\r 工具程式\nnative_encode = function(x) {\rif (.Platform$OS.type == 'unix') return(x)\rx2 = enc2native(x)\rif (identical(enc2utf8(x2), x)) x2 else x\r}\r 工具程式\ndetails \u0026lt;- function(x) {\rdetails \u0026lt;-\rlist(x=x,encoding=Encoding(x),bytes=nchar(x,\u0026quot;b\u0026quot;),chars=nchar(x,\u0026quot;c\u0026quot;),\rwidth=nchar(x,\u0026quot;w\u0026quot;),raw=paste(charToRaw(x),collapse=\u0026quot;:\u0026quot;))\rprint(t(as.matrix(details)))\r}\rx \u0026lt;- \u0026quot;Maur\\xEDcio\u0026quot;\rEncoding(x) \u0026lt;- \u0026quot;latin1\u0026quot;\rdetails(x)\r#\u0026gt; x encoding bytes chars width raw #\u0026gt; [1,] \u0026quot;Mauricio\u0026quot; \u0026quot;latin1\u0026quot; 8 8 8 \u0026quot;4d:61:75:72:ed:63:69:6f\u0026quot;\rx \u0026lt;- \u0026quot;你好\u0026quot;\rEncoding(x) \u0026lt;- \u0026quot;UTF-8\u0026quot;\rdetails(x)\r#\u0026gt; Error in nchar(x, \u0026quot;c\u0026quot;): invalid multibyte string, element 1\rx \u0026lt;- \u0026quot;你好\u0026quot;\riconv(x,\u0026quot;unknown\u0026quot;,\u0026quot;utf-8\u0026quot;)\r#\u0026gt; Error in iconv(x, \u0026quot;unknown\u0026quot;, \u0026quot;utf-8\u0026quot;): 在編碼頁 950 中不支援從 'unknown' 轉換到 'utf-8'\rEncoding(x) \u0026lt;- \u0026quot;UTF-8\u0026quot;\rdetails(x)\r#\u0026gt; Error in nchar(x, \u0026quot;c\u0026quot;): invalid multibyte string, element 1\rx \u0026lt;- \u0026quot;你好\u0026quot;\ry\u0026lt;-enc2utf8(x)\rdetails(y)\r#\u0026gt; x encoding bytes chars width raw #\u0026gt; [1,] \u0026quot;你好\u0026quot; \u0026quot;UTF-8\u0026quot; 6 2 4 \u0026quot;e4:bd:a0:e5:a5:bd\u0026quot;\r 初步結論就是系統使用big5的雙位元。用enc2utf8(),enc2native()應該是比較符合windows10系統的方法。\n工具\n 判斷是不是UTF-8 is.na(iconv(x, \u0026quot;UTF-8\u0026quot;, \u0026quot;UTF-8\u0026quot;))\r  "},
{"uri": "/blogR//rlang/10_00_dplyrbasic01.html","title": "10. tidyr, dplyr basic",
	"tags": [],
	"description": "10_00_dplyrBasic01",
	"content": " cheat sheet  需要安裝babynames,ggplot2\r long and wide data 寬變長 函數gather(): 寬變長 From http://stackoverflow.com/questions/1181060\nrequire(tidyr)\rrequire(dplyr) # tibble\r# 每個時間點(共10個),產生3個股票,X,Y,Z\rstocks \u0026lt;- tibble( #🏷👏也可以用data.frame\rtime = as.Date('2009-01-01') + 0:9,\rX = rnorm(10, 0, 1),\rY = rnorm(10, 0, 2),\rZ = rnorm(10, 0, 4)\r)\rkable(head(stocks)) #\r \r展開\r   time X Y Z     2009-01-01 0.6778663 0.7513016 -9.9708545   2009-01-02 -0.2238161 -2.1862983 0.6832973   2009-01-03 -0.1217276 -0.0860699 -0.1664718   2009-01-04 -0.3546435 0.2440224 7.4886484   2009-01-05 0.3119788 -1.5312788 -3.7477823   2009-01-06 -0.5437336 -1.1486502 4.7369778     kable(gather(stocks, stock, price, -time)) #🏷👏除了時間欄位以外,其餘欄位依序填到兩個新欄位,分別是1)分組欄位(stock)和2)數值欄位(price)  \r展開\r   time stock price     2009-01-01 X 0.6778663   2009-01-02 X -0.2238161   2009-01-03 X -0.1217276   2009-01-04 X -0.3546435   2009-01-05 X 0.3119788   2009-01-06 X -0.5437336   2009-01-07 X 0.1571257   2009-01-08 X -1.4585921   2009-01-09 X 1.1313788   2009-01-10 X -1.1935117   2009-01-01 Y 0.7513016   2009-01-02 Y -2.1862983   2009-01-03 Y -0.0860699   2009-01-04 Y 0.2440224   2009-01-05 Y -1.5312788   2009-01-06 Y -1.1486502   2009-01-07 Y 1.6882895   2009-01-08 Y -4.4474627   2009-01-09 Y 1.1243285   2009-01-10 Y -2.4531855   2009-01-01 Z -9.9708545   2009-01-02 Z 0.6832973   2009-01-03 Z -0.1664718   2009-01-04 Z 7.4886484   2009-01-05 Z -3.7477823   2009-01-06 Z 4.7369778   2009-01-07 Z 5.3013235   2009-01-08 Z -0.6878305   2009-01-09 Z 4.0872611   2009-01-10 Z -6.7961287     stocks %\u0026gt;% gather(stock, price, -time) # 🏷👏也可以用管道寫法 stocks %\u0026gt;% gather(stock, price, -time) \r展開\r#\u0026gt; # A tibble: 30 x 3\r#\u0026gt; time stock price\r#\u0026gt; \u0026lt;date\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt;\r#\u0026gt; 1 2009-01-01 X 0.678\r#\u0026gt; 2 2009-01-02 X -0.224\r#\u0026gt; 3 2009-01-03 X -0.122\r#\u0026gt; 4 2009-01-04 X -0.355\r#\u0026gt; 5 2009-01-05 X 0.312\r#\u0026gt; 6 2009-01-06 X -0.544\r#\u0026gt; 7 2009-01-07 X 0.157\r#\u0026gt; 8 2009-01-08 X -1.46 #\u0026gt; 9 2009-01-09 X 1.13 #\u0026gt; 10 2009-01-10 X -1.19 #\u0026gt; # ... with 20 more rows\r 🐱‍👤直接寫出html : 利用writeLines(),例如設定css 設定css\nwriteLines(\u0026quot;td, th { padding : 6px } th { background-color : brown ; color : white; border : 1px solid white; } td { color : brown ; border : 1px solid brown }\u0026quot;, con = \u0026quot;tableStyle.css\u0026quot;)\rkable(head(mtcars))\r \r\r長到寬資料 利用函數spread()\nlong\u0026lt;-gather(stocks, stock, price, -time) #轉成長資料\rstr(long)\r#\u0026gt; tibble [30 x 3] (S3: tbl_df/tbl/data.frame)\r#\u0026gt; $ time : Date[1:30], format: \u0026quot;2009-01-01\u0026quot; \u0026quot;2009-01-02\u0026quot; ...\r#\u0026gt; $ stock: chr [1:30] \u0026quot;X\u0026quot; \u0026quot;X\u0026quot; \u0026quot;X\u0026quot; \u0026quot;X\u0026quot; ...\r#\u0026gt; $ price: num [1:30] 0.678 -0.224 -0.122 -0.355 0.312 ...\rwide \u0026lt;-spread(long,stock,price) #轉成寬資料\rstr(wide)\r#\u0026gt; tibble [10 x 4] (S3: tbl_df/tbl/data.frame)\r#\u0026gt; $ time: Date[1:10], format: \u0026quot;2009-01-01\u0026quot; \u0026quot;2009-01-02\u0026quot; ...\r#\u0026gt; $ X : num [1:10] 0.678 -0.224 -0.122 -0.355 0.312 ...\r#\u0026gt; $ Y : num [1:10] 0.7513 -2.1863 -0.0861 0.244 -1.5313 ...\r#\u0026gt; $ Z : num [1:10] -9.971 0.683 -0.166 7.489 -3.748 ...\rhead(wide)\r#\u0026gt; # A tibble: 6 x 4\r#\u0026gt; time X Y Z\r#\u0026gt; \u0026lt;date\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r#\u0026gt; 1 2009-01-01 0.678 0.751 -9.97 #\u0026gt; 2 2009-01-02 -0.224 -2.19 0.683\r#\u0026gt; 3 2009-01-03 -0.122 -0.0861 -0.166\r#\u0026gt; 4 2009-01-04 -0.355 0.244 7.49 #\u0026gt; 5 2009-01-05 0.312 -1.53 -3.75 #\u0026gt; 6 2009-01-06 -0.544 -1.15 4.74\r 更多參考: cookbook for R\ndplyr 的向量函數 函數名 功能\n  row_number() 排序(😒不是紀錄號碼),如果數值一樣,則靠前出現的元素排名在前,例如(3,3) 則 1,2\n  min_rank() 排序,如果數值一樣,則都是同一等級，但是，佔用下一名次。例如\ndata\u0026lt;-c(3,3,4) min_rank(data)\r#\u0026gt; [1] 1 1 3 #🏷👏沒有2\r   dense_rank() 排序,如果數值一樣,則都是同一等級，但是，不佔用下一名次\ndata\u0026lt;-c(3,3,4) dense_rank(data)\r#\u0026gt; [1] 1 1 2\r   percent_rank() 按百分比的排名\npercent_rank = (min_rank(x) - 1)/(sum(!is.na(x)) - 1)    cume_dist() 累計分佈\n  ntile() : floor(n * (row_number(x) - 1)/len + 1) \ndata\u0026lt;-round(runif(10)*10)\rpr\u0026lt;-percent_rank(data)\rcd\u0026lt;-cume_dist(data)\rmr\u0026lt;-min_rank(data)\rdf\u0026lt;-data.frame(data,pr,mr,cd)\rarrange(df,data)\r data pr mr cd   0 0.0000000 1 0.1  1 0.1111111 2 0.2  3 0.2222222 3 0.4  3 0.2222222 3 0.4  4 0.4444444 5 0.5  6 0.5555556 6 0.6  7 0.6666667 7 0.8  7 0.6666667 7 0.8  8 0.8888889 9 0.9  10 1.0000000 10 1.0       其他範例\nx \u0026lt;- c(5, 1, 3, 2, 2, NA)\rrow_number(x)\r#\u0026gt; [1] 5 1 4 2 3 NA\rmin_rank(x)\r#\u0026gt; [1] 5 1 4 2 2 NA\rdense_rank(x)\r#\u0026gt; [1] 4 1 3 2 2 NA\rpercent_rank(x)\r#\u0026gt; [1] 1.00 0.00 0.75 0.25 0.25 NA\rcume_dist(x)\r#\u0026gt; [1] 1.0 0.2 0.8 0.6 0.6 NA\rntile(x, 2)\r#\u0026gt; [1] 2 1 2 1 1 NA\rntile(1:8, 3)\r#\u0026gt; [1] 1 1 1 2 2 2 3 3\r note:\n(2,3,3,3,3,4,5,6,6,9)\n   1 2 3 4 5 6 7 8 9     0 1 4 1 1 2 0 0 1    arrange(dataframe, col1, col2, col3) vs. dataframe[order(dataframe$col1, dataframe$col2, dataframe$col3), ]\rvs. with(dataframe, dataframe[order(col1, col2, col3), ])  \r\rrank等級想要由大到小可以像下面這樣\ndata\r#\u0026gt; [1] 1 8 10 0 7 6 3 3 4 7\rrow_number(desc(data))\r#\u0026gt; [1] 9 2 1 10 3 5 7 8 6 4\r ❓探討為甚麼?\n提示\r desc(data)\r#\u0026gt; [1] -7 -4 -1 -6 -4 -8 -9 -3 -1 -2 #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏原來的資料變成負數\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rrow_number(data)\r#\u0026gt; [1] 8 5 1 7 6 9 10 4 2 3\r \n複習一下Percentile\n❓Find the 32nd, 57th and 98th percentiles of runiform(200).\ndata\u0026lt;-runif(200) quantile(data, c(.32, .57, .98)) #\u0026gt; 32% 57% 98% #\u0026gt; 0.2398605 0.5510189 0.9456776\r \r\rsubset  select()選欄位 filter()選紀錄  library(babynames)\rbabynames #\u0026gt; # A tibble: 1,924,665 x 5\r#\u0026gt; year sex name n prop\r#\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt;\r#\u0026gt; 1 1880 F Mary 7065 0.0724\r#\u0026gt; 2 1880 F Anna 2604 0.0267\r#\u0026gt; 3 1880 F Emma 2003 0.0205\r#\u0026gt; 4 1880 F Elizabeth 1939 0.0199\r#\u0026gt; 5 1880 F Minnie 1746 0.0179\r#\u0026gt; 6 1880 F Margaret 1578 0.0162\r#\u0026gt; 7 1880 F Ida 1472 0.0151\r#\u0026gt; 8 1880 F Alice 1414 0.0145\r#\u0026gt; 9 1880 F Bertha 1320 0.0135\r#\u0026gt; 10 1880 F Sarah 1288 0.0132\r#\u0026gt; # ... with 1,924,655 more rows\rbabynames %\u0026gt;% select(-prop) #🏷👏一個有五個欄位,扣掉欄位prop\r#\u0026gt; # A tibble: 1,924,665 x 4\r#\u0026gt; year sex name n\r#\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt;\r#\u0026gt; 1 1880 F Mary 7065\r#\u0026gt; 2 1880 F Anna 2604\r#\u0026gt; 3 1880 F Emma 2003\r#\u0026gt; 4 1880 F Elizabeth 1939\r#\u0026gt; 5 1880 F Minnie 1746\r#\u0026gt; 6 1880 F Margaret 1578\r#\u0026gt; 7 1880 F Ida 1472\r#\u0026gt; 8 1880 F Alice 1414\r#\u0026gt; 9 1880 F Bertha 1320\r#\u0026gt; 10 1880 F Sarah 1288\r#\u0026gt; # ... with 1,924,655 more rows\rbabynames %\u0026gt;% select(year:n)\r#\u0026gt; # A tibble: 1,924,665 x 4\r#\u0026gt; year sex name n\r#\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt;\r#\u0026gt; 1 1880 F Mary 7065\r#\u0026gt; 2 1880 F Anna 2604\r#\u0026gt; 3 1880 F Emma 2003\r#\u0026gt; 4 1880 F Elizabeth 1939\r#\u0026gt; 5 1880 F Minnie 1746\r#\u0026gt; 6 1880 F Margaret 1578\r#\u0026gt; 7 1880 F Ida 1472\r#\u0026gt; 8 1880 F Alice 1414\r#\u0026gt; 9 1880 F Bertha 1320\r#\u0026gt; 10 1880 F Sarah 1288\r#\u0026gt; # ... with 1,924,655 more rows\r# starts_with(), ends_with(), contains()\rbabynames %\u0026gt;% filter(name == \u0026quot;Hadley\u0026quot;)\r#\u0026gt; # A tibble: 163 x 5\r#\u0026gt; year sex name n prop\r#\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt;\r#\u0026gt; 1 1906 M Hadley 6 0.0000416\r#\u0026gt; 2 1908 M Hadley 16 0.0000962\r#\u0026gt; 3 1909 M Hadley 14 0.0000792\r#\u0026gt; 4 1910 M Hadley 5 0.0000240\r#\u0026gt; 5 1911 M Hadley 9 0.0000373\r#\u0026gt; 6 1912 M Hadley 11 0.0000244\r#\u0026gt; 7 1913 M Hadley 10 0.0000186\r#\u0026gt; 8 1914 M Hadley 15 0.0000220\r#\u0026gt; 9 1915 M Hadley 14 0.0000159\r#\u0026gt; 10 1916 M Hadley 14 0.0000152\r#\u0026gt; # ... with 153 more rows\rbabynames %\u0026gt;% filter(year == 1900, sex == \u0026quot;F\u0026quot;)\r#\u0026gt; # A tibble: 2,224 x 5\r#\u0026gt; year sex name n prop\r#\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt;\r#\u0026gt; 1 1900 F Mary 16706 0.0526\r#\u0026gt; 2 1900 F Helen 6343 0.0200\r#\u0026gt; 3 1900 F Anna 6114 0.0192\r#\u0026gt; 4 1900 F Margaret 5304 0.0167\r#\u0026gt; 5 1900 F Ruth 4765 0.0150\r#\u0026gt; 6 1900 F Elizabeth 4096 0.0129\r#\u0026gt; 7 1900 F Florence 3920 0.0123\r#\u0026gt; 8 1900 F Ethel 3896 0.0123\r#\u0026gt; 9 1900 F Marie 3856 0.0121\r#\u0026gt; 10 1900 F Lillian 3414 0.0107\r#\u0026gt; # ... with 2,214 more rows\rbabynames %\u0026gt;% filter(year == 2013, sex == \u0026quot;F\u0026quot;)\r#\u0026gt; # A tibble: 19,231 x 5\r#\u0026gt; year sex name n prop\r#\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt;\r#\u0026gt; 1 2013 F Sophia 21213 0.0110 #\u0026gt; 2 2013 F Emma 20936 0.0109 #\u0026gt; 3 2013 F Olivia 18414 0.00957\r#\u0026gt; 4 2013 F Isabella 17631 0.00916\r#\u0026gt; 5 2013 F Ava 15249 0.00793\r#\u0026gt; 6 2013 F Mia 13147 0.00683\r#\u0026gt; 7 2013 F Emily 13124 0.00682\r#\u0026gt; 8 2013 F Abigail 12405 0.00645\r#\u0026gt; 9 2013 F Madison 10591 0.00551\r#\u0026gt; 10 2013 F Elizabeth 9448 0.00491\r#\u0026gt; # ... with 19,221 more rows\r 函數mutate()\nbabynames %\u0026gt;%\rmutate(\rfirst = tolower(substr(name, 1, 1)),\rlast = substr(name, nchar(name), nchar(name))\r)\r#\u0026gt; # A tibble: 1,924,665 x 7\r#\u0026gt; year sex name n prop first last #\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt;\r#\u0026gt; 1 1880 F Mary 7065 0.0724 m y #\u0026gt; 2 1880 F Anna 2604 0.0267 a a #\u0026gt; 3 1880 F Emma 2003 0.0205 e a #\u0026gt; 4 1880 F Elizabeth 1939 0.0199 e h #\u0026gt; 5 1880 F Minnie 1746 0.0179 m e #\u0026gt; 6 1880 F Margaret 1578 0.0162 m t #\u0026gt; 7 1880 F Ida 1472 0.0151 i a #\u0026gt; 8 1880 F Alice 1414 0.0145 a e #\u0026gt; 9 1880 F Bertha 1320 0.0135 b a #\u0026gt; 10 1880 F Sarah 1288 0.0132 s h #\u0026gt; # ... with 1,924,655 more rows\rbabynames %\u0026gt;%\rarrange(desc(prop))\r#\u0026gt; # A tibble: 1,924,665 x 5\r#\u0026gt; year sex name n prop\r#\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt;\r#\u0026gt; 1 1880 M John 9655 0.0815\r#\u0026gt; 2 1881 M John 8769 0.0810\r#\u0026gt; 3 1880 M William 9532 0.0805\r#\u0026gt; 4 1883 M John 8894 0.0791\r#\u0026gt; 5 1881 M William 8524 0.0787\r#\u0026gt; 6 1882 M John 9557 0.0783\r#\u0026gt; 7 1884 M John 9388 0.0765\r#\u0026gt; 8 1882 M William 9298 0.0762\r#\u0026gt; 9 1886 M John 9026 0.0758\r#\u0026gt; 10 1885 M John 8756 0.0755\r#\u0026gt; # ... with 1,924,655 more rows\rbabynames %\u0026gt;%\rsummarise(n = sum(n)) #🏷👏對n欄位加總\r#\u0026gt; # A tibble: 1 x 1\r#\u0026gt; n\r#\u0026gt; \u0026lt;int\u0026gt;\r#\u0026gt; 1 348120517\r 分組  函數group_by() 用來分組，不會影響到原來的資料,只是添加資訊 取消分組的函數為ungroup()  head(mtcars)\r  mpg cyl disp hp drat wt qsec vs am gear carb   Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4  Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4  Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1  Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1  Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2  Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1     str(mtcars)\r#\u0026gt; 'data.frame':\t32 obs. of 11 variables:\r#\u0026gt; $ mpg : num 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...\r#\u0026gt; $ cyl : num 6 6 4 6 8 6 8 4 4 6 ...\r#\u0026gt; $ disp: num 160 160 108 258 360 ...\r#\u0026gt; $ hp : num 110 110 93 110 175 105 245 62 95 123 ...\r#\u0026gt; $ drat: num 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...\r#\u0026gt; $ wt : num 2.62 2.88 2.32 3.21 3.44 ...\r#\u0026gt; $ qsec: num 16.5 17 18.6 19.4 17 ...\r#\u0026gt; $ vs : num 0 0 1 1 0 1 0 1 1 1 ...\r#\u0026gt; $ am : num 1 1 1 0 0 0 0 0 0 0 ...\r#\u0026gt; $ gear: num 4 4 4 3 3 3 3 4 4 4 ...\r#\u0026gt; $ carb: num 4 4 1 1 2 1 4 2 2 4 ...\rby_cyl \u0026lt;- mtcars %\u0026gt;% group_by(cyl)\rhead(by_cyl) #🏷👏可以看到只是添加資訊,原來的資料欄位沒變\r#\u0026gt; # A tibble: 6 x 11\r#\u0026gt; # Groups: cyl [3]\r#\u0026gt; mpg cyl disp hp drat wt qsec vs am gear carb\r#\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r#\u0026gt; 1 21 6 160 110 3.9 2.62 16.5 0 1 4 4\r#\u0026gt; 2 21 6 160 110 3.9 2.88 17.0 0 1 4 4\r#\u0026gt; 3 22.8 4 108 93 3.85 2.32 18.6 1 1 4 1\r#\u0026gt; 4 21.4 6 258 110 3.08 3.22 19.4 1 0 3 1\r#\u0026gt; 5 18.7 8 360 175 3.15 3.44 17.0 0 0 3 2\r#\u0026gt; 6 18.1 6 225 105 2.76 3.46 20.2 1 0 3 1\rstr(by_cyl)\r#\u0026gt; grouped_df [32 x 11] (S3: grouped_df/tbl_df/tbl/data.frame)\r#\u0026gt; $ mpg : num [1:32] 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...\r#\u0026gt; $ cyl : num [1:32] 6 6 4 6 8 6 8 4 4 6 ...\r#\u0026gt; $ disp: num [1:32] 160 160 108 258 360 ...\r#\u0026gt; $ hp : num [1:32] 110 110 93 110 175 105 245 62 95 123 ...\r#\u0026gt; $ drat: num [1:32] 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...\r#\u0026gt; $ wt : num [1:32] 2.62 2.88 2.32 3.21 3.44 ...\r#\u0026gt; $ qsec: num [1:32] 16.5 17 18.6 19.4 17 ...\r#\u0026gt; $ vs : num [1:32] 0 0 1 1 0 1 0 1 1 1 ...\r#\u0026gt; $ am : num [1:32] 1 1 1 0 0 0 0 0 0 0 ...\r#\u0026gt; $ gear: num [1:32] 4 4 4 3 3 3 3 4 4 4 ...\r#\u0026gt; $ carb: num [1:32] 4 4 1 1 2 1 4 2 2 4 ...\r#\u0026gt; - attr(*, \u0026quot;groups\u0026quot;)= tibble [3 x 2] (S3: tbl_df/tbl/data.frame)\r#\u0026gt; ..$ cyl : num [1:3] 4 6 8\r#\u0026gt; ..$ .rows: list\u0026lt;int\u0026gt; [1:3] #\u0026gt; .. ..$ : int [1:11] 3 8 9 18 19 20 21 26 27 28 ...\r#\u0026gt; .. ..$ : int [1:7] 1 2 4 6 10 11 30\r#\u0026gt; .. ..$ : int [1:14] 5 7 12 13 14 15 16 17 22 23 ...\r#\u0026gt; .. ..@ ptype: int(0) #\u0026gt; ..- attr(*, \u0026quot;.drop\u0026quot;)= logi TRUE\r 但是分組結果會影響其他dplyr指令的計算結果:\nby_cyl %\u0026gt;% summarise( disp = mean(disp), hp = mean(hp) )\r#\u0026gt; # A tibble: 3 x 3\r#\u0026gt; cyl disp hp\r#\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r#\u0026gt; 1 4 105. 82.6\r#\u0026gt; 2 6 183. 122. #\u0026gt; 3 8 353. 209.\rby_cyl %\u0026gt;% filter(disp == max(disp))\r#\u0026gt; # A tibble: 3 x 11\r#\u0026gt; # Groups: cyl [3]\r#\u0026gt; mpg cyl disp hp drat wt qsec vs am gear carb\r#\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r#\u0026gt; 1 21.4 6 258 110 3.08 3.22 19.4 1 0 3 1\r#\u0026gt; 2 24.4 4 147. 62 3.69 3.19 20 1 0 4 2\r#\u0026gt; 3 10.4 8 472 205 2.93 5.25 18.0 0 0 3 4\r dplyr::group_by(iris, Species)\r#\u0026gt; # A tibble: 150 x 5\r#\u0026gt; # Groups: Species [3]\r#\u0026gt; Sepal.Length Sepal.Width Petal.Length Petal.Width Species\r#\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; #\u0026gt; 1 5.1 3.5 1.4 0.2 setosa #\u0026gt; 2 4.9 3 1.4 0.2 setosa #\u0026gt; 3 4.7 3.2 1.3 0.2 setosa #\u0026gt; 4 4.6 3.1 1.5 0.2 setosa #\u0026gt; 5 5 3.6 1.4 0.2 setosa #\u0026gt; 6 5.4 3.9 1.7 0.4 setosa #\u0026gt; 7 4.6 3.4 1.4 0.3 setosa #\u0026gt; 8 5 3.4 1.5 0.2 setosa #\u0026gt; 9 4.4 2.9 1.4 0.2 setosa #\u0026gt; 10 4.9 3.1 1.5 0.1 setosa #\u0026gt; # ... with 140 more rows\r#Group data into rows with the same value of Species.\r#dplyr::ungroup(iris) #🏷👏僅僅移除分組資訊\riris %\u0026gt;% group_by(Species) %\u0026gt;% summarise(mean=mean(Sepal.Length))\r#\u0026gt; # A tibble: 3 x 2\r#\u0026gt; Species mean\r#\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt;\r#\u0026gt; 1 setosa 5.01\r#\u0026gt; 2 versicolor 5.94\r#\u0026gt; 3 virginica 6.59\r 報告 函數summarise()\n              summarize() 可以用的函數型態是輸入向量,輸出一個值得函數。例如\n mean(): the mean AKA the average sd(): the standard deviation, which is a measure of spread min() and max(): the minimum and maximum values respectively IQR(): Interquartile range sum(): the sum n(): 每組觀察數目。可以用來配套group_by()。  實驗 pipeline vs no pipeline  x %\u0026gt;% f(y) \u0026lt;===\u0026gt; f(x, y) 🏷👏S3 object y %\u0026gt;% f(x, ., z) \u0026lt;===\u0026gt; f(x, y, z ) #🏷👏取代逗點    產生資料\nyear=c(1990,\t1991,\t1990,\t1991,\t1990,\t1991,\t1990,\t1991,\t1990,\t1991) sex=c(\u0026quot;f\u0026quot;,\t\u0026quot;f\u0026quot;,\t\u0026quot;f\u0026quot;,\t\u0026quot;f\u0026quot;,\t\u0026quot;f\u0026quot;,\t\u0026quot;m\u0026quot;,\t\u0026quot;m\u0026quot;,\t\u0026quot;m\u0026quot;,\t\u0026quot;m\u0026quot;,\t\u0026quot;m\u0026quot;)\r#value=c(1,\t2,\t3,\t4,\t5,\t1,\t2,\t3,\t4,\t5)\rvalue=c(1,\t2,\t3,\t4,\t5,\t6,\t7,\t8,\t9,\t10)\rodf\u0026lt;-data.frame(sex,year,value)\rhead(odf)\r sex year value   f 1990 1  f 1991 2  f 1990 3  f 1991 4  f 1990 5  m 1991 6       不用 pipeline\ndf\u0026lt;-group_by(odf,sex)\rndf\u0026lt;-mutate(df,rank=min_rank(value)) # 🏷👏增加新欄位\rarrange(ndf,sex) #🏷👏根據sex由低到高排序\r#\u0026gt; # A tibble: 10 x 4\r#\u0026gt; # Groups: sex [2]\r#\u0026gt; sex year value rank\r#\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt;\r#\u0026gt; 1 f 1990 1 1\r#\u0026gt; 2 f 1991 2 2\r#\u0026gt; 3 f 1990 3 3\r#\u0026gt; 4 f 1991 4 4\r#\u0026gt; 5 f 1990 5 5\r#\u0026gt; 6 m 1991 6 1\r#\u0026gt; 7 m 1990 7 2\r#\u0026gt; 8 m 1991 8 3\r#\u0026gt; 9 m 1990 9 4\r#\u0026gt; 10 m 1991 10 5\r   使用 pipeline\nndf\u0026lt;-odf %\u0026gt;%\rgroup_by(sex) %\u0026gt;%\rmutate(rank = min_rank(value)) arrange(ndf,sex)\r#\u0026gt; # A tibble: 10 x 4\r#\u0026gt; # Groups: sex [2]\r#\u0026gt; sex year value rank\r#\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt;\r#\u0026gt; 1 f 1990 1 1\r#\u0026gt; 2 f 1991 2 2\r#\u0026gt; 3 f 1990 3 3\r#\u0026gt; 4 f 1991 4 4\r#\u0026gt; 5 f 1990 5 5\r#\u0026gt; 6 m 1991 6 1\r#\u0026gt; 7 m 1990 7 2\r#\u0026gt; 8 m 1991 8 3\r#\u0026gt; 9 m 1990 9 4\r#\u0026gt; 10 m 1991 10 5\r   看看其他範例\ndf %\u0026gt;% group_by(sex) %\u0026gt;%str() #🏷👏分組以後放到非dyplr套件的函數str()要看結構,結果並沒有產生兩個分組結構，也就是說str()不認識分組結構\r#\u0026gt; grouped_df [10 x 3] (S3: grouped_df/tbl_df/tbl/data.frame)\r#\u0026gt; $ sex : chr [1:10] \u0026quot;f\u0026quot; \u0026quot;f\u0026quot; \u0026quot;f\u0026quot; \u0026quot;f\u0026quot; ...\r#\u0026gt; $ year : num [1:10] 1990 1991 1990 1991 1990 ...\r#\u0026gt; $ value: num [1:10] 1 2 3 4 5 6 7 8 9 10\r#\u0026gt; - attr(*, \u0026quot;groups\u0026quot;)= tibble [2 x 2] (S3: tbl_df/tbl/data.frame)\r#\u0026gt; ..$ sex : chr [1:2] \u0026quot;f\u0026quot; \u0026quot;m\u0026quot;\r#\u0026gt; ..$ .rows: list\u0026lt;int\u0026gt; [1:2] #\u0026gt; .. ..$ : int [1:5] 1 2 3 4 5\r#\u0026gt; .. ..$ : int [1:5] 6 7 8 9 10\r#\u0026gt; .. ..@ ptype: int(0) #\u0026gt; ..- attr(*, \u0026quot;.drop\u0026quot;)= logi TRUE\rbabynames %\u0026gt;%\rgroup_by(name) %\u0026gt;%\rsummarise(n = sum(n)) #🏷👏n 是欄位名稱\r#\u0026gt; # A tibble: 97,310 x 2\r#\u0026gt; name n\r#\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt;\r#\u0026gt; 1 Aaban 107\r#\u0026gt; 2 Aabha 35\r#\u0026gt; 3 Aabid 10\r#\u0026gt; 4 Aabir 5\r#\u0026gt; 5 Aabriella 32\r#\u0026gt; 6 Aada 5\r#\u0026gt; 7 Aadam 254\r#\u0026gt; 8 Aadan 130\r#\u0026gt; 9 Aadarsh 199\r#\u0026gt; 10 Aaden 4658\r#\u0026gt; # ... with 97,300 more rows\rbabynames %\u0026gt;%\rfilter(name %in% c(\u0026quot;John\u0026quot;, \u0026quot;Mary\u0026quot;, \u0026quot;William\u0026quot;)) %\u0026gt;%\rgroup_by(name, sex) %\u0026gt;%\rsummarise(n = sum(n))\r#\u0026gt; # A tibble: 6 x 3\r#\u0026gt; # Groups: name [3]\r#\u0026gt; name sex n\r#\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt;\r#\u0026gt; 1 John F 21676\r#\u0026gt; 2 John M 5115466\r#\u0026gt; 3 Mary F 4123200\r#\u0026gt; 4 Mary M 15160\r#\u0026gt; 5 William F 15949\r#\u0026gt; 6 William M 4102604\rbabynames %\u0026gt;%\rgroup_by(year, sex) %\u0026gt;%\rmutate(rank = min_rank(desc(n))) %\u0026gt;%\rtail() #🏷👏只看後幾筆\r#\u0026gt; # A tibble: 6 x 6\r#\u0026gt; # Groups: year, sex [1]\r#\u0026gt; year sex name n prop rank\r#\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt;\r#\u0026gt; 1 2017 M Zyhier 5 0.00000255 12171\r#\u0026gt; 2 2017 M Zykai 5 0.00000255 12171\r#\u0026gt; 3 2017 M Zykeem 5 0.00000255 12171\r#\u0026gt; 4 2017 M Zylin 5 0.00000255 12171\r#\u0026gt; 5 2017 M Zylis 5 0.00000255 12171\r#\u0026gt; 6 2017 M Zyrie 5 0.00000255 12171\r 練習    名叫Hadley 的男女各多少人?\nbabynames %\u0026gt;%\rfilter(name == \u0026quot;Hadley\u0026quot;) %\u0026gt;%\rgroup_by(sex) %\u0026gt;%\rsummarise(n = sum(n))\r#\u0026gt; # A tibble: 2 x 2\r#\u0026gt; sex n\r#\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt;\r#\u0026gt; 1 F 26708\r#\u0026gt; 2 M 1883\r   The travesty延續上題，各年的的男女Hadley數目?\nlibrary(ggplot2)\rbabynames %\u0026gt;%\rfilter(name == \u0026quot;Hadley\u0026quot;) %\u0026gt;%\rggplot(aes(year, n)) + geom_line(aes(colour = sex)) #🏷👏過濾出來,然後按照年度(x),出生數(y)作圖\r figure\r  "},
{"uri": "/blogR//rlang/11_environments.html","title": "11 Environments",
	"tags": [],
	"description": "進階",
	"content": "參考 https://holtzy.github.io/Pimp-my-rmd/\nIntroduction The environment is the data structure that powers scoping. 相關概念:lexical scoping, namespaces, and R6 classes。\n這個文件需要 devtools::install_github(\u0026quot;tidyverse/rlang\u0026quot;)\nQuiz If you can answer the following questions correctly, you already know the most important topics in this chapter. You can find the answers at the end of the chapter in answers.\n List at least three ways that an environment is different to a list. What is the parent of the global environment? What is the only environment that doesn't have a parent? What is the enclosing environment of a function? Why is it important? How do you determine the environment from which a function was called? How are \u0026lt;- and \u0026lt;\u0026lt;- different?  Outline  Environment basics introduces you to the basic properties of an environment and shows you how to create your own. Recursing over environments provides a function template for computing with environments, illustrating the idea with a useful function. Explicit environments briefly discusses three places where environments are useful data structures for solving other problems.  Prerequisites 這個章節利用了套件rlang裡的函數，來探索環境物件。\n在rlang套件中,env_函數是設計用來和pipe一起工作的,這裡不深入。\nglobal_env()和globalenv()的執行結果一樣。\n.GlobalEnv\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\rglobalenv()\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\rglobal_env()\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\r.BaseNamespaceEnv\r#\u0026gt; \u0026lt;environment: namespace:base\u0026gt;\rcurrent_env() #\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\r \r\r基本 基本上一個 environment 類似名稱串列(named list),但是有4個例外:\n 名稱唯一(就是變數唯一) 名稱沒有順序關係 會有一個parent 當改變的時候,不會自動複製 (Environments are not copied when modified).  分別探索上面四點:\n提要 要建立environment, 使用 rlang::env(). 類似使用list(),也是一組名稱-值的配對。:\ne1 \u0026lt;- env(\ra = FALSE,\rb = \u0026quot;a\u0026quot;,\rc = 2.3,\rd = 1:3\r)\r 建立environment物件,利用函數 new.env() 不用管參數 hash 和 size。注意不能利用\u0026lt;-同時定義和建立 parameters; 例如, e1 \u0026lt;- env( a \u0026lt;- FALSE ) # error\r\r\renvironment物件可以想成是一個袋子,或是names集合。因為沒有次序關係\n 就像在 names and values, 討論的,這個物件是參考為基礎.(in C concept) 不會有copy on modifying。而且,環境物件可以自己指向自己(recursion)\ne1$d \u0026lt;- e1\r  沒有指派的環境變數,只會顯示記憶體位址:\ne1\r#\u0026gt; \u0026lt;environment: 0x0000000013c47d10\u0026gt;\r 要知道內容可以使用 env_print() :\nenv_print(e1)\r#\u0026gt; \u0026lt;environment: 0000000013C47D10\u0026gt;\r#\u0026gt; parent: \u0026lt;environment: global\u0026gt;\r#\u0026gt; bindings:\r#\u0026gt; * a: \u0026lt;lgl\u0026gt;\r#\u0026gt; * b: \u0026lt;chr\u0026gt;\r#\u0026gt; * c: \u0026lt;dbl\u0026gt;\r#\u0026gt; * d: \u0026lt;env\u0026gt;\r 想要知道目前有哪些binding(名稱-值 配對)可以利用 env_names()\nenv_names(e1)\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot;\r 要列出環境下的繫結，在R 3.2.0 以上,可以使用函數names() ,之前的版本則是 ls(), 但是要注意的是ls 的參數 all.names 內設是 FALSE 因此.開頭的看不到。.\r\r\rImportant environments 另外參考 [Special environments]。 current_env() 可以知道目前程式碼的執行環境。例如,當我們互動執行RCODE的時候,環境通常是 [總體環境](#global environment),或者由函數global_env()可以得到。這個總體環境有時候就叫\u0026quot;workspace\u0026quot;，同時,這也是函數外面所有互動計算發生的地方。 環境物件的比較不能用==,只能用函數identical()。\nidentical(global_env(), current_env())\r#\u0026gt; [1] TRUE\rglobal_env() == current_env()\r#\u0026gt; Error in global_env() == current_env(): 只有基元或串列類型才能做比較 (1)\r  globalenv() 和.GlobalEnv: 拿到global environmentand。 environment():拿到目前的環境  global environment 的名稱為 R_GlobalEnv 。\nglobal_env()\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\rcurrent_env()\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\r.GlobalEnv\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\r \r\rParents 每一個環境物件都有一個 parent。 parent 也一個環境物件。在方塊圖中,parent以藍色圈表示,並用箭頭指向另一個環境物件。\n這個parent用來建立 lexical scoping: 如果name沒有在某個環境物件找到,R會重複的在parent中找。\n函數env()可以用來建立一個沒有名字的環境 You can set the parent environment by supplying an unnamed argument to env(). If you don't supply it, it defaults to the current environment.\ne2a \u0026lt;- env(d = 4, e = 5)\re2b \u0026lt;- env(e2a, a = 1, b = 2, c = 3)\r  e2b的parent 為e2a,e2a沒有parent。\n函數 env_parent()可以用來找出某個環境物件的parent:\nenv_parent(e2b)\r#\u0026gt; \u0026lt;environment: 0x0000000015418df8\u0026gt;\renv_parent(e2a)\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\r parent.env() === env_parent()\r\r\r所有的環境物件中只有一個名稱為R_EmptyEnv的物件沒有parent(用空心藍色表示):\ne2c \u0026lt;- env(empty_env(), d = 4, e = 5)\re2d \u0026lt;- env(e2c, a = 1, b = 2, c = 3)\r  emptyenv() === empty_env()\r\r\r試圖利用函數env_parent()找空環境物件的parent會發生錯誤:\nenv_parent(empty_env())\r#\u0026gt; Error: The empty environment has no parent\r 函數 env_parents()可以找出目前環境物件的所有祖先:這個函數會繼續直到遇上global environment 或是空環境物件。上述過程可以利用last環境物件控制。\nenv_parents(e2b)\r#\u0026gt; [[1]] \u0026lt;env: 0000000015418DF8\u0026gt;\r#\u0026gt; [[2]] $ \u0026lt;env: global\u0026gt;\renv_parents(e2d)\r#\u0026gt; [[1]] \u0026lt;env: 0000000015F16BB0\u0026gt;\r#\u0026gt; [[2]] $ \u0026lt;env: empty\u0026gt;\r 可以利用Use parent.env() 找到環境的parent，但是base中沒有可以找出所有祖先的函數。\r\r\rGetting and setting 存取環境中元素的方法和list類似:使用 $ 和 [[:\ne3 \u0026lt;- env(x = 1, y = 2)\re3$x\r#\u0026gt; [1] 1\re3$z \u0026lt;- 3\re3[[\u0026quot;z\u0026quot;]]\r#\u0026gt; [1] 3\r 但是不能使用 [[ +數字索引,也不能單獨使用 [:\ne3[[1]]\r#\u0026gt; Error in e3[[1]]: 取子集環境時的引數不正確\re3[c(\u0026quot;x\u0026quot;, \u0026quot;y\u0026quot;)]\r#\u0026gt; Error in e3[c(\u0026quot;x\u0026quot;, \u0026quot;y\u0026quot;)]: 'environment' 類型的物件無法具有子集合\r 當環境中的繫結不存在時(簡單點,就是變數不存在時)$ 和 [[ 會傳回 NULL 但不會引發錯誤,如果要有錯誤警告,則利用 env_get() :\ne3$xyz\r#\u0026gt; NULL\renv_get(e3, \u0026quot;xyz\u0026quot;)\r#\u0026gt; Error in env_get(e3, \u0026quot;xyz\u0026quot;): 缺少引數 \u0026quot;default\u0026quot;，也沒有預設值\r 當繫結不存在,但是想要有預設值傳回時,可以利用參數 default .\nenv_get(e3, \u0026quot;xyz\u0026quot;, default = NA)\r#\u0026gt; [1] NA\r 另有兩種方式可以在環境物件加入繫結:\n  env_poke()1 takes a name (as string) and a value:\nenv_poke(e3, \u0026quot;a\u0026quot;, 100)\re3$a\r#\u0026gt; [1] 100\r   env_bind() allows you to bind multiple values:\nenv_bind(e3, a = 10, b = 20)\renv_names(e3)\r#\u0026gt; [1] \u0026quot;x\u0026quot; \u0026quot;y\u0026quot; \u0026quot;z\u0026quot; \u0026quot;a\u0026quot; \u0026quot;b\u0026quot;\r   env_has(): 是否環境中有繫結\nenv_has(e3, \u0026quot;a\u0026quot;)\r#\u0026gt; a #\u0026gt; TRUE\r 不能像是list中刪除元素的方式(指派NULL給元素)，而必須使用 env_unbind():\ne3$a \u0026lt;- NULL\renv_has(e3, \u0026quot;a\u0026quot;)\r#\u0026gt; a #\u0026gt; TRUE\renv_unbind(e3, \u0026quot;a\u0026quot;)\renv_has(e3, \u0026quot;a\u0026quot;)\r#\u0026gt; a #\u0026gt; FALSE\r 從一個物件Unbinding 解除名稱，並不會刪除物件，是否刪除物件是 garbage collector的工作.。可以參考 GC.\nSee get(), assign(), exists(), and rm(). These are designed interactively for use with the current environment, so working with other environments is a little clunky. Also beware the inherits argument: it defaults to TRUE meaning that the base equivalents will inspect the supplied environment and all its ancestors.\r\r\rAdvanced bindings There are two more exotic variants of env_bind():\n  env_bind_exprs() creates delayed bindings, which are evaluated the first time they are accessed. Behind the scenes, delayed bindings create promises, so behave in the same way as function arguments.\nenv_bind_exprs(current_env(), b = {Sys.sleep(1); 1})\r#\u0026gt; Warning: `env_bind_exprs()` is deprecated as of rlang 0.3.0.\r#\u0026gt; Please use `env_bind_lazy()` instead.\r#\u0026gt; This warning is displayed once per session.\rsystem.time(print(b))\r#\u0026gt; [1] 1\r#\u0026gt; 使用者 系統 流逝 #\u0026gt; 0.00 0.00 1.01\rsystem.time(print(b))\r#\u0026gt; [1] 1\r#\u0026gt; 使用者 系統 流逝 #\u0026gt; 0 0 0\r Delayed bindings are used to implement autoload(), which makes R behave as if the package data is in memory, even though it's only loaded from disk when you ask for it.\n  env_bind_fns() creates active bindings which are re-computed every time they're accessed:\nenv_bind_fns(current_env(), z1 = function(val) runif(1)) #\u0026gt; Warning: `env_bind_fns()` is deprecated as of rlang 0.3.0.\r#\u0026gt; Please use `env_bind_active()` instead.\r#\u0026gt; This warning is displayed once per session.\rz1\r#\u0026gt; [1] 0.5319685\rz1\r#\u0026gt; [1] 0.2939102\r The argument to the function allows you to also override behaviour when the variable is set:\nenv_bind_fns(current_env(), z2 = function(val) {\rif (missing(val)) {\r2\r} else {\rstop(\u0026quot;Don't touch z2!\u0026quot;, call. = FALSE)\r}\r})\rz2\r#\u0026gt; [1] 2\rz2 \u0026lt;- 3\r#\u0026gt; Error: Don't touch z2!\r   See ?delayedAssign() and ?makeActiveBinding().\r\r\rExercises  List three ways in which an environment differs from a list. Create an environment as illustrated by this picture.  Create a pair of environments as illustrated by this picture.  Explain why e[[1]] and e[c(\u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;)] don't make sense when e is an environment. Create a version of env_poke() that will only bind new names, never re-bind old names. Some programming languages only do this, and are known as single assignment languages.  Recursing over environments If you want to operate on every ancestor of an environment, it's often convenient to write a recursive function. This section shows you how, applying your new knowledge of environments to write a function that given a name, finds the environment where() that name is defined, using R's regular scoping rules.\nThe definition of where() is straightforward. It has two arguments: the name to look for (as a string), and the environment in which to start the search. (We'll learn why caller_env() is a good default in calling environments.)\nwhere \u0026lt;- function(name, env = caller_env()) {\rif (identical(env, empty_env())) {\r# Base case\rstop(\u0026quot;Can't find \u0026quot;, name, call. = FALSE)\r} else if (env_has(env, name)) {\r# Success case\renv\r} else {\r# Recursive case\rwhere(name, env_parent(env))\r}\r}\r 3個情況:\n The base case: 到達empty environment 沒有parent無法繼續,所以丟出error. The successful case: 在env中找到name ，成功,所以傳回env。. The recursive case: 在env中找不到,繼續在parent中找。.  These three cases are illustrated with these three examples:\nwhere(\u0026quot;yyy\u0026quot;)\r#\u0026gt; Error: Can't find yyy\rx \u0026lt;- 5\rwhere(\u0026quot;x\u0026quot;)\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\rwhere(\u0026quot;mean\u0026quot;)\r#\u0026gt; \u0026lt;environment: base\u0026gt;\r 想像有兩個環境物件(如圖):\ne4a \u0026lt;- env(empty_env(), a = 1, b = 2)\re4b \u0026lt;- env(e4a, x = 10, a = 11)\r   where(a, e4a) will find a in e4a. where(\u0026quot;b\u0026quot;, e4a) doesn't find b in e4a, so it looks in its parent, e4b, and finds it there. where(\u0026quot;c\u0026quot;, e4a) looks in e4a, then e4b, then hits the empty environment and throws an error.  It's natural to work with environments recursively, so where() provides a useful template. Removing the specifics of where() shows the structure more clearly:\nf \u0026lt;- function(..., env = caller_env()) {\rif (identical(env, empty_env())) {\r# base case\r} else if (success) {\r# success case\r} else {\r# recursive case\rf(..., env = env_parent(env))\r}\r}\r Iteration vs recursion 也可以用迭代的方式\nf2 \u0026lt;- function(..., env = caller_env()) {\rwhile (!identical(env, empty_env())) {\rif (success) {\r# success case\rreturn()\r}\r# inspect parent\renv \u0026lt;- env_parent(env)\r}\r# base case\r}\r \r\rExercises   Modify where() to return all environments that contain a binding for name. Carefully think through what type of object the function will need to return.\n  Write a function called fget() that finds only function objects. It should have two arguments, name and env, and should obey the regular scoping rules for functions: if there's an object with a matching name that's not a function, look in the parent. For an added challenge, also add an inherits argument which controls whether the function recurses up the parents or only looks in one environment.\n  Special environments 這裡討論 package environments. 然後探討當函數建立時,綁入函數的函數環境。還有當函數被呼叫時的執行環境(ephemeral)。\n套裝環境主要是看這些環境如何支援namespaces。同時,namespace讓package每次載入的時候,都有一樣的行為,而不售其他packages載入先後的影響。\n套件環境和搜尋路徑 每個套件經由library() 或 require() 接入成為總體環境的parent。而最後一個接入的套件,則是總體環境的第一個parent:\nload 和 attach不一樣，當我們使用require或 library的時候,我們做的是attach 。就是在目前(使用者)環境串列中加入我們利用library載入的物件.\n attaching and .onAttach  thus means that a package is attached to the user space aka the global environment usually this is done via library(pkg) and you can use normal fun() syntax   loading and .onLoad  thus means that package is (in any way) made available to the current R-session (e.g. by loading/attaching another package that depends on it or by using pkg::fun() syntax the first time) though you will not find functions in the global environment you can use pkg::fun()    \r\r例如找出總體環境的parent\nenv_parent(global_env())\r#\u0026gt; \u0026lt;environment: package:rlang\u0026gt;\r#\u0026gt; attr(,\u0026quot;name\u0026quot;)\r#\u0026gt; [1] \u0026quot;package:rlang\u0026quot;\r#\u0026gt; attr(,\u0026quot;path\u0026quot;)\r#\u0026gt; [1] \u0026quot;C:/Users/linchao/Documents/R/win-library/4.1/rlang\u0026quot;\r 找到是最近一次,使用指令library(packageA),裡面這個packageA。以此類推,下面找出在packageA之前的套件環境。\nenv_parent(env_parent(global_env()))\r#\u0026gt; \u0026lt;environment: package:stats\u0026gt;\r#\u0026gt; attr(,\u0026quot;name\u0026quot;)\r#\u0026gt; [1] \u0026quot;package:stats\u0026quot;\r#\u0026gt; attr(,\u0026quot;path\u0026quot;)\r#\u0026gt; [1] \u0026quot;C:/Program Files/R/R-4.1.1/library/stats\u0026quot;\r 如果一層一層parent回朔,就可以到每個套件被接入的順序,這也是R執行中會用到的 search path 因為這些環境的所有物件都可以經由 top-level interactive workspace找到。\nsearch_envs()\r#\u0026gt; [[1]] $ \u0026lt;env: global\u0026gt;\r#\u0026gt; [[2]] $ \u0026lt;env: package:rlang\u0026gt;\r#\u0026gt; [[3]] $ \u0026lt;env: package:stats\u0026gt;\r#\u0026gt; [[4]] $ \u0026lt;env: package:graphics\u0026gt;\r#\u0026gt; [[5]] $ \u0026lt;env: package:grDevices\u0026gt;\r#\u0026gt; [[6]] $ \u0026lt;env: package:utils\u0026gt;\r#\u0026gt; [[7]] $ \u0026lt;env: package:datasets\u0026gt;\r#\u0026gt; [[8]] $ \u0026lt;env: package:methods\u0026gt;\r#\u0026gt; [[9]] $ \u0026lt;env: Autoloads\u0026gt;\r#\u0026gt; [[10]] $ \u0026lt;env: package:base\u0026gt;\r 函數 search()可以找出環境物件的名稱。\r\r\r最後兩個環境物件都一樣:\n  Autoloads 環境物件,利用 delayed bindings來節省記憶體，也就是在需要的時候才載入(loading)package中的物件(例如大型資料集)。\n  base environment, package:base 或簡稱 base, 是base 套裝的環境物件。用來 載入其他套裝(bootstrap)。利用函數 base_env()存取.\n  利用圖型表示:\n 當利用 library() attach其他套件的時候, 總體環境的parent馬上改變:\n The function environment 當函數被建立的時候,現有的環境會被繫結。稱為function environment, 主要用來支援lexical scoping. 在電腦語言中,當函數紀錄它們的運作環境時,我們說這個函數屬於 closures。,這也是為甚麼這個字眼經常在R語言中出現。.\n利用函數 fn_env()可以得到函數的環境物件:\ny \u0026lt;- 1\rf \u0026lt;- function(x) x + y\rfn_env(f)\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\r 一樣利用函數 environment(f) 可以找到函數 f的環境.\r\r\r在圖形中,函數被畫成類似子彈,而彈頭的部分繫結環境。\n 在這個案例中,f()繫結的環境物件,就是繫結名稱f的環境。但並不一定總是這樣，例如在下一個例子中,g被繫結在新環境物件e中。但是函數g()繫結的是global environment。這之間的分別是我們如何找到g和g如何找到他的變數。\ne \u0026lt;- env()\re$g \u0026lt;- function() 1\r  Namespaces 在上面的圖形中,我們已經知道套件的parent會隨著之前套件載入的順序不同而不同。這就導致R程式設計者必須保證個別套件上如果使用別的套件的函數，必須是原始目的的那一個。namespaces 就是為此目的而產生: 每個套件必須的使用必須一致,而不管使用者如何載入套件.\n以 sd()為例子:\nsd\r#\u0026gt; function (x, na.rm = FALSE) #\u0026gt; sqrt(var(if (is.vector(x) || is.factor(x)) x else as.double(x), #\u0026gt; na.rm = na.rm))\r#\u0026gt; \u0026lt;bytecode: 0x000000001c9a2d28\u0026gt;\r#\u0026gt; \u0026lt;environment: namespace:stats\u0026gt;\r sd() 必須使用函數 var(), 因此這個var()到底來自 global environment,還是其他接入(attached)的套件的這種問題必須避免。 R avoids this problem by taking advantage of the function vs. binding environment described above.\n每個套件中的函數和一對環境物件有關:套件環境(之前學到的)還有 namespace 環境物件。\n package environment: 是套件的外部介面，這是R使用者如何在接入的套件中尋找函數的地方(或者可以利用 ::) package enviromnent 的parent 由搜尋路徑決定(可以利用search()知道)決定(也就是載入的順序) namespace environment:是套件的內部介面。package environment 控制我們如何找到函數,而namespace environment控制函數如何找到變數。  在package environment的每個繫結也可以在namespace environment中找到。這樣可以確保每個函數可以使用套件中的其他函數。但是有些繫結只能在namespace 中找到(例如內部或非輸出物件),這種內部物件通常是用來隱藏一些繁瑣的且不需要給使用者看到的細節。;\n 每個namespace environment 有一樣的祖集合:\n 每個namespace有 imports 的環境物件，其中包含了套件中用到的所有函數繫結。而所謂輸入環境實際由套裝開發人員在檔案NAMESPACE指定 明確的輸入每個base函數,很繁瑣,所以R直接設定import enviroment的parent是base *namespae*[^1]。  The base namespace contains the same bindings as the base environment, but it has different parent.\r\r\r base namespace 的parent是總體環境(#global environment).參考下圖,這種設計導致在import environment中找不到繫結時,會開始再總體環境中尋找,而之前提過總體環境通常是互動環境下名稱搜尋的開始路徑,這也導致搜尋的方式受到套件載入順序的影響。因此,R提供了了R CMD check來警告此種情況的發生。(雖然有麻煩,但是由於S3 方法的dispatch 關係,此種方式仍然留著)   綜合上述,可以得到下圖:: \n所以當 sd() 搜尋var 的值的時候,搜尋順序是受到開發者的指定(在檔案NAMESPACE利用import)，而不會受到套裝使用者的影響。這樣保證每次套件程式碼執行的時候,都一樣,而不會受到一般使用者載入套件的順序而影響。\n注意在package和namespace兩種環境之間沒有直接的連結.連結是由函數環境定義。\nExecution environments execution environment. 下面的函數第一次執行的時候會傳回甚麼?第2次呢?\ng \u0026lt;- function(x) {\rif (!env_has(current_env(), \u0026quot;a\u0026quot;)) {\rmessage(\u0026quot;Defining a\u0026quot;)\ra \u0026lt;- 1\r} else {\ra \u0026lt;- a + 1\r}\ra\r}\r 再一次利用下面的調用,確認你的答案:\ng(10)\r#\u0026gt; Defining a\r#\u0026gt; [1] 1\rg(10)\r#\u0026gt; Defining a\r#\u0026gt; [1] 1\rg(11)\r#\u0026gt; Defining a\r#\u0026gt; [1] 1\r 這個函數每次執行都傳回💯一樣的答案,參考 a fresh start. 每次函數被調用的時候,一個新的環境都會被建立來主導執行。這種環境稱為執行環境。而執行環境的parent為 function environment.\n用另一個簡單點的例子說明. (圖中,執行環境的parent間接表示:經由函數環境).\nh \u0026lt;- function(x) {\r# 1.\ra \u0026lt;- 2 # 2.\rx + a\r}\ry \u0026lt;- h(1) # 3.\r  執行環境(execution environment)短暫存在,當函數執行完畢通常會被GC。在幾種情況下,會在記憶體存在比較久,第一種是回傳給另一個變數:\nh2 \u0026lt;- function(x) {\ra \u0026lt;- x * 2\rcurrent_env()\r}\re \u0026lt;- h2(x = 10)\renv_print(e)\r#\u0026gt; \u0026lt;environment: 000000001D3DEF08\u0026gt;\r#\u0026gt; parent: \u0026lt;environment: global\u0026gt;\r#\u0026gt; bindings:\r#\u0026gt; * a: \u0026lt;dbl\u0026gt;\r#\u0026gt; * x: \u0026lt;dbl\u0026gt;\rfn_env(h2)\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\r Another way to capture it is to return an object with a binding to that environment, like a function. The following example illustrates that idea with a function factory, plus(). We use that factory to create a function called plus_one().\nThere's a lot going on in the diagram because the enclosing environment of plus_one() is the execution environment of plus().\nplus \u0026lt;- function(x) {\rfunction(y) x + y\r}\rplus_one \u0026lt;- plus(1)\rplus_one\r#\u0026gt; function(y) x + y\r#\u0026gt; \u0026lt;environment: 0x000000001d7333a0\u0026gt;\r  What happens when we call plus_one()? Its execution environment will have the captured execution environment of plus() as its parent:\nplus_one(2)\r#\u0026gt; [1] 3\r  You'll learn more about function factories in functional programming.\nExercises   How is search_envs() different to env_parents(global_env())?\n  Draw a diagram that shows the enclosing environments of this function:\nf1 \u0026lt;- function(x1) {\rf2 \u0026lt;- function(x2) {\rf3 \u0026lt;- function(x3) {\rx1 + x2 + x3\r}\rf3(3)\r}\rf2(2)\r}\rf1(1)\r   Write an enhanced version of str() that provides more information about functions. Show where the function was found and what environment it was defined in.\n  The call stack 還有另一種環境稱為 caller environment, 可以經由 rlang::caller_env()存取。. This provides the environment from which the function was called, and hence varies based on how the function is called, not how the function was created. As we saw above this is a useful default whenever you write a function that takes an environment as an argument.\nparent.frame() is equivalent to caller_env(); just note that it returns an environment, not a frame.\r\r\rTo fully understand the caller environment we need to discuss two related concepts: the call stack, which is made up of frames. Executing a function creates two types of context. You've learned about one already: the execution environment is a child of the function environment, which is determined by where the function was created. There's another type of context created by where the function was called: this is called the call stack.\nThere are also a couple of small wrinkles when it comes to custom evaluation. See environments vs. frames for more details.\nSimple call stacks Let's illustrate this with a simple sequence of calls: f() calls g() calls h().\nf \u0026lt;- function(x) {\rg(x = 2)\r}\rg \u0026lt;- function(x) {\rh(x = 3)\r}\rh \u0026lt;- function(x) {\rstop()\r}\r The way you most commonly see a call stack in R is by looking at the traceback() after an error has occured:\nf(x = 1)\r#\u0026gt; Error:\rtraceback()\r#\u0026gt; 4: stop()\r#\u0026gt; 3: h(x = 3) #\u0026gt; 2: g(x = 2)\r#\u0026gt; 1: f(x = 1)\r Instead of stop() + traceback() to understand the call stack, we're going to use lobstr::cst() to print out the call stack tree:\nh \u0026lt;- function(x) {\rlobstr::cst()\r}\rf(x = 1)\r#\u0026gt; ???\r#\u0026gt; ???f(x = 1)\r#\u0026gt; ???g(x = 2)\r#\u0026gt; ???h(x = 3)\r#\u0026gt; ???lobstr::cst()\r This shows us that cst() was called from h(), which was called from g(), which was called from f(). Note that the order is the opposite from traceback(). As the call stacks get more compliated, I think it's easier to understand the sequence of calls if you start from the beginning, rather than the end (i.e. f() calls g(); rather than g() was called by f()).\nLazy evaluation The call stack above is simple - while you get a hint that there's some tree-like structure involved, everything happens on a single branch. This is typical of a call stack when all arguments are eagerly evaluated.\nLet's create a more complicated example that involves some lazy evaluation. We'll create a sequence of functions, a(), b(), c(), that pass along an argument x.\na \u0026lt;- function(x) b(x)\rb \u0026lt;- function(x) c(x)\rc \u0026lt;- function(x) x\ra(f())\r#\u0026gt; ???\r#\u0026gt; ???a(f())\r#\u0026gt; ??? ???b(x)\r#\u0026gt; ??? ???c(x)\r#\u0026gt; ???f()\r#\u0026gt; ???g(x = 2)\r#\u0026gt; ???h(x = 3)\r#\u0026gt; ???lobstr::cst()\r x is lazily evaluated so this tree gets two branches. In the first branch a() calls b(), then b() calls c(). The second branch starts when c() evaluates its argument x. This argument is evaluated in a new branch because the environment in which it is evaluated is the global environment, not the environment of c().\nFrames Each element of the call stack is a frame2, also known as an evaluation context. The frame is an extremely important internal data structure, and R code can only access a small part of the data structure because it's so critical. A frame has three main components that are accessible from R:\n  An expression (labelled with expr) giving the function call. This is what traceback() prints out.\n  An environment (labelled with env), which is typically the execution environment of a function. There are two main exceptions: the environment of the global frame is the global environment, and calling eval() also generates frames, where the environment can be anything.\n  A parent, the previous call in the call stack (shown by a grey arrow).\n   (To focus on the calling environments, I have omitted the bindings in the global environment from f, g, and h to the respective function objects.)\nThe frame also holds exit handlers created with on.exit(), restarts and handlers for the condition system, and which context to return() to when a function completes. These are important for the internal operation of R, but are not directly accessible.\nDynamic scope Looking up variables in the calling stack rather than in the enclosing environment is called dynamic scoping. Few languages implement dynamic scoping (Emacs Lisp is a notable exception.) This is because dynamic scoping makes it much harder to reason about how a function operates: not only do you need to know how it was defined, you also need to know the context in which it was called. Dynamic scoping is primarily useful for developing functions that aid interactive data analysis. It is one of the topics discussed in non-standard evaluation.\nExercises  Write a function that lists all the variables defined in the environment in which it was called. It should return the same results as ls().  As data structures As well as powering scoping, environments are also useful data structures in their own right because they have reference semantics. There are three common problems that they can help solve:\n  Avoiding copies of large data. Since environments have reference semantics, you'll never accidentally create a copy. This makes it a useful vessel for large objects. Bare environments are not that pleasant to work with; I recommend using R6 objects instead. Learn more in [R6].\n  Managing state within a package. Explicit environments are useful in packages because they allow you to maintain state across function calls. Normally, objects in a package are locked, so you can't modify them directly. Instead, you can do something like this:\nmy_env \u0026lt;- new.env(parent = emptyenv())\rmy_env$a \u0026lt;- 1\rget_a \u0026lt;- function() {\rmy_env$a\r}\rset_a \u0026lt;- function(value) {\rold \u0026lt;- my_env$a\rmy_env$a \u0026lt;- value\rinvisible(old)\r}\r Returning the old value from setter functions is a good pattern because it makes it easier to reset the previous value in conjunction with on.exit() (see more in on exit).\n  As a hashmap. A hashmap is a data structure that takes constant, O(1), time to find an object based on its name. Environments provide this behaviour by default, so can be used to simulate a hashmap. See the CRAN package hash for a complete development of this idea.\n  \u0026lt;\u0026lt;- The ancestors of an environment have an important relationship to \u0026lt;\u0026lt;-. The regular assignment arrow, \u0026lt;-, always creates a variable in the current environment. The deep assignment arrow, \u0026lt;\u0026lt;-, never creates a variable in the current environment, but instead modifies an existing variable found by walking up the parent environments.\nx \u0026lt;- 0\rf \u0026lt;- function() {\rx \u0026lt;\u0026lt;- 1\r}\rf()\rx\r#\u0026gt; [1] 1\r If \u0026lt;\u0026lt;- doesn't find an existing variable, it will create one in the global environment. This is usually undesirable, because global variables introduce non-obvious dependencies between functions. \u0026lt;\u0026lt;- is most often used in conjunction with a closure, as described in Closures.\nExercises   What does this function do? How does it differ from \u0026lt;\u0026lt;- and why might you prefer it?\nrebind \u0026lt;- function(name, value, env = caller_env()) {\rif (identical(env, empty_env())) {\rstop(\u0026quot;Can't find `\u0026quot;, name, \u0026quot;`\u0026quot;, call. = FALSE)\r} else if (env_has(env, name)) {\renv_poke(env, name, value)\r} else {\rrebind(name, value, env_parent(env))\r}\r}\rrebind(\u0026quot;a\u0026quot;, 10)\r#\u0026gt; Error: Can't find `a`\ra \u0026lt;- 5\rrebind(\u0026quot;a\u0026quot;, 10)\ra\r#\u0026gt; [1] 10\r   Quiz answers   There are four ways: every object in an environment must have a name; order doesn't matter; environments have parents; environments have reference semantics.\n  The parent of the global environment is the last package that you loaded. The only environment that doesn't have a parent is the empty environment.\n  The enclosing environment of a function is the environment where it was created. It determines where a function looks for variables.\n  Use caller_env() or parent.frame().\n  \u0026lt;- always creates a binding in the current environment; \u0026lt;\u0026lt;- rebinds an existing name in a parent of the current environment.\n  term global environment :總體環境 package environments imports environment   You might wonder why rlang has env_poke() instead of env_set(). This is for consistency: _set() functions return a modified copy; _poke() functions modify in place.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n NB: ?environment uses frame in a different sense: \u0026quot;Environments consist of a frame, or collection of named objects, and a pointer to an enclosing environment.\u0026quot;. We avoid this sense of frame, which comes from S, because it's very specific and not widely used in base R. For example, the \u0026quot;frame\u0026quot; in parent.frame() is an execution context, not a collection of named objects.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  "},
{"uri": "/blogR//rlang/2_0_%E8%BC%B8%E5%87%BA%E8%BC%B8%E5%85%A5.html","title": "2.0 基本輸出輸入",
	"tags": ["字串"],
	"description": "2_0_輸出輸入",
	"content": "R的基本的輸出函數 大概有這幾種：\n print() cat() message() warning() stop()  前兩個輸出到標準輸出裝置(standard output)，後三個會顯示在標準錯誤裝置上(standard error)。 如果不想要顯示訊息,\n 是stderr 類的輸出函數,可以利用 suppressWarnings(), suppressMessages(), suppressPackageStartupMessages()。 stdin 類則使用 sink() or capture.output()  另外有關Rmarkdown: knitr 提供的選項,像是 error = F, message = F, and warning = F.\n函數說明   print() - 無法連結字串，會帶有[1]，例如：\nprint(paste(\u0026quot;Hello\u0026quot;,\u0026quot;World!\u0026quot;))\r[1] \u0026quot;Hello World!\u0026quot;\r   cat() 帶有類似paste()的參數，sep=\u0026quot; \u0026quot;，所以連結字串比較方便，但是必須自行寫換行符號\\n。\ncat(\u0026quot;Hello!\\n\u0026quot;)\r#\u0026gt; Hello!\r#\u0026gt; # 🏷👏這是空白行,動應字串中的最後一個\\n1 cat(\u0026quot;Hello\u0026quot;,\u0026quot;World!\\n\u0026quot;) # 🏷👏意思是說碰到\\n就換行\r#\u0026gt; Hello World!\r#\u0026gt; cat(\u0026quot;Hello\u0026quot;,\u0026quot;World!\\n\u0026quot;, sep = \u0026quot;\u0026quot;)\r#\u0026gt; HelloWorld! # # 🏷👏全部擠在一起,而且\\n無用\r   message() 帶紅字的輸出，基本上是到標準錯誤裝置。\nmessage(\u0026quot;Hello \u0026quot;,\u0026quot;World!\u0026quot;) # Note the space after Hello\r#\u0026gt; \u0026quot;Hello World!\u0026quot;\r  更方便的是能用來配合tryCatch()e.g. tryCatch(message(\u0026quot;hello\\n\u0026quot;), message=function(e){cat(\u0026quot;goodbye\\n\u0026quot;)})\r#\u0026gt; goodbye\r     warning() : 我們自訂的函數檢查到參數(可能是類別)可能導致語意錯誤的訊息。\n  stop(): 錯誤訊息，再繼續計算也是錯的。\n  另外,在套件開發中的函數,可以盡量少用print()。如果要輸出的函數屬於S3物件的print.*(),那麼就使用cat(),其他狀況則使用message()。warning(),stop()\n基本輸入和輸出  print() cat() sprintf()  a\u0026lt;-\u0026quot;hello\\nR\u0026quot; # 🏷👏也可以是單引號'hello\\n'\rprint(a) # 也可以不用先指派變數,而直接 print(\u0026quot;hello\u0026quot;)\r#\u0026gt; [1] \u0026quot;hello\\nR\u0026quot;\rcat(a)\r#\u0026gt; hello\r#\u0026gt; R\r print(),cat()雖然在上面的例子看起來一樣。但是初學者推薦使用print()。\n cat() 認識字串中的換行符號\\n, print() 不認識 如果有多個字串,使用cat()的時候,可以設定cat(..., sep=\u0026quot;\\n\u0026quot;)。  \r補充\rcat()通常是在檔案處理的時候。在C類的語言中,鍵盤和螢幕都屬於檔案-特殊檔案,一種只能讀出,一種只能寫入,抽象觀念的描述是串流。 使用範例如下:\nsink(\u0026quot;foobar.txt\u0026quot;) # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;從這個指令開始,所有流向螢幕的輸出都輸出到檔案foobar.txt\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rcat('\u0026quot;foo\u0026quot;\\n')\rcat('\u0026quot;bar\u0026quot;')\rsink() #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;結束\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r 檔案內容是:\n\u0026quot;foo\u0026quot;\r\u0026quot;bar\u0026quot;\r  一行指令完成上述程式碼 cat('\u0026quot;foo\u0026quot;', '\u0026quot;bar\u0026quot;', file=\u0026quot;foobar.txt\u0026quot;, sep=\u0026quot;\\n\u0026quot;)\r  如果檔案已經存在,還要添加,那麼就加上參數append=T cat('\u0026quot;foo\u0026quot;', file=\u0026quot;foobar.txt\u0026quot;, append=TRUE)\rcat('\u0026quot;bar\u0026quot;', file=\u0026quot;foobar.txt\u0026quot;, append=TRUE)\r   "},
{"uri": "/blogR//rlang/2_1_%E8%AE%80%E6%AA%94%E5%AF%AB%E6%AA%94.html","title": "2.1 讀檔寫檔",
	"tags": [],
	"description": "讀檔寫檔",
	"content": "實驗材料 \r📝附件:練習文字檔\r\r可以用來練習的文字檔\r\rJournals.csv\r\rsample1.csv\r\rsample2.csv\r\rsample3.csv\r\rsimple.csv\r\rsmoker.csv\r\rtrees91.csv\r\rwh.csv\r\rwh_zh_950.csv\r\rwh_zh_utf8.csv\r\r\r R語言的檔案格式  name.rdb: a concatenation of serialized objects. name.rdx: file contains an index. name.rds the serialized R objects written by saveRDS name.rda(RData): 二進位R資料檔。(用load(name)載入)  如果不考慮存檔格式，那麼可以利用 save(v1,v2,...file=\u0026quot;myfile.RData\u0026quot;)\r...\rload(file=\u0026quot;myfie.RData\u0026quot;)\r     範例\nx=3 #🏷我要暫時把這個結果x=3存檔,進行其他資料處理\r#.....do task\rsave(x,file=\u0026quot;xx\u0026quot;) # 🏷❓問題:存到哪?\rdir(getwd()) # 🏷包括目錄(list.dir())和檔案(list.files())\r#\u0026gt; [1] \u0026quot;desktop.ini\u0026quot; \u0026quot;foobar.txt\u0026quot; \u0026quot;My Music\u0026quot; \u0026quot;My Pictures\u0026quot;\r#\u0026gt; [5] \u0026quot;My Videos\u0026quot; \u0026quot;R\u0026quot; \u0026quot;xx\u0026quot; x=5 #🏷看看等下從檔案載入進來的時候,會不會是原來的3\rload(\u0026quot;xx\u0026quot;)\rx\r#\u0026gt; [1] 3\r 使用者指定了一個檔案夾,如何判定它是否存在,考慮以下幾點\n 在當前的工作子目錄中尋找 利用函數error()給錯誤訊息  提示\r 💡 解答\nuserfolder\u0026lt;-??(使用者指定)\rallfolder\u0026lt;-list.dir() # 內定是getwd()\rokfolder\u0026lt;-allfolder[dir.exists(userfolder)]\r如果okfolder 長度是0,則error()\r \n低階開檔/關檔過程 大體上每個語言的開檔和關檔案的過程，都會利用到作業系統，因此會有開檔動作，從作業系統得到一個數字，這裡稱為檔案指標，然後利用這個指標，讀入文字或寫入文字，然後有一個關閉檔案的動作告訴作業系統，處理檔案結束。\n在R語言中，開檔不是open(),而是file：\ncon = file(filepath, \u0026quot;r\u0026quot;)\r開始讀寫操作\rclose(con)\r 迴圈一行一行讀入並寫到螢幕上\nprocessFile = function(filepath) {\rcon = file(filepath, \u0026quot;r\u0026quot;)\rwhile ( TRUE ) {\rline = readLines(con, n = 1) # 🏷n=1 每次讀入一行\rif ( length(line) == 0 ) {\rbreak\r}\rprint(line)\r}\rclose(con)\r}\r 後面章節不使用上面的低階方法,而是使用R提供的函數\n讀寫檔案的的常用函數  指令   readLines(logf, encoding=\u0026quot;UTF-8\u0026quot;) \rreadLines()的範例\r```r\rdir(system.file())\r#\u0026gt; [1] \u0026quot;CITATION\u0026quot; \u0026quot;demo\u0026quot; \u0026quot;DESCRIPTION\u0026quot;⛳ \u0026quot;help\u0026quot; #\u0026gt; [5] \u0026quot;html\u0026quot; \u0026quot;INDEX\u0026quot; \u0026quot;Meta\u0026quot; \u0026quot;R\u0026quot; res \u0026lt;- readLines(system.file(\u0026quot;DESCRIPTION\u0026quot;, package=\u0026quot;MASS\u0026quot;)) \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏甚麼是DESCRIPTION? 看上面的dir(system.file()) 輸出\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rstr(res)\r```\r \n  writeLines(字串, 檔案名稱, useBytes=T)\n    ⭕準備材料:先看一下目標檔案內容 \r展開\r測試的檔案\n# this is a test file\rheight,weight,sex\r156,56, m\r167,., f #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏weight有一點\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r189,70, m\r180,, f #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏weight是空的\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r 另一個測試檔案(內有中文)\n 指令,file.show(\u0026quot;resources/wh.csv\u0026quot;),會在R的打開另一個視窗。 也可以利用殼層指令:  system(\u0026quot;cat resources/wh.csv\u0026quot;)，但是如果內容是中文,顯示結果會變成亂碼。    上面兩種方法,可能會覺得有點多餘,因為在視窗介面中,直接按兩下就可以打該檔案。這裡只是提一下如何和外部指令勾連。\n\n注意檔案內容第一行不是資料,而是欄位。\n測試readChar()過程的紀錄   測試readChar() (有時候檔案很大,一般的編輯器打不開但是又不知道是甚麼格式，除了上面提到的readLines()，也可以使用可以指定讀入長度的指令readChar())\ncat(readChar(\u0026quot;resources/wh.csv\u0026quot;, 1e5)) #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏1e5指定最大長度,可以不要有\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; Warning in readChar(\u0026quot;resources/wh.csv\u0026quot;, 1e+05): 在非 UTF-8 MBCS 語區中只能以位元\r#\u0026gt; 組為單位讀取\r#\u0026gt; # this is a test file\r#\u0026gt; height,weight,sex\r#\u0026gt; 156,56, m\r#\u0026gt; 167,., f\r#\u0026gt; 189,70, m\r#\u0026gt; 180,, f\r   利用useBytes 不會出現警告\ncat(readChar(\u0026quot;resources/wh_zh_utf8.csv\u0026quot;, useBytes=TRUE,1e5)) #\u0026gt; Error in cat(readChar(\u0026quot;resources/wh_zh_utf8.csv\u0026quot;, useBytes = TRUE, 1e+05)): 無效的多位元組字串於 '\u0026lt;e9\u0026gt;\u0026lt;99\u0026gt;\u0026lt;e6\u0026gt;皜祈岫瑼\u0026lt;94\u0026gt;\r#\u0026gt; 頨恍\u0026lt;ab\u0026gt;\u0026lt;98\u0026gt;,擃\u0026lt;87\u0026gt;\u0026lt;8d\u0026gt;,\u0026lt;e6\u0026gt;批\r#\u0026gt; 156,56,\u0026lt;e7\u0026gt;\r#\u0026gt; 167,66,憟\u0026lt;b3\u0026gt;\r#\u0026gt; 189,70,\u0026lt;e7\u0026gt;\r#\u0026gt; 180,,憟\u0026lt;b3\u0026gt;\r#\u0026gt; '\rcat(readChar(\u0026quot;resources/wh_zh_utf8.csv\u0026quot;, useBytes=TRUE,1e5),sep=\u0026quot;\\r\\n\u0026quot;)\r#\u0026gt; Error in cat(readChar(\u0026quot;resources/wh_zh_utf8.csv\u0026quot;, useBytes = TRUE, 1e+05), : 無效的多位元組字串於 '\u0026lt;e9\u0026gt;\u0026lt;99\u0026gt;\u0026lt;e6\u0026gt;皜祈岫瑼\u0026lt;94\u0026gt;\r#\u0026gt; 頨恍\u0026lt;ab\u0026gt;\u0026lt;98\u0026gt;,擃\u0026lt;87\u0026gt;\u0026lt;8d\u0026gt;,\u0026lt;e6\u0026gt;批\r#\u0026gt; 156,56,\u0026lt;e7\u0026gt;\r#\u0026gt; 167,66,憟\u0026lt;b3\u0026gt;\r#\u0026gt; 189,70,\u0026lt;e7\u0026gt;\r#\u0026gt; 180,,憟\u0026lt;b3\u0026gt;\r#\u0026gt; '\r   ❌參數有useBytes,但是不管TRUE/FALSE，都是中文亂碼\n  ✔正解:\nx\u0026lt;-readChar(\u0026quot;resources/wh_zh_utf8.csv\u0026quot;, useBytes=TRUE,1e5)\rEncoding(x)\r#\u0026gt; [1] \u0026quot;unknown\u0026quot;\rEncoding(x)\u0026lt;-\u0026quot;UTF-8\u0026quot; #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏因為WIN10用的是系統的編碼,也就是native.lang,反正就是Encoding(x)的結果是unknown\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rcat(x)\r#\u0026gt; #這是測試檔\r#\u0026gt; 身高,體重,性別\r#\u0026gt; 156,56,男\r#\u0026gt; 167,66,女\r#\u0026gt; 189,70,男\r#\u0026gt; 180,,女\r   如果要轉碼: ❓iconv(x,\u0026quot;UTF-8\u0026quot;,\u0026quot;zh_TW\u0026quot;)\n  \r\r讀入資料集 先介紹內建函數read.csv()\nread.csv()讀入data.frame\nread.csv(\u0026quot;filename.csv\u0026quot;, #name of file\rheader = TRUE, #are there column names in 1st row?\rsep = \u0026quot;,\u0026quot;, #what separates rows?\ras.is = !stringsAsFactors, #👍關掉字元轉factor\rcolClasses = NA #to convert everything to character data set to \u0026quot;character\u0026quot;\rna.string = \u0026quot;NA\u0026quot; #could be \u0026quot;.\u0026quot; for SAS files\rskip = 0, #要跳過的前幾行數目\u0026gt;0\rstrip.white = TRUE, #擠掉空白,例如 \u0026quot; 0.1\u0026quot; = \u0026quot;0.1\u0026quot;\rfill = TRUE, #fill in rows that have unequal numbers of columns\rcomment.char = \u0026quot;#\u0026quot;, #註解不讀入\rstringsAsFactors = FALSE #比as.is 常用,關掉字元轉factor\r)\r 測試read.csv()   read.csv()最簡單的用法是直接給檔案名稱,例如\nrst = read.csv('resources/wh.csv')\r 🐞但是wh.csv 前面有幾行是註解\ncat(readLines('resources/wh.csv',n=3),sep=\u0026quot;\\n\u0026quot;) #\u0026gt; # this is a test file\r#\u0026gt; height,weight,sex\r#\u0026gt; 156,56, m\r##❓可不可以把上面的cat寫成函數type()?\r# 提示\r\r#type\u0026lt;-function(path,n=-1L) { # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏為甚麼知道用-1L,看函數readLine的內容\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rcat(readLines(path,n=n),sep=\u0026quot;\\n\u0026quot;)\r}\rtype('resources/wh.csv',3)\r#\u0026gt; # this is a test file\r#\u0026gt; height,weight,sex\r#\u0026gt; 156,56, m\r# \r   因此加上skip 參數\nrst = read.csv('resources/wh.csv',skip=1) #🏷👏第一行是欄位名稱不是資料,因此指定跳過第一行skip=1\rhead(rst)\r \rheight weight sex   156 56 m  167 . f  189 70 m  180  f     👍也可以利用參數comment.char\nrst = read.csv('resources/wh.csv',comment.char=\u0026quot;#\u0026quot;)\rhead(rst)\r height weight sex   156 56 m  167 . f  189 70 m  180  f       但是注意到weight這個欄位被轉為字串,因為有一個 \u0026quot;.\u0026quot; 。有些套裝軟體的CSV輸出將NA轉為\u0026quot;.\u0026quot;,因此\nrst = read.csv('resources/wh.csv',comment.char=\u0026quot;#\u0026quot;,na.string='.')\rhead(rst)\r height weight sex   156 56 m  167 NA f  189 70 m  180 NA f       最後練習寫出檔案\nrst = read.csv('resources/wh.csv',comment.char=\u0026quot;#\u0026quot;,na.string='.')\rwrite.csv(rst, file = \u0026quot;MyData.csv\u0026quot;,row.names=FALSE, quote=F) # 🏷👏練習寫出檔案\rcat(readLines('MyData.csv'), sep = '\\n') # 🏷內建 readLine()\r#\u0026gt; height,weight,sex\r#\u0026gt; 156,56, m\r#\u0026gt; 167,NA, f\r#\u0026gt; 189,70, m\r#\u0026gt; 180,NA, f\rtype('MyData.csv')\r#\u0026gt; height,weight,sex\r#\u0026gt; 156,56, m\r#\u0026gt; 167,NA, f\r#\u0026gt; 189,70, m\r#\u0026gt; 180,NA, f\rcat(readr::read_file(\u0026quot;MyData.csv\u0026quot;)) # 🏷利用套件readr\r#\u0026gt; height,weight,sex\r#\u0026gt; 156,56, m\r#\u0026gt; 167,NA, f\r#\u0026gt; 189,70, m\r#\u0026gt; 180,NA, f\r   測試write.csv() 接續上節最後一個步驟,看看write.csv()寫出甚麼東西(這次寫到暫存檔)?\n#🏷👏附件\rrst = read.csv('resources/wh.csv',comment.char=\u0026quot;#\u0026quot;,na.string='.') # 🏷👏class(rst) = data.frame;\rfn\u0026lt;-tempfile(\u0026quot;tempData\u0026quot;) #🏷👏tempfile()會得到暫存檔案名稱\rfn #🏷👏包括路徑和名稱,沒有副檔名\r#\u0026gt; [1] \u0026quot;C:\\\\Users\\\\linchao\\\\AppData\\\\Local\\\\Temp\\\\RtmpQn5EuB\\\\tempData86243cbb54fd\u0026quot;\rwrite.csv(rst, file = fn)\rlines\u0026lt;-readLines(fn,n=3) # 🏷👏只讀入前3行\rlines\r#\u0026gt; [1] \u0026quot;\\\u0026quot;\\\u0026quot;,\\\u0026quot;height\\\u0026quot;,\\\u0026quot;weight\\\u0026quot;,\\\u0026quot;sex\\\u0026quot;\u0026quot; \u0026quot;\\\u0026quot;1\\\u0026quot;,156,56,\\\u0026quot; m\\\u0026quot;\u0026quot; #\u0026gt; [3] \u0026quot;\\\u0026quot;2\\\u0026quot;,167,NA,\\\u0026quot; f\\\u0026quot;\u0026quot;\r ❓問題:上例中的輸出為甚麼沒有換行?提示\r #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏比較上面只有readLines()的輸出\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rcat(readLines(fn,n=3),sep=\u0026quot;\\n\u0026quot;) # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏沒有sep參數,例如\u0026lt;code\u0026gt;cat(readLines(fn,n=3))\u0026lt;/code\u0026gt;也不換行\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; \u0026quot;\u0026quot;,\u0026quot;height\u0026quot;,\u0026quot;weight\u0026quot;,\u0026quot;sex\u0026quot; #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏注意,原來有3個欄位,但是現在這裡有4個欄位,第一個是空的,因為它是row names\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; \u0026quot;1\u0026quot;,156,56,\u0026quot; m\u0026quot;\r#\u0026gt; \u0026quot;2\u0026quot;,167,NA,\u0026quot; f\u0026quot;\r \n  上例中的write.csv(),輸出結果,包含了沒意義的橫行名稱(就編號數字而已)。\n  如果不要寫進csv,可以利用參數 row.names=FALSE。\nrst = read.csv('resources/wh.csv',comment.char=\u0026quot;#\u0026quot;,na.string='.')\rwrite.csv(rst, file = \u0026quot;MyData.csv\u0026quot;,row.names=FALSE) #🏷👏row.names=F不想要輸出無意義的橫行名稱\rreadLines(\u0026quot;MyData.csv\u0026quot;,n=3) #\u0026gt; [1] \u0026quot;\\\u0026quot;height\\\u0026quot;,\\\u0026quot;weight\\\u0026quot;,\\\u0026quot;sex\\\u0026quot;\u0026quot; \u0026quot;156,56,\\\u0026quot; m\\\u0026quot;\u0026quot; #\u0026gt; [3] \u0026quot;167,NA,\\\u0026quot; f\\\u0026quot;\u0026quot;\rcat(readLines(\u0026quot;MyData.csv\u0026quot;,n=3),sep=\u0026quot;\\n\u0026quot;) #\u0026gt; \u0026quot;height\u0026quot;,\u0026quot;weight\u0026quot;,\u0026quot;sex\u0026quot;\r#\u0026gt; 156,56,\u0026quot; m\u0026quot;\r#\u0026gt; 167,NA,\u0026quot; f\u0026quot;\rtype(\u0026quot;MyData.csv\u0026quot;,n=3)\r#\u0026gt; \u0026quot;height\u0026quot;,\u0026quot;weight\u0026quot;,\u0026quot;sex\u0026quot;\r#\u0026gt; 156,56,\u0026quot; m\u0026quot;\r#\u0026gt; 167,NA,\u0026quot; f\u0026quot;\r \r對照原來的文字檔\rmyData.csv\r```r\r\u0026quot;height\u0026quot;,\u0026quot;weight\u0026quot;,\u0026quot;sex\u0026quot; 156,56,\u0026quot; m\u0026quot; 167,NA,\u0026quot; f\u0026quot; 189,70,\u0026quot; m\u0026quot; 180,NA,\u0026quot; f\u0026quot; ```\r原來的文字檔\r```r\r# this is a test file\rheight,weight,sex\r156,56, m\r167,., f #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏weight有一點\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r189,70, m\r180,, f #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏weight是空的\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r```\r❓對照一下上面sex欄位,可以看見`, m` 利用`read.csv` 讀入時,變成\u0026quot; m\u0026quot;     如果輸出時,字串不要雙引號,則可以用quote=FALSE\nrst = read.csv('resources/wh.csv',comment.char=\u0026quot;#\u0026quot;,na.string='.')\rwrite.csv(rst, file = \u0026quot;MyData.csv\u0026quot;,row.names=FALSE, quote=F) # 🏷開關quote=F\rcat(readLines('MyData.csv'), sep = '\\n')\r   資料中有空白CELL,如果要指定NA的值,可以利用欄位=\u0026quot;\u0026quot;,否則預定是NA\nrst = read.csv('resources/wh.csv',comment.char=\u0026quot;#\u0026quot;,na.string='.')\rwrite.csv(rst, file = \u0026quot;MyData.csv\u0026quot;,row.names=FALSE, na=\u0026quot;\u0026quot;) # 🏷輸出的文件中,這欄是空的\rcat(readLines(\u0026quot;MyData.csv\u0026quot;), sep = '\\n')\r   more 如果要更多的輸出控制可以參考可以write.table().\n函數write.csv(),實際上會再呼叫write.table()函數。\n例如,欄位名稱也不要輸出的話,可以利用write.table()，要設定的參數如下:\n sep=\u0026quot;,\u0026quot; :設定欄位的分隔字元 col.names=FALSE : 不要欄位名稱。 write.table(rst, file = \u0026quot;MyData.csv\u0026quot;,row.names=FALSE, na=\u0026quot;\u0026quot;,col.names=FALSE, sep=\u0026quot;,\u0026quot;)\rcat(readLines('MyData.csv'), sep = '\\n')\r  "},
{"uri": "/blogR//rlang/2_2_data_explorer.html","title": "2.2 資料探索",
	"tags": ["t-test"],
	"description": "資料探索",
	"content": "常用函數  Mean Median Quartile Percentile Range Interquartile Range Box Plot Variance Standard Deviation Covariance Correlation Coefficient Central Moment Skewness : 套件 moments Kurtosis : 套件 moments  mean(mtcars$mpg)\r#\u0026gt; [1] 20.09062\rmedian(mtcars$mpg)\r#\u0026gt; [1] 19.2\rmin(mtcars$mpg)\r#\u0026gt; [1] 10.4\rmax(mtcars$mpg)\r#\u0026gt; [1] 33.9\rquantile(mtcars$mpg)\r#\u0026gt; 0% 25% 50% 75% 100% #\u0026gt; 10.400 15.425 19.200 22.800 33.900\rquantile(mtcars$mpg,c(0.2))\r#\u0026gt; 20% #\u0026gt; 15.2\rif(!require(moments))\rinstall.packages(\u0026quot;moment\u0026quot;)\r#\u0026gt; 載入需要的套件：moments\rskewness(mtcars$mpg)\r#\u0026gt; [1] 0.6404399\rkurtosis(mtcars$mpg)\r#\u0026gt; [1] 2.799467\r x \u0026lt;- rnorm(100)\rquantile(x, probs = c(0, 0.25, 0.5, 0.75, 1)) # quantile of 0% 25% 50% ..\r#\u0026gt; 0% 25% 50% 75% 100% #\u0026gt; -2.98699656 -0.49087057 0.08812317 0.79885838 2.03939058\r quantile(x, probs = seq(0, 1, by= 0.01)) # decile ecdf(x)\n問題：ecdf()的結果和quantile()的結果是否一樣？ ## 匯入其他格式的資料\r安裝package : `foreign`，以`stata` 為例(利用其中的函數`read.dta()`)： ```r?lang=r?class=.source?preclass=ms-5.w-75\rif (!file.exists('resources/ceosal1.RData')){\rceosal1\u0026lt;-read.dta(\u0026quot;http://fmwww.bc.edu/ec-p/data/wooldridge/ceosal1.dta\u0026quot;)\rsave(ceosal1, file='resources/ceosal1.RData')\r}\r 來自wooldridge 的資料集 資料 affairs\nload('resources/affairs.RData')\r# 原始資料kid是整數，加入標籤成為factor haskids \u0026lt;- factor(affairs$kids,labels=c(\u0026quot;no\u0026quot;,\u0026quot;yes\u0026quot;))\rmlab \u0026lt;- c(\u0026quot;very unhappy\u0026quot;,\u0026quot;unhappy\u0026quot;,\u0026quot;average\u0026quot;,\u0026quot;happy\u0026quot;, \u0026quot;very happy\u0026quot;)\rmarriage \u0026lt;- factor(affairs$ratemarr, labels=mlab)\r# Frequencies for having kids:\rtable(haskids)\r#\u0026gt; haskids\r#\u0026gt; no yes #\u0026gt; 171 430\r# Marriage ratings (share):\rprop.table(table(marriage))\r#\u0026gt; marriage\r#\u0026gt; very unhappy unhappy average happy very happy #\u0026gt; 0.0266223 0.1098170 0.1547421 0.3227953 0.3860233\r# Contigency table: counts (display \u0026amp; store in var.)\r(countstab \u0026lt;- table(marriage,haskids))\r#\u0026gt; haskids\r#\u0026gt; marriage no yes\r#\u0026gt; very unhappy 3 13\r#\u0026gt; unhappy 8 58\r#\u0026gt; average 24 69\r#\u0026gt; happy 40 154\r#\u0026gt; very happy 96 136\r# Share within \u0026quot;marriage\u0026quot; (i.e. within a row):\rprop.table(countstab, margin=1)\r#\u0026gt; haskids\r#\u0026gt; marriage no yes\r#\u0026gt; very unhappy 0.1875000 0.8125000\r#\u0026gt; unhappy 0.1212121 0.8787879\r#\u0026gt; average 0.2580645 0.7419355\r#\u0026gt; happy 0.2061856 0.7938144\r#\u0026gt; very happy 0.4137931 0.5862069\r# Share within \u0026quot;haskids\u0026quot; (i.e. within a column):\rprop.table(countstab, margin=2)\r#\u0026gt; haskids\r#\u0026gt; marriage no yes\r#\u0026gt; very unhappy 0.01754386 0.03023256\r#\u0026gt; unhappy 0.04678363 0.13488372\r#\u0026gt; average 0.14035088 0.16046512\r#\u0026gt; happy 0.23391813 0.35813953\r#\u0026gt; very happy 0.56140351 0.31627907\r 如果不知道函數prop.table()\n看一下資料結構\nstr(x\u0026lt;-table(haskids))\r#\u0026gt; 'table' int [1:2(1d)] 171 430\r#\u0026gt; - attr(*, \u0026quot;dimnames\u0026quot;)=List of 1\r#\u0026gt; ..$ haskids: chr [1:2] \u0026quot;no\u0026quot; \u0026quot;yes\u0026quot;\r 上面的結構顯示，\n int [1:2(1d)] 171 430 : 整數向量，長度由1到2，是個1維向量。元素1到2的內容分別是171,430。 可以由dimnames(x)得到一個list,裡面只有一個元素，這個元素又是一個char list(長度為2)。\n因此可以試試看  x/sum(x)\r#\u0026gt; haskids\r#\u0026gt; no yes #\u0026gt; 0.2845258 0.7154742\r 結果應該和prop.table()一樣。\n那麼2 way 呢？ 也是先看結構：\nstr(countstab \u0026lt;- table(marriage,haskids))\r#\u0026gt; 'table' int [1:5, 1:2] 3 8 24 40 96 13 58 69 154 136\r#\u0026gt; - attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r#\u0026gt; ..$ marriage: chr [1:5] \u0026quot;very unhappy\u0026quot; \u0026quot;unhappy\u0026quot; \u0026quot;average\u0026quot; \u0026quot;happy\u0026quot; ...\r#\u0026gt; ..$ haskids : chr [1:2] \u0026quot;no\u0026quot; \u0026quot;yes\u0026quot;\rcountstab/rowSums(countstab)\r#\u0026gt; haskids\r#\u0026gt; marriage no yes\r#\u0026gt; very unhappy 0.1875000 0.8125000\r#\u0026gt; unhappy 0.1212121 0.8787879\r#\u0026gt; average 0.2580645 0.7419355\r#\u0026gt; happy 0.2061856 0.7938144\r#\u0026gt; very happy 0.4137931 0.5862069\rcountstab/colSums(countstab)\r#\u0026gt; haskids\r#\u0026gt; marriage no yes\r#\u0026gt; very unhappy 0.01754386 0.03023256\r#\u0026gt; unhappy 0.01860465 0.33918129\r#\u0026gt; average 0.14035088 0.16046512\r#\u0026gt; happy 0.09302326 0.90058480\r#\u0026gt; very happy 0.56140351 0.31627907\r#??countstab/colsum(countstab)\r ceosal1\nload('resources/ceosal1.RData')\r# sample average:\rmean(ceosal1$salary)\r#\u0026gt; [1] 1281.12\r# sample median:\rmedian(ceosal1$salary)\r#\u0026gt; [1] 1039\r#standard deviation:\rsd(ceosal1$salary)\r#\u0026gt; [1] 1372.345\r# summary information:\rsummary(ceosal1$salary)\r#\u0026gt; Min. 1st Qu. Median Mean 3rd Qu. Max. #\u0026gt; 223 736 1039 1281 1407 14822\r# correlation with ROE:\rcor(ceosal1$salary, ceosal1$roe)\r#\u0026gt; [1] 0.1148417\rboxplot(ceosal1$roe,horizontal = T)\r figure\r boxplot(ceosal1$roe~ceosal1$consprod)\r figure\r 分組 目的：分組求統計量 大綱是：先探索一下我們可能用到的R語言技巧，然後是寫成函數。\n方法1: 利用 for迴圈 如果不分組\nage = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372,\r34.935, 35.2115, 35.2115, 5.2115, 36.7803)\rgroup = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1)\rdframe = data.frame(age=age, group=group)\rsummary(dframe)\r#\u0026gt; age group #\u0026gt; Min. : 5.212 Min. :1.0 #\u0026gt; 1st Qu.:26.742 1st Qu.:1.0 #\u0026gt; Median :33.212 Median :1.0 #\u0026gt; Mean :29.216 Mean :1.4 #\u0026gt; 3rd Qu.:35.142 3rd Qu.:2.0 #\u0026gt; Max. :36.780 Max. :2.0\r data.frame 的record篩選，可以利用邏輯值索引來篩選分組，這裡的範例都是求得一組(以第一分類為例)：\nft\u0026lt;-factor(dframe$group)\rgn\u0026lt;-length(levels(ft)) # nlevels(ft)\rgf\u0026lt;-ft==levels(ft)[1] # 第一組\rg1\u0026lt;-dframe[gf,]\rg1\r  age group   1 23.0883 1  2 25.8344 1  3 29.4648 1  5 33.6372 1  6 34.9350 1  10 36.7803 1     除了上面的篩選方式以外，也可以利用%in%\nft\u0026lt;-factor(dframe$group)\rgn\u0026lt;-length(levels(ft)) # nlevels(ft)\rgf\u0026lt;-as.numeric(levels(ft)[1]) # 第一組\rg1\u0026lt;-dframe[group %in% gf,] # 不是 gf %in% group\rrst\u0026lt;-summary(g1)\rrst[4,1]\r#\u0026gt; [1] \u0026quot;Mean :30.62 \u0026quot;\rrst[4,2]\r#\u0026gt; [1] \u0026quot;Mean :1 \u0026quot;\r 最後的程式碼：\nft\u0026lt;-factor(dframe$group)\rrst \u0026lt;- as.list(numeric(nlevels(ft)))\rnames(rst)\u0026lt;-levels(ft)\rfor (gi in levels(ft) ){\rgf\u0026lt;-as.numeric(gi)\rg1\u0026lt;-dframe[group %in% gf,] t\u0026lt;-summary(g1)\rrst[gi]=t[4,1]\r}\rprint(rst)\r#\u0026gt; $`1`\r#\u0026gt; [1] \u0026quot;Mean :30.62 \u0026quot;\r#\u0026gt; #\u0026gt; $`2`\r#\u0026gt; [1] \u0026quot;Mean :27.105 \u0026quot;\r 函數summary()的結果是一個table，但是而且裡面的元素是「字串」，例如\nage group Min. : 5.212 Min. :1.0 1st Qu.:26.742 1st Qu.:1.0 Median :33.212 Median :1.0 Mean :29.216 Mean :1.4 3rd Qu.:35.142 3rd Qu.:2.0 Max. :36.780 Max. :2.0  但是在很多情況下，我們希望可以自己可以控制的格式便於進步分析。例如，要一個矩陣，此時可以利用sub()： as.numeric(sub('.*:', '', summary(dframe)[4,1]))\n\r\r方法2:　函數aggregate() aggregate(dframe$age, by=list(dframe$group), FUN=mean)\r Group.1 x   1 30.62333  2 27.10507     aggregate(dframe$age, by=list(dframe$group), FUN=mean)[2]\r \rx   30.62333  27.10507     aggregate()傳回data.frame，轉矩陣利用as.matrix()\n練習： 上面的範例是每組求得一個值，如果是多個呢？例如利用aggregate()求得每組min,max,median,q25,q75 ?\n方法3: 函數　tapply f1\u0026lt;-function(im)\r{\rc(min(im),median(im),mean(im),max(im))\r}\rrst\u0026lt;-tapply(dframe$age,dframe$group,FUN = f1)#結果是list兩個元素，分別對應f1的計算結果\rrstm\u0026lt;-unlist(rst) # unlist 會把rst 變成1維向量\rrstm\u0026lt;-matrix(rstm,ncol=2) # hard code2 , try `length(levels(factor(dframe$group)))`\rrownames(rstm)\u0026lt;-c(\u0026quot;min\u0026quot;,\u0026quot;median\u0026quot;,\u0026quot;mean\u0026quot;,\u0026quot;max\u0026quot;)\rcolnames(rstm)\u0026lt;-paste(\u0026quot;組別:\u0026quot;,levels(factor(dframe$group)))\rrstm\r#\u0026gt; 組別: 1 組別: 2\r#\u0026gt; min 23.08830 5.21150\r#\u0026gt; median 31.55100 33.99865\r#\u0026gt; mean 30.62333 27.10507\r#\u0026gt; max 36.78030 35.21150\r 方法3 利用其他套件 library(dplyr)\rdt \u0026lt;- data.frame(age=rchisq(20,10), group=sample(1:2,20, rep=T))\rgrp \u0026lt;- group_by(dt, group)\rsummarise(grp, mean=mean(age), sd=sd(age))\rdetach(\u0026quot;package:dplyr\u0026quot;, unload=TRUE)\r plot 這裡的分組不能用之前的hard code 中提到的方法，因為各組可能數量不同。\nv1\u0026lt;-c(1,2,3)\rv2\u0026lt;-c(4,4)\rcbind(v1,v2)\r#\u0026gt; Warning in cbind(v1, v2): number of rows of result is not a multiple of vector\r#\u0026gt; length (arg 2)\r#\u0026gt; v1 v2\r#\u0026gt; [1,] 1 4\r#\u0026gt; [2,] 2 4\r#\u0026gt; [3,] 3 4\r rbind(v1,v2) 發生錯誤，是否只能用於data.frame\n問題： 如果想要合併兩個向量，同時如果長度不一樣，就短的向量就補NA要怎麼做？練習寫成函數。\n#\u0026gt; v1 v2\r#\u0026gt; [1,] 1 4\r#\u0026gt; [2,] 2 4\r#\u0026gt; [3,] 3 NA\r 練習:\n已經知道boxplot()的參數如果傳進矩陣或資料集，將對每一個欄位作圖\nnote:boxplot吃 y~x回歸式,例如\nboxplot(formula = Ozone ~ Month, # Y ~ X data = airquality, # 資料\rxlab = \u0026quot;Month\u0026quot;, ylab = \u0026quot;Ozone (ppb)\u0026quot;, col =\u0026quot;red\u0026quot;)\r boxplot(matrix(rnorm(100),ncol=2))\r figure\r 現在要分組對年齡boxplot,請寫出程式碼，資料如下：\nage = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372,\r34.935, 35.2115, 35.2115, 5.2115, 36.7803)\rgroup = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1)\rdframe = data.frame(age=age, group=group)\r hint: 每組長度可能不一樣，需要補NA\nfigure\r\nhint: 最簡單的寫法 boxplot(age~group)\n\u0026lt;1\u0026gt; FUN.Name 會跑到mathch.fun() 這個函數，而這個函數是用字串搜尋\nm2: 現在想要把rst轉成data.frame。\n先看一下示範，如何把list 轉成 data.frame\n# 解釋結果,問stringsAsFactors=F 有什麼效果？\rtest1 \u0026lt;- list( c(a='a',b='b',c='c'), c(a='d',b='e',c='f'))\rd1\u0026lt;-as.data.frame(test1)\rd1\r  c.a....a...b....b...c....c.. c.a....d...b....e...c....f..   a a d  b b e  c c f     # ok\rtest2 \u0026lt;- list(a = c(1, 2, 3), b = c(4, 5, 6))\rd2\u0026lt;-as.data.frame(test2)\rd2\r a b   1 4  2 5  3 6    "},
{"uri": "/blogR//rlang/2_3_data_explorer.html","title": "2.3 資料探索",
	"tags": [],
	"description": "2_3_data_explorer",
	"content": "目的 練習撰寫函數,利用data.frame,levels,factor\n練習問題 從現有資料集中, 分出各組資料。\n💡可以使用管道方式,比較簡潔。\nage = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372,\r34.935, 35.2115, 35.2115, 5.2115, 36.7803)\rgroup = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1)\rdframe = data.frame(age=age, group=group)\r 分組列出summary:利用自己的函數 age = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372,\r34.935, 35.2115, 35.2115, 5.2115, 36.7803)\rgroup = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1)\rdframe = data.frame(age=age, group=group)\rmygroup\u0026lt;-function(df,g,idx)\r{\rft\u0026lt;-factor(df$g)\rgf\u0026lt;-ft==levels(ft)[idx] # 第一組\rg1\u0026lt;-df[gf,]\rreturn(g1) }\rx\u0026lt;-mygroup(dframe,\u0026quot;group\u0026quot;,1)\r 問題： 現在把某個欄位依據分組畫出boxplot A:age B:group(1,2) 不足的補NA,每一欄成為矩陣，例如共兩組，那麼矩陣欄位就是2，比數為各組資料，長度不夠補na， 最後 boxplot(mtx)\nage = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372,\r34.935, 35.2115, 35.2115, 5.2115, 36.7803)\rgroup = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1)\rdframe = data.frame(age=age, group=group)\rgf\u0026lt;-group==1\rg1\u0026lt;-dframe[gf,1]\rgf\u0026lt;-group==2\rg2\u0026lt;-dframe[gf,1]\rmlen\u0026lt;-max(length(g1),length(g2))\rlength(g1)\u0026lt;-mlen\rlength(g2)\u0026lt;-mlen\rmtx\u0026lt;-cbind(g1,g2)\rboxplot(mtx)\r figure\r age = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372,\r34.935, 35.2115, 35.2115, 5.2115, 36.7803)\rgroup = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1)\rdframe = data.frame(age=age, group=group)\rvl\u0026lt;-list()\rfor (i in 1:2){\rgf\u0026lt;-group==i\rg1\u0026lt;-dframe[gf,1]\rvl[[i]]\u0026lt;-g1\r}\rgn\u0026lt;-sapply(vl,length)\rgn\u0026lt;-max(gn)\rvl\u0026lt;-lapply(vl,`length\u0026lt;-`,gn) # 補NA\rmtx\u0026lt;-matrix(unlist(vl),nrow=gn)\rboxplot(mtx)\r figure\r summary(dframe)\rft\u0026lt;-factor(dframe$group)\rgn\u0026lt;-length(levels(ft)) # nlevels(ft)\rgf\u0026lt;-ft==levels(ft)[1] # 第一組\rg1\u0026lt;-dframe[gf,]\rsummary(g1)\rgf\u0026lt;-ft==levels(ft)[2] # 第一組\rg2\u0026lt;-dframe[gf,]\rsummary(g2)\rmygroup\u0026lt;-function(df,g,idx)\r{\rft\u0026lt;-factor(df$g)\rgf\u0026lt;-ft==levels(ft)[idx] # 第idx組\rg1\u0026lt;-df[gf,]\rreturn(g1) }\rfor (i in 1:2){\rx\u0026lt;-mygroup(dframe,\u0026quot;group\u0026quot;,i) print(summary(x))\r}\r"},
{"uri": "/blogR//rlang/3_quickview1.html","title": "3. Quick view 1",
	"tags": [],
	"description": "3_quickview1",
	"content": "參考帖 base cheat sheet package glu\n快速指令\n目前有哪些資料集可以測試 data() attach() 一般是\nlibrary(sample)\rdata(\u0026quot;mydata\u0026quot;)\r attach(\u0026quot;mydata\u0026quot;) 就不用打入mydata$欄位名稱\n幾個常用的統計量: x\u0026lt;-c(1,2,3)\rmedian(x)\rmean(x)\rmin(x)\rsd(x)\rrange(x)\rdiff(x)\r 資料型態和內容 可以先看看資料描述 ?mtcars\nmtcars\r  mpg cyl disp hp drat wt qsec vs am gear carb   Mazda RX4 21.0 6 160.0 110 3.90 2.620 16.46 0 1 4 4  Mazda RX4 Wag 21.0 6 160.0 110 3.90 2.875 17.02 0 1 4 4  Datsun 710 22.8 4 108.0 93 3.85 2.320 18.61 1 1 4 1  Hornet 4 Drive 21.4 6 258.0 110 3.08 3.215 19.44 1 0 3 1  Hornet Sportabout 18.7 8 360.0 175 3.15 3.440 17.02 0 0 3 2  Valiant 18.1 6 225.0 105 2.76 3.460 20.22 1 0 3 1  Duster 360 14.3 8 360.0 245 3.21 3.570 15.84 0 0 3 4  Merc 240D 24.4 4 146.7 62 3.69 3.190 20.00 1 0 4 2  Merc 230 22.8 4 140.8 95 3.92 3.150 22.90 1 0 4 2  Merc 280 19.2 6 167.6 123 3.92 3.440 18.30 1 0 4 4  Merc 280C 17.8 6 167.6 123 3.92 3.440 18.90 1 0 4 4  Merc 450SE 16.4 8 275.8 180 3.07 4.070 17.40 0 0 3 3  Merc 450SL 17.3 8 275.8 180 3.07 3.730 17.60 0 0 3 3  Merc 450SLC 15.2 8 275.8 180 3.07 3.780 18.00 0 0 3 3  Cadillac Fleetwood 10.4 8 472.0 205 2.93 5.250 17.98 0 0 3 4  Lincoln Continental 10.4 8 460.0 215 3.00 5.424 17.82 0 0 3 4  Chrysler Imperial 14.7 8 440.0 230 3.23 5.345 17.42 0 0 3 4  Fiat 128 32.4 4 78.7 66 4.08 2.200 19.47 1 1 4 1  Honda Civic 30.4 4 75.7 52 4.93 1.615 18.52 1 1 4 2  Toyota Corolla 33.9 4 71.1 65 4.22 1.835 19.90 1 1 4 1  Toyota Corona 21.5 4 120.1 97 3.70 2.465 20.01 1 0 3 1  Dodge Challenger 15.5 8 318.0 150 2.76 3.520 16.87 0 0 3 2  AMC Javelin 15.2 8 304.0 150 3.15 3.435 17.30 0 0 3 2  Camaro Z28 13.3 8 350.0 245 3.73 3.840 15.41 0 0 3 4  Pontiac Firebird 19.2 8 400.0 175 3.08 3.845 17.05 0 0 3 2  Fiat X1-9 27.3 4 79.0 66 4.08 1.935 18.90 1 1 4 1  Porsche 914-2 26.0 4 120.3 91 4.43 2.140 16.70 0 1 5 2  Lotus Europa 30.4 4 95.1 113 3.77 1.513 16.90 1 1 5 2  Ford Pantera L 15.8 8 351.0 264 4.22 3.170 14.50 0 1 5 4  Ferrari Dino 19.7 6 145.0 175 3.62 2.770 15.50 0 1 5 6  Maserati Bora 15.0 8 301.0 335 3.54 3.570 14.60 0 1 5 8  Volvo 142E 21.4 4 121.0 109 4.11 2.780 18.60 1 1 4 2     head(mtcars)\r  mpg cyl disp hp drat wt qsec vs am gear carb   Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4  Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4  Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1  Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1  Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2  Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1     tail(mtcars)\r \r mpg cyl disp hp drat wt qsec vs am gear carb   Porsche 914-2 26.0 4 120.3 91 4.43 2.140 16.7 0 1 5 2  Lotus Europa 30.4 4 95.1 113 3.77 1.513 16.9 1 1 5 2  Ford Pantera L 15.8 8 351.0 264 4.22 3.170 14.5 0 1 5 4  Ferrari Dino 19.7 6 145.0 175 3.62 2.770 15.5 0 1 5 6  Maserati Bora 15.0 8 301.0 335 3.54 3.570 14.6 0 1 5 8  Volvo 142E 21.4 4 121.0 109 4.11 2.780 18.6 1 1 4 2     head 前幾筆資料 tail 後幾筆資料\n編輯/瀏覽資料 edit(mtcars)\rdata.entry(mtcars)\rView(mtcars)\r 個別欄位 如果要顯示個別欄位,一般可以是mtcars$mpg,但是如果要直接使用mpg欄位,可以利用attach()\nattach(mtcars)\rmpg\r 質性數據的分析 欄位cyl為質性變數,可以利用table分析\nattach(mtcars)\rtable(mtcars$cyl)\r#\u0026gt; #\u0026gt; 4 6 8 #\u0026gt; 11 7 14\r 頻率圖\nattach(mtcars)\r#\u0026gt; 下列物件被遮斷自 mtcars (pos = 3):\r#\u0026gt; #\u0026gt; am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt\rbarplot(table(mtcars$cyl))\r figure\r 解釋下面兩個圖為甚麼不一樣?\nattach(mtcars)\r#\u0026gt; 下列物件被遮斷自 mtcars (pos = 3):\r#\u0026gt; #\u0026gt; am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt\r#\u0026gt; 下列物件被遮斷自 mtcars (pos = 4):\r#\u0026gt; #\u0026gt; am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt\rv\u0026lt;-as.vector(table(mtcars$cyl))\rbarplot(v)\r figure\n\rattach(mtcars)\r#\u0026gt; 下列物件被遮斷自 mtcars (pos = 3):\r#\u0026gt; #\u0026gt; am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt\r#\u0026gt; 下列物件被遮斷自 mtcars (pos = 4):\r#\u0026gt; #\u0026gt; am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt\r#\u0026gt; 下列物件被遮斷自 mtcars (pos = 5):\r#\u0026gt; #\u0026gt; am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt\rm\u0026lt;-as.matrix(table(mtcars$cyl))\rbarplot(m)\r figure\n\r上面兩個圖不一樣,因為table()的定義,所以轉成矩陣以後是3x1。\nx\u0026lt;-c(1,1,1)\rx1\u0026lt;-as.matrix(x)\rx2\u0026lt;-as.table(x)\rx3\u0026lt;-table(x)\rx1\rx2\rx3\r  [,1]\r[1,] 1\r[2,] 1\r[3,] 1\r# x2 原地轉\rA B C 1 1 1 # x3 : 計算1有幾個\rx\r1 3  \r\rbarplot(c(11,7,4))\r figure\r barplot(mtcars$mpg)\r figure\r barplot(mtcars$cyl)\r figure\r assignment  \u0026lt;-和 -\u0026gt; 是一對 ，可以向左和向右賦值 = 是單向的 ，作用和\u0026lt;-基本相同，但對函數中的變數通常使用= \u0026lt;\u0026lt;- 這個是全域賦值 ，跟變數的作用域有關，開發自己的套件(package)的時候,常用。  ##Delete x (if it exists)\rrm(x)\r#\u0026gt; Warning in rm(x): 找不到物件 'x'\rmean(x = 1:10) #[1] 5.5\r#\u0026gt; [1] 5.5\rx #Error: object 'x' not found\r#\u0026gt; Error in eval(expr, envir, enclos): 找不到物件 'x'\r 觀察上面的x,第一行指令從環境中去掉變數x的定義。 第2行中的x是在block 中定義，因此執行完以後,會被殺掉。因此第三行指令,出現找不到x的提示。\n後面測試\u0026lt;- operator:\nmean(x \u0026lt;- 1:10) # [1] 5.5\r#\u0026gt; [1] 5.5\rx\r#\u0026gt; [1] 1 2 3 4 5 6 7 8 9 10\r  x # [1] 1 2 3 4 5 6 7 8 9 10\n This time the x variable is declared within the user workspace. When does the assignment take place ? In the code above, you may be tempted to thin that we “assign 1:10 to x, then calculate the mean. ” This would be true for #languages such as C, but it isn ’t true in R. Consider the following function:\na \u0026lt;- 1\rf \u0026lt;- function(a) return(TRUE)\rf \u0026lt;- f(a \u0026lt;- a + 1);\r# 輸出:TRUE\ra # 結果=1 #\u0026gt; [1] 1\r 注意上面a的值,仍然是1。原因是因為R的編譯器,在最佳化的時候,知道函數中沒用到參數,因此根本沒有存取到變數a,因此，原來的a是甚麼,a仍然是甚麼。\n簡單講就是f(a\u0026lt;-a+1)中的a\u0026lt;-a+1 被去掉不會被執行\nf(a\u0026lt;-a+1) =\u0026gt; f()\nrewrite\nf \u0026lt;- function(a) {\rif (runif(1) \u0026gt; 0.5) TRUE else a\r} f(a \u0026lt;- a + 1);\r#\u0026gt; [1] TRUE\ra # result 2\r#\u0026gt; [1] 1\r 這個函數f用到了參數a,但是編譯器這次沒那麼聰明,知道使用者用a來做甚麼,雖然這個函數的body仍然沒有動到a,但是這次f(a\u0026lt;-a+1)中的a\u0026lt;-a+1 會被執行。\n練習\n 先去掉環境中的變數a,然後在執行上面的chunk.   hint: rm(a)  提示\r \nf(a \u0026lt;- a + 1);\r# TRUE\ra # 2\r#\u0026gt; [1] 2\r f(a \u0026lt;- a + 1);\ra #3\r#\u0026gt; [1] 3\r a\u0026lt;-1;\rf \u0026lt;- function(a) return(a);\rinvisible(f(a=a+1)) a\r#\u0026gt; [1] 1\rinvisible(f(a\u0026lt;-a+1))\ra\r#\u0026gt; [1] 2\r 上面程式中,invisible函數在這裡的說明不重要,只是用來隱藏計算結果。\na\u0026lt;-1;\rf \u0026lt;- function(a) return(3);\rinvisible(f(a=a+1))\ra\r#\u0026gt; [1] 1\rinvisible(f(a\u0026lt;-a+1))\ra\r#\u0026gt; [1] 1\r =用在參數指派 例如\nmatrix(1:20, ncol = 4)\r#\u0026gt; [,1] [,2] [,3] [,4]\r#\u0026gt; [1,] 1 6 11 16\r#\u0026gt; [2,] 2 7 12 17\r#\u0026gt; [3,] 3 8 13 18\r#\u0026gt; [4,] 4 9 14 19\r#\u0026gt; [5,] 5 10 15 20\rncol\r#\u0026gt; function (x) #\u0026gt; dim(x)[2L]\r#\u0026gt; \u0026lt;bytecode: 0x00000000189dc6a8\u0026gt;\r#\u0026gt; \u0026lt;environment: namespace:base\u0026gt;\r 產生5X4矩陣。如果\nmatrix(1:20, ncol \u0026lt;- 4)\r#\u0026gt; [,1] [,2] [,3] [,4] [,5]\r#\u0026gt; [1,] 1 5 9 13 17\r#\u0026gt; [2,] 2 6 10 14 18\r#\u0026gt; [3,] 3 7 11 15 19\r#\u0026gt; [4,] 4 8 12 16 20\rncol\r#\u0026gt; [1] 4\r 會產生一個變數 ncol，這裡產生的為4x5的矩陣。為甚麼?因為這裡的第2個參數ncol\u0026lt;-4,指派給變數ncol,然後這個expression會return 4,而4就被當成第2個參數,也就是matrix(1:20, ncol \u0026lt;- 4)等同於matrix(1:20, 4),也就是指定ROW的維度。\n結論:x\u0026lt;-3 \u0026lt;-會在全局產生變數x然後指派3\n(x \u0026lt;- 3)\r#\u0026gt; [1] 3\r#rm(list = ls())\rrm(x)\rls()\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;f\u0026quot; \u0026quot;m\u0026quot; \u0026quot;ncol\u0026quot; \u0026quot;v\u0026quot;\r(x = 3)\r#\u0026gt; [1] 3\rls()\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;f\u0026quot; \u0026quot;m\u0026quot; \u0026quot;ncol\u0026quot; \u0026quot;v\u0026quot; \u0026quot;x\u0026quot;\r 因為x是參數名稱不是變數,看mean help\n"},
{"uri": "/blogR//rlang/4_1_1_type_%E5%9F%BA%E6%9C%AC.html","title": "4.1 基本",
	"tags": [],
	"description": "主要介紹基本語法",
	"content": "基本操作  操作通常和資料結構相關,可以參考 資料結構\n 在R語言中,型態不須經過宣告(declared)。 一個變數的型態經由assignment的過程決定,即\u0026lt;-右邊的R-Objects。也就是在指派變數值的時候,同時決定了型態。\n基本的 R-object有 −\n Vectors Lists Matrices Arrays Factors Data Frames  最簡單的是vector物件,atomic vector 有6種data types(有時也叫做 6 個classes)\nData Type Example   Logical TRUE, FALSE  Numeric 1.3, 5, 99  Integer 3L, 24L, 0L  Complex 5 + 4i  Character 'b' , \u0026quot;good\u0026quot;, \u0026quot;TRUE\u0026quot;, '23.4'  Raw \u0026quot;Hello\u0026quot; is stored as 48 65 6c 6c 6f      💡: 上表中,字元H對應的48怎麼來的? 利用JS驗證 \u0026quot;H\u0026quot;.charCodeAt(0).toString(16) ，在Ｒ中可以利用charToRaw(範例中)\n 數字(3種,例如整數、浮點、複數）,邏輯,字元(2種，character, raw)\nv \u0026lt;- TRUE print(class(v))\r#\u0026gt; [1] \u0026quot;logical\u0026quot;\rv \u0026lt;- 23.5\rprint(class(v))\r#\u0026gt; [1] \u0026quot;numeric\u0026quot;\rv \u0026lt;- 2L\rprint(class(v))\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\rv \u0026lt;- 2+5i\rprint(class(v))\r#\u0026gt; [1] \u0026quot;complex\u0026quot;\rv \u0026lt;- \u0026quot;TRUE\u0026quot;\rprint(class(v))\r#\u0026gt; [1] \u0026quot;character\u0026quot;\rv \u0026lt;- charToRaw(\u0026quot;Hello\u0026quot;)　#🏷👏同樣的中文字利用charToRaw()找出來的１６進位，會因為編碼而不同\rprint(class(v))\r#\u0026gt; [1] \u0026quot;raw\u0026quot;\r 💡 數字３不是真也不是假\nisTRUE(3)\r#\u0026gt; [1] FALSE\risFALSE(3)\r#\u0026gt; [1] FALSE\r class(3),class(3.1) 的類別是甚麼？提示\r numeric\n指派  \u0026lt;-, \u0026lt;\u0026lt;-, =\t向左指派值。 -\u0026gt;, -\u0026gt;\u0026gt;\t向右指派值。  指派運算子雖然也可以用=但是，R的設計是使用\u0026lt;-。\na \u0026lt;- 3\r a\u0026lt;-3是一個指派的敘述句,不會回饋資訊到螢幕上。如果要知道a的內容是甚麼,就打入a 或者(a\u0026lt;-3)\na\r#\u0026gt; [1] 3\r(a\u0026lt;-3)\r#\u0026gt; [1] 3\r 一般的數學函數\nb \u0026lt;- sqrt(a * a + 5)\rb\r#\u0026gt; [1] 3.741657\r \u0026lt;- vs =(例如a\u0026lt;-3 vs. a=3) 的簡化說明\n  大部分情況下\u0026lt;- 和 = 在相同的環境下等價。\n 另外,\u0026lt;\u0026lt;- 用來指派值給親代環境下的變數。    按照R的說明,等號只能用在top level,或是函數參數的指定。參考\n‹function_name›(‹argname› = ‹value›, …) #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏這裡用\u0026lt;-有不一樣的意思\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r‹function_name›(‹args›, ‹argname› = ‹value›, …)\r   例如 在主控台執行下面程式碼\nrm(list=ls()) # (🐞會刪掉我自己的單頁編譯變數) ls() # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏工作區是空的,沒有x變數\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rmean(x\u0026lt;-1:10) #\u0026gt; [1] 5.5\rls() # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏在工作區會出現x變數\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rrm(x)　# \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏從工作區移除變數x\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rmean(x=1:10) #\u0026gt; [1] 5.5\rls() # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏工作區沒有x變數，這裡只是參數指定，在主控台敲入？mean可以看到參數有x\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r \r補充函數ls()的說明\r在session中的如果要列出已經定義過的變數,可以利用ls（相關函數rm）\nls()\r# [1] \"a\" \"b\"\r \r\r\r運算 四則運算 參考實際操作\nLogical 邏輯類只有兩個值 TRUE and FALSE或是簡寫Ｔ，Ｆ:\na = TRUE\rtypeof(a)\r#\u0026gt; [1] \u0026quot;logical\u0026quot;\rb = FALSE\rtypeof(b)\r#\u0026gt; [1] \u0026quot;logical\u0026quot;\r R語言常用邏輯運算子 operator 說明   \u0026lt; less than  \u0026gt; great than  \u0026lt;= less than or equal  \u0026gt;= greater than or equal  == equal to  != not equal to  | entry wise or  || or  ! not  \u0026amp; entry wise and  \u0026amp;\u0026amp; and  xor(a,b) exclusive or     範例：不同的運算子，在個別元素和整個向量的運算結果不一樣：\na = c(TRUE, FALSE)\rb = c(FALSE, F)\ra | b\r#\u0026gt; [1] TRUE FALSE # 🏷👏全部元素\ra || b\r#\u0026gt; [1] TRUE # 🏷👏只有第一個元素\ra \u0026amp; b\r#\u0026gt; [1] FALSE FALSE # 🏷👏全部元素\ra \u0026amp;\u0026amp; b\r#\u0026gt; [1] FALSE # 🏷👏只有第一個元素\rxor(a, b)\r#\u0026gt; [1] TRUE FALSE\r a||b, a\u0026amp;\u0026amp;b 只比對a,b中的第一個元素。因此長度只有1個。✔如果是流程控制,大體上用的這兩種。\n\u0026amp; 和 | 比對元素,傳回長度為大小最長的那個。\n0為FALSE,而1為TRUE。在R中,判斷一個變數是否TRUE,要檢查好幾個地方,因此有提供內定的檢查函數✔isTRUE()\nx \u0026lt;- c(TRUE,FALSE,0,6)\ry \u0026lt;- c(FALSE,TRUE,FALSE,TRUE)\r!x\rx\u0026amp;y\rx\u0026amp;\u0026amp;y\rx|y\rx||y #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏常用於邏輯判斷式\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r 提示\r \u0026gt; x \u0026lt;- c(TRUE,FALSE,0,6)\r#\u0026gt; [1] 1 0 0 6\r\u0026gt; y \u0026lt;- c(FALSE,TRUE,FALSE,TRUE)\r#\u0026gt; [1] FALSE TRUE FALSE TRUE\r\u0026gt; !x\r#\u0026gt; [1] FALSE TRUE TRUE FALSE #👺👺\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👺和C家族的非0為真不一樣🤷‍♀️\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r\u0026gt; x\u0026amp;y\r#\u0026gt; [1] FALSE FALSE FALSE TRUE\r\u0026gt; x\u0026amp;\u0026amp;y\r#\u0026gt; [1] FALSE\r\u0026gt; x|y\r#\u0026gt; [1] TRUE TRUE FALSE TRUE\r\u0026gt; x||y\r#\u0026gt; [1] TRUE\r  x \u0026lt;- c(TRUE,FALSE,0,6,0) # 個數有５個\ry \u0026lt;- c(T,TRUE,FALSE,TRUE)　#　個數有４個\rx| y\r 解釋上面的結果\n 長度為甚麼是５ 最後一個為甚麼是Ｔ 如果x \u0026lt;- c(TRUE,FALSE,0,6,3) 然後問 x \u0026amp; y  提示\r 💡循環補足\n邏輯函數 is.family 函數，可以用來判定變數是什麼型態，傳回真假值，例如\na = c(1, 2, 3)\ris.numeric(a)\r#\u0026gt; [1] TRUE\ris.factor(a)\r#\u0026gt; [1] FALSE\ris.character(a)\r#\u0026gt; [1] FALSE\r 函數which()哪些元素不一致\nA\u0026lt;-c(T,F,T,F)\rC\u0026lt;-c(F,F,F,T)\rwhich(A)\r#\u0026gt; [1] 1 3\rwhich(A != C)\r#\u0026gt; [1] 1 3 4\r 函數all() 是不是向量內所有元素都是Ｔ\nall(A==B)\r#\u0026gt; Error in eval(expr, envir, enclos): 找不到物件 'B'\rall(A==C)\r#\u0026gt; [1] FALSE\rall(A==A)\r#\u0026gt; [1] TRUE\r which(),all()裡面的參數其實都是邏輯向量。\r\r\r註解：但是R語言的向量運算，涉及自動填充循環，因此注意下面的計算結果\nD \u0026lt;- c(\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;,\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;)\rE \u0026lt;- c(\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;)\rall(D==E)\r#\u0026gt; [1] TRUE\rall(length(D)==length(E)) \u0026amp;\u0026amp; all(D==E)\r#\u0026gt; [1] FALSE\r 函數identical(a,b) a,b 是否相等,比較的是除了a,b的內容以外,💡還有a b 的型態。例如，identical(1,as.integer(1)) 結果是F,因為 前者是double,後者是整數。\nidentical(1,as.integer(1)) #\u0026gt; [1] FALSE\rtypeof(1)\r#\u0026gt; [1] \u0026quot;double\u0026quot;\ridentical(1L,as.integer(1)) #\u0026gt; [1] TRUE\r   比對數字3和字串3\n3==\u0026quot;3\u0026quot;\r#\u0026gt; [1] TRUE\ridentical(3,\u0026quot;3\u0026quot;)\r#\u0026gt; [1] FALSE\r   函數identical()\nA \u0026lt;- c(\u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;C\u0026quot;, \u0026quot;D\u0026quot;)\rB \u0026lt;- A\rC \u0026lt;- c(\u0026quot;A\u0026quot;, \u0026quot;C\u0026quot;, \u0026quot;C\u0026quot;, \u0026quot;E\u0026quot;)\rA==B\r#\u0026gt; [1] TRUE TRUE TRUE TRUE\rA==C #\u0026gt; [1] TRUE FALSE TRUE FALSE\ridentical(A,B) # 🏷👏只有一個真假值\r#\u0026gt; [1] TRUE\ridentical(A,C)\r#\u0026gt; [1] FALSE\r   實數的比較👺\n0.1+0.2 == 0.3 #F\r#\u0026gt; [1] FALSE\ridentical(0.1+0.2 , 0.3) #F\r#\u0026gt; [1] FALSE\r   identical 可以和後面的函數all.equal函數比較。\n實數的比較 函數all.equal()\n0.1+0.2 == 0.3 #⛳ \r#\u0026gt; [1] FALSE\rall.equal(0.1+0.2,0.3)\r#\u0026gt; [1] TRUE\r 在EXCEL中利用有效位數15來解0.1+0.2==0.3 是否相等的問題。\n在R中，可以用signif()示範(😒options()$digits預設是7,可以用(options(digits=15)改變設定)但是好像只是用來控制顯示的有效位元)\nx\u0026lt;-runif(1)\rsignif(x,3)\r#\u0026gt; [1] 0.111\rsignif(0.1+0.2, 15)==signif(0.3,15)\r#\u0026gt; [1] TRUE\rsignif(0.1,15)+signif(0.2,15)==signif(0.3,15) # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏 + 以後的結果也要\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; [1] FALSE\r \r\r這是另一個例子,跟我們說實數的比較很不穩定\n# 先看我們應該知道的部分\r1-0.4 ==0.6 # TRUE 👏\r#\u0026gt; [1] TRUE\r1-0.6==0.4 # TRUE\r#\u0026gt; [1] TRUE\rx \u0026lt;- seq(0, 1, by = 0.2)\ry \u0026lt;- seq(0, 1, by = 0.2)\ry[4] #\u0026gt; [1] 0.6\rx[3] #\u0026gt; [1] 0.4\r1 - x[3] #\u0026gt; [1] 0.6\ry[4] == 1 - x[3] #🏷前面的1-0.4==0.6 為真\r#\u0026gt; [1] FALSE 👏\r## 💯\rall.equal(y[4], 1 - x[3])　#\u0026gt; [1] TRUE\r## 💯\rall.equal(y[4], 1 - x[3])　 函數練習：\n將上面可能造成誤判的情況，寫成函數先判斷是否長度相等，然後判斷元素相等，可以和identical()比較。提示\r hint: 利用length\na \u0026lt;- character(0)\ridentical(a, character(0)) # returns TRUE\ridentical(a, \u0026quot;\u0026quot;) # returns FALSE\ridentical(a, numeric(0)) # returns also FALSE\r \n是不是NA, NULL nx1\u0026lt;-numeric(0)\rnx2\u0026lt;-3\ris.null(nx1) # F,因為nx1是空向量(長度為0的數字向量)\r#\u0026gt; [1] FALSE\ris.na(nx1) # logical(0),每個元素檢查是不是NA,但是現在是空向量,所以結果是logical(0)\r#\u0026gt; logical(0)\rtypeof(nx1) # double\r#\u0026gt; [1] \u0026quot;double\u0026quot;\rtypeof(nx2) # double\r#\u0026gt; [1] \u0026quot;double\u0026quot;\rlength(nx1) # 0 #\u0026gt; [1] 0\rlength(nx2) # 1\r#\u0026gt; [1] 1\r 甚麼時候用到is.null提示\r config \u0026lt;- list()\ris.null(config) # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏是empty(空的)list物件,但不是null(虛的)\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; [1] FALSE\ris.null(config$name)\r#\u0026gt; [1] TRUE\r 空的和虛的有甚麼差別? 一個是在記憶體有位置,一個是沒有。\r\r\r 如何判斷是否NA\nx == NA\r#\u0026gt; [1] NA\r 上面的比較沒有意義,和NA的任何運算都是NA\nr = x == NA\rr\r#\u0026gt; [1] NA\r 結論:任何變數和NA運算,結果還是NA\n另一種方法\nprint(x == NA)\r#\u0026gt; [1] NA\r 如何判斷NA ? is.na()\nis.na(a[6])\r#\u0026gt; [1] TRUE\r \r\rvector 利用c函數，可以使用vector存放一個以上的數字。\na = c(1, 2, 3, 4, 5)\ra1 = 1:5\r 有關vector的運算:加減乘除等等\na = c(1, 2, 3, 4, 5)\ra+1\r#\u0026gt; [1] 2 3 4 5 6\ra-1\r#\u0026gt; [1] 0 1 2 3 4\ra/2\r#\u0026gt; [1] 0.5 1.0 1.5 2.0 2.5\ra*3\r#\u0026gt; [1] 3 6 9 12 15\r mean(a)\r#\u0026gt; [1] 3\rvar(a)\r#\u0026gt; [1] 2.5\rsummary(a)\r#\u0026gt; Min. 1st Qu. Median Mean 3rd Qu. Max. #\u0026gt; 1 2 3 3 4 5\r note: 對比stata sum a 指令,summary(a) 返回的是一個table物件。可以指派給變數,因此計算結果可以經由變數(類別為table)存取。\nlist的元素,利用中括號\na = 2:6\ra[1]\r#\u0026gt; [1] 2\ra[2]\r#\u0026gt; [1] 3\ra[0]\r#\u0026gt; integer(0)\ra[6]\r#\u0026gt; [1] NA\r 在R中,的最小的索引值為1base.如果給索引為0,可以知道資料是否被排序。 超出索引範圍得到\u0026quot;NA。\na=2:6\rx = a[6]\r 初始化向量,可以利用a\u0026lt;-10 或指定numeric(double)型態\na \u0026lt;- numeric(10) a\r#\u0026gt; [1] 0 0 0 0 0 0 0 0 0 0\r 如果想要知到變數的資料型別,利用函數typeof()\ntypeof()函數回傳的結果是\u0026quot;字串\u0026quot;\ntypeof(a) # 結果是\u0026quot;double\u0026quot;\r#\u0026gt; [1] \u0026quot;double\u0026quot;\rs = typeof(a)\rs\r#\u0026gt; [1] \u0026quot;double\u0026quot;\rtypeof(s) #結果是 \u0026quot;character\u0026quot;\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r 字串  參考\n 建立字串 可以是 雙引號中\u0026quot; 或 單引號中'。 字串中如果有雙引號,或單引號，則如下表示:\n\u0026quot;'這個'來自'那個'\u0026quot;\na \u0026lt;- \u0026quot;hello\u0026quot;\ra\r#\u0026gt; [1] \u0026quot;hello\u0026quot;\rtypeof(a) #[1] \u0026quot;character\u0026quot; #\u0026gt; [1] \u0026quot;character\u0026quot;\ris.vector(a) #[1] TRUE\r#\u0026gt; [1] TRUE\r 利用函數:character() 這個函數的參數為整數,建立一個vector(不是list),裡面的元素都是空字串,例如character(5)。\n# 變數ex初始化為character vector,參看後面的討論\r(ex \u0026lt;- character(0))\r#\u0026gt; character(0)\ris.null(ex) #🏷不是null,這是一個指標\r#\u0026gt; [1] FALSE\rlength(ex)\r#\u0026gt; [1] 0\rclass(ex)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r# 如果剛剛沒有設定ex \u0026lt;- character(0),這裡會發生錯誤\r(ex[1] \u0026lt;- \u0026quot;first\u0026quot;)\r#\u0026gt; [1] \u0026quot;first\u0026quot;\r# check its length again\rlength(ex)\r#\u0026gt; [1] 1\r(ex[4] \u0026lt;- \u0026quot;fourth\u0026quot;) # 🏷索引可以用跳的:\r#\u0026gt; [1] \u0026quot;fourth\u0026quot;\rlength(ex)\r#\u0026gt; [1] 4\rtypeof(ex)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\rex\r#\u0026gt; [1] \u0026quot;first\u0026quot; NA NA \u0026quot;fourth\u0026quot;\r 跳過的索引,內容自動為NA.\n空字串 引號內連空白都沒有的字串: (比較上面利用character(5)可以建立5個元素為空字串的vector。)\n# empty string\rempty_str \u0026lt;- \u0026quot;\u0026quot;\rempty_str\r#\u0026gt; [1] \u0026quot;\u0026quot;\r# class\rclass(empty_str)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r 探討character(0) 前面說character(2),可以傳回長度2,每個元素都是空白字串\u0026quot;\u0026quot;的向量,那麼character(0)是甚麼? 除了前面提到的變數初始化為向量(也許可以說是向量宣告) 例如,整數也是這樣\nzz\u0026lt;-integer(0)\rzz[4]=6\rzz\r#\u0026gt; [1] NA NA NA 6\r 這裡利用分別使用typeof, str,class,is對character(0)做一些測試:\nex1\u0026lt;-character(0) ex2\u0026lt;-\u0026quot;\u0026quot;\rtypeof(ex1) # 🏷都是向量\r#\u0026gt; [1] \u0026quot;character\u0026quot;\rtypeof(ex2)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r 函數str()用來顯示R物件的結構:\nstr(ex1) #\u0026gt; chr(0)\rstr(ex2) #🏷前面看起來都是向量,但是這裡有更多資訊 chr(0),\u0026quot;\u0026quot;\r#\u0026gt; chr \u0026quot;\u0026quot;\r class(ex1)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\rclass(ex2)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r is.list(ex1)\r#\u0026gt; [1] FALSE\ris.list(ex2)\r#\u0026gt; [1] FALSE\r 👹 0或１個字元也是向量。\nis.vector(ex1)　#T\r#\u0026gt; [1] TRUE\ris.vector(ex2) #T\r#\u0026gt; [1] TRUE\r length(ex1)\r#\u0026gt; [1] 0\rlength(ex2)\r#\u0026gt; [1] 1\r is.null(ex1) #F\r#\u0026gt; [1] FALSE\ris.null(ex2) #F\r#\u0026gt; [1] FALSE\ris.na(ex1) #\u0026gt; 🏷logical(0) 說這是邏輯向量,但是長度0\r#\u0026gt; logical(0)\ris.na(ex2) #\u0026gt; FALSE\r#\u0026gt; [1] FALSE\r 最後,這兩個是不是相等\nex1==ex2\r#\u0026gt; logical(0)\r 字串和vector  vector 一般指的是只放元素為數字的陣列(array)，在EXCEL中利用陣列表示vector;而陣列是可以存數字和文字的區域。(EXCEL 的table是有欄位的陣列)。 但是在R語言中,vector 只是元素型態相同即可(後述)[#whatisvector]\n a \u0026lt;- \u0026quot;hello\u0026quot;\ra\r#\u0026gt; [1] \u0026quot;hello\u0026quot;\rtypeof(a)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r b \u0026lt;- c(\u0026quot;hello\u0026quot;, \u0026quot;there\u0026quot;)\rb\r#\u0026gt; [1] \u0026quot;hello\u0026quot; \u0026quot;there\u0026quot;\rb[1]\r#\u0026gt; [1] \u0026quot;hello\u0026quot;\rtypeof(b)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r (a = character(5)) # 產生5個空字串\r#\u0026gt; [1] \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot;\r(b = letters[1:4]) # 注意,letters不是函數\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot;\rletters\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; \u0026quot;e\u0026quot; \u0026quot;f\u0026quot; \u0026quot;g\u0026quot; \u0026quot;h\u0026quot; \u0026quot;i\u0026quot; \u0026quot;j\u0026quot; \u0026quot;k\u0026quot; \u0026quot;l\u0026quot; \u0026quot;m\u0026quot; \u0026quot;n\u0026quot; \u0026quot;o\u0026quot; \u0026quot;p\u0026quot; \u0026quot;q\u0026quot; \u0026quot;r\u0026quot; \u0026quot;s\u0026quot;\r#\u0026gt; [20] \u0026quot;t\u0026quot; \u0026quot;u\u0026quot; \u0026quot;v\u0026quot; \u0026quot;w\u0026quot; \u0026quot;x\u0026quot; \u0026quot;y\u0026quot; \u0026quot;z\u0026quot;\rtypeof(letters)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\rclass(letters)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r ⛳  因為c函數的運算結果為vector,因此下例中,其元素都是字串（前面講過在Ｒ中的vector必須是同類）\n(a\u0026lt;-c(\u0026quot;d\u0026quot;,4,TRUE))\r#\u0026gt; [1] \u0026quot;d\u0026quot; \u0026quot;4\u0026quot; \u0026quot;TRUE\u0026quot;\r 問題: 怎樣知道r是空集合?\ny \u0026lt;- letters[1:3] z \u0026lt;- letters[4:6] r\u0026lt;-intersect(y,z) r\r#\u0026gt; character(0)\ris.na(r)\r#\u0026gt; logical(0)\rlength(r)\r#\u0026gt; [1] 0\r 另外,當vector有多個字串,而使用索引0的時候,也會出現 character(0),例如:\nstring \u0026lt;- c('sun', 'sky', 'clouds')\rstring[0]\r#\u0026gt; character(0)\r 更多vector 相關的運算 連續數字可以利用操作元:,例如:\nx \u0026lt;- 1:7; x\ry \u0026lt;- 2:-2; y\r 比較複雜的序列可以利用函數 seq() ,例如\nseq(1, 3, by=0.2) # specify step size\r#\u0026gt; [1] 1.0 1.2 1.4 1.6 1.8 2.0 2.2 2.4 2.6 2.8 3.0\rseq(1, 5, length.out=4) # specify length of the vector\r#\u0026gt; [1] 1.000000 2.333333 3.666667 5.000000\r 練習範例 Q1. a,a1,a2 屬於甚麼型態\na = 1:4\ra1 = c(1, 2, 3, 4)\ra2 = numeric(4)\r 提示\r A1: 只是要記住函數typeof\na = 1:4\ra1 = c(1, 2, 3, 4)\ra2 = numeric(4)\rtypeof(a)\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\rtypeof(a1)\r#\u0026gt; [1] \u0026quot;double\u0026quot;\rtypeof(a2)\r#\u0026gt; [1] \u0026quot;double\u0026quot;\r \nQ2:a3的長度是甚麼?2,或6\na1\u0026lt;-c(1,2,3)\ra2\u0026lt;-c(2,3,4)\ra3\u0026lt;-c(a1,a2)\r 提示\r HINT: 只是要記住函數length a1 a2 a3;length(a3)\na = character(5)\rb\u0026lt;-\u0026quot;12345\u0026quot;\rc\u0026lt;-c(\u0026quot;1\u0026quot;,\u0026quot;2\u0026quot;,\u0026quot;3\u0026quot;,\u0026quot;4\u0026quot;,\u0026quot;5\u0026quot;)\r 問\n length(a),length(b),length(c)分別是多少？ nchar(a),nchar(b),nchar(c)?  提示\r 提示 length: 5,1,5 nzchar: 0,0,0,0,0, 5,0,0,0,0,0\n如何存取vector中的元素 元素索引可以利用 logical, integer or character vector.\n如果利用整數索引,則從1開始.但是,如果索引值給的是負數(例如-2),則除了2號元素以外,都會被傳回。但是不能同時有正負。同時,浮點數會被truncated。\n\u0026gt; x\r[1] 0 2 4 6 8 10\r\u0026gt; x[3] # access 3rd element\r[1] 4\r\u0026gt; x[c(2, 4)] # access 2nd and 4th element\r[1] 2 6\r\u0026gt; x[-1] # access all but 1st element\r[1] 2 4 6 8 10\r\u0026gt; x[c(2, -4)] # 不能混合正負\rError in x[c(2, -4)] : only 0's may be mixed with negative subscripts\r\u0026gt; x[c(2.4, 3.54)] # real numbers are truncated to integers\r[1] 2 4\r 篩選 篩選陣列中的元素🏷👏可以應用在抽樣。例如\n\u0026gt; x[c(TRUE, FALSE, FALSE, TRUE)]\r[1] -3 3\r\u0026gt; x[x \u0026lt; 0] # filtering vectors based on conditions\r[1] -3 -1\r\u0026gt; x[x \u0026gt; 0]\r[1] 3\r 實際寫程式示範 我想要從兩個項目重複抽樣(如下),重複抽10個。我的打算是利用真假值過濾,例如我的設想是這樣\nkind\u0026lt;-c(\u0026quot;水壺\u0026quot;,\u0026quot;鐵網\u0026quot;)\rkind[c(T,F,T,T,F,T,F,T,F,F)]\r 😜其實上面的程式碼是matlab的寫法,我直接套在R上。\nkind\u0026lt;-c(\u0026quot;水壺\u0026quot;,\u0026quot;鐵網\u0026quot;)\rx\u0026lt;-rnorm(10)　#10 random number\rkind[x\u0026lt;0.5] # 預計小於５可以抽出來（因為我記得可以循環補）\r#\u0026gt; [1] \u0026quot;鐵網\u0026quot; NA NA NA NA NA NA\r 這是甚麼？👺😒 我知道ＮＡ是超出範圍的意思，可是不知道為甚麼他超出範圍\n#\u0026gt; [1] \u0026quot;鐵網\u0026quot; NA NA NA NA NA NA NA\r 可是我記得數字可以，例如\nkind\u0026lt;-c(\u0026quot;水壺\u0026quot;,\u0026quot;鐵網\u0026quot;)\rx\u0026lt;-c(1,2,1,2,1,1)\rkind[x]  執行結果 💯\n[1] \u0026quot;水壺\u0026quot; \u0026quot;鐵網\u0026quot; \u0026quot;水壺\u0026quot; \u0026quot;鐵網\u0026quot; \u0026quot;水壺\u0026quot; \u0026quot;水壺\u0026quot;\r ❓❓❓❓❓ 那我記得，真假值可以轉０，１成位數字，所以\nkind[as.numeric(x\u0026lt;0.5)]\r 結果\n[1] \u0026quot;水壺\u0026quot; \u0026quot;水壺\u0026quot; \u0026quot;水壺\u0026quot; \u0026quot;水壺\u0026quot; \u0026quot;水壺\u0026quot; \u0026quot;水壺\u0026quot; \u0026quot;水壺\u0026quot;\r 為甚麼❓提示\r 因為Ｒ是１為基底\nkind[as.numeric(x\u0026lt;0.5)+1]\r#\u0026gt; [1] \u0026quot;鐵網\u0026quot; \u0026quot;水壺\u0026quot; \u0026quot;水壺\u0026quot; \u0026quot;鐵網\u0026quot; \u0026quot;鐵網\u0026quot; \u0026quot;鐵網\u0026quot; \u0026quot;鐵網\u0026quot; \u0026quot;鐵網\u0026quot; \u0026quot;鐵網\u0026quot; \u0026quot;水壺\u0026quot;\r \n利用字串( character vector) 作為索引 每個元素可以有名稱:\n\u0026gt; x \u0026lt;- c(\u0026quot;first\u0026quot;=3, \u0026quot;second\u0026quot;=0, \u0026quot;third\u0026quot;=9)\r\u0026gt; x\r#\u0026gt; first second third #\u0026gt; 3 0 9 \u0026gt; class(x) # 注意:不是list #\u0026gt; [1] \u0026quot;numeric\u0026quot;\r\u0026gt; names(x)\r#\u0026gt; [1] \u0026quot;first\u0026quot; \u0026quot;second\u0026quot; \u0026quot;third\u0026quot; \u0026gt; x[\u0026quot;second\u0026quot;]\r#\u0026gt; second #\u0026gt; 0 \u0026gt; x[c(\u0026quot;first\u0026quot;, \u0026quot;third\u0026quot;)]\r#\u0026gt; first third #\u0026gt; 3 9\r a\u0026lt;-c(x=1:2,y=3:4)\ra[\u0026quot;x1\u0026quot;] # 不是a[x1]\r#\u0026gt; x1 #\u0026gt; 1\r ❓ a[\u0026quot;x1\u0026quot;]哪裡來的x1?提示\r \u0026gt; a\r#\u0026gt; x1 x2 y1 y2 #\u0026gt; 1 2 3 4\r\u0026gt; names(a)\r\u0026gt; # [1] \u0026quot;x1\u0026quot; \u0026quot;x2\u0026quot; \u0026quot;y1\u0026quot; \u0026quot;y2\u0026quot;\r \n[] 和[[]]的差別:\n原來的type是甚麼(例如,list 或vector),[]只是返回子集合(仍然是list或vector),但是[[]]則是返回內容.\n\u0026gt; x \u0026lt;- c(a = 1, b = 2, c = 3)\r\u0026gt; x[\u0026quot;a\u0026quot;]\r#\u0026gt; a #\u0026gt; 1 \u0026gt; x[[\u0026quot;a\u0026quot;]]\r#\u0026gt; [1] 1\r\u0026gt; x[1]\r#\u0026gt; a #\u0026gt; 1 \u0026gt; x[[1]]\r#\u0026gt; [1] 1\r 💡例如,我只要陣列的值,則x[[1]]可以用來去掉names。 和list的區別是\n $ 不必有\u0026quot;\u0026quot;  a1\u0026lt;-list(x=1:2,y=3:4)\ra1$x\r#\u0026gt; [1] 1 2\r \r\r怎樣變動矩陣向量? We can modify a vector using the assignment operator.\nWe can use the techniques discussed above to access specific elements and modify them.\nIf we want to truncate the elements, we can use reassignments.\n\u0026gt; x\r#\u0026gt; [1] -3 -2 -1 0 1 2\r\u0026gt; x[2] \u0026lt;- 0; x # 只改變第二個元素\r#\u0026gt; [1] -3 0 -1 0 1 2\r\u0026gt; x[x\u0026lt;0] \u0026lt;- 5; x # 將小於0的值,都改成5\r#\u0026gt; [1] 5 0 5 0 1 2\r\u0026gt; x \u0026lt;- x[1:4]; x # 只要1到4\r#\u0026gt; [1] 5 0 5 0\r How to delete a Vector? We can delete a vector by simply assigning a NULL to it.\n\u0026gt; x\r#\u0026gt; [1] -3 -2 -1 0 1 2\r\u0026gt; x \u0026lt;- NULL\r\u0026gt; x\r#\u0026gt; NULL\r\u0026gt; x[4]\r#\u0026gt; NULL\r 練習 ❓怎樣產生下面的向量?\nx\ra b a b a \u0026lt;NA\u0026gt; 1 2 3 4 5 6  提示\r x\u0026lt;-seq(1,5)\rnames(x)\u0026lt;-rep(c(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;),2)\r \n型態操作  判定型態 is family  is.numeric(), is.integer(), and is.double()   型態轉換 as family  a\u0026lt;-c(TRUE,FALSE)\ras.numeric(a)\r#\u0026gt; [1] 1 0\ran\u0026lt;-as.logical(a)\ran\r#\u0026gt; [1] TRUE FALSE\r assignment 練習\nhw1\nstructure \u0026amp; attributes 函數structure(data, ...)\n使用方法 先看一下範例\ncode=\u0026quot;這是範例\u0026quot;\rx=structure(list(src = code), ddd = 'source') x\r#\u0026gt; $src\r#\u0026gt; [1] \u0026quot;這是範例\u0026quot;\r#\u0026gt; attr(,\u0026quot;ddd\u0026quot;) 🏷這是第二個參數添進來的\r#\u0026gt; [1] \u0026quot;source\u0026quot;\r 再看另一個範例\ndata=\u0026quot;這是範例\u0026quot; 🏷只是字串\rx=structure(data, ddd = 'source') 🏷添加屬性ddd\rx 🏷看內容\r#\u0026gt; [1] \u0026quot;這是範例\u0026quot;\r#\u0026gt; attr(,\u0026quot;ddd\u0026quot;)\r#\u0026gt; [1] \u0026quot;source\u0026quot;\rattributes(data) 🏷看看屬性\r#\u0026gt; NULL 🏷data仍然是data,沒有新增的屬性\rattributes(x) 🏷傳回來的不僅有原來的data,還多了一個屬性\r#\u0026gt; $ddd\r#\u0026gt; [1] \u0026quot;source\u0026quot;\r 白話文就是 假設data是一個物件,則structure(data,xxx=\u0026quot;dd\u0026quot;),會根據這個物件再添加一個屬性xxx,然後傳回這個物件。\n因此要注意的是class這個attribute。在Ｒ中，class有另一個意思，用來代表物件類別（例如要自訂類別，可以利用這個class)\ndata=\u0026quot;string\u0026quot;\rclass(data)\r#\u0026gt; character 🏷這是字串\rx=structure(data,class=\u0026quot;risk\u0026quot;) #🏷👏現在物件x的類別不再是字串，而是類別risk\rclass(x)\r#\u0026gt; risk 🏷此時的類別被變更成risk\r"},
{"uri": "/blogR//rlang/4_1_2_type%E7%B7%B4%E7%BF%92.html","title": "4.1.2 練習",
	"tags": [],
	"description": "4_1_1_type練習",
	"content": "在R中,options()經常用來設定總體變數,例如套件blogdown可以設定options(blogdown.method = 'custom')。\n如果想要知道目前的設定情況,可以下指令options()，例如\noptions() # 🏷註解這是在視窗下執行的結果\r \roptions()的執行結果\r$add.smooth\r[1] TRUE\r$blogdown.author\r[1] \u0026quot;\u0026quot;\r$blogdown.ext\r[1] \u0026quot;.md\u0026quot;\r$blogdown.filename.pre_processor\r[1] NA\r$blogdown.files_filter\r[1] NA\r$blogdown.generator\r[1] NA\r$blogdown.hugo.args\r[1] NA\r$blogdown.hugo.dir\r[1] NA\r$blogdown.hugo.server\r[1] NA\r$blogdown.hugo.version\r[1] \u0026quot;0.84.4\u0026quot;\r$blogdown.initial_files\r[1] NA\r$blogdown.knit.on_save\r[1] TRUE\r$blogdown.knit.serve_site\r[1] NA\r(...省略...)\r$warning.length\r[1] 1000\r$width\r[1] 80\r$windowsTimeouts\r[1] 100 500\r  如上可以知道有一大串列表,如果我只想知道套件blogdown的設定列表，要怎樣做? 也就是怎樣篩選出我要的設定?\n 解法1:利用grep(),grepl() 解法2:sapply , 也是用到grep() 不能用 %in%  可以參考這裡\n提示\r  解法1  olist\u0026lt;-options() # list\rokey\u0026lt;-names(olist) # vector # \u0026quot;blogdown\u0026quot; %in% okey\ridx\u0026lt;-grep(\u0026quot;blogdown\u0026quot;,okey)\rolist[idx]\r #\u0026gt; $blogdown.method\r#\u0026gt; [1] \u0026quot;markdown\u0026quot;\r#\u0026gt; #\u0026gt; $blogdown.serve_site.startup\r#\u0026gt; [1] FALSE\r  解法2:看一下為甚麼不能用 %in%  olist\u0026lt;-options() # list\rokey\u0026lt;-names(olist) # vector rst \u0026lt;- sapply(okey,function(item){\u0026quot;blogdown\u0026quot; %in% unlist(strsplit(item,\u0026quot;\\\\.\u0026quot;)) })\rolist[rst]\r #\u0026gt; $blogdown.method\r#\u0026gt; [1] \u0026quot;markdown\u0026quot;\r#\u0026gt; #\u0026gt; $blogdown.serve_site.startup\r#\u0026gt; [1] FALSE\r  解釋這行: rst \u0026lt;- sapply(okey,function(item){\u0026quot;blogdown\u0026quot; %in% unlist(strsplit(item,\u0026quot;\\\\.\u0026quot;)) })\n  \\\\.而不是只有. strsplit()執行的結果是一個list而分離的元素在第一個node所以,用unlist %in%的用法  v=c(\u0026quot;1.2\u0026quot;,\u0026quot;1.3\u0026quot;)\r\u0026quot;1\u0026quot; %in% v\r #\u0026gt; [1] FALSE\r \n⛳ ❓在主控台上的比較多,但是在rmarkdown chunk只有看到幾個,因為在rmarkdown中沒有載入blogdown套件。\n練習:找出目前的語系 利用l10n_info() 找出目前的語系,而不是一連串真假值。提示\r l10n_info()[2:3][(l10n_info()[2:3])==TRUE]\r \n"},
{"uri": "/blogR//rlang/4_15_json.html","title": "4.15 json",
	"tags": [],
	"description": "4_15_json",
	"content": "if(!require(\u0026quot;rjson\u0026quot;)){\rinstall.packages(\u0026quot;rjson\u0026quot;)\r}\r#\u0026gt; 載入需要的套件：rjson\rx \u0026lt;- list( alpha = 1:5, beta = \u0026quot;Bravo for nonthing\u0026quot;, gamma = list(a=1:3, b=NULL), delta = c(TRUE, FALSE) )\rjson \u0026lt;- toJSON( x )\rhugocmd(\u0026quot;expand\u0026quot; ,'title=\u0026quot;\u0026quot; incode=true')\r#\u0026gt; \r展開\rjson# \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026#34;codenote nopre\u0026#34;\u0026gt;🏷\u0026lt;span class=\u0026#34;tooltiptext\u0026#34; \u0026gt;你好\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; [1] \u0026#34;{\\\u0026#34;alpha\\\u0026#34;:[1,2,3,4,5],\\\u0026#34;beta\\\u0026#34;:\\\u0026#34;Bravo for nonthing\\\u0026#34;,\\\u0026#34;gamma\\\u0026#34;:{\\\u0026#34;a\\\u0026#34;:[1,2,3],\\\u0026#34;b\\\u0026#34;:null},\\\u0026#34;delta\\\u0026#34;:[true,false]}\u0026#34;\rhugocmd(m=\u0026#34;expand\u0026#34; ,end=T)\r#\u0026gt; \rfromJSON( json )\r#\u0026gt; $alpha\r#\u0026gt; [1] 1 2 3 4 5\r#\u0026gt; #\u0026gt; $beta\r#\u0026gt; [1] \u0026quot;Bravo for nonthing\u0026quot;\r#\u0026gt; #\u0026gt; $gamma\r#\u0026gt; $gamma$a\r#\u0026gt; [1] 1 2 3\r#\u0026gt; #\u0026gt; $gamma$b\r#\u0026gt; NULL\r#\u0026gt; #\u0026gt; #\u0026gt; $delta\r#\u0026gt; [1] TRUE FALSE\r"},
{"uri": "/blogR//rlang/4_3_type_matrix.html","title": "4.3 矩陣",
	"tags": [],
	"description": "基本語法",
	"content": "matrix 矩陣的建立有多種方式,其中一種是利用向量填充矩陣，填入的方式預設是以coumn為主要方向。\nmatrix(c(1,2,3,4,5,6),2,3)\r #\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 1 3 5\r#\u0026gt; [2,] 2 4 6\r 問題: 怎樣產生\n$$ \\begin{bmatrix}1 \u0026amp; 2 \u0026amp; 3 \\\\ 4 \u0026amp; 5 \u0026amp; 6\\end{bmatrix} $$ 的矩陣提示\r \n其他練習\nmatrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), nrow = 3, byrow = TRUE, dimnames = list(c(\u0026quot;r1\u0026quot;, \u0026quot;r2\u0026quot;, \u0026quot;r3\u0026quot;), c(\u0026quot;c1\u0026quot;, \u0026quot;c2\u0026quot;, \u0026quot;c3\u0026quot;)))\r #\u0026gt; c1 c2 c3\r#\u0026gt; r1 1 2 3\r#\u0026gt; r2 4 5 6\r#\u0026gt; r3 7 8 9\r 矩陣的直行名稱和橫行名稱\nm1 \u0026lt;- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), ncol = 3)\rrownames(m1) \u0026lt;- c(\u0026quot;r1\u0026quot;, \u0026quot;r2\u0026quot;, \u0026quot;r3\u0026quot;)\rcolnames(m1) \u0026lt;- c(\u0026quot;c1\u0026quot;, \u0026quot;c2\u0026quot;, \u0026quot;c3\u0026quot;)\rm1\r #\u0026gt; c1 c2 c3\r#\u0026gt; r1 1 4 7\r#\u0026gt; r2 2 5 8\r#\u0026gt; r3 3 6 9\r c(1,2,3) 在數學中到底是直行或橫行的測試\na\u0026lt;-c(1,2,3) t(a) %*% a # 1x1  #\u0026gt; [,1]\r#\u0026gt; [1,] 14\r a %*% t(a) # 3x3\r #\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 1 2 3\r#\u0026gt; [2,] 2 4 6\r#\u0026gt; [3,] 3 6 9\r 合併矩陣 利用函數cbind() 可以合併同樣橫行數目的兩個矩陣,例如這裡C也是3個橫行:\nB = matrix( c(2, 4, 3, 1, 5, 7), nrow=3, ncol=2) B # 🏷👏要合併的矩陣\r #\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 2 1\r#\u0026gt; [2,] 4 5\r#\u0026gt; [3,] 3 7\r C = matrix( c(7, 4, 2), nrow=3, ncol=1) C # 🏷👏要合併的矩陣\r #\u0026gt; [,1]\r#\u0026gt; [1,] 7\r#\u0026gt; [2,] 4\r#\u0026gt; [3,] 2\r # C和B合併\rcbind(B, C)  #\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 2 1 7\r#\u0026gt; [2,] 4 5 4\r#\u0026gt; [3,] 3 7 2\r 同樣的,rbind() 也可以合併直行數目相同的兩個矩陣:\nD = matrix( c(6, 2), nrow=1, ncol=2) D\r #\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 6 2\r rbind(B, D)  #\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 2 1\r#\u0026gt; [2,] 4 5\r#\u0026gt; [3,] 3 7\r#\u0026gt; [4,] 6 2\r 合併方向的維度要一樣。怎樣知道維度?\ndim(B) # 🏷👏一次要知道多個矩陣的維度,可以應用lapply。 例如,lapply(list(B,C),dim)  #\u0026gt; [1] 3 2\r 😒 dim(c(1,2,3)) 結果是NULL , vector 的維度無法經由函數dim取得🤷‍♀️。\n將矩陣解構回向量:\n  方法1:可以利用c() 會把矩陣所有的直行都合併成一個直行.\nc(B)  #\u0026gt; [1] 2 4 3 1 5 7\r c(B,C)\r #\u0026gt; [1] 2 4 3 1 5 7 7 4 2\r   as.vector()\nas.vector(B)\r #\u0026gt; [1] 2 4 3 1 5 7\r   如果我要的是橫行?提示\r \n單位矩陣 \\(5\\times5\\)的單位矩陣\ndiag(1, nrow = 5)\r #\u0026gt; [,1] [,2] [,3] [,4] [,5]\r#\u0026gt; [1,] 1 0 0 0 0\r#\u0026gt; [2,] 0 1 0 0 0\r#\u0026gt; [3,] 0 0 1 0 0\r#\u0026gt; [4,] 0 0 0 1 0\r#\u0026gt; [5,] 0 0 0 0 1\r Transpose t(B)\r #\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 2 4 3\r#\u0026gt; [2,] 1 5 7\r 逆矩陣   solve() 因為 $$ AA^{-1}=I\na1 \u0026lt;- c(3, 2, 8)\ra2 \u0026lt;- c(6, 3, 2)\ra3 \u0026lt;- c(5, 2, 4)\rA \u0026lt;- rbind(a1, a2, a3)\rAinv\u0026lt;-solve(A,diag(3)) #🏷👏可以省略第二個參數\rii\u0026lt;-A %*% Ainv\rprint(ii)\r #\u0026gt; [,1] [,2] [,3]\r#\u0026gt; a1 1.000000e+00 0.000000e+00 -1.110223e-16\r#\u0026gt; a2 8.326673e-17 1.000000e+00 -1.387779e-16\r#\u0026gt; a3 1.665335e-16 -2.220446e-16 1.000000e+00\r   inv() det() 😒🏷👏library(matlab)\nprint(det(A)) #🏷👏det!=0 所以有逆矩陣\r #\u0026gt; [1] -28\r print(solve(A))\r #\u0026gt; a1 a2 a3\r#\u0026gt; [1,] -0.2857143 -0.2857143 0.7142857\r#\u0026gt; [2,] 0.5000000 1.0000000 -1.5000000\r#\u0026gt; [3,] 0.1071429 -0.1428571 0.1071429\r   我想要知道上面的ii到底是不是單位矩陣,而我知道實數的比對可以用all.equal()\nall.equal(ii,diag(3))  但是出現這個訊息 #\u0026gt; [1] \u0026quot;Attributes: \u0026lt; Length mismatch: comparison on first 1 components \u0026gt;\u0026quot;\n提示\r all.equal(unname(ii),diag(3))\r #\u0026gt; [1] TRUE\r \n練習:解方程 $$ \\mathbf{A x} = \\mathbf{b} \\Rightarrow \\mathbf{A}^{-1} \\mathbf{A x} = \\mathbf{A}^{-1} \\mathbf{b} \\Rightarrow \\mathbf{x} = \\mathbf{A}^{-1} \\mathbf{b} $$\n$$ \\begin{bmatrix}14 \u0026amp; 32 \\\\ 32 \u0026amp; 77 \\end{bmatrix}X = \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix} $$\n提示\r m2\u0026lt;-cbind(c(14,32),c(32,77))\rb\u0026lt;-c(1,1)\rsolve(m2,b)\r #\u0026gt; [1] 0.8333333 -0.3333333\r \n常數項矩陣的逆: inv( kA ) = (1/k) * inv(A)\nif(!require(\u0026quot;matlib\u0026quot;)){\rinstall.packages(\u0026quot;matlab\u0026quot;,repos = \u0026quot;http://cran.us.r-project.org\u0026quot;)\r}\r #\u0026gt; 載入需要的套件：matlib\r library(matlib)\rA \u0026lt;- matrix( c(5, 1, 0,\r3,-1, 2,\r4, 0,-1), nrow=3, byrow=TRUE)\rsolve(5 * A)\r #\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 0.0125 0.0125 0.025\r#\u0026gt; [2,] 0.1375 -0.0625 -0.125\r#\u0026gt; [3,] 0.0500 0.0500 -0.100\r (1/5) * solve(A)\r #\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 0.0125 0.0125 0.025\r#\u0026gt; [2,] 0.1375 -0.0625 -0.125\r#\u0026gt; [3,] 0.0500 0.0500 -0.100\r inverse of diagonal matrix = diag( 1/ diagonal) 因為是分數, 所以可以考慮使用 MASS::fractions().\nD \u0026lt;- diag(c(1, 2, 4))\rsolve(D)\r #\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 1 0.0 0.00\r#\u0026gt; [2,] 0 0.5 0.00\r#\u0026gt; [3,] 0 0.0 0.25\r MASS::fractions( diag(1 / c(1, 2, 4)) )\r #\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 1 0 0 #\u0026gt; [2,] 0 1/2 0 #\u0026gt; [3,] 0 0 1/4\r inv(A) is symmetric if and only if A is symmetric\ninv( t(A) )  #\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 0.0625 0.6875 0.25\r#\u0026gt; [2,] 0.0625 -0.3125 0.25\r#\u0026gt; [3,] 0.1250 -0.6250 -0.50\r is_symmetric_matrix(A)\r #\u0026gt; [1] FALSE\r is_symmetric_matrix( inv( t(A) ) )\r #\u0026gt; [1] FALSE\r Here is a symmetric case:\nB \u0026lt;- matrix( c(4, 2, 2,\r2, 3, 1,\r2, 1, 3), nrow=3, byrow=TRUE)\rinv(B)\r #\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 0.50 -0.25 -0.25\r#\u0026gt; [2,] -0.25 0.50 0.00\r#\u0026gt; [3,] -0.25 0.00 0.50\r inv( t(B) )\r #\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 0.50 -0.25 -0.25\r#\u0026gt; [2,] -0.25 0.50 0.00\r#\u0026gt; [3,] -0.25 0.00 0.50\r is_symmetric_matrix(B)\r #\u0026gt; [1] TRUE\r is_symmetric_matrix( inv( t(B) ) )\r #\u0026gt; [1] TRUE\r all.equal( inv(B), inv( t(B) ) )  #\u0026gt; [1] TRUE\r 練習   利用上面的m1 回答下面的問題:\nm1[1, 2]\rm1[1:2, 2:3]\rm1[1,]\rm1[,2]\rm1[1:2,]\rm1[, 2:3]\rm1[-1,]\rm1[,-2]\rm1[c(\u0026quot;r1\u0026quot;, \u0026quot;r3\u0026quot;), c(\u0026quot;c1\u0026quot;, \u0026quot;c3\u0026quot;)]\rm1[1]\rm1[9]\rm1[3:7]\rm1 \u0026gt; 3\rm1[m1 \u0026gt; 3]\rm1 + m1\rm1 - 2*m1\rm1 * m1\rm1 / m1\rm1 ^ 2\rm1 %*% m1\rt(m1)\r   利用A,B,C證明: inverse of a matrix product: 🏷👏注意等號後面的順序 $$ (ABC)^{-1} = C^{-1} \\times B^{-1} \\times A^{-1} $$ ABC如下:\nA \u0026lt;- matrix( c(5, 1, 0,\r3,-1, 2,\r4, 0,-1), nrow=3, byrow=TRUE)\rB \u0026lt;- matrix(c(1, 2, 3, 1, 3, 2, 2, 4, 1), nrow=3, byrow=TRUE)\rC \u0026lt;- B[, 3:1]\r  "},
{"uri": "/blogR//rlang/4_4_type_list.html","title": "4.4 串列 list",
	"tags": [],
	"description": "基本語法",
	"content": "List Lists 是一個R物件。其元素內容可以是不同型態,例如 numbers, strings, vectors,matrix 或者是另一個 list，甚至是函數。\n在R語言中,矩陣向量通常是用來計算,而串列則是用來組織前兩者的一種最基本結構方式。\n建立 List 函數list() 可以建立list. list()中的參數用逗點隔開,幾個參數就幾個Node。\n#建立串列,其中的元素有向量,矩陣,和一個串列\rlist_data \u0026lt;- list(c(\u0026quot;Jan\u0026quot;,\u0026quot;Feb\u0026quot;,\u0026quot;Mar\u0026quot;), #🏷👏vector\rmatrix(c(3,9,5,1,-2,8), nrow = 2), #🏷👏matrix\rlist(\u0026quot;green\u0026quot;,12.3)) #🏷👏list\r 給串列中的每個元素命名 list中的元素可以命名,然後經由名稱存取。也可以說是給每個元素變數名稱。\n#建立串列,其中的元素有向量,矩陣,和一個串列\rlist_data \u0026lt;- list(c(\u0026quot;Jan\u0026quot;,\u0026quot;Feb\u0026quot;,\u0026quot;Mar\u0026quot;), #🏷👏 向量\rmatrix(c(3,9,5,1,-2,8), nrow = 2), #🏷👏 矩陣\rlist(\u0026quot;green\u0026quot;,12.3)) #🏷👏 串列\r# 給每個NODE命名 🏷👏上面只是建立list,裡面的元素可以由編號存取\rnames(list_data) \u0026lt;- c(\u0026quot;1st Quarter\u0026quot;, \u0026quot;A_Matrix\u0026quot;, \u0026quot;A Inner list\u0026quot;) #🏷👏第1個和第3個都是不合法的變數名稱\r#Show the list.\rprint(list_data)\r#\u0026gt; $`1st Quarter` 🏷👏注意反頓號,用來標示不合法的變數名稱\r#\u0026gt; [1] \u0026quot;Jan\u0026quot; \u0026quot;Feb\u0026quot; \u0026quot;Mar\u0026quot;\r#\u0026gt; #\u0026gt; $A_Matrix 🏷👏第2個元素\r#\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 3 5 -2\r#\u0026gt; [2,] 9 1 8\r#\u0026gt; #\u0026gt; $`A Inner list` 🏷👏第3個元素\r#\u0026gt; $`A Inner list`[[1]] 🏷👏因為第3個元素是list,而又沒有名稱,因此編號1,注意[[]]\r#\u0026gt; [1] \u0026quot;green\u0026quot;\r#\u0026gt; #\u0026gt; $`A Inner list`[[2]]\r#\u0026gt; [1] 12.3\r 帶名矩陣、向量、串列的比較 list可以帶有變數名稱,vecotr,matrix,data.frame 也可以。\n  vector:\nx=c(1,2,3)\rnames(x)\u0026lt;-c('a','b','c')\rx\r#\u0026gt; a b c #\u0026gt; 1 2 3\r \r指派符號\u0026lt;-的討論\r這裡討論一下為甚麼在R語言堅持`\u0026lt;-`而不是`=`的一個原因\r一般的程式語言,不會用到這種文法,例如,在其他程式語言中,直覺上應該是有一個`names()`,然後用法如下:\r```c names(x,c('a','b','c') )\r```\r👹因此`\u0026lt;-`不類似指派,而是類似流向某個物件的屬性。     matrix: names()的參數如果是matrix,是✔️給矩陣的每個元素命名。而不是❌欄位(column)或是紀錄(row)的名稱\nx\u0026lt;-matrix(runif(9),nrow=3)\rnames(x)\u0026lt;-c('a','b','c')\rx\r#\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 0.9139203 0.8162566 0.7813051\r#\u0026gt; [2,] 0.8105450 0.3592360 0.5047523\r#\u0026gt; [3,] 0.4284657 0.6444916 0.6322681\r#\u0026gt; attr(,\u0026quot;names\u0026quot;)\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; NA NA NA NA NA NA\r names \u0026amp; matrix\r rownames(x)\u0026lt;-c('x','y','z')\rprint(x,row.names=T) #🏷👏row.names=T 是預設\r#\u0026gt; [,1] [,2] [,3]\r#\u0026gt; x 0.9139203 0.8162566 0.7813051\r#\u0026gt; y 0.8105450 0.3592360 0.5047523\r#\u0026gt; z 0.4284657 0.6444916 0.6322681\r#\u0026gt; attr(,\u0026quot;names\u0026quot;)\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; NA NA NA NA NA NA\r 圖\r   data.frame: 但是在data.frame的結構中,names()\u0026lt;- 給定的是欄位名稱\nxd\u0026lt;-data.frame(x)\rnames(xd)\u0026lt;-c('a','b','c')\rxd\r#\u0026gt; Error in str(list(...)): '...' 的上下文用得不正確\r   ❓問:在上面的例子中x是一個矩陣,x[\u0026quot;a\u0026quot;]會傳回甚麼?提示\r 📝 x[\u0026quot;a\u0026quot;] 仍然帶名稱，但是x[[\u0026quot;a\u0026quot;]]僅僅傳回內容(不帶名稱)\ndata\u0026lt;-runif(9)\rnames(data) \u0026lt;- letters[5:7]\rdata[\u0026quot;e\u0026quot;]\r#\u0026gt; e #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏 仍然帶有名稱\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; 0.04835572 data[[\u0026quot;e\u0026quot;]]\r#\u0026gt; [1] 0.04835572 # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏 只有內容\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\ris.vector(data[\u0026quot;e\u0026quot;])\r#\u0026gt; [1] TRUE\ris.vector(data[[\u0026quot;e\u0026quot;]])\r#\u0026gt; [1] TRUE\ridentical(data[\u0026quot;e\u0026quot;],data[[\u0026quot;e\u0026quot;]])\r#\u0026gt; [1] FALSE\rx\u0026lt;-matrix(data,nrow=3) #轉成矩陣\rx\r#\u0026gt; [,1] [,2] [,3] \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏上面的名稱不會被轉入🤷‍♀️\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; [1,] 0.04835572 0.9641557 0.5600760\r#\u0026gt; [2,] 0.46890756 0.9957986 0.3604039\r#\u0026gt; [3,] 0.56452261 0.6176634 0.7830758\rnames(x)\u0026lt;-c('a','b','c')\rrownames(x)\u0026lt;-c('x','y','z')\rx\r#\u0026gt; [,1] [,2] [,3]\r#\u0026gt; x 0.04835572 0.9641557 0.5600760 \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏這一筆紀錄名稱為x\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; y 0.46890756 0.9957986 0.3604039\r#\u0026gt; z 0.56452261 0.6176634 0.7830758\r#\u0026gt; attr(,\u0026quot;names\u0026quot;)\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; NA NA NA NA NA NA \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏前三個元素有名稱其他沒有,這裡的結構是string vector長度9\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rx[\u0026quot;a\u0026quot;]\r#\u0026gt; a \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏 仍然帶有名稱\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; 0.04835572\rx[[\u0026quot;a\u0026quot;]]\r#\u0026gt; 0.04835572 \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏 不帶名稱,純粹是內容\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rstr(x[\u0026quot;a\u0026quot;]) \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏 帶有名稱的結構\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; Named num 0.0484\r#\u0026gt; - attr(*, \u0026quot;names\u0026quot;)= chr \u0026quot;a\u0026quot; \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏 attr(*,\u0026amp;quot;names\u0026amp;quot;)表示帶屬性names,其內容為名稱向量(因為chr \u0026amp;quot;a\u0026amp;quot;)\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rclass(x[\u0026quot;a\u0026quot;])\r#\u0026gt; [1] \u0026quot;numeric\u0026quot; #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏只有內容,為數值向量,而不是數值矩陣\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\ris.vector(x[\u0026quot;a\u0026quot;])\r#\u0026gt; [1] TRUE\ris.matrix(x[\u0026quot;a\u0026quot;])\r#\u0026gt; [1] FALSE #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏supprised👺 不是矩陣🤷‍♀️\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rx[\u0026quot;x\u0026quot;,1] # 🏷\r#\u0026gt; x #\u0026gt; 0.04835572\ris.vector(x[\u0026quot;x\u0026quot;,1])\r#\u0026gt; [1] TRUE\ris.matrix(x[\u0026quot;x\u0026quot;,1])\r#\u0026gt; [1] FALSE\r \n存取 List 元素 # 3個元素,分別是list, matrix, list\rlist_data \u0026lt;- list(c(\u0026quot;Jan\u0026quot;,\u0026quot;Feb\u0026quot;,\u0026quot;Mar\u0026quot;), matrix(c(3,9,5,1,-2,8), nrow = 2),\rlist(\u0026quot;green\u0026quot;,12.3))\r# 給名稱\rnames(list_data) \u0026lt;- c(\u0026quot;1st Quarter\u0026quot;, \u0026quot;A_Matrix\u0026quot;, \u0026quot;A Inner list\u0026quot;)\r# Access the first element of the list.\rprint(list_data[1])\r#\u0026gt; $`1st Quarter`\r#\u0026gt; [1] \u0026quot;Jan\u0026quot; \u0026quot;Feb\u0026quot; \u0026quot;Mar\u0026quot;\r# Access the thrid element. As it is also a list, all its elements will be printed.\rprint(list_data[3])\r#\u0026gt; $`A Inner list`\r#\u0026gt; $`A Inner list`[[1]]\r#\u0026gt; [1] \u0026quot;green\u0026quot;\r#\u0026gt; #\u0026gt; $`A Inner list`[[2]]\r#\u0026gt; [1] 12.3\r# Access the list element using the name of the element.\rprint(list_data$A_Matrix)\r#\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 3 5 -2\r#\u0026gt; [2,] 9 1 8\r list 元素的存取可以是[[]] 或 $ 例如x[[\u0026quot;a\u0026quot;]], x$a (或x$`a`)。\n[] 和 [[]] 的主要分別是,前者拿到子集合,後者拿到內容。\r\r\r處理list 元素 list的加入和刪除,只能在尾端，但是更改資料不受限制。\n# Create a list containing a vector, a matrix and a list.\rlist_data \u0026lt;- list(1,2,3) # # Give names to the elements in the list.\rnames(list_data) \u0026lt;- c(\u0026quot;1st Quarter\u0026quot;, \u0026quot;A_Matrix\u0026quot;, \u0026quot;A Inner list\u0026quot;)\r# 加入元素\rlist_data[4] \u0026lt;- \u0026quot;New element\u0026quot;\rprint(list_data[4])\r#\u0026gt; [[1]]\r#\u0026gt; [1] \u0026quot;New element\u0026quot;\r# 🔑移除最後一個元素\rlist_data[4] \u0026lt;- NULL\r# Print the 4th Element.\rprint(list_data[4])\r#\u0026gt; $\u0026lt;NA\u0026gt;\r#\u0026gt; NULL\r# Update the 3rd Element.\rlist_data[3] \u0026lt;- \u0026quot;updated element\u0026quot;\rprint(list_data[3])\r#\u0026gt; $`A Inner list`\r#\u0026gt; [1] \u0026quot;updated element\u0026quot;\r 問題\n list(1,2,3) 和 list(1:3) 有甚麼不同 c(1,2,3) 和 c(1:3) 有甚麼不同  提示\r list(1,2,3)\r#\u0026gt; [[1]]\r#\u0026gt; [1] 1\r#\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] 2\r#\u0026gt; #\u0026gt; [[3]]\r#\u0026gt; [1] 3\rlist(1:3)\r#\u0026gt; [[1]]\r#\u0026gt; [1] 1 2 3\rc(1:3)\r#\u0026gt; [1] 1 2 3\rc(1,2,3)\r#\u0026gt; [1] 1 2 3\r \n合併 Lists You can merge many lists into one list by placing all the lists inside one list() function.\n# Create two lists.\rlist1 \u0026lt;- list(1,2,3)\rlist2 \u0026lt;- list(\u0026quot;Sun\u0026quot;,\u0026quot;Mon\u0026quot;,\u0026quot;Tue\u0026quot;)\r# Merge the two lists.\rmerged.list \u0026lt;- c(list1,list2)\r# Print the merged list.\rprint(merged.list)\r#\u0026gt; [[1]]\r#\u0026gt; [1] 1\r#\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] 2\r#\u0026gt; #\u0026gt; [[3]]\r#\u0026gt; [1] 3\r#\u0026gt; #\u0026gt; [[4]]\r#\u0026gt; [1] \u0026quot;Sun\u0026quot;\r#\u0026gt; #\u0026gt; [[5]]\r#\u0026gt; [1] \u0026quot;Mon\u0026quot;\r#\u0026gt; #\u0026gt; [[6]]\r#\u0026gt; [1] \u0026quot;Tue\u0026quot;\r ❓ 在大部分程式語言中,向量的意思,只要元素同型態就行。又，我們已經知道,函數c可以產生向量。上面的程式碼中,利用c將兩個list 合併,我們按照大部分程式語言的觀念知道,既然元素都是相同型態(都是list),那就是2個元素，但是現在是6個,為甚麼?\n👍 函數c()是一個多型函數(物件語言中的講法就是根據參數的不同,而有不同的結果)。這裡的結果是6個元素。每個元素都是list(證明:list)。\n\r\r ❓如果要2個?  📝 那就是merged.list2\u0026lt;-list(list1,list2)。   ❓ merge.list\u0026lt;-c(x,y) 中的merge是不是物件的意思?  👍 不是。只是個合法的變數。    \r\r❓ 寫一個函數,合併兩個list,但是要求兩個list中有同名的元素必須是第2個中的名稱。例如 list(a=1,b=2,c=3), list(b=4) 合併後變成 a=1,b=4,c=3。\n📝\nmerge_list = function(x, y) {\rx[names(y)] = y\rx\r}\r \r\rList 轉 Vector 函數 unlist()\n# Create lists.\rlist1 \u0026lt;- list(1:5) # 🏷不是產生5個NODE的串列,而是先產生5個元素的向量,然後放到第一個節點\rprint(list1)\r#\u0026gt; [[1]]\r#\u0026gt; [1] 1 2 3 4 5\rlist2 \u0026lt;-list(10:14)\rprint(list2)\r#\u0026gt; [[1]]\r#\u0026gt; [1] 10 11 12 13 14\r# Convert the lists to vectors.\rv1 \u0026lt;- unlist(list1)\rv2 \u0026lt;- unlist(list2)\rprint(v1)\r#\u0026gt; [1] 1 2 3 4 5\rprint(v2)\r#\u0026gt; [1] 10 11 12 13 14\r# Now add the vectors\rresult \u0026lt;- v1+v2\rprint(result)\r#\u0026gt; [1] 11 13 15 17 19\r ❓ 如果是list中的內容有不一樣的型態呢?例如\nx\u0026lt;-list(\u0026quot;a\u0026quot;,1)\ry\u0026lt;-unlist(x)\rtypeof (y)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r \r\r比較vector, list中,字串的問題  Q length()函數可以知道vector,list 的長度,但是為甚麼length(\u0026quot;hello\u0026quot;)的長度是1?  a\u0026lt;-c(\u0026quot;hello\u0026quot;,\u0026quot;r\u0026quot;)\rlength(a) #💡\r#\u0026gt; [1] 2\rlength(a[1]) #💡\r#\u0026gt; [1] 1\rlength(a[[1]]) #💡\r#\u0026gt; [1] 1\rnchar(a[1]) #🔑\r#\u0026gt; [1] 5\rlength(\u0026quot;hello\u0026quot;) #❓\r#\u0026gt; [1] 1\r 圖\r  Q  a\u0026lt;-list(\u0026quot;hello\u0026quot;,\u0026quot;r\u0026quot;)\rlength(a)\r#\u0026gt; [1] 2\rlength(a[1])\r#\u0026gt; [1] 1\rlength(a[[1]])\r#\u0026gt; [1] 1\rtypeof(\u0026quot;xxx\u0026quot;) #💡\r#\u0026gt; [1] \u0026quot;character\u0026quot;\rtypeof(1) #💡\r#\u0026gt; [1] \u0026quot;double\u0026quot;\rtypeof(1L) #💡\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\r 上面兩個答案的問題,和R怎樣建立字串有關 📝總之,字串長度函數🔑nchar()。\n練習 data set build in 如果現在要做一個清單,列出有哪些內建資料可以用,有空可以來查一下,要怎麼做?我們可以打指令data(),但是他會出現在視窗中。\n  我們知道可以指派給某個變數,就不會顯示結果(就是不會出現視窗),所以\nbuilding_data\u0026lt;-data()    看一下結構\nstr(building_data)\r#\u0026gt; List of 4\r#\u0026gt; $ title : chr \u0026quot;Data sets\u0026quot;\r#\u0026gt; $ header : NULL\r#\u0026gt; $ results: chr [1:104, 1:4] \u0026quot;datasets\u0026quot; \u0026quot;datasets\u0026quot; \u0026quot;datasets\u0026quot; \u0026quot;datasets\u0026quot; ... #🏷👏應該在這裡,但是這是甚麼\r#\u0026gt; ..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r#\u0026gt; .. ..$ : NULL\r#\u0026gt; .. ..$ : chr [1:4] \u0026quot;Package\u0026quot; \u0026quot;LibPath\u0026quot; \u0026quot;Item\u0026quot; \u0026quot;Title\u0026quot;\r#\u0026gt; $ footer : chr \u0026quot;Use 'data(package = .packages(all.available = TRUE))'\\nto list the data sets in all *available* packages.\u0026quot;\r#\u0026gt; - attr(*, \u0026quot;class\u0026quot;)= chr \u0026quot;packageIQR\u0026quot;\r   想要知道results的結構\nstr(building_data$results)\r#\u0026gt; chr [1:104, 1:4] \u0026quot;datasets\u0026quot; \u0026quot;datasets\u0026quot; \u0026quot;datasets\u0026quot; \u0026quot;datasets\u0026quot; \u0026quot;datasets\u0026quot; ...\r#\u0026gt; - attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r#\u0026gt; ..$ : NULL\r#\u0026gt; ..$ : chr [1:4] \u0026quot;Package\u0026quot; \u0026quot;LibPath\u0026quot; \u0026quot;Item\u0026quot; \u0026quot;Title\u0026quot;\rclass(building_data$results)\r#\u0026gt; [1] \u0026quot;matrix\u0026quot; \u0026quot;array\u0026quot;\r   知道是矩陣\nas.data.frame(building_data$results)\r#\u0026gt; Error in str(list(...)): '...' 的上下文用得不正確\r   其他相關指令\ndata(mtcars)\rnrow(mtcars)\r#\u0026gt; [1] 32\rncol(mtcars)\r#\u0026gt; [1] 11\r 練習 拿元素 [ 大概涵蓋了所有存取元素的方法參考\n❓如果資料如下,\n\u0026gt; data\rV1 V2\r1 12.448 13.919\r2 22.242 4.606\r3 24.509 0.176\r 則下面指令分別拿到甚麼?\ndata[1,1]\rdata[1,\u0026quot;V1\u0026quot;]\rdata$V1[1]\rdata[[1]][1]\rdata[[\u0026quot;V1\u0026quot;]][1]\r alist 如下\nalist \u0026lt;- list(x1=numeric(0), x2=\u0026quot;foo\u0026quot;, x3=numeric(0), x4=2:5)\r  找出長度不是0的元素 找出長度是0的元素名稱  提示\r  找出長度不是0的元素 alist[lapply(alist, length) \u0026gt; 0]\r  找出長度是0的元素名稱 names(l)[lapply(l, length) == 0]\r   \n如何檢查下面的foo是否包含a,b,c ?\nfoo \u0026lt;- list(a=42, b=NULL)\r 提示\r  方法1 is.null(foo[[\u0026quot;a\u0026quot;]]) # FALSE\ris.null(foo[[\u0026quot;b\u0026quot;]]) # TRUE, but the element \u0026quot;exists\u0026quot;...\ris.null(foo[[\u0026quot;c\u0026quot;]]) # TRUE\r  方法2 \u0026quot;a\u0026quot; %in% names(foo) # TRUE\r\u0026quot;b\u0026quot; %in% names(foo) # TRUE\r\u0026quot;c\u0026quot; %in% names(foo) # FALSE\r   \n"},
{"uri": "/blogR//rlang/4_5_type_string_function.html","title": "4.5 字串處理函數",
	"tags": ["字串"],
	"description": "4_5_type_string_function",
	"content": " title: 4_5_type_string_function description: 4_5_type_string_function tags: [] categories: [] series: [] editext: Rmarkdown \r字串函數 相關套件  package glu  函數 paste 最簡單的範例\npaste0(\u0026quot;x\u0026quot;,\u0026quot;y\u0026quot;,\u0026quot;z\u0026quot;)\r#\u0026gt; [1] \u0026quot;xyz\u0026quot;\r 範例\ns1 = c('hello','Copy') s2 = c('john','pen') print(paste(s1,s2,sep=\u0026quot; \u0026quot;,collapse=\u0026quot;-\u0026quot;))\r#\u0026gt; \u0026quot;hello john-Copy pen\u0026quot;  s1 s2   hello john  copy pen     圖\r 範例解說:\n paste0(c(1,2),c(3,4),collapse='') 會有甚麼答案? 怎樣得到\u0026quot;1234\u0026quot;  結果為1324 (不是 1234)\n 先兩個參數之間的相連,結果是(\u0026quot;13\u0026quot;,\u0026quot;24\u0026quot;)，長度為2的向量。 然後如果還要成為一個向量,可以給定參數collaose=\u0026quot;\u0026quot;,因此上例的執行結果為 \u0026quot;1324\u0026quot;。 如果沒有給參數,collapse=\u0026quot;any\u0026quot;則,不會collapse。例如上例如果不給collapse,則執行結果是(\u0026quot;13\u0026quot;,\u0026quot;24\u0026quot;)  💡 paste0()是paste()的簡化版。paste0()預設分隔字元(separator)為\u0026quot;\u0026quot;(無法更改),如果要用其他的分隔字元必須使用函數paste()。\nrst=paste0(c(1,2)) rst # 🏷✔rst=c(\u0026quot;1\u0026quot;,\u0026quot;2\u0026quot;) 長度為2(因為只有一個參數,又沒有指定參數collapse)\r#\u0026gt; [1] \u0026quot;1\u0026quot; \u0026quot;2\u0026quot;\rlength(rst)\r#\u0026gt; [1] 2\rrst=paste0(c(1,2),c(3,4),collapse=\u0026quot;*\u0026quot;)\rrst\r#\u0026gt; [1] \u0026quot;13*24\u0026quot;\rlength(rst)\r#\u0026gt; [1] 1\rrst=paste(c(1,2),c(3,4),collapse=\u0026quot;*\u0026quot;)\rrst\r#\u0026gt; [1] \u0026quot;1 3*2 4\u0026quot;\rlength(rst)\r#\u0026gt; [1] 1\r R提供的字串函數(ascii)  nchar: string length paste: concatenate strings substr: substring toupper: convert entire string to uppercase tolower: convert entire string to lowercase chartr: character map replacement (like \u0026quot;tr\u0026quot;) strtrim：trunates string  nchar, substr, toupper, tolower will accept string vectors as arguments and return vector results.\nstrtrim accepts both a vector of strings and a vector of truncation positions.\n \\': 等同於 \u0026quot;'\u0026quot; . \\\u0026quot;: 等同於 '\u0026quot;'. \\n: newline. \\r: carriage return. \\t: tab character.   Note: cat() and print() 處理逃逸字元的方式不一樣如果要在螢幕上解讀上面的字串,需要的是 cat().\n print(\u0026quot;a\\nb\u0026quot;)\r#\u0026gt; [1] \u0026quot;a\\nb\u0026quot;\rcat(\u0026quot;a\\nb\u0026quot;)\r#\u0026gt; a\r#\u0026gt; b\r 練習 collapse 的範例,問下面的程式的執行結果\npaste(c('A', 'B', 'C'), 1:7, sep=\u0026quot;-\u0026quot;, collapse=\u0026quot;/\u0026quot;)\r 提示\r # [1] \u0026quot;A-1/B-2/C-3/A-4/B-5/C-6/A-7\u0026quot;\r \n應用範例macro   version 1\nx\u0026lt;- \u0026quot;${1} is good\u0026quot;\rgsub(\u0026quot;\\\\$\\\\{1\\\\}\u0026quot;,\u0026quot;dog\u0026quot;,x)\r#\u0026gt; [1] \u0026quot;dog is good\u0026quot;\r   version 2 改成函數\nmstr\u0026lt;-function (src,mto)\r{\rreturn (gsub(\u0026quot;\\\\$\\\\{1\\\\}\u0026quot;,mto,src))\r}\rx\u0026lt;- \u0026quot;${1} is good\u0026quot;\rmstr(x,\u0026quot;dog\u0026quot;)\r#\u0026gt; [1] \u0026quot;dog is good\u0026quot;\r   函數 sprintf() Specifier Value Type   %c Character  %d or %i Signed Decimal Integer  %e or %E Scientific notation  %f Decimal Floating Point  %u Unsigned Decimal Integer  %p Pointer address     函數 strsplit() 利用逗號分解,然後提取KEY,VALUE。\nstr= \u0026quot;cmd=bstable,class=\\\u0026quot;d-block w-50\\\u0026quot;,style=\\\u0026quot;display:none\\\u0026quot;\u0026quot;\rstrsplit(str,\u0026quot;,\u0026quot;) #🏷如果str 是字串陣列,那麼N個字串就會有N個分割,這裡只有一個分割,因此產生1個節點,這個節點是3元素的字串陣列。\r#\u0026gt; [[1]]\r#\u0026gt; [1] \u0026quot;cmd=bstable\u0026quot; \u0026quot;class=\\\u0026quot;d-block w-50\\\u0026quot;\u0026quot; \u0026quot;style=\\\u0026quot;display:none\\\u0026quot;\u0026quot;\runlist(strsplit(str,\u0026quot;,\u0026quot;)) # 🏷產生向量\r#\u0026gt; [1] \u0026quot;cmd=bstable\u0026quot; \u0026quot;class=\\\u0026quot;d-block w-50\\\u0026quot;\u0026quot; \u0026quot;style=\\\u0026quot;display:none\\\u0026quot;\u0026quot;\ras.list(unlist(strsplit(str,\u0026quot;,\u0026quot;)))\r#\u0026gt; [[1]]\r#\u0026gt; [1] \u0026quot;cmd=bstable\u0026quot;\r#\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] \u0026quot;class=\\\u0026quot;d-block w-50\\\u0026quot;\u0026quot;\r#\u0026gt; #\u0026gt; [[3]]\r#\u0026gt; [1] \u0026quot;style=\\\u0026quot;display:none\\\u0026quot;\u0026quot;\r misc 函數 get() assign() 用來利用字串而不是變數來存取物件。而 as.name() 可以用來將字串轉為變數。 (可以配合 substitute() 建立 expression 然後eval() 。\n例如 assign(\u0026quot;a\u0026quot;,get(\u0026quot;b\u0026quot;)) 相當於 a\u0026lt;-b 。\n比較常見的方法是利用list()，例如\nobj\u0026lt;-list(a=1,b=2)\robj[[\u0026quot;a\u0026quot;]]\u0026lt;-otherobj[[\u0026quot;b\u0026quot;]]\r 此時obj[[\u0026quot;a\u0026quot;]] 是對元素a的參考。\n"},
{"uri": "/blogR//rlang/4_6_type_dataframe.html","title": "4.6 資料集 data frame",
	"tags": [],
	"description": "4_6_Type_DataFrame",
	"content": "簡單介紹一下手動建立data.frame 3個欄位，分別是a,b,f\na \u0026lt;- c(1, 2, 3, 4)\rb \u0026lt;- c(2, 4, 6, 8)\rlevels \u0026lt;- factor(c(\u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;))\rbubba \u0026lt;- data.frame(first = a,\rsecond = b,\rf = levels)\rbubba\r first second f   1 2 A  2 4 B  3 6 A  4 8 B     summary(bubba)\r#\u0026gt; first second f #\u0026gt; Min. :1.00 Min. :2.0 A:2 #\u0026gt; 1st Qu.:1.75 1st Qu.:3.5 B:2 #\u0026gt; Median :2.50 Median :5.0 #\u0026gt; Mean :2.50 Mean :5.0 #\u0026gt; 3rd Qu.:3.25 3rd Qu.:6.5 #\u0026gt; Max. :4.00 Max. :8.0\rbubba$first\r#\u0026gt; [1] 1 2 3 4\rbubba$second\r#\u0026gt; [1] 2 4 6 8\rbubba$f\r#\u0026gt; [1] A B A B\r#\u0026gt; Levels: A B\r 函數attach(): 如果不想要打$字號,則用attach(資料集名稱)先把資料集載入\nattach(mtcars)\rplot(wt, mpg) abline(lm(mpg~wt))\rtitle(\u0026quot;Regression of MPG on Weight\u0026quot;)\r data frame 的常用函數：  head() - shows first 6 rows tail() - shows last 6 rows dim() - returns the dimensions of data frame (i.e. number of rows and number of columns) nrow() - number of rows ncol() - number of columns str() - structure of data frame - name, type and preview of data in each column names() - shows the names attribute for a data frame, which gives the column names. sapply(dataframe, class) - shows the class of each column in the data frame    利用read.csv讀入的data.frame : tree\ntree = read.csv(\u0026quot;./resources/trees91.csv\u0026quot;, header = TRUE, sep = \u0026quot;,\u0026quot;);\r# 順便看看結構\rtypeof(tree)\r#\u0026gt; [1] \u0026quot;list\u0026quot;\rclass(tree)\r#\u0026gt; [1] \u0026quot;data.frame\u0026quot;\ris.data.frame(tree)\r#\u0026gt; [1] TRUE\r   tree是一個data.frame, 但也是list,那麼[]和[[]]的應用就和之前討論的一樣：\ntree[1] #\r \r展開\rC   1  1  1  1  1  1  1  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  3  3  3  3  3  3  3  3  3  3  4  4  4  4  4  4  4  4  4  4  4  4  4    \r tree[[1]] #\u0026gt; [1] 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3\r#\u0026gt; [39] 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4\rclass(tree[1]) # data.frame\r#\u0026gt; [1] \u0026quot;data.frame\u0026quot;\rclass(tree[[1]]) # integer\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\rtypeof(tree[1]) # list\r#\u0026gt; [1] \u0026quot;list\u0026quot;\rtypeof(tree$C) # integer\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\rtypeof(tree[[1]]) # integer\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\r  tree[1] 是一個list tree[[1]] 外圍的tree[]首先被解讀為list類別,然後[1]傳到類別     複習一下:[[ vs [\n由typeof,class看起來\n  [[抽取list中的元素 [只是分割list,中的subset  範例\nL3 \u0026lt;- LETTERS[1:3]\rfac \u0026lt;- sample(L3, 10, replace = TRUE)\r(d \u0026lt;- data.frame(x = 1, y = 1:10, fac = fac)) #🏷👏這裡又加一個括號,表示會有返回值,也就是列印的意思\r x y fac   1 1 C  1 2 A  1 3 A  1 4 C  1 5 A  1 6 A  1 7 A  1 8 B  1 9 B  1 10 A     data.frame(1, 1:10, sample(L3, 10, replace = TRUE)) # 🏷👏參數類型不使用x=1:10 👏如果直接給值,會自動給欄位名稱 #  \r資料(注意欄位名稱)\rX1 X1.10 sample.L3..10..replace...TRUE.   1 1 A  1 2 C  1 3 B  1 4 B  1 5 C  1 6 B  1 7 A  1 8 B  1 9 A  1 10 C    \r is.data.frame(d)\r#\u0026gt; [1] TRUE\r(dd \u0026lt;- cbind(d, char = I(letters[1:10]))) # 🏷👏R語言的這個自動轉換,常出問題,利用函數I()表示不要轉換\r x y fac char   1 1 C a  1 2 A b  1 3 A c  1 4 C d  1 5 A e  1 6 A f  1 7 A g  1 8 B h  1 9 B i  1 10 A j     rbind(class = sapply(dd, class), mode = sapply(dd, mode))\r#\u0026gt; x y fac char #\u0026gt; class \u0026quot;numeric\u0026quot; \u0026quot;integer\u0026quot; \u0026quot;character\u0026quot; \u0026quot;AsIs\u0026quot; #\u0026gt; mode \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot; \u0026quot;character\u0026quot; \u0026quot;character\u0026quot;\rstopifnot(1:10 == row.names(d)) # #🏷👏函數stopifnot()錯誤檢查用,如果參數不是T就停止{coercion}\rstr(d0 \u0026lt;- d[, FALSE]) # data frame with 0 columns and 10 rows\r#\u0026gt; 'data.frame':\t10 obs. of 0 variables\rstr(d00 \u0026lt;- d0[FALSE, ]) # data frame with 0 columns and 0 rows\r#\u0026gt; 'data.frame':\t0 obs. of 0 variables\rstr(d.0 \u0026lt;- d[FALSE, ]) # \u0026lt;0 rows\u0026gt; data frame (3 named cols)\r#\u0026gt; 'data.frame':\t0 obs. of 3 variables:\r#\u0026gt; $ x : num #\u0026gt; $ y : int #\u0026gt; $ fac: chr\rd[,c(T,F)] # 🏷👏上面3個,只是用來驗證循環填補\r x fac   1 C  1 A  1 A  1 C  1 A  1 A  1 A  1 B  1 B  1 A    "},
{"uri": "/blogR//rlang/4_7_type_factor.html","title": "4.7 因子",
	"tags": [],
	"description": "4_7_type_factor",
	"content": "\r附件\r\rJournals.csv\r\rsample1.csv\r\rsample2.csv\r\rsample3.csv\r\rsimple.csv\r\rsmoker.csv\r\rtrees91.csv\r\rwh.csv\r\rwh_zh_950.csv\r\rwh_zh_utf8.csv\r\r Factors R也能把資料存為factor。\n在大部分實驗中,某些解釋變數經常有不同程度的測試,稱為因子。 大意如下：\n ... includes trials for different levels of some explanatory variable. The different levels are also called factors.\n factor , levels fert = c(10,20,20,50,10,20,10,50,20)\rfert = factor(fert,levels=c(10,20,50),ordered=TRUE) #🏷👏這裡有沒有給levels無差別,因為內定就是unique value為標籤\rstr(fert)\r#\u0026gt; Ord.factor w/ 3 levels \u0026quot;10\u0026quot;\u0026lt;\u0026quot;20\u0026quot;\u0026lt;\u0026quot;50\u0026quot;: 1 2 2 3 1 2 1 3 2\r   levels()可以顯示變數類別為factor的標籤。白話文就是用在factor()函數之後。\n  levels(fert) 產生一個「字串向量」\nlevels(fert) #🏷👏函數levels()的參數是factor如果傳數字向量,結果是NULL\r#\u0026gt; [1] \u0026quot;10\u0026quot; \u0026quot;20\u0026quot; \u0026quot;50\u0026quot;\rstr(levels(fert)) # 🏷👏只是字串向量\r#\u0026gt; chr [1:3] \u0026quot;10\u0026quot; \u0026quot;20\u0026quot; \u0026quot;50\u0026quot;\r     fert 的內容，如果忽略標籤本身，其實是數字\nfert\r#\u0026gt; [1] 10 20 20 50 10 20 10 50 20\r#\u0026gt; Levels: 10 \u0026lt; 20 \u0026lt; 50\rtypeof(fert)\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\rclass(fert)\r#\u0026gt; [1] \u0026quot;ordered\u0026quot; \u0026quot;factor\u0026quot;\rstr(fert)\r#\u0026gt; Ord.factor w/ 3 levels \u0026quot;10\u0026quot;\u0026lt;\u0026quot;20\u0026quot;\u0026lt;\u0026quot;50\u0026quot;: 1 2 2 3 1 2 1 3 2\r  💡 因此, attr(x,\u0026quot;levels\u0026quot;)=levels(x)。    上面的typeof(fert)說是數字,但是如果真的把它當成數字向量,又無法利用函數mean計算平均💣\nmean(fert)\r#\u0026gt; Warning in mean.default(fert): 引數不是數值也不是邏輯值：回覆 NA\r#\u0026gt; [1] NA #🏷👏無法計算平均,因為factor不是數值\r   必須轉換:\nmean(as.numeric(levels(fert)[fert]))\r#\u0026gt; [1] 23.33333\r   那麼最小值呢?\nmin(fert)\r#\u0026gt; [1] 10\r#\u0026gt; Levels: 10 \u0026lt; 20 \u0026lt; 50\r   ❓為甚麼上面的求最小可以,這裡又不行?\nfert = c(10,20,20,50,10,20,10,50,20)\rfert = factor(fert,levels=c(10,20,50) ) # 🏷👏這裡的因子沒有指定順序,所以也沒有最小,最大\rmin(fert)\r#\u0026gt; Error in Summary.factor(structure(c(1L, 2L, 2L, 3L, 1L, 2L, 1L, 3L, 2L: 'min' 對因子沒有意義\r 探索 a \u0026lt;- factor(c(\u0026quot;A\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;C\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;C\u0026quot;))\r 預期答案是factor,ok。\nclass(a)\r#\u0026gt; [1] \u0026quot;factor\u0026quot;\r 因為a已經被編碼，預期是numeric，這裡答案直接給定integer:\ntypeof(a)\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\r a是一個factor,所以a[]代表a的一個子集合，因此結果看起來也是類似原來a的型態：\na[1]\r#\u0026gt; [1] A\r#\u0026gt; Levels: A B C\r 驗證是不是和上面的表示方式一樣：\na\r#\u0026gt; [1] A A B A B B C A C\r#\u0026gt; Levels: A B C\r 所以，a,a[]都是類型為factor的變數。\n按照之前[]和[[]]的規則，這裡會出現什麼？\na[[1]]\r#\u0026gt; [1] A\r#\u0026gt; Levels: A B C\r 出現的結果和a[1]一樣，這說明了，a的結構不是list,利用str()函數看一下確認：\nstr(a)\r#\u0026gt; Factor w/ 3 levels \u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;,\u0026quot;C\u0026quot;: 1 1 2 1 2 2 3 1 3\r 總之，a[1] a[[1]] 都是Factor 沒有[ 和 [[ 的分別。這個factor也是r的內建資料型態。 其他驗證如下，自行推敲：\n\u0026gt; typeof(a[[1]])\r[1] \u0026quot;integer\u0026quot;\r\u0026gt; typeof(a[1])\r[1] \u0026quot;integer\u0026quot;\r\u0026gt; class(a[[1]])\r[1] \u0026quot;factor\u0026quot;\r\u0026gt; class(a[1])\r[1] \u0026quot;factor\u0026quot;\r 常用來和table配合\ntable(a) #🏷👏ABC分別出現幾次\r#\u0026gt; a\r#\u0026gt; A B C #\u0026gt; 4 3 2\r 利用summary函數的時候,這裡不再列出5個統計量:\nsummary(a) #🏷👏ABC分別出現幾次\r#\u0026gt; A B C #\u0026gt; 4 3 2\r \rtable,summary\r看一下table(a),summary(a)的資料結構是什麼？\nstr(table(a))\r#\u0026gt; 'table' int [1:3(1d)] 4 3 2\r#\u0026gt; - attr(*, \u0026quot;dimnames\u0026quot;)=List of 1\r#\u0026gt; ..$ a: chr [1:3] \u0026quot;A\u0026quot; \u0026quot;B\u0026quot; \u0026quot;C\u0026quot;\rstr(summary(a))\r#\u0026gt; Named int [1:3] 4 3 2\r#\u0026gt; - attr(*, \u0026quot;names\u0026quot;)= chr [1:3] \u0026quot;A\u0026quot; \u0026quot;B\u0026quot; \u0026quot;C\u0026quot;\r class(table(a))\r#\u0026gt; [1] \u0026quot;table\u0026quot;\rclass(summary(a))\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\r 輸出樣子看起來很像，但是結構一個是類別table一個是「整數向量」，然後每個元素都是因子的發生次數，帶有因子名字，這裡是\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;,\u0026quot;C\u0026quot;。\n 練習 ❓找回原來還沒被factor的向量。\nx\u0026lt;-c(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;c\u0026quot;) fx\u0026lt;-factor(x) # 現在x是一個factor  現在假定,我們只有fx,要找回x的內容。\n💡 hint:c(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;c\u0026quot;)[c(1,1,2,3,2)] ==\u0026gt; a,a,b,c,b 。\n提示\r x\u0026lt;-c(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;c\u0026quot;)\rfx\u0026lt;-factor(x) # 現在x是一個factor\r#💡\rx\u0026lt;-levels(fx)[fx] #現在又被轉回原來的x\r \nfactor 和函數read.csv() read.csv() 的傳回值的類別是data.frame。但是在讀檔的時候，如果遇到字串欄位，👺要注意是否會將字串欄位預設轉為factor欄位👺。\n觀察carbon dioxide 對樹木的生長速率 trees91.csv 。附件 \r資料註解\r The original spreadsheet is located at http://cdiac.ornl.gov/ftp/ndp061a/trees91.wk1. A description of the data file is located at http://cdiac.ornl.gov/ftp/ndp061a/ndp061a.txt .  \ntree = read.csv(\u0026quot;./resources/trees91.csv\u0026quot;, header = TRUE, sep = \u0026quot;,\u0026quot;);\r \r結構\rattributes(tree)\r#\u0026gt; $names\r#\u0026gt; [1] \u0026quot;C\u0026quot; \u0026quot;N\u0026quot; \u0026quot;CHBR\u0026quot; \u0026quot;REP\u0026quot; \u0026quot;LFBM\u0026quot; \u0026quot;STBM\u0026quot; \u0026quot;RTBM\u0026quot; \u0026quot;LFNCC\u0026quot; #\u0026gt; [9] \u0026quot;STNCC\u0026quot; \u0026quot;RTNCC\u0026quot; \u0026quot;LFBCC\u0026quot; \u0026quot;STBCC\u0026quot; \u0026quot;RTBCC\u0026quot; \u0026quot;LFCACC\u0026quot; \u0026quot;STCACC\u0026quot; \u0026quot;RTCACC\u0026quot;\r#\u0026gt; [17] \u0026quot;LFKCC\u0026quot; \u0026quot;STKCC\u0026quot; \u0026quot;RTKCC\u0026quot; \u0026quot;LFMGCC\u0026quot; \u0026quot;STMGCC\u0026quot; \u0026quot;RTMGCC\u0026quot; \u0026quot;LFPCC\u0026quot; \u0026quot;STPCC\u0026quot; #\u0026gt; [25] \u0026quot;RTPCC\u0026quot; \u0026quot;LFSCC\u0026quot; \u0026quot;STSCC\u0026quot; \u0026quot;RTSCC\u0026quot; #\u0026gt; #\u0026gt; $class\r#\u0026gt; [1] \u0026quot;data.frame\u0026quot;\r#\u0026gt; #\u0026gt; $row.names\r#\u0026gt; [1] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\r#\u0026gt; [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\r#\u0026gt; [51] 51 52 53 54\rnames(tree)\r#\u0026gt; [1] \u0026quot;C\u0026quot; \u0026quot;N\u0026quot; \u0026quot;CHBR\u0026quot; \u0026quot;REP\u0026quot; \u0026quot;LFBM\u0026quot; \u0026quot;STBM\u0026quot; \u0026quot;RTBM\u0026quot; \u0026quot;LFNCC\u0026quot; #\u0026gt; [9] \u0026quot;STNCC\u0026quot; \u0026quot;RTNCC\u0026quot; \u0026quot;LFBCC\u0026quot; \u0026quot;STBCC\u0026quot; \u0026quot;RTBCC\u0026quot; \u0026quot;LFCACC\u0026quot; \u0026quot;STCACC\u0026quot; \u0026quot;RTCACC\u0026quot;\r#\u0026gt; [17] \u0026quot;LFKCC\u0026quot; \u0026quot;STKCC\u0026quot; \u0026quot;RTKCC\u0026quot; \u0026quot;LFMGCC\u0026quot; \u0026quot;STMGCC\u0026quot; \u0026quot;RTMGCC\u0026quot; \u0026quot;LFPCC\u0026quot; \u0026quot;STPCC\u0026quot; #\u0026gt; [25] \u0026quot;RTPCC\u0026quot; \u0026quot;LFSCC\u0026quot; \u0026quot;STSCC\u0026quot; \u0026quot;RTSCC\u0026quot;\rstr(tree)\r#\u0026gt; 'data.frame':\t54 obs. of 28 variables:\r#\u0026gt; $ C : int 1 1 1 1 1 1 1 1 2 2 ...\r#\u0026gt; $ N : int 1 1 2 2 2 2 3 3 1 1 ...\r#\u0026gt; $ CHBR : chr \u0026quot;CL6\u0026quot; \u0026quot;CL7\u0026quot; \u0026quot;A1\u0026quot; \u0026quot;A1\u0026quot; ...\r#\u0026gt; $ REP : int 1 1 9 14 20 NA NA NA 9 14 ...\r#\u0026gt; $ LFBM : num 0.43 0.4 0.45 0.82 0.52 1.32 0.9 1.18 0.48 0.21 ...\r#\u0026gt; $ STBM : num 0.13 0.15 0.2 0.26 0.19 0.46 0.42 0.53 0.2 0.07 ...\r#\u0026gt; $ RTBM : num 0.29 0.25 0.21 0.29 0.25 0.48 0.47 0.78 0.28 0.22 ...\r#\u0026gt; $ LFNCC : num 1.84 1.82 1.54 1.75 2.01 1.45 1.8 1.53 1.58 1.26 ...\r#\u0026gt; $ STNCC : num 0.4 0.37 0.96 0.97 1.29 0.92 1.19 0.84 0.89 0.66 ...\r#\u0026gt; $ RTNCC : num 0.96 0.95 0.69 0.83 0.8 0.72 0.84 0.77 0.98 0.77 ...\r#\u0026gt; $ LFBCC : int 39 36 34 34 34 28 33 40 41 41 ...\r#\u0026gt; $ STBCC : int 18 26 19 19 19 15 20 27 17 17 ...\r#\u0026gt; $ RTBCC : int 41 35 22 22 22 21 21 23 16 16 ...\r#\u0026gt; $ LFCACC: num 0.26 0.28 0.29 0.29 0.29 0.36 0.26 0.3 0.3 0.3 ...\r#\u0026gt; $ STCACC: num 0.16 0.2 0.16 0.16 0.16 0.22 0.21 0.19 0.18 0.18 ...\r#\u0026gt; $ RTCACC: num 0.16 0.17 0.17 0.17 0.17 0.24 0.17 0.13 0.18 0.18 ...\r#\u0026gt; $ LFKCC : num 0.88 0.93 0.9 0.9 0.9 1 0.8 0.73 0.88 0.88 ...\r#\u0026gt; $ STKCC : num 1.19 1.34 1.28 1.28 1.28 1.08 1.04 1.12 0.93 0.93 ...\r#\u0026gt; $ RTKCC : num 0.62 0.49 0.64 0.64 0.64 0.42 0.53 0.45 0.38 0.38 ...\r#\u0026gt; $ LFMGCC: num 0.11 0.1 0.12 0.12 0.12 0.13 0.13 0.12 0.12 0.12 ...\r#\u0026gt; $ STMGCC: num 0.13 0.18 0.16 0.16 0.16 0.14 0.19 0.17 0.15 0.15 ...\r#\u0026gt; $ RTMGCC: num 0.06 0.06 0.08 0.08 0.08 0.07 0.09 0.06 0.08 0.08 ...\r#\u0026gt; $ LFPCC : num 0.23 0.22 0.3 0.3 0.3 0.23 0.25 0.21 0.24 0.24 ...\r#\u0026gt; $ STPCC : num 0.31 0.22 0.35 0.35 0.35 0.25 0.35 0.27 0.32 0.32 ...\r#\u0026gt; $ RTPCC : num 0.17 0.13 0.21 0.21 0.21 0.15 0.19 0.12 0.17 0.17 ...\r#\u0026gt; $ LFSCC : num 0.13 0.22 0.15 0.15 0.15 0.15 0.16 0.12 0.22 0.22 ...\r#\u0026gt; $ STSCC : num 0.17 0.28 0.19 0.19 0.19 0.16 0.17 0.18 0.2 0.2 ...\r#\u0026gt; $ RTSCC : num 0.14 0.13 0.15 0.15 0.15 0.13 0.15 0.11 0.13 0.13 ...\r    在CHBR這個欄位中,因為不全都是數字,因此R自動假定這是一個factor。\n 因此針對這個欄位summary()函數不會列出5個統計量,而是列出次數表。因為，一旦向量轉為一組factors, 5個基本統計量不再有意義。  summary(tree$CHBR)\r#\u0026gt; Length Class Mode #\u0026gt; 54 character character\r#🏷在CHBR這個欄位中,因為不全都是數字,因此R自動假定這是一個factor。\r   但有些欄位例如C,也是一個factor。但是,R認定為數字,這時必須手動處理。 以下將 tree$C 轉為 factor:\ntree$C #🏷這是1個factor,但是轉進來的時候,被認定為數字\r#\u0026gt; [1] 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3\r#\u0026gt; [39] 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4\rsummary(tree$C)\r#\u0026gt; Min. 1st Qu. Median Mean 3rd Qu. Max. #\u0026gt; 1.000 2.000 2.000 2.519 3.000 4.000\rtree$C \u0026lt;- factor(tree$C)\rtree$C\r#\u0026gt; [1] 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3\r#\u0026gt; [39] 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4\r#\u0026gt; Levels: 1 2 3 4\rsummary(tree$C)\r#\u0026gt; 1 2 3 4 #\u0026gt; 8 23 10 13\rlevels(tree$C)\r#\u0026gt; [1] \u0026quot;1\u0026quot; \u0026quot;2\u0026quot; \u0026quot;3\u0026quot; \u0026quot;4\u0026quot;\r   plot\nbarplot(table(tree$C))\r figure\r   Table() table()指令:\n這個指令通常用來建立因子之間的關聯表(contingency table)。參數通常是一個「因子向量」(factor vector)。\nOne Way Tables 建立一個單因子關聯表（one way table）:\na \u0026lt;- factor(c(\u0026quot;A\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;C\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;C\u0026quot;))\rtable_a \u0026lt;- table(a)\rtable_a\r#\u0026gt; a\r#\u0026gt; A B C #\u0026gt; 4 3 2\r attributes可以看出table_a裡面有哪些帶名元素\nattributes(table_a)\r#\u0026gt; $dim\r#\u0026gt; [1] 3\r#\u0026gt; #\u0026gt; $dimnames\r#\u0026gt; $dimnames$a\r#\u0026gt; [1] \u0026quot;A\u0026quot; \u0026quot;B\u0026quot; \u0026quot;C\u0026quot;\r#\u0026gt; #\u0026gt; #\u0026gt; $class\r#\u0026gt; [1] \u0026quot;table\u0026quot;\r summary(table_a)\r#\u0026gt; Number of cases in table: 9 #\u0026gt; Number of factors: 1\r 對照table(a)，直接把factor 變數，代入summary()看一下，結果是次數分配表（如下）\ntable(a)\r#\u0026gt; a\r#\u0026gt; A B C #\u0026gt; 4 3 2\rsummary(a)\r#\u0026gt; A B C #\u0026gt; 4 3 2\r Two Way Tables 這個例子中有兩個問題:第1個問題的答案有“Never,” “Sometimes,” or “Always.”\n第2個問題的答案有 “Yes,” “No,” or “Maybe.” 兩個問題分別以向量a,b存放( The set of vectors “a,” and “b,” contain the response for each measurement.)\na \u0026lt;- c(\u0026quot;Sometimes\u0026quot;, \u0026quot;Sometimes\u0026quot;, \u0026quot;Never\u0026quot;, \u0026quot;Always\u0026quot;, \u0026quot;Always\u0026quot;, \u0026quot;Sometimes\u0026quot;, \u0026quot;Sometimes\u0026quot;, \u0026quot;Never\u0026quot;)\rb \u0026lt;- c(\u0026quot;Maybe\u0026quot;, \u0026quot;Maybe\u0026quot;, \u0026quot;Yes\u0026quot;, \u0026quot;Maybe\u0026quot;, \u0026quot;Maybe\u0026quot;, \u0026quot;No\u0026quot;, \u0026quot;Yes\u0026quot;, \u0026quot;No\u0026quot;)\rresults \u0026lt;- table(a, b)\rresults\r#\u0026gt; b\r#\u0026gt; a Maybe No Yes\r#\u0026gt; Always 2 0 0\r#\u0026gt; Never 0 1 1\r#\u0026gt; Sometimes 2 1 1\r 在表格中,可以看到同時回答 “Maybe” “Sometimes” 的個數有幾個。\n這裡是另一個直接由我們知道的數據建立table的例子\nsexsmoke \u0026lt;- matrix(c(70, 120, 65, 140), ncol = 2, byrow = TRUE)\rrownames(sexsmoke) \u0026lt;- c(\u0026quot;male\u0026quot;, \u0026quot;female\u0026quot;)\rcolnames(sexsmoke) \u0026lt;- c(\u0026quot;smoke\u0026quot;, \u0026quot;nosmoke\u0026quot;)\rsexsmoke \u0026lt;- as.table(sexsmoke)\rsexsmoke\r#\u0026gt; smoke nosmoke\r#\u0026gt; male 70 120\r#\u0026gt; female 65 140\r 💡雙變量分析方式可包括:\n列聯表 Crosstabs table(), ftable(), prop.table()\ndata.table  其他參考  \ras.table()\ras.table()\n問題：如果我們知道A有4,個,B有3個,C有2個,能不能直接建立table?\n 先建立matrix 再加入欄位名稱 利用函數as.table()  # step 1\roccur \u0026lt;- matrix(c(4, 3, 2), ncol = 3, byrow = TRUE)\roccur\r#\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 4 3 2\r#step 2\rcolnames(occur) \u0026lt;- c(\u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;C\u0026quot;)\roccur\r#\u0026gt; A B C\r#\u0026gt; [1,] 4 3 2\r#step 3\roccur \u0026lt;- as.table(occur)\roccur\r#\u0026gt; A B C\r#\u0026gt; A 4 3 2\rattributes(occur)\r#\u0026gt; $dim\r#\u0026gt; [1] 1 3\r#\u0026gt; #\u0026gt; $dimnames\r#\u0026gt; $dimnames[[1]]\r#\u0026gt; [1] \u0026quot;A\u0026quot;\r#\u0026gt; #\u0026gt; $dimnames[[2]]\r#\u0026gt; [1] \u0026quot;A\u0026quot; \u0026quot;B\u0026quot; \u0026quot;C\u0026quot;\r#\u0026gt; #\u0026gt; #\u0026gt; $class\r#\u0026gt; [1] \u0026quot;table\u0026quot;\r  if(!require(\u0026quot;data.table\u0026quot;)) install.packages(\u0026quot;data.table\u0026quot;)\r#\u0026gt; 載入需要的套件：data.table\rDT = data.table(\rID = c(\u0026quot;b\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;a\u0026quot;,\u0026quot;a\u0026quot;,\u0026quot;c\u0026quot;),\ra = 1:6,\rb = 7:12,\rc = 13:18\r)\rDT\r ID a b c   b 1 7 13  b 2 8 14  b 3 9 15  a 4 10 16  a 5 11 17  c 6 12 18     class(DT$ID) #🏷👏不會被轉為factor\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r"},
{"uri": "/blogR//rlang/6_1_programming.html","title": "6.1 Programming basic",
	"tags": [],
	"description": "基本語法",
	"content": "條件指令 if 一般來講，通用寫法如下：\nif(判斷式){\r成功\r}else{\r失敗\r}\r 多行寫法\nif(4 \u0026gt; 3){\rTRUE\r}else{\rFALSE\r}\r 另外，如果區塊內只有一行\nif(4 \u0026gt; 3) TRUE else FALSE  ifelse的寫法 ifelse('判斷式','成功','失敗')\n例如， ifelse(4 \u0026gt; 3, T, F)\nswitch的寫法 switch('判斷式', '判斷值1'={}, '判斷值2'={},\r...,\r\u0026quot;其他判斷值\u0026quot;={}\r)\r   直接指定哪一個\nswitch(2,\u0026quot;red\u0026quot;,\u0026quot;green\u0026quot;,\u0026quot;blue\u0026quot;)\r#\u0026gt; [1] \u0026quot;green\u0026quot;\rswitch(1,\u0026quot;red\u0026quot;,\u0026quot;green\u0026quot;,\u0026quot;blue\u0026quot;) #🏷👏\r#\u0026gt; [1] \u0026quot;red\u0026quot;\ry\u0026lt;-switch(1,\u0026quot;red\u0026quot;,\u0026quot;green\u0026quot;,\u0026quot;blue\u0026quot;) #🏷👏因為是函數,可以直接指派執行結果\ry\r#\u0026gt; [1] \u0026quot;red\u0026quot;\r   上面傳回字串,這裡傳回數字\nswitch(2, 1, 2, #因為判斷式為2，因此，執行動作2\r3) #🏷👏這個switch傳回數字,\r#\u0026gt; [1] 2\r   也可以利用字串\nx=\u0026quot;a\u0026quot;\rswitch(x, \u0026quot;a\u0026quot; = 1, \u0026quot;b\u0026quot; = 2, \u0026quot;c\u0026quot; = \u0026quot;why\u0026quot;)\r#\u0026gt; [1] 1\rx=\u0026quot;b\u0026quot;\rswitch(x, \u0026quot;a\u0026quot; = 1, \u0026quot;b\u0026quot; = 2, \u0026quot;c\u0026quot; = \u0026quot;why\u0026quot;)\r#\u0026gt; [1] 2\rx=\u0026quot;c\u0026quot;\rswitch(x, \u0026quot;a\u0026quot; = 1, \u0026quot;b\u0026quot; = 2, \u0026quot;c\u0026quot; = \u0026quot;why\u0026quot;)\r#\u0026gt; [1] \u0026quot;why\u0026quot;\r   再一個例子\nx=\u0026quot;c\u0026quot;\rswitch(x, \u0026quot;a\u0026quot; = 1, \u0026quot;b\u0026quot; = 2, \u0026quot;c\u0026quot; = {\u0026quot;why\u0026quot;}) #🏷👏 大括號,可以讓我們有兩行以上的程式碼\r#\u0026gt; [1] \u0026quot;why\u0026quot;\rx=\u0026quot;c\u0026quot;\rswitch(x, \u0026quot;a\u0026quot; = 1, \u0026quot;b\u0026quot; = 2, \u0026quot;c\u0026quot; = {x\u0026lt;-3;x+1}) #🏷👏 利用分號分隔\r#\u0026gt; [1] 4\rx #🏷👏 x不是\u0026quot;c\u0026quot;了,變成4\r#\u0026gt; [1] 3\r   這個switch 並不是一個語法，而是一個函數，原理大概是 第1個參數以後的東西，會被變成是一個named list。 例如上面的例子中\nalist \u0026lt;-list(a=1,b=2,c=\u0026quot;why\u0026quot;)\r 然後利用判斷式 查找要返回對應的值。例如\nswitch(\u0026quot;a\u0026quot;, a = 1, b = 2, c = \u0026quot;why\u0026quot;)\r#\u0026gt; [1] 1\rswitch(\u0026quot;b\u0026quot;, a = 1, b = 2, c = \u0026quot;why\u0026quot;)\r#\u0026gt; [1] 2\r 迴圈指令 R 語言的迴圈，可以搭配 break和next，前者跳出迴圈，後者繼續下一個迴圈。\nfor-loop 計算 1+2+3+4. 的值是多少？\nrst \u0026lt;- 0\rfor(i in c(1:4)){ rst \u0026lt;- rst + i\r}\r while-loop i \u0026lt;- 1\rresult \u0026lt;- 0\rwhile(i \u0026lt; 5){ rst \u0026lt;- rst + i\ri \u0026lt;- i + 1\r}\r repeat-loop i \u0026lt;- 1\rrst \u0026lt;- 0\rrepeat{ if(i \u0026gt; 4) break rst \u0026lt;- rst + i\ri \u0026lt;- i + 1\r}\r 常見問題 為甚麼有些函數找不到?\n套件\n"},
{"uri": "/blogR//rlang/6_3_apply_family.html","title": "6.3 function - apply family",
	"tags": [],
	"description": "list 的應用",
	"content": " 其他參考  apply 可以處理的對象包括 矩陣、資料集、陣列(二維、多維)，可以指定直行、橫行。\n函數定義：\napply(X, MARGIN, FUN, ...)\r 參數列表：\n X : 矩陣matrix、資料集dataframe 、陣列 array MARGIN : 1表示橫行，2表示直行 FUN : the function to be applied ... : optional arguments to FUN  在matlab 中,sum(矩陣,參數2) 參數2的可能值為1或2，分別指定欄位加總或是橫行加總,但是在R中sum(矩陣),卻是整個矩陣元素的加總。\n範例1: 橫行加總\nx\u0026lt;-matrix(1,ncol=4,nrow=3);x\r#\u0026gt; [,1] [,2] [,3] [,4]\r#\u0026gt; [1,] 1 1 1 1\r#\u0026gt; [2,] 1 1 1 1\r#\u0026gt; [3,] 1 1 1 1\rapply(x,1,sum)\r#\u0026gt; [1] 4 4 4\r 範例：\n有一個list,裡面有2個欄位，分別是x1,x2,想要分別算出每個欄位的最小和最大\nx \u0026lt;- cbind(x1 = 3, x2 = c(1:6)); # x 是矩陣\rf1\u0026lt;- function(col) {\rc(min(col),max(col)) }\rapply(x,2,f1)\r#\u0026gt; x1 x2\r#\u0026gt; [1,] 3 1\r#\u0026gt; [2,] 3 6\r 練習：如果用for loop?\n練習：哪種方式比較快？hint:利用 system.time(a function)\nlapply函數 大綱：lapply(),sapply(),vapply() 都參數都吃list 或者vector。\n函數定義：\nlapply(X, FUN, ...)\r 參數列表：\n X: list、vector、data.frame FUN: 自定義的調用函數 …: 更多參數，可選  輸入 輸出   vector list  list list  data.frame list     函數比較\n lapply(), sapply()差別是 前者返回list,後者返回matrix; sapply(), vapply() 差別是，後者可以加入row names。  範例:計算list中的每個KEY對應 的5個Tukey分位數 (minimum, lower-hinge, median, upper-hinge, maximum) 。利用fivenum()\nx \u0026lt;- list(a = 1:6, b = rnorm(2,6,8));x\r#\u0026gt; $a\r#\u0026gt; [1] 1 2 3 4 5 6\r#\u0026gt; #\u0026gt; $b\r#\u0026gt; [1] 0.480388 8.458378\rlapply(x,fivenum)\r#\u0026gt; $a\r#\u0026gt; [1] 1.0 2.0 3.5 5.0 6.0\r#\u0026gt; #\u0026gt; $b\r#\u0026gt; [1] 0.480388 0.480388 4.469383 8.458378 8.458378\r lapply 的參數如果是 list、data.frame，返回和參數長度同樣的list結構作為結果(欄位數)。\n例如，傳入的參數是data.frame(),如下，對資料集的每個欄位求和。\nlapply(data.frame(x), sum)\r#\u0026gt; $a\r#\u0026gt; [1] 21\r#\u0026gt; #\u0026gt; $b\r#\u0026gt; [1] 26.8163\r apply不同的地方是,如果參數是矩陣沒辦法指定橫行或是直行的區別,只能是逐個元素運算。就是則會對每個元素求函數值。\nx \u0026lt;- matrix(rnorm(4,5,10),nrow=2);x\r#\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 4.069977 12.197633\r#\u0026gt; [2,] -2.729655 -4.606058\rlapply(x, sum)\r#\u0026gt; [[1]]\r#\u0026gt; [1] 4.069977\r#\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] -2.729655\r#\u0026gt; #\u0026gt; [[3]]\r#\u0026gt; [1] 12.19763\r#\u0026gt; #\u0026gt; [[4]]\r#\u0026gt; [1] -4.606058\r sapply函數 sapply函數包裹了一上面提到的lapply()，返回值為向量，而不是list對象。sapply增加了2個參數simplify和USE.NAMES，\n函數定義：\nsapply(X, FUN, ..., simplify=TRUE, USE.NAMES = TRUE)\r 參數列表：\n X: list、matrix、data.frame FUN: 自定義的調用函數 …: 更多參數，可選 simplify: 預設為T,返為值為向量；如果是F成list。? 設定為\u0026quot;array\u0026quot;時，輸出結果按數組進行分組 USE.NAMES: 如果X為字符串，TRUE設置字符串為數據名，FALSE不設置  輸入 輸出   vector vector,matrix,array,list  list vector,matrix,array,list  data.frame vector,matrix,array,list     simplify=FALSE和USE.NAMES=FALSE，則 sapply函數 ＝lapply函數。\n如果我們利用函數unlist 配合 lapply 的返回值，也可以得到向量，例如： unlist(lapply(1:3, function(x) x^2))\n\r\r常見範例\nsapply(2:4, seq)\r#\u0026gt; [[1]]\r#\u0026gt; [1] 1 2\r#\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] 1 2 3\r#\u0026gt; #\u0026gt; [[3]]\r#\u0026gt; [1] 1 2 3 4\r# data.frame\rsapply(data.frame(x), sum)\r#\u0026gt; X1 X2 #\u0026gt; 1.340322 7.591574\r# 確認返回類別\rlapply(x, sum)\r#\u0026gt; [[1]]\r#\u0026gt; [1] 4.069977\r#\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] -2.729655\r#\u0026gt; #\u0026gt; [[3]]\r#\u0026gt; [1] 12.19763\r#\u0026gt; #\u0026gt; [[4]]\r#\u0026gt; [1] -4.606058\rclass(lapply(x, sum))\r#\u0026gt; [1] \u0026quot;list\u0026quot;\rsapply(x, sum)\r#\u0026gt; [1] 4.069977 -2.729655 12.197633 -4.606058\rclass(sapply(x, sum))\r#\u0026gt; [1] \u0026quot;numeric\u0026quot;\rsapply(x, sum, simplify=FALSE, USE.NAMES=FALSE)\r#\u0026gt; [[1]]\r#\u0026gt; [1] 4.069977\r#\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] -2.729655\r#\u0026gt; #\u0026gt; [[3]]\r#\u0026gt; [1] 12.19763\r#\u0026gt; #\u0026gt; [[4]]\r#\u0026gt; [1] -4.606058\rclass(sapply(x, sum, simplify=FALSE, USE.NAMES=FALSE))\r#\u0026gt; [1] \u0026quot;list\u0026quot;\r ❌對欄位作統計運算的錯誤範例\nx \u0026lt;- cbind(x1 = 3, x2 = c(1:6)); # x 是矩陣\rx\r#\u0026gt; x1 x2\r#\u0026gt; [1,] 3 1\r#\u0026gt; [2,] 3 2\r#\u0026gt; [3,] 3 3\r#\u0026gt; [4,] 3 4\r#\u0026gt; [5,] 3 5\r#\u0026gt; [6,] 3 6\rsapply(x, sum) #結果類似lapply() 🏷將陣列元素帶入函數\r#\u0026gt; [1] 3 3 3 3 3 3 1 2 3 4 5 6\rsapply(x, quantile) #\u0026gt; [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\r#\u0026gt; 0% 3 3 3 3 3 3 1 2 3 4 5 6\r#\u0026gt; 25% 3 3 3 3 3 3 1 2 3 4 5 6\r#\u0026gt; 50% 3 3 3 3 3 3 1 2 3 4 5 6\r#\u0026gt; 75% 3 3 3 3 3 3 1 2 3 4 5 6\r#\u0026gt; 100% 3 3 3 3 3 3 1 2 3 4 5 6\r 解釋上面出錯的原因。提示\r hint: sapply會調用函數lapply()(🏷🐱‍👤簡化的sapply來自於複雜的lapply)，而已經知道lapply()的參數是矩陣的時候，每個元素都會被傳到函數。因此欄位有12個；\n又，每個quantile()傳回5個元素，因此，橫行有5個。 正確的作法是：\nx \u0026lt;- list(x1 = 3, x2 = c(1:6))\rsapply(x, quantile) #\u0026gt; x1 x2\r#\u0026gt; 0% 3 1.00\r#\u0026gt; 25% 3 2.25\r#\u0026gt; 50% 3 3.50\r#\u0026gt; 75% 3 4.75\r#\u0026gt; 100% 3 6.00\r  另一個範例\nlocaleCategories \u0026lt;- c(\u0026quot;LC_COLLATE\u0026quot;,\u0026quot;LC_CTYPE\u0026quot;,\u0026quot;LC_MONETARY\u0026quot;,\u0026quot;LC_NUMERIC\u0026quot;,\u0026quot;LC_TIME\u0026quot;)\rlocales \u0026lt;- setNames(sapply(localeCategories, Sys.getlocale), localeCategories)\r 範例：USE.NAMES=TRUE\nalist\u0026lt;-list(a=c(1,1,1),b=c(2,2,2),c=c(3,3,3))\rf2\u0026lt;-function(x)\r{\rmean(alist[[x]]) #🏷👏傳進來的參數,是名稱\r}\rsapply(c(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;c\u0026quot;),f2,USE.NAMES = T) # 🏷👏我們的f2函數,吃變數名稱,而不是字串 #\u0026gt; a b c #\u0026gt; 1 2 3\rsapply(c(a,b,c),f2,USE.NAMES = T) # 🏷👏我們的f2函數,吃變數名稱,而不是字串 #\u0026gt; Error in lapply(X = X, FUN = FUN, ...): 找不到物件 'a'\rsapply(c(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;c\u0026quot;),f2,USE.NAMES = F) #\u0026gt; [1] 1 2 3\r 對於simplify為array時，我們可以參考下面的例子，構建一個三維數組，其中二個維度為方陣。\na\u0026lt;-1:2\r# 按數組分組\rsapply(a,function(x) matrix(x,2,2), simplify='array')\r#\u0026gt; , , 1\r#\u0026gt; #\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 1 1\r#\u0026gt; [2,] 1 1\r#\u0026gt; #\u0026gt; , , 2\r#\u0026gt; #\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 2 2\r#\u0026gt; [2,] 2 2\r# 默認情況，則自動合併分組\rsapply(a,function(x) matrix(x,2,2))\r#\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 1 2\r#\u0026gt; [2,] 1 2\r#\u0026gt; [3,] 1 2\r#\u0026gt; [4,] 1 2\r 比較    Function Arguments Objective Input Output     apply apply(x, MARGIN, FUN) Apply a function to the rows or columns or both Data frame or matrix vector, list, array   lapply lapply(X, FUN) Apply a function to all the elements of the input List, vector or data frame list   sapply sappy(X FUN) Apply a function to all the elements of the input List, vector or data frame vector or matrix    m\u0026lt;-matrix(1:4,4,3);m\r#\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 1 1 1\r#\u0026gt; [2,] 2 2 2\r#\u0026gt; [3,] 3 3 3\r#\u0026gt; [4,] 4 4 4\rsapply(1:3, function(x) mean(m[,x]))\r#\u0026gt; [1] 2.5 2.5 2.5\r m\u0026lt;-matrix(1:4,4,3);\rlapply(1:3, function(x) mean(m[,x]))\r#\u0026gt; [[1]]\r#\u0026gt; [1] 2.5\r#\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] 2.5\r#\u0026gt; #\u0026gt; [[3]]\r#\u0026gt; [1] 2.5\r vapply函數 vapply類似於sapply，提供了FUN.VALUE參數，用來控制返回值的行名。\nnote: sapply() 配上rownames\u0026lt;- 可以達到一樣的效果。\n函數定義：\nvapply(X, FUN, FUN.VALUE, ..., USE.NAMES = TRUE)\r 參數列表(前3個需要)：\n X:array、matrix、data.frame FUN: 使用者指定的函數,可以是自定義的函數 FUN.VALUE:  例如,logistic(1),也就是對傳進來的每個參數,都要產生邏輯值向量,且長度為1。 可以記為對每一紀錄給名稱(e.g. row.names)   …: 更多參數，可選 USE.NAMES: 如果X為字符串，TRUE設置字符串為數據名，FALSE不設置  x \u0026lt;- cbind(x1 = 3, x2 = c(1:6)); # x 是矩陣\rx\u0026lt;-data.frame(x) # ✔因為在f1()中要對每個欄位求最小最大,不能是矩陣(會對整個矩陣找最小最大) f1\u0026lt;- function(col) {\rc(min(col),max(col)) }\rr1\u0026lt;-vapply(x,f1, numeric(2)) # # ❌vapply(x,f1, numeric(1)) ❌vapply(x,f1) # ❓為甚麼錯誤 # 🏷#👏因為f1的返回值為向量,且長度為2\rr1\r#\u0026gt; x1 x2\r#\u0026gt; [1,] 3 1\r#\u0026gt; [2,] 3 6\r vapply練習❓ 想要列出每個欄位的類別,以內建資料集mtcars 作為練習。提示\r fieldType\u0026lt;-vapply(mtcars,class,character(1))\rprint(fieldType)\r#\u0026gt; mpg cyl disp hp drat wt qsec vs #\u0026gt; \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot; #\u0026gt; am gear carb #\u0026gt; \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot;\r \nmapply函數 函數定義：\nmapply(FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE,USE.NAMES = TRUE)\r 參數列表：\n  FUN: 自定義的調用函數\n  …: 接收多個數據\n  MoreArgs: 參數列表\n  SIMPLIFY: 是否轉矩陣，當值array時，輸出結果按數組進行分組\n  USE.NAMES: 如果X為字符串，TRUE設置字符串為數據名，FALSE不設置\n  如果Fun=f(x)，則 mapply(f,a1)的執行是：\n f(a1)    如果Fun=f(x,y)，則 mapply(f,a1,a2)的執行是：\n f(a1, a2)    比如，比較3個向量大小，按索引順序取較大的值。\nset.seed(1)\r# 定義3個向量\rx\u0026lt;-1:10\ry\u0026lt;-5:-4\rz\u0026lt;-round(runif(10,-5,5))\r# 按索引順序取較大的值。\rmapply(max,x,y,z) #🏷👏等同 max(x,y,z),因為max的參數為 ...\r#\u0026gt; [1] 5 4 3 4 5 6 7 8 9 10\r#❌出錯示範\rmymax \u0026lt;-function(x){\rmax(x)\r}\rmapply(mymax,x,y,z) #\u0026gt; Error in (function (x) : 未使用的引數 (dots[[2]][[1]], dots[[3]][[1]])\r 再看一個例子，生成4個符合正態分佈的數據集，分別對應的均值和方差為c(1,10,100,1000)。\nset.seed(1)\r# 長度為4\rn\u0026lt;-rep(4,4)\r# m為均值，v為方差\rm\u0026lt;-v\u0026lt;-c(1,10,100,1000)\r# 生成4組數據，按列分組\rmapply(rnorm,n,m,v)\r#\u0026gt; [,1] [,2] [,3] [,4]\r#\u0026gt; [1,] 0.3735462 13.295078 157.57814 378.7594\r#\u0026gt; [2,] 1.1836433 1.795316 69.46116 -1214.6999\r#\u0026gt; [3,] 0.1643714 14.874291 251.17812 2124.9309\r#\u0026gt; [4,] 2.5952808 17.383247 138.98432 955.0664\r tapply函數 tapply用於分組的循環計算，通過INDEX參數可以把數據集X進行分組，相當於group by的操作。\n函數定義：\ntapply(X, INDEX, FUN = NULL, ..., simplify = TRUE)\r 參數列表：\n X: 向量 INDEX: 用於分組的索引 FUN: 自定義的調用函數 …: 接收多個數據 simplify : 是否數組化，當值array時，輸出結果按數組進行分組  比如，計算不同品種的鳶尾花的花瓣(iris)長度的均值。\n# 通過iris$Species品種進行分組\rtapply(iris$Petal.Length,iris$Species,mean)\r#\u0026gt; setosa versicolor virginica #\u0026gt; 1.462 4.260 5.552\r 分組求和的範例。\nset.seed(1)\rx\u0026lt;-1:10\r# 亂術分成3組，分別是0,1,2 t\u0026lt;-round(runif(10,1,100)%%2);t\r#\u0026gt; [1] 1 2 2 1 1 2 1 0 1 1\r# 對x進行分組求和\rtapply(x,t,sum)\r#\u0026gt; 0 1 2 #\u0026gt; 8 36 11\r rapply函數 eapply函數 函數定義：\neapply(env, FUN, ..., all.names = FALSE, USE.NAMES = TRUE)\r 練習：\n1 把iris 每個欄位的加總列出 iris 有一個欄位是factor\n範例 將每個rmd檔案中需要的函數庫列表 #setwd(~/directory1/)\rlibs = lapply(list.files(pattern = \u0026quot;\\\\.Rmd$\u0026quot;),\rfunction(x){\rd = readLines(x)\rd = d[grepl(\u0026quot;library\\\\(.*\\\\)\u0026quot;, d)]\rgsub(\u0026quot;library\\\\((.*)\\\\)\u0026quot;, \u0026quot;\\\\1\u0026quot;, d)\r})\runique(unlist(libs))\r note:\ngrepl :　邏輯值\ngsub :　只拿取library(\u0026quot;函數庫名稱\u0026quot;)中的\u0026quot;函數庫名稱\u0026quot;。\n"},
{"uri": "/blogR//rlang/7_1_function.html","title": "7.1 R 函數的基本撰寫",
	"tags": [],
	"description": "",
	"content": "簡單的函數範例   求平均,標準差\nmymean\u0026lt;-function(x){\rsum(x)/length(x) #🏷👏最後一個執行的express其結果會被回傳\r}\rstd \u0026lt;-function(x){\rsd(x)\r}\rdata\u0026lt;-runif(10)\rmymean(data)\r#\u0026gt; [1] 0.3969562\rmean(data) # 🏷👏比較原來的mean\r#\u0026gt; [1] 0.3969562\rstd(data)\r#\u0026gt; [1] 0.2328856\rsd(data) # 🏷👏比較原來的sd\r#\u0026gt; [1] 0.2328856\r   另一範例\npower \u0026lt;- function(exponent) {\rfunction(x) x^exponent\r}\rsquare \u0026lt;- power(2)\rsquare(2) # -\u0026gt; [1] 4\rsquare(4) # -\u0026gt; [1] 16\rcube \u0026lt;- power(3)\rcube(2) # -\u0026gt; [1] 8\rcube(4) # -\u0026gt; [1] 64\r   以下是R內建的函數fivenum內容)\nmyfun\u0026lt;- function (x, na.rm = TRUE) #🏷👏第二個參數有預設值\r{\rxna \u0026lt;- is.na(x)\rif (any(xna)) {\rif (na.rm) x \u0026lt;- x[!xna]\relse return(rep.int(NA, 5))\r}\rx \u0026lt;- sort(x) #🏷👏排序\rn \u0026lt;- length(x)\rif (n == 0) rep.int(NA, 5)\relse {\rn4 \u0026lt;- floor((n + 3)/2)/2\rd \u0026lt;- c(1, n4, (n + 1)/2, n + 1 - n4, n)\r0.5 * (x[floor(d)] + x[ceiling(d)])\r}\r}\r   自己寫一個類似which()的函數。\nx\u0026lt;-c(T,F,T,F)\rwhich(x)\r#\u0026gt; [1] 1 3\r 提示\r 尚未完成\n全局變數和局部變數   在函數中使用的變數,是局部變數 例如本例中的y。\nx \u0026lt;- 2 ls() #🏷👏全局變數x，✔可以在工作區間看到x\r#\u0026gt; [1] \u0026quot;data\u0026quot; \u0026quot;mymean\u0026quot; \u0026quot;std\u0026quot; \u0026quot;x\u0026quot;\rg \u0026lt;- function() { #🏷👏全局變數g，✔可以在工作區間看到\ry \u0026lt;- 1 #🏷👏局部變數y，❌在全局區看不到,只有在目前的函數區可以看到\rc(x, y) #🏷👏在函數中使用全局變數x\r}\rg()\r#\u0026gt; [1] 2 1\ry # 🏷🐞會出現錯誤\r#\u0026gt; Error in eval(expr, envir, enclos): 找不到物件 'y'\rls() # 工作區出現x,g,但是沒有y\r#\u0026gt; [1] \u0026quot;data\u0026quot; \u0026quot;g\u0026quot; \u0026quot;mymean\u0026quot; \u0026quot;std\u0026quot; \u0026quot;x\u0026quot;\rrm(x, g)\rls()\r#\u0026gt; [1] \u0026quot;data\u0026quot; \u0026quot;mymean\u0026quot; \u0026quot;std\u0026quot;\r   局部函數工作區中,想要更改全局變數\nx\u0026lt;-3\rf1\u0026lt;-function (){\rx\u0026lt;-4+x # 🏷👏不會更改全局變數x,只是局部變數,的確是7\r}\rf1()\rx #🏷👏仍然是3,看起來是R的參數傳遞方法是傳值而不是傳址\r#\u0026gt; [1] 3\r   上述程式碼如果要在函數中更改全局變數,則\nx\u0026lt;-3\rf1\u0026lt;-function (){\rx\u0026lt;\u0026lt;-4+x #🏷👏這會更改全局變數x✔️\r}\rf1()\rx # 7\r#\u0026gt; [1] 7\r   串列呢\nx\u0026lt;-list(1,2,3)\rf1\u0026lt;-function (){\rx[[4]]\u0026lt;\u0026lt;-\u0026quot;a4\u0026quot; # 🏷👏✔️\r}\rf1()\rx # 7\r#\u0026gt; [[1]]\r#\u0026gt; [1] 1\r#\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] 2\r#\u0026gt; #\u0026gt; [[3]]\r#\u0026gt; [1] 3\r#\u0026gt; #\u0026gt; [[4]]\r#\u0026gt; [1] \u0026quot;a4\u0026quot;\r   傳值,傳址 這裡驗證R語言的函數是傳值還是傳址\n例如下面的程式碼,傳進去的不管是向量還是資料集,更改裡面的內容都無效\ntest1 \u0026lt;- function(x ){\rx[1,1]\u0026lt;-2\r}\rx\u0026lt;-matrix(rnorm(10),2,5)\rx\r#\u0026gt; [,1] [,2] [,3] [,4] [,5]\r#\u0026gt; [1,] 0.1207716 1.0091269 -0.1913277 -0.6707347 -0.4523616\r#\u0026gt; [2,] 1.9011509 -0.1679119 -0.2994890 0.1736809 0.6093707\rtest1(x)\rx\r#\u0026gt; [,1] [,2] [,3] [,4] [,5]\r#\u0026gt; [1,] 0.1207716 1.0091269 -0.1913277 -0.6707347 -0.4523616\r#\u0026gt; [2,] 1.9011509 -0.1679119 -0.2994890 0.1736809 0.6093707\rx\u0026lt;-as.data.frame(x)\rtest1(x)\rx\r V1 V2 V3 V4 V5   0.1207716 1.0091269 -0.1913277 -0.6707347 -0.4523616  1.9011509 -0.1679119 -0.2994890 0.1736809 0.6093707     parent.frame parentls \u0026lt;- function() {\rls(envir=parent.frame())\r}\ra\u0026lt;-function() {\rx \u0026lt;- 5\rparentls()\r}\rb \u0026lt;- function() {\rz \u0026lt;- 10\rparentls()\r}\ra()\r#\u0026gt; [1] \u0026quot;x\u0026quot;\rb()\r#\u0026gt; [1] \u0026quot;z\u0026quot;\rparentls()\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;data\u0026quot; \u0026quot;f1\u0026quot; \u0026quot;mymean\u0026quot; \u0026quot;parentls\u0026quot; \u0026quot;std\u0026quot; #\u0026gt; [8] \u0026quot;test1\u0026quot; \u0026quot;x\u0026quot;\r 特殊符號 3個逗點 (dots) 3個逗點可以利用?dots查詢。\n範例\nf \u0026lt;- function(x, ...)\r{\rdots \u0026lt;- list(...) #1\rif(length(dots) == 0) return(NULL) cat(\u0026quot;The arguments in ... are\\n\u0026quot;)\rprint(x)\rf(...) #2\r}\rf(1,2,3,\u0026quot;a\u0026quot;, list(\u0026quot;monkey\u0026quot;))\r#\u0026gt; The arguments in ... are\r#\u0026gt; [1] 1\r#\u0026gt; The arguments in ... are\r#\u0026gt; [1] 2\r#\u0026gt; The arguments in ... are\r#\u0026gt; [1] 3\r#\u0026gt; The arguments in ... are\r#\u0026gt; [1] \u0026quot;a\u0026quot;\r#\u0026gt; NULL\r operator %\u0026gt;% %\u0026gt;% 不是R基礎套件 而是定義在套件 magrittr (CRAN) 之中 且常跟 dplyr (CRAN)搭配。\n意思是把左邊(LHS)當成右邊(RHS)函數中的第一個參數。\n例如下面的例子:\nlibrary(magrittr)\riris %\u0026gt;% head() #🏷👏 iris %\u0026gt;% head() 相當於 head(iris)\rSepal.Length Sepal.Width Petal.Length Petal.Width Species\r1 5.1 3.5 1.4 0.2 setosa\r2 4.9 3.0 1.4 0.2 setosa\r3 4.7 3.2 1.3 0.2 setosa\r4 4.6 3.1 1.5 0.2 setosa\r5 5.0 3.6 1.4 0.2 setosa\r6 5.4 3.9 1.7 0.4 setosa\r 為甚麼需要這樣用,下面是一個例子\niris %\u0026gt;% head() %\u0026gt;% summary()\r 類似的觀念,\niris %\u0026gt;% head() %\u0026gt;% summary() # 等同於summary(head(iris)).  也就是說,避免了使用巢狀呼叫。\noperator %in% closure ox\u0026lt;-function (arg=3) {\rx\u0026lt;-0\ro1\u0026lt;-function(){\rx\u0026lt;\u0026lt;-x+arg;\r} list(go=o1)\r}\robj\u0026lt;-ox(4)\robj$go()\r example of closure make.accumulator\u0026lt;-function(){\ra\u0026lt;-0\rfunction(x) {\ra\u0026lt;\u0026lt;-a+x\ra\r}\r}\rf\u0026lt;-make.accumulator()\rf(1)\r#\u0026gt; [1] 1\rf(1)\r#\u0026gt; [1] 2\rf(1)\r#\u0026gt; [1] 3\r ❓ 利用上述觀念建立一個計數器。\n💡 例如產生的檔案個數不定,但是想要每次開始執行的時候都有一個固定編號。\n提示\r new_counter \u0026lt;- function() {\ri \u0026lt;- 0\rfunction() {\r# do something useful, then ...\ri \u0026lt;\u0026lt;- i + 1\ri\r}\r}\r \nsource 自己的函數存成檔案(例如名稱為myfun.R)以後,如何呼叫? 利用source(\u0026quot;myfun.R\u0026quot;) 可以載入記憶體中,此時在整體工作環境中可以看到函數定義。\n問題是,下次我又繼續同一個專案的時候呢,這些我已經定義過的函數能不能續續使用?有下列幾種方法\n 離開專案的時候,如果儲存工作環境(系統問你是不是save workspace to .Rdata?),如果回答是,則下次可以不用source(),直接可以使用。 在.Rprofile 加入一行source(\u0026quot;myfun.R\u0026quot;) 但是在RMD檔案中,因為每次都是新session因此,必須要先找地方source(例如在第一個chunk)。  OOP 參考advance R\nBase objects vs OO objects 辨別變數是基礎型別或是物件型別，可以簡單利用函數： is.object():\n基礎物件base object:\nis.object(1:10)\r#\u0026gt; [1] FALSE\r 物件導向物件 OO object\nis.object(mtcars)\r#\u0026gt; [1] TRUE\r 主要的區別在於基本物件沒有class 這個attribute\nattr(1:10, \u0026quot;class\u0026quot;) # NULL\r#\u0026gt; NULL\rattr(mtcars, \u0026quot;class\u0026quot;) # [1] \u0026quot;data.frame\u0026quot;\r#\u0026gt; [1] \u0026quot;data.frame\u0026quot;\r 也可以用attributes() ,class()\nattributes(1:10)\r#\u0026gt; NULL\rattributes(mtcars)\r#\u0026gt; $names\r#\u0026gt; [1] \u0026quot;mpg\u0026quot; \u0026quot;cyl\u0026quot; \u0026quot;disp\u0026quot; \u0026quot;hp\u0026quot; \u0026quot;drat\u0026quot; \u0026quot;wt\u0026quot; \u0026quot;qsec\u0026quot; \u0026quot;vs\u0026quot; \u0026quot;am\u0026quot; \u0026quot;gear\u0026quot;\r#\u0026gt; [11] \u0026quot;carb\u0026quot;\r#\u0026gt; #\u0026gt; $row.names\r#\u0026gt; [1] \u0026quot;Mazda RX4\u0026quot; \u0026quot;Mazda RX4 Wag\u0026quot; \u0026quot;Datsun 710\u0026quot; #\u0026gt; [4] \u0026quot;Hornet 4 Drive\u0026quot; \u0026quot;Hornet Sportabout\u0026quot; \u0026quot;Valiant\u0026quot; #\u0026gt; [7] \u0026quot;Duster 360\u0026quot; \u0026quot;Merc 240D\u0026quot; \u0026quot;Merc 230\u0026quot; #\u0026gt; [10] \u0026quot;Merc 280\u0026quot; \u0026quot;Merc 280C\u0026quot; \u0026quot;Merc 450SE\u0026quot; #\u0026gt; [13] \u0026quot;Merc 450SL\u0026quot; \u0026quot;Merc 450SLC\u0026quot; \u0026quot;Cadillac Fleetwood\u0026quot; #\u0026gt; [16] \u0026quot;Lincoln Continental\u0026quot; \u0026quot;Chrysler Imperial\u0026quot; \u0026quot;Fiat 128\u0026quot; #\u0026gt; [19] \u0026quot;Honda Civic\u0026quot; \u0026quot;Toyota Corolla\u0026quot; \u0026quot;Toyota Corona\u0026quot; #\u0026gt; [22] \u0026quot;Dodge Challenger\u0026quot; \u0026quot;AMC Javelin\u0026quot; \u0026quot;Camaro Z28\u0026quot; #\u0026gt; [25] \u0026quot;Pontiac Firebird\u0026quot; \u0026quot;Fiat X1-9\u0026quot; \u0026quot;Porsche 914-2\u0026quot; #\u0026gt; [28] \u0026quot;Lotus Europa\u0026quot; \u0026quot;Ford Pantera L\u0026quot; \u0026quot;Ferrari Dino\u0026quot; #\u0026gt; [31] \u0026quot;Maserati Bora\u0026quot; \u0026quot;Volvo 142E\u0026quot; #\u0026gt; #\u0026gt; $class\r#\u0026gt; [1] \u0026quot;data.frame\u0026quot;\rclass(1:10) #🏷👏class()這個函數,不見得總是會和attr()的結果一致,因為，對基本物件而言,傳回的是其本型態(例如這裡的integer),而不是 NULL(參看前面)。\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\rclass(mtcars)\r#\u0026gt; [1] \u0026quot;data.frame\u0026quot;\r 變數屬性查詢函數  names() dimnames() length() dim(): 各維度長度 class() : 變數類別 table()：各類資料計數 str()：變數的資料結構(其實是一個list)  透過names()函數，可取得各種list元素的名稱,但是如果是data.frame則是顯示欄位名稱\nstr(islands) # 🏷👏islands是內建資料\r#\u0026gt; Named num [1:48] 11506 5500 16988 2968 16 ...\r#\u0026gt; - attr(*, \u0026quot;names\u0026quot;)= chr [1:48] \u0026quot;Africa\u0026quot; \u0026quot;Antarctica\u0026quot; \u0026quot;Asia\u0026quot; \u0026quot;Australia\u0026quot; ...\rhead(names(islands)) #\u0026gt; [1] \u0026quot;Africa\u0026quot; \u0026quot;Antarctica\u0026quot; \u0026quot;Asia\u0026quot; \u0026quot;Australia\u0026quot; \u0026quot;Axel Heiberg\u0026quot;\r#\u0026gt; [6] \u0026quot;Baffin\u0026quot;\r 方形資料（例如，矩陣，table, data.frame)，可以透過dimnames()函數可顯示data.frame 橫行和直行的名稱 先橫行，然後直行。\ndimnames(USArrests) #\u0026gt; [[1]]\r#\u0026gt; [1] \u0026quot;Alabama\u0026quot; \u0026quot;Alaska\u0026quot; \u0026quot;Arizona\u0026quot; \u0026quot;Arkansas\u0026quot; #\u0026gt; [5] \u0026quot;California\u0026quot; \u0026quot;Colorado\u0026quot; \u0026quot;Connecticut\u0026quot; \u0026quot;Delaware\u0026quot; #\u0026gt; [9] \u0026quot;Florida\u0026quot; \u0026quot;Georgia\u0026quot; \u0026quot;Hawaii\u0026quot; \u0026quot;Idaho\u0026quot; #\u0026gt; [13] \u0026quot;Illinois\u0026quot; \u0026quot;Indiana\u0026quot; \u0026quot;Iowa\u0026quot; \u0026quot;Kansas\u0026quot; #\u0026gt; [17] \u0026quot;Kentucky\u0026quot; \u0026quot;Louisiana\u0026quot; \u0026quot;Maine\u0026quot; \u0026quot;Maryland\u0026quot; #\u0026gt; [21] \u0026quot;Massachusetts\u0026quot; \u0026quot;Michigan\u0026quot; \u0026quot;Minnesota\u0026quot; \u0026quot;Mississippi\u0026quot; #\u0026gt; [25] \u0026quot;Missouri\u0026quot; \u0026quot;Montana\u0026quot; \u0026quot;Nebraska\u0026quot; \u0026quot;Nevada\u0026quot; #\u0026gt; [29] \u0026quot;New Hampshire\u0026quot; \u0026quot;New Jersey\u0026quot; \u0026quot;New Mexico\u0026quot; \u0026quot;New York\u0026quot; #\u0026gt; [33] \u0026quot;North Carolina\u0026quot; \u0026quot;North Dakota\u0026quot; \u0026quot;Ohio\u0026quot; \u0026quot;Oklahoma\u0026quot; #\u0026gt; [37] \u0026quot;Oregon\u0026quot; \u0026quot;Pennsylvania\u0026quot; \u0026quot;Rhode Island\u0026quot; \u0026quot;South Carolina\u0026quot;\r#\u0026gt; [41] \u0026quot;South Dakota\u0026quot; \u0026quot;Tennessee\u0026quot; \u0026quot;Texas\u0026quot; \u0026quot;Utah\u0026quot; #\u0026gt; [45] \u0026quot;Vermont\u0026quot; \u0026quot;Virginia\u0026quot; \u0026quot;Washington\u0026quot; \u0026quot;West Virginia\u0026quot; #\u0026gt; [49] \u0026quot;Wisconsin\u0026quot; \u0026quot;Wyoming\u0026quot; #\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] \u0026quot;Murder\u0026quot; \u0026quot;Assault\u0026quot; \u0026quot;UrbanPop\u0026quot; \u0026quot;Rape\u0026quot;\r 方形資料，可以透過length()函數可顯示資料長度，但是如果是data.frame則顯示欄位數。\nlength(islands) #\u0026gt; [1] 48\r 透過dim() 顯示方形資料的「資料筆數」和「欄位數目」，先「橫行」，後「直行」\ndim(USArrests) #\u0026gt; [1] 50 4\r 使用class()函數可知道變數類別\nclass(pi)\r#\u0026gt; [1] \u0026quot;numeric\u0026quot;\rclass(Sys.Date())\r#\u0026gt; [1] \u0026quot;Date\u0026quot;\r 使用table()函數可知道向量中每個值出現幾次\ntable(iris$Species) ##統計結果\r#\u0026gt; #\u0026gt; setosa versicolor virginica #\u0026gt; 50 50 50\r"},
{"uri": "/blogR//rlang/7_2_function.html","title": "7.2 更多R函數",
	"tags": [],
	"description": "7_2_function",
	"content": "Function fundamentals 幾個重要觀念\n 函數也是物件,就像是vectors 也是物件。 由三個部份組成: arguments, body, and environment.  但是規則都會被打破,例外大概都利用C寫成的 \u0026quot;primitive\u0026quot; base functions。\nFirst-class functions 在R中,函數也是物件,這種特性也叫做 \u0026quot;first-class functions\u0026quot;.\n例如在list中,也可以放入函數:\nfuns \u0026lt;- list(\rhalf = function(x) x / 2,\rdouble = function(x) x * 2\r)\rfuns$double(10)\r#\u0026gt; [1] 20\r 匿名函數:\nlapply(mtcars, function(x) length(unique(x)))\rFilter(function(x) !is.numeric(x), mtcars)\rintegrate(function(x) sin(x) ^ 2, 0, pi)\r \r調用匿名函數\r如果要調用匿名函數,參考下面的方式\n(function(x) 3)()\r  在R語言中,函數有時叫做closure因為,因為R函數包含(enclose)它們的環境 environments.\n01\u0026lt;-function() {3}\rtypeof(f01)\r#\u0026gt; [1] \u0026quot;closure\u0026quot; #🏷👏對照後面class的結果\rstr(f01)\r#\u0026gt; function () #\u0026gt; - attr(*, \u0026quot;srcref\u0026quot;)= 'srcref' int [1:8] 1 6 1 19 6 19 1 1\r#\u0026gt; ..- attr(*, \u0026quot;srcfile\u0026quot;)=Classes 'srcfilecopy', 'srcfile' \u0026lt;environment: 0x00000000188ac3c8=\u0026quot;\u0026quot;\u0026gt;\rclass(f01)\r#\u0026gt; [1] \u0026quot;function\u0026quot; #🏷👏是function,同時繼承自closure\r#\u0026gt; [1] \u0026quot;closure\u0026quot;  函數的組成 1個函數有3個部分:\n formals(), 參數 body(), {}內部. environment(), 決定函數怎樣找出變數(names)的內容。.  測試3部分\nf02 \u0026lt;- function(x) {\r3\r}\rformals(f02)\r#\u0026gt; $x\rbody(f02)\r#\u0026gt; {\r#\u0026gt; 3\r#\u0026gt; }\renvironment(f02) #🏷👏本函數f(02)會去搜尋的變數空間\r#\u0026gt; \u0026lt;environment: 0x0000000019cdc128\u0026gt;\r 👍就像所以其他R的物件,函數也有很多 attributes(). 其中一個 \u0026quot;srcref\u0026quot;, 是 source reference的縮寫。 attr(f02, \u0026quot;srcref\u0026quot;)\r#\u0026gt; function(x) {\r#\u0026gt; 3\r#\u0026gt; }\r \r例外\r但是有些函數像是 sum() and [，這些所謂的原始函數(Primitive functions)，無法利用上面的三個函數顯示其內容,因為這些函數存在於基本套件(base packages) 而且通常用Ｃ語言寫成。\nsum\r#\u0026gt; function (..., na.rm = FALSE) .Primitive(\u0026quot;sum\u0026quot;)\r`[` # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏這也是函數\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; .Primitive(\u0026quot;[\u0026quot;)\r 看一下type 分別屬於 \u0026quot;builtin\u0026quot; or \u0026quot;special\u0026quot;:\ntypeof(sum)\r#\u0026gt; [1] \u0026quot;builtin\u0026quot;\rtypeof(`[`)\r#\u0026gt; [1] \u0026quot;special\u0026quot;\r 因為build-in， 所以這些函數的formals(), body(), and environment() 都回傳 NULL:\nformals(sum)\r#\u0026gt; NULL\rbody(sum)\r#\u0026gt; NULL\renvironment(sum)\r#\u0026gt; NULL\rattr(sum, \u0026quot;srcref\u0026quot;) # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏C寫的,自然也沒有參考程式碼\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; NULL\r  練習\n  This code makes a list of all functions in the base package.\nobjs \u0026lt;- mget(ls(\u0026quot;package:base\u0026quot;), inherits = TRUE)\rfuns \u0026lt;- Filter(is.function, objs)\r Use it to answer the following questions:\n Which base function has the most arguments? How many base functions have no arguments? What's special about those functions? How could you adapt the code to find all primitive functions?    變數和函數的搜尋 R的's lexical scoping 遵循4個主要規則::\n Name masking Functions vs. variables A fresh start Dynamic lookup  下面的執行結果傳回10還是20?\nx \u0026lt;- 10\rg01 \u0026lt;- function() {\rx \u0026lt;- 20\rx\r}\rg01()\r 提示\r 20\nName masking 內部範圍的宣告(第一次使用)覆蓋外部範圍的宣告。.\nx \u0026lt;- 10\ry \u0026lt;- 20\rg02 \u0026lt;- function() {\rx \u0026lt;- 1\ry \u0026lt;- 2\rc(x, y)\r}\rg02()\r#\u0026gt; [1] 1 2\r 如果在內部宣告找不到,就找外一層，一直到global environment。\nx \u0026lt;- 2\rg03 \u0026lt;- function() {\ry \u0026lt;- 1\rc(x, y)\r}\rg03()\r#\u0026gt; [1] 2 1\r 上面的規則仍然適用於函數中的函數. 例如下例中的函數i()\nx \u0026lt;- 1\rg04 \u0026lt;- function() {\ry \u0026lt;- 2\ri \u0026lt;- function() {\rz \u0026lt;- 3\rc(x, y, z)\r}\ri()\r}\rg04() # 🏷👏g04() returns c(1, 2, 3).\r 同樣也適用於建立函數的函數( closures); 下例中的g06()\nx \u0026lt;- 10\ry \u0026lt;- 20\rg05 \u0026lt;- function() {\ry \u0026lt;- 2\rfunction() {\rc(x, y)\r}\r}\rg06 \u0026lt;- g05()\rg06() # 🏷👏g06() returns c(10, 2).\r 既然函數也只是普通的物件,那麼同樣的名稱尋找規則也適用於函數。\n例如下面這個例子中,g07在外部和內部皆有定義。\ng07 \u0026lt;- function(x) x + 1 # 🏷👏全局g07()\rg08 \u0026lt;- function() {\rg07 \u0026lt;- function(x) x + 100 # 🏷👏局部g07()\rg07(10) #🏷👏這裡調用的是局部g07()\r}\rg08()\r#\u0026gt; [1] 110\r 但是如果同一個名稱,在不同範圍有不一樣的型態呢?例如g9一個是變數,一個是函數:\ng09 \u0026lt;- function(x) x + 100\rg10 \u0026lt;- function() {\rg09 \u0026lt;- 10\rg09(g09)\r}\rg10()\r#\u0026gt; [1] 110\r 一般來講,上面的用法在語法上是沒問題,但是最好避免。\nA fresh start 問題:下例中的函數g11()第一次執行和第二次執行有甚麼不同?\ng11 \u0026lt;- function() {\rif (!exists(\u0026quot;a\u0026quot;)) {\ra \u0026lt;- 1\r} else {\ra \u0026lt;- a + 1\r}\ra\r}\rg11()\rg11()  ❓g11() 每次被調用都是傳回 1。為甚麼?提示\r 每次執行g11()的時候,一個新的environment會被建立,也就是這個函數的局部空間。 而這個局部空間會在函數結束的時候✔️消失。\n函數 exists(x) :會尋找變數名稱x是否存在,存在則無回 TRUE,否則傳回 FALSE. 而exists(x)的搜尋路徑,可以用search()✔️知道。\r\r\rDynamic lookup 但是如果函數執行的時候在局部環境找不到的變數的時候,會於目前的總體環境(也就是函數所在的環境)找變數值。\ng12 \u0026lt;- function() x + 1 #🏷👏g12()定義在總體環境中\rx \u0026lt;- 15 #🏷👏x定義在總體環境中\rg12()\r#\u0026gt; [1] 16\rx \u0026lt;- 20\rg12()\r#\u0026gt; [1] 21\r \r展開\r上面的函數g12()用到變數x，因此需要在搜尋路徑中,有變數x的存在。因此在第二行中,定義了x,這個x存在於外部總體環境中。\n類似這種情況,如果是故意的,那就不需檢查。但如果不是特意的,有可能會出錯。這種變數稱為unbound symbols(簡單講,就是是不宣告而使用)。 如果要檢查函數中有沒有這種變數，可以使用工具 codetools::findGlobals(). 這個函數可以列出函數中是否有unbound symbols :\ncodetools::findGlobals(g12)\r#\u0026gt; [1] \u0026quot;+\u0026quot; \u0026quot;x\u0026quot;\r 也可以不依賴套件,而利用函數 emptyenv() :\ng12 \u0026lt;- function() x + 1 #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏此時,environment(g12) 為 \u0026amp;lt;environment: R_GlobalEnv\u0026amp;gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rx=4\renvironment(g12) \u0026lt;- emptyenv() # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏此時,environment(g12) 為 \u0026amp;lt;environment: R_EmptyEnv\u0026amp;gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rg12()\r#\u0026gt; Error in x + 1: 沒有這個函式 \u0026quot;+\u0026quot;\r 👍environment(g12) \u0026lt;- emptyenv()這一行的意思👺不是清掉g12()所在環境的的變數,而是將emptyenv()這個新空間指派給g12()讓他不要去搜尋總體環境(R_globalEnv)。\n Exercises   What does the following code return? Why? Describe how each of the three c's is interpreted.\nc \u0026lt;- 10\rc(c = c)\r   What are the four principles that govern how R looks for values?\n  What does the following function return? Make a prediction before running the code yourself.\nf \u0026lt;- function(x) {\rf \u0026lt;- function(x) {\rf \u0026lt;- function() {\rx ^ 2\r}\rf() + 1\r}\rf(x) * 2\r}\rf(10)\r   參數 Lazy evaluation lazily evaluated: 如果參數沒有在函數中被存取,就不會執行。\n 利用debug觀察 h01 \u0026lt;- function(x) {\r10\r}\rh01(x=runif(10))\r  另一個例子,這裡的stop()不會被執行。因為沒用到參數x h01 \u0026lt;- function(x) {\r10\r}\rh01(stop(\u0026quot;This is an error!\u0026quot;))\r   Forcing evaluation 強迫參數計算並取值可以利用函數 force():\nh02 \u0026lt;- function(x) {\rforce(x)\r10\r}\rh02(stop(\u0026quot;This is an error!\u0026quot;))\r   看一下為甚麼需要force()\ncapture1 \u0026lt;- function(x) {\rfunction() {\rx\r}\r}\r   由於lazy evaluation ,在調用capture1()的時候,x不會被執行\nx \u0026lt;- 10\rh03 \u0026lt;- capture1(x) #🏷👏 x沒有被執行\rh04 \u0026lt;- capture1(x) #🏷👏 x沒有被執行\rh03() #🏷👏 x在這裡evaluated\r#\u0026gt; [1] 10\rx \u0026lt;- 20\rh04() #🏷👏 x在這裡evaluated\r#\u0026gt; [1] 20    但是當我們調用h03(),h04()第二次的時候,都是第一次放進去的值\nx \u0026lt;- 30\rh03()\r#\u0026gt; [1] 10 #🏷👏 x仍然是第一次的值\rh04()\r#\u0026gt; [1] 20\r   上面是因為lazy evaluation. 在第一次執行以後,就被cached。因此我們需要 forcing x:\ncapture2 \u0026lt;- function(x) {\rforce(x)\rfunction() {\rx\r}\r}\rx \u0026lt;- 10\rh05 \u0026lt;- capture2(x)\rx \u0026lt;- 20\rh05()\r#\u0026gt; [1] 10\r   預設參數值 h07x \u0026lt;-function(x=1){\rx+1\r}\rh07x() # return 2\r#\u0026gt; [1] 2\rh07 \u0026lt;- function(x = 1, y = x * 2) { # 🏷👏第二個參數,利用了第一個參數\rc(x, y)\r}\rh07()\r#\u0026gt; [1] 1 2\r 缺失參數值Missing arguments missing(): 用來判斷參數內容來自使用者或者預設的函數\nh09 \u0026lt;- function(x = 10) {\rlist(missing(x), x)\r}\rstr(h09()) # 預設\r#\u0026gt; List of 2\r#\u0026gt; $ : logi TRUE #🏷👏因為使用者沒傳參數,用了預設值,因者是TRUE\r#\u0026gt; $ : num 10\rstr(h09(10)) # 使用者\r#\u0026gt; List of 2\r#\u0026gt; $ : logi FALSE\r#\u0026gt; $ : num 10\r 脫離函數 函數結束的時候,大部分是下面兩個狀態中的一種:\n 傳回值: 表示成功執行,這裡討論  implicit vs explicit. visible vs. invisible.   丟出錯誤訊號: 表示無法執行。討論  錯誤發生時的處理。函數的錯誤脫離狀態可以是產生一個旗號,用來觸發既有的處理函數,可以是重新啟動,或是互動訊息向是按Q脫離。    Implicit vs. explict returns 函數的返回值有兩種方式:\n  Implicitly, 最後一個 expression 變成傳回值:\nf \u0026lt;- function(x) {\rif (x \u0026lt; 10) {\r0\r} else {\r10\r}\r}\rf(5)\r#\u0026gt; [1] 0\rf(15)\r#\u0026gt; [1] 10\r   Explicitly, 利用 return():\nf \u0026lt;- function(x) {\rif (x \u0026lt; 10) {\rreturn(0)\r} else {\rreturn(10)\r}\r}\r   Invisible values 大部分函數再傳回值的時候都會顯示在主控台上:\nf \u0026lt;- function() 1\rf()\r#\u0026gt; [1] 1\r 但是也可以不用顯示:利用函數 invisible()。\nj04 \u0026lt;- function() invisible(1)\rj04()\r 這種不會顯示傳回值的函數,可以用下面的方法驗證:\nprint(j04())\r#\u0026gt; [1] 1\r(j04())\r#\u0026gt; [1] 1\r# 或者利用函數 `withVisible():\rstr(withVisible(j04()))\r#\u0026gt; List of 2\r#\u0026gt; $ value : num 1\r#\u0026gt; $ visible: logi FALSE\r ✔️在R語言中,傳回值是不可見的函數是 \u0026lt;-:\na \u0026lt;- 2\r(a \u0026lt;- 2)\r#\u0026gt; [1] 2\ra \u0026lt;- b \u0026lt;- c \u0026lt;- d \u0026lt;- 2\r 一般而言，像是 ( \u0026lt;-, print(), or plot()) 都是傳回不可見結果。\nErrors 函數可以利用函數 stop()結束一個函數的執行。\nj05 \u0026lt;- function() {\rstop(\u0026quot;I'm an error\u0026quot;)\rreturn(10)\r}\rj05()\r#\u0026gt; Error in j05(): I'm an error\r Exit handlers 設定函數執行完畢時要執行的結束函數。例如,有些設定值,在本函數中被暫時修改,但是在結束執行的時候,想要回復原狀，或者要清除本函數產生的一些垃圾檔案,都可以設定這脫離函數.這種脫離函數,不管函數執行完畢時,是否錯誤,都會執行。\nf \u0026lt;- function(x) {\rcat(\u0026quot;Hello\\n\u0026quot;)\ron.exit(cat(\u0026quot;Goodbye!\\n\u0026quot;), add = TRUE)\rif (x) {\rreturn(10)\r} else {\rstop(\u0026quot;Error\u0026quot;) #🏷👏產生錯誤訊號,會結束函數執行\r}\r}\rf(TRUE)\r#\u0026gt; Hello\r#\u0026gt; Goodbye!\r#\u0026gt; [1] 10\rf(FALSE)\r#\u0026gt; Hello\r#\u0026gt; Error in f(FALSE): Error\r#\u0026gt; Goodbye!\r on.exit() 的第二個參數幾乎都是設定為add = TRUE。如果不設定為T,先前的 exiting handler 會被蓋過去。\r\r\ron.exit() 清除中間檔案的範例:\ncleanup \u0026lt;- function(dir, code) {\rold_dir \u0026lt;- setwd(dir)\ron.exit(setwd(old), add = TRUE)\rold_opt \u0026lt;- options(stringsAsFactors = FALSE)\ron.exit(options(old_opt), add = TRUE)\r}\r 範例:某個函數必須切換工作目錄,然後執行某些工作,但是在函數執行完畢後,要設定為原先的工作目錄,則\nwith_dir \u0026lt;- function(dir, code) {\rold \u0026lt;- setwd(dir) # 🏷👏會把目前的工作目錄記錄在old\ron.exit(setwd(old), add = TRUE) # 🏷👏切換回去\rforce(code)\r}\rgetwd()\r#\u0026gt; [1] \u0026quot;D:/work/rmi_r/content/rlang\u0026quot;\rwith_dir(\u0026quot;~\u0026quot;, getwd())\r#\u0026gt; [1] \u0026quot;C:/Users/linchao/Documents\u0026quot;\r 指定多個on.exit()函數的時候,會按照指定的順序FIFO執行。\nf \u0026lt;- function() {\ron.exit(message(\u0026quot;a\u0026quot;), add = TRUE)\ron.exit(message(\u0026quot;b\u0026quot;), add = TRUE)\r}\rf()\r#\u0026gt; a\r#\u0026gt; b\r 在FILO的演算法中,前述的FIFO會造成困擾,可以利用 after = FALSE,來放在最前面:\nf \u0026lt;- function() {\ron.exit(message(\u0026quot;a\u0026quot;), add = TRUE, after = FALSE)\ron.exit(message(\u0026quot;b\u0026quot;), add = TRUE, after = FALSE)\r}\rf()\r#\u0026gt; b\r#\u0026gt; a\r \r跳過\r  What does load() return? Why don't you normally see these values?\n  What does write.table() return? What would be more useful?\n  How does the chdir parameter of source() compare to in_dir()? Why might you prefer one approach to the other?\n  Write a function that opens a graphics device, runs the supplied code, and closes the graphics device (always, regardless of whether or not the plotting code worked).\n  We can use on.exit() to implement a simple version of capture.output().\ncapture.output2 \u0026lt;- function(code) {\rtemp \u0026lt;- tempfile()\ron.exit(file.remove(temp), add = TRUE, after = TRUE)\rsink(temp)\ron.exit(sink(), add = TRUE, after = TRUE)\rforce(code)\rreadLines(temp)\r}\rcapture.output2(cat(\u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;c\u0026quot;, sep = \u0026quot;\\n\u0026quot;))\r#\u0026gt; Warning in file.remove(temp): 無法移除檔案 'C:\r#\u0026gt; \\Users\\linchao\\AppData\\Local\\Temp\\RtmpADUc8P\\file24e85549534a' ，原因是\r#\u0026gt; 'Permission denied'\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot;\r   Compare capture.output() to capture.output2(). How do the functions differ? What features have I removed to make the key ideas easier to see?\nHow have I rewritten the key ideas to be easier to understand?\n"},
{"uri": "/blogR//rlang/7_3_function.html","title": "7.3 R 函數定義的幾種分類",
	"tags": [],
	"description": "7_3_function",
	"content": "函數的型態  所有變數都是物件 所有變數之間的計算都來自函數  函數的型態\n prefix: 大部分都是這種形式,例如 foo(a, b, c). infix : 例如 x + y.另外像是%*% replacement: 例如 names(df) \u0026lt;- c(\u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;c\u0026quot;). Special forms: 例如 [[, if, for.  後3種形式,都可以翻譯成prefix form,例如\nx + y #🏷👏infix form\r`+`(x, y)\rnames(df) \u0026lt;- c(\u0026quot;x\u0026quot;, \u0026quot;y\u0026quot;, \u0026quot;z\u0026quot;) #🏷👏replacement form\r`names\u0026lt;-`(df, c(\u0026quot;x\u0026quot;, \u0026quot;y\u0026quot;, \u0026quot;z\u0026quot;))\rfor(i in 1:10) print(i) #🏷👏special form\r`for`(i, 1:10, print(i))\r \r補充\r😜Knowing the function name of a non-prefix function allows you to override its behaviour. For example, if you're ever feeling particularly evil, run the following code while a friend is away from their computer. It will introduce a fun bug: 10% of the time, 1 will be added to any numeric calculation inside of parentheses.\n`(` \u0026lt;- function(e1) {\rif (is.numeric(e1) \u0026amp;\u0026amp; runif(1) \u0026lt; 0.1) {\re1 + 1\r} else {\re1\r}\r}\rreplicate(50, (1 + 2))\r#\u0026gt; [1] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 4 3 3 3 3 3 3 3 3 3 3 4 3\r#\u0026gt; [39] 3 3 3 3 3 3 3 3 3 3 3 3\rrm(\u0026quot;(\u0026quot;)\r  這裡舉個例子,說明怎樣運用我們得到的知識來讓程式碼更簡潔:\n  例如下面的執行結果會將傳進去的x(這裡是1:10)中的每個元素都加3。\nadd \u0026lt;- function(x, y) x + y\rsapply(1:10, add, 3)\r#\u0026gt; [1] 4 5 6 7 8 9 10 11 12 13\r   知道所有的運算都來自於函數以後,我們藉由 + 函數,可以不用寫上面那個add()函數:\nsapply(1:5, `+`, 3)\r#\u0026gt; [1] 4 5 6 7 8\r   Prefix form The prefix form 函數的類型通常指的是函數在前面,然後後面接參數,使用方式有三種:\n By position, like help(mean). By name, like help(topic = mean). Using partial matching, like help(to = mean). help(topic, package = NULL, lib.loc = NULL,\rverbose = getOption(\u0026quot;verbose\u0026quot;),\rtry.all.packages = getOption(\u0026quot;help.try.all.packages\u0026quot;),\rhelp_type = getOption(\u0026quot;help_type\u0026quot;))\r   R對函數參數的解讀順序是1)是否完全符合2)是否部份符合(不可混淆)3)位置\nk01 \u0026lt;- function(abcdef, bcde1, bcde2) {\rlist(a = abcdef, b1 = bcde1, b2 = bcde2)\r}\rstr(k01(1, 2, 3)) # 🏷👏位置\r#\u0026gt; List of 3\r#\u0026gt; $ a : num 1\r#\u0026gt; $ b1: num 2\r#\u0026gt; $ b2: num 3\rstr(k01(2, 3, abcdef = 1)) # # 🏷👏先名稱,然後位置\r#\u0026gt; List of 3\r#\u0026gt; $ a : num 1\r#\u0026gt; $ b1: num 2\r#\u0026gt; $ b2: num 3\rstr(k01(2, 3, a = 1)) # 🏷👏部分符合\r#\u0026gt; List of 3\r#\u0026gt; $ a : num 1\r#\u0026gt; $ b1: num 2\r#\u0026gt; $ b2: num 3\rstr(k01(1, 3, b = 1)) # ❌🏷👏混淆,兩個參數有b開頭\r#\u0026gt; Error in k01(1, 3, b = 1): 引數 3 有多個與之相對應的形式引數\r Infix functions R的內建 infix operators: :, ::, :::, $, @, ^, *, /, +, -, \u0026gt;, \u0026gt;=, \u0026lt;, \u0026lt;=, ==, !=, !, \u0026amp;, \u0026amp;\u0026amp;, |, ||, ~, \u0026lt;-, and \u0026lt;\u0026lt;-.\n建立infix函數,1)兩個參數,2)函數名稱兩邊有%, base R 也額外定義了 %%, %*%, %/%, %in%, %o%, and %x%.\n`%+%` \u0026lt;- function(a, b) paste0(a, b)\r\u0026quot;new \u0026quot; %+% \u0026quot;string\u0026quot;\r#\u0026gt; [1] \u0026quot;new string\u0026quot;\r 自訂的infix operators 兩邊是%,中間不能有%,其他都可以,但是如果有特殊字元必須使用逃逸字元,如下範例:\n`% %` \u0026lt;- function(a, b) paste(a, b) #🏷定義新函數% %\r`%/\\\\%` \u0026lt;- function(a, b) paste(a, b) #🏷定義新函數%/\\%\r\u0026quot;a\u0026quot; % % \u0026quot;b\u0026quot;\r#\u0026gt; [1] \u0026quot;a b\u0026quot;\r\u0026quot;a\u0026quot; %/\\% \u0026quot;b\u0026quot;\r#\u0026gt; [1] \u0026quot;a b\u0026quot;\r infix 函數定義的operators 運算順序由左到右。\n`%-%` \u0026lt;- function(a, b) paste0(\u0026quot;(\u0026quot;, a, \u0026quot; %-% \u0026quot;, b, \u0026quot;)\u0026quot;)\r\u0026quot;a\u0026quot; %-% \u0026quot;b\u0026quot; %-% \u0026quot;c\u0026quot;\r#\u0026gt; [1] \u0026quot;((a %-% b) %-% c)\u0026quot;\r 兩個例外的INFIX函數可以只有一參數: + and -.\n-1\r#\u0026gt; [1] -1\r+10\r#\u0026gt; [1] 10\r Replacement functions Replacement functions 的函數名稱必須是類似 xxx\u0026lt;-.\n 必須要有兩個參數 x 和 value, 且 必須回傳更改過的物件。  例如我們想寫一個函數,讓使用者可以指派一個向量的第二個元素 :\n`second\u0026lt;-` \u0026lt;- function(x, value) {\rx[2] \u0026lt;- value #只更動第二個元素\rx\r}\r# 使用方法\rx \u0026lt;- 1:10 #原來的值\rsecond(x) \u0026lt;- 5L #利用新的指派運算\rx # 新值為5L\r#\u0026gt; [1] 1 5 3 4 5 6 7 8 9 10\r \r展開\r利用 tracemem()追蹤:\nx \u0026lt;- 1:10\rtracemem(x)\r#\u0026gt; \u0026lt;0x7ffae71bd880\u0026gt; #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏1\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rsecond(x) \u0026lt;- 6L\r#\u0026gt; tracemem[0x7ffae71bd880 \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏1\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt; -\u0026gt; 0x7ffae61b5480]: \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏2\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt; #\u0026gt; tracemem[0x7ffae61b5480 \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏2\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt; -\u0026gt; 0x7ffae73f0408]\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏2\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt; : second\u0026lt;-   上面的函數,只能指派第2個元素,如果要讓使用者能指定其他元素,就要另外新增一個參數,這時候這個參數,要放在變數 x,和值value的中間 :\n`modify\u0026lt;-` \u0026lt;- function(x, position, value) {\rx[position] \u0026lt;- value\rx\r}\rmodify(x, 1) \u0026lt;- 10\rx\r#\u0026gt; [1] 10 5 3 4 5 6 7 8 9 10\r \r展開\rmodify(x, 1) \u0026lt;- 10\r 其實在R的幕後解譯中被轉為\nx \u0026lt;- `modify\u0026lt;-`(x, 1, 10)\r  \r更複雜的翻譯\rx \u0026lt;- c(a = 1, b = 2, c = 3)\rnames(x)\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot;\rnames(x)[2] \u0026lt;- \u0026quot;two\u0026quot;\rnames(x)\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;two\u0026quot; \u0026quot;c\u0026quot;\r 會被解譯為\n`*tmp*` \u0026lt;- x #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏R就是用這個變數\u0026lt;code\u0026gt;*tmp*\u0026lt;/code\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rx \u0026lt;- `names\u0026lt;-`(`*tmp*`, `[\u0026lt;-`(names(`*tmp*`), 2, \u0026quot;two\u0026quot;))\rrm(`*tmp*`)\r  Special forms 參考\nInvoking a function 另一個do.call()的參考\nSuppose you had a list of function arguments:\nargs \u0026lt;- list(1:10, na.rm = TRUE)\r How could you then send that list to mean()? In base R, you need do.call():\ndo.call(mean, args)\r#\u0026gt; [1] 5.5\r# Equivalent to\rmean(1:10, na.rm = TRUE)\r#\u0026gt; [1] 5.5\r 簡單測試   Rewrite the following code snippets into prefix form:\n1 + 2 + 3\r1 + (2 + 3)\rif (length(x) \u0026lt;= 5) x[[5]] else x[[n]]\r   Clarify the following list of odd function calls:\nx \u0026lt;- sample(replace = TRUE, 20, x = c(1:10, NA))\ry \u0026lt;- runif(min = 0, max = 1, 20)\rcor(m = \u0026quot;k\u0026quot;, y = y, u = \u0026quot;p\u0026quot;, x = x)\r   相關係數 cor(x, y = NULL, use = \u0026quot;everything\u0026quot;, method = c(\u0026quot;pearson\u0026quot;, \u0026quot;kendall\u0026quot;, \u0026quot;spearman\u0026quot;)) if method is \u0026quot;kendall\u0026quot; or \u0026quot;spearman\u0026quot;, Kendall's tau or Spearman's rho statistic is used to estimate a rank-based measure of association\r\r\r  Explain why the following code fails:\nmodify(get(\u0026quot;x\u0026quot;), 1) \u0026lt;- 10\r#\u0026gt; Error: target of assignment expands to non-language object\r   Create a replacement function that modifies a random location in a vector.\n  重新設計你自己有關 + 運算的版本,例如可以整合字串:\n1 + 2\r#\u0026gt; [1] 3\r\u0026quot;a\u0026quot; + \u0026quot;b\u0026quot;\r#\u0026gt; [1] \u0026quot;ab\u0026quot;\r   Create a list of all the replacement functions found in the base package. Which ones are primitive functions? (Hint use apropros())\n  What are valid names for user-created infix functions?\n  Create an infix xor() operator.\n  Create infix versions of the set functions intersect(), union(), and setdiff(). You might call them %n%, %u%, and %/% to match conventions from mathematics.\n  Answer the following questions to see if you can safely skip this chapter. You can find the answers in\n  What are the three components of a function?\n  What does the following code return?\nx \u0026lt;- 10\rf1 \u0026lt;- function(x) {\rfunction() {\rx + 10\r}\r}\rf1(1)()\r   How would you usually write this code?\n`+`(1, `*`(2, 3))\r   How could you make this call easier to read?\nmean(, TRUE, x = c(1:10, NA))\r   Does the following code throw an error when executed? Why/why not?\nf2 \u0026lt;- function(a, b) {\ra * 10\r}\rf2(10, stop(\u0026quot;This is an error!\u0026quot;))\r   What is an infix function? How do you write it? What's a replacement function? How do you write it?\n  How do you ensure that cleanup action occurs regardless of how a function exits?\n  提示\r   The three components of a function are its body, arguments, and environment.\n  f1(1)() returns 11.\n  You'd normally write it in infix style: 1 + (2 * 3).\n  Rewriting the call to mean(c(1:10, NA), na.rm = TRUE) is easier to understand.\n  No, it does not throw an error because the second argument is never used so it's never evaluated.\n  See infix and replacement functions.\n  You use on.exit(); see on exit for details.\n  \n"},
{"uri": "/blogR//rlang/7_8_objectbasic.html","title": "7.8 R的物件相關概念",
	"tags": [],
	"description": "7_8_objectBasic",
	"content": "\rattribute 簡單理解為物件屬性,例如矩陣(matrix)陣列(array)的names和dimenstions。\nDefinitions:\n 函數 attributes 設定或列出物件的所有attributes。 函數 attr 物件中某個指定的attribute. 函數 structure 設定資料物件中其他額外的 attributes。  使用方法\nattributes(my.array) 🏷👏列出所有屬性\r#\u0026gt; $dim\r#\u0026gt; [1] 3 4 2\r 設定和存取其中一個屬性:\nattr(baskets.team,'season') \u0026lt;- '2010-2011'\rattr(baskets.team,'season')\r#\u0026gt; [1] \u0026quot;2010-2011\u0026quot;\r 如果要刪除,則\nattr(baskets.team,'season') \u0026lt;- NULL\r 其他 attr() \u0026amp; attributes()　範例\nattributes(data) #🏷所有的attributes\rattr(x = data, which = \u0026quot;attribute_name\u0026quot;) # 🏷只是其中之一,第二個參數指定\r# 比較 structure(data, dim = c(2, 6))\r 範例 載入資料集然後利用函數看看data.frame有甚麼attribute。\ndata(cars) attributes(cars) #\u0026gt; $names\r#\u0026gt; [1] \u0026quot;speed\u0026quot; \u0026quot;dist\u0026quot; #\u0026gt; #\u0026gt; $class\r#\u0026gt; [1] \u0026quot;data.frame\u0026quot;\r#\u0026gt; #\u0026gt; $row.names\r#\u0026gt; [1] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\r#\u0026gt; [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\rattr(x = cars, which = \u0026quot;names\u0026quot;) #🏷👏或是寫成　attr(cars,\u0026quot;names\u0026quot;)\r#\u0026gt; [1] \u0026quot;speed\u0026quot; \u0026quot;dist\u0026quot;\r 比較一下names,可以發現,names 只是一個data.frame中的attribute\nclass(cars)\r#\u0026gt; [1] \u0026quot;data.frame\u0026quot;\rstr(cars)\r#\u0026gt; 'data.frame':\t50 obs. of 2 variables:\r#\u0026gt; $ speed: num 4 4 7 7 8 9 10 10 10 11 ...\r#\u0026gt; $ dist : num 2 10 4 22 16 10 18 26 34 17 ...\rnames(cars)\r#\u0026gt; [1] \u0026quot;speed\u0026quot; \u0026quot;dist\u0026quot;\r \r\r範例 attributes_list \u0026lt;- list(names = c(\u0026quot;col1\u0026quot;, \u0026quot;col2\u0026quot;), #設定不同的欄位名稱\rclass = \u0026quot;data.frame\u0026quot;, # 保留類別\rrow.names = nrow(cars):1) # 反向\rattributes(cars) \u0026lt;- attributes_list # 🏷👏設定屬性\rattributes(cars) #\u0026gt; $names\r#\u0026gt; [1] \u0026quot;col1\u0026quot; \u0026quot;col2\u0026quot;\r#\u0026gt; #\u0026gt; $class\r#\u0026gt; [1] \u0026quot;data.frame\u0026quot;\r#\u0026gt; #\u0026gt; $row.names\r#\u0026gt; [1] 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26\r#\u0026gt; [26] 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\r 利用attr() 改變其中一個Attribute attr(x = cars, which = \u0026quot;names\u0026quot;) \u0026lt;- c(\u0026quot;aaa\u0026quot;, \u0026quot;bbb\u0026quot;) # Set only names attribute\rx\r#\u0026gt; Error in eval(expr, envir, enclos): 找不到物件 'x'\r 檢查看看結果\nattributes(cars) # Apply attributes function\r#\u0026gt; $names\r#\u0026gt; [1] \u0026quot;aaa\u0026quot; \u0026quot;bbb\u0026quot;\r#\u0026gt; #\u0026gt; $class\r#\u0026gt; [1] \u0026quot;data.frame\u0026quot;\r#\u0026gt; #\u0026gt; $row.names\r#\u0026gt; [1] 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26\r#\u0026gt; [26] 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\r 　The R structure Function 和attributes() attr() 相關的命令是 structure() 。\nset.seed(12345) vec \u0026lt;- round(runif(15, 0, 10)) # 1D 向量 vec\r#\u0026gt; [1] 7 9 8 9 5 2 3 5 7 10 0 2 7 0 4\r 改變成矩陣:\nvec_dim \u0026lt;- structure(vec, dim = c(3, 5)) # Change dimension of vector\rvec_dim # Print updated vector\r#\u0026gt; [,1] [,2] [,3] [,4] [,5]\r#\u0026gt; [1,] 7 9 3 10 7\r#\u0026gt; [2,] 9 5 5 0 0\r#\u0026gt; [3,] 8 2 7 2 4\r 比較之前的寫法:\nmatrix(vec,nrow=3)\r Example: 這裡建立一個list，然後把其餘的參數當作屬性，綁上這個list\ndd \u0026lt;- structure(\rlist(year = c(2001, 2002, 2004, 2006) ,\rlength_days = c(366.3240, 365.4124, 366.5323423, 364.9573234)) ,.Names = c(\u0026quot;year\u0026quot;, \u0026quot;length of days\u0026quot;) ,row.names = c(NA, -4L) ,class = \u0026quot;data.frame\u0026quot;)\rstr(dd)\r#\u0026gt; 'data.frame':\t4 obs. of 2 variables:\r#\u0026gt; $ year : num 2001 2002 2004 2006\r#\u0026gt; $ length of days: num 366 365 367 365\rattributes(dd)\r#\u0026gt; $names\r#\u0026gt; [1] \u0026quot;year\u0026quot; \u0026quot;length of days\u0026quot;\r#\u0026gt; #\u0026gt; $row.names\r#\u0026gt; [1] 1 2 3 4\r#\u0026gt; #\u0026gt; $class\r#\u0026gt; [1] \u0026quot;data.frame\u0026quot;\rdd\r year length of days   2001 366.3240  2002 365.4124  2004 366.5323  2006 364.9573     利用structure()建立的物件,不管是同質(vector,matrix)還是異質(data.frame,list) 都會利用attributes儲存meta data。例如,\njust_vector \u0026lt;- structure(1:10, comment = \u0026quot;This is my simple vector with info\u0026quot;)\rjust_vector\r#\u0026gt; [1] 1 2 3 4 5 6 7 8 9 10\rstr(just_vector)\r#\u0026gt; int [1:10] 1 2 3 4 5 6 7 8 9 10\r#\u0026gt; - attr(*, \u0026quot;comment\u0026quot;)= chr \u0026quot;This is my simple vector with info\u0026quot;\rattributes(just_vector)　# 🏷👏注意:attributes()的傳回結果為list,因此有$comment\r#\u0026gt; $comment\r#\u0026gt; [1] \u0026quot;This is my simple vector with info\u0026quot;\r 函數structure() vs str() 這是另一個利用函數structure()的例子。先看一下一般建立data.frame物件的方法:\nyear = c(1999, 2002, 2005, 2008)\rpollution = c(346.82,134.308821199349, 130.430379885892, 88.275457392443)\rdd2 \u0026lt;- data.frame(year,pollution)\rdd2$year \u0026lt;- as.factor(dd2$year)\r 利用 structure, 一步就可以完成:\ndd \u0026lt;- structure(list( year = as.factor(c(2001, 2002, 2004, 2006))\r,length_days = c(366.3240, 365.4124, 366.5323423, 364.9573234)) ,.Names = c(\u0026quot;year\u0026quot;, \u0026quot;length of days\u0026quot;) ,row.names = c(NA, -4L) ,class = \u0026quot;data.frame\u0026quot;)\r 不依靠轉換函數as.data.frame()自行建立 data.frame物件。\ndd3 \u0026lt;- structure(list(\rv1 = as.factor(c(2001, 2002, 2004, 2006))\r,v2 = I(c(2001, 2002, 2004, 2006))\r,v3 = ordered(c(2001, 2002, 2004, 2006))\r,v4 = as.double(c(366.3240, 365.4124, 366.5323423, 364.9573234)))\r,.Names = c(\u0026quot;year\u0026quot;, \u0026quot;AsIs Year\u0026quot;,\u0026quot;yearO\u0026quot;, \u0026quot;length of days\u0026quot;)\r,.typeOf = c(\u0026quot;factor\u0026quot;, \u0026quot;numeric\u0026quot;, \u0026quot;ordered\u0026quot;,\u0026quot;numeric\u0026quot;)\r,row.names = c(NA, -4L)\r,class = \u0026quot;data.frame\u0026quot;\r,comment = \u0026quot;Ordered YearO for categorical analysis and other variables\u0026quot;)\rattributes(dd3)$comment # 🏷👏看一下結果\r#\u0026gt; [1] \u0026quot;Ordered YearO for categorical analysis and other variables\u0026quot;\rattr(dd3, which=\u0026quot;comment\u0026quot;)\r#\u0026gt; [1] \u0026quot;Ordered YearO for categorical analysis and other variables\u0026quot;\r"},
{"uri": "/blogR//rlang/7_9_%E7%89%A9%E4%BB%B6%E5%B0%8E%E5%90%91s3.html","title": "7.9 物件導向S3",
	"tags": [],
	"description": "7_9_物件導向S3",
	"content": "OOP advance R S3 generic method\nBase objects vs OO objects 辨別變數是基礎型別或是物件型別，可以簡單利用函數： is.object():\n基礎物件base object:\nis.object(1:10)\r#\u0026gt; [1] FALSE\r [1] FALSE\n物件導向物件 OO object\nis.object(mtcars)\r#\u0026gt; [1] TRUE\r [1] TRUE\n主要的區別在於基本物件沒有class 這個attribute\nattr(1:10, \u0026quot;class\u0026quot;) # NULL\r#\u0026gt; NULL\rattr(mtcars, \u0026quot;class\u0026quot;) # [1] \u0026quot;data.frame\u0026quot;\r#\u0026gt; [1] \u0026quot;data.frame\u0026quot;\r class()這個函數,不見得總是會和attr()的結果一致,因為，對基本物件而言,傳回的是後面討論,而不是 NULL。\n變數屬性查詢函數  names() dimnames() length() dim(): 各維度長度 class() : 變數類別 table()：各類資料計數 str()：變數的資料結構(其實是一個list)  透過names()函數，可取得各種list元素的名稱,但是如果是data.frame則是顯示欄位名稱 islands是內建資料\nstr(islands)\r#\u0026gt; Named num [1:48] 11506 5500 16988 2968 16 ...\r#\u0026gt; - attr(*, \u0026quot;names\u0026quot;)= chr [1:48] \u0026quot;Africa\u0026quot; \u0026quot;Antarctica\u0026quot; \u0026quot;Asia\u0026quot; \u0026quot;Australia\u0026quot; ...\r head(names(islands)) #\u0026gt; [1] \u0026quot;Africa\u0026quot; \u0026quot;Antarctica\u0026quot; \u0026quot;Asia\u0026quot; \u0026quot;Australia\u0026quot; \u0026quot;Axel Heiberg\u0026quot;\r#\u0026gt; [6] \u0026quot;Baffin\u0026quot;\r 方形資料（例如，矩陣，table, data.frame)，可以透過dimnames()函數可顯示data.frame 橫行和直行的名稱 先橫行，然後直行。\ndimnames(USArrests) #\u0026gt; [[1]]\r#\u0026gt; [1] \u0026quot;Alabama\u0026quot; \u0026quot;Alaska\u0026quot; \u0026quot;Arizona\u0026quot; \u0026quot;Arkansas\u0026quot; #\u0026gt; [5] \u0026quot;California\u0026quot; \u0026quot;Colorado\u0026quot; \u0026quot;Connecticut\u0026quot; \u0026quot;Delaware\u0026quot; #\u0026gt; [9] \u0026quot;Florida\u0026quot; \u0026quot;Georgia\u0026quot; \u0026quot;Hawaii\u0026quot; \u0026quot;Idaho\u0026quot; #\u0026gt; [13] \u0026quot;Illinois\u0026quot; \u0026quot;Indiana\u0026quot; \u0026quot;Iowa\u0026quot; \u0026quot;Kansas\u0026quot; #\u0026gt; [17] \u0026quot;Kentucky\u0026quot; \u0026quot;Louisiana\u0026quot; \u0026quot;Maine\u0026quot; \u0026quot;Maryland\u0026quot; #\u0026gt; [21] \u0026quot;Massachusetts\u0026quot; \u0026quot;Michigan\u0026quot; \u0026quot;Minnesota\u0026quot; \u0026quot;Mississippi\u0026quot; #\u0026gt; [25] \u0026quot;Missouri\u0026quot; \u0026quot;Montana\u0026quot; \u0026quot;Nebraska\u0026quot; \u0026quot;Nevada\u0026quot; #\u0026gt; [29] \u0026quot;New Hampshire\u0026quot; \u0026quot;New Jersey\u0026quot; \u0026quot;New Mexico\u0026quot; \u0026quot;New York\u0026quot; #\u0026gt; [33] \u0026quot;North Carolina\u0026quot; \u0026quot;North Dakota\u0026quot; \u0026quot;Ohio\u0026quot; \u0026quot;Oklahoma\u0026quot; #\u0026gt; [37] \u0026quot;Oregon\u0026quot; \u0026quot;Pennsylvania\u0026quot; \u0026quot;Rhode Island\u0026quot; \u0026quot;South Carolina\u0026quot;\r#\u0026gt; [41] \u0026quot;South Dakota\u0026quot; \u0026quot;Tennessee\u0026quot; \u0026quot;Texas\u0026quot; \u0026quot;Utah\u0026quot; #\u0026gt; [45] \u0026quot;Vermont\u0026quot; \u0026quot;Virginia\u0026quot; \u0026quot;Washington\u0026quot; \u0026quot;West Virginia\u0026quot; #\u0026gt; [49] \u0026quot;Wisconsin\u0026quot; \u0026quot;Wyoming\u0026quot; #\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] \u0026quot;Murder\u0026quot; \u0026quot;Assault\u0026quot; \u0026quot;UrbanPop\u0026quot; \u0026quot;Rape\u0026quot;\r 方形資料，可以透過length()函數可顯示資料長度，但是如果是data.frame則顯示欄位數。\nlength(islands) #\u0026gt; [1] 48\r 透過dim() 顯示方形資料的「資料筆數」和「欄位數目」，先「橫行」，後「直行」\ndim(USArrests) #\u0026gt; [1] 50 4\r 使用class()函數可知道變數類別\nclass(pi)\r#\u0026gt; [1] \u0026quot;numeric\u0026quot;\rclass(Sys.Date())\r#\u0026gt; [1] \u0026quot;Date\u0026quot;\r 使用table()函數可知道向量中每個值出現幾次\ntable(iris$Species) ##統計結果\r#\u0026gt; #\u0026gt; setosa versicolor virginica #\u0026gt; 50 50 50\r S3 Prerequisites We'll use the sloop package to fill in some missing pieces when it comes to S3.\n# install_github(\u0026quot;hadley/sloop\u0026quot;)\rlibrary(sloop)\r Basics 基本上是結構的一種協定。我的意思這個物件是基於結構而規定，是語意上的內規而不是語法上的規定。 例如，所謂的類別，只不過是結構上的一個其中一個欄位，而這個欄位名稱為class\nf \u0026lt;- factor(\u0026quot;a\u0026quot;)\rtypeof(f)\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\rattributes(f)\r#\u0026gt; $levels\r#\u0026gt; [1] \u0026quot;a\u0026quot;\r#\u0026gt; #\u0026gt; $class\r#\u0026gt; [1] \u0026quot;factor\u0026quot;\r 配合通用函數generic function的觀念(例如常見的print())，而達到ＯＯＰ的目的。\nprint(f)\r#\u0026gt; [1] a\r#\u0026gt; Levels: a\rclass(unclass(f))\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\rprint(unclass(f))　#🏷👏unclass會去掉屬性class\r#\u0026gt; [1] 1\r#\u0026gt; attr(,\u0026quot;levels\u0026quot;)\r#\u0026gt; [1] \u0026quot;a\u0026quot;\r time \u0026lt;- strptime(\u0026quot;2017-01-01\u0026quot;, \u0026quot;%Y-%m-%d\u0026quot;)\rstr(time)\r#\u0026gt; POSIXlt[1:1], format: \u0026quot;2017-01-01\u0026quot;\rstr(unclass(time), list.len = 5)\r#\u0026gt; List of 11\r#\u0026gt; $ sec : num 0\r#\u0026gt; $ min : int 0\r#\u0026gt; $ hour : int 0\r#\u0026gt; $ mday : int 1\r#\u0026gt; $ mon : int 0\r#\u0026gt; [list output truncated]\r A generic and its methods are functions that operate on classes. The role of a generic is to find the right method for the arguments that it is provided, the process of method dispatch. A method is a function that implements the generic behaviour for a specific class. In other words the job of the generic is to find the right method; the job of the method is to do the work.\nYou can find some S3 methods (those in the base package and those that you've created) by typing their names. However, this will not work with most packages because S3 methods are not exported: they live only inside the package, and are not available from the global environment. Instead, you can use getS3method(), which will work regardless of where the method lives:\nS3 methods 是我們定義了一個通用名稱，然後經由這個通用名稱，找到特定函數通用.類別()，例如 當我要計算日期的平均，我把一個日期變數傳到函數mean()，通用函數mean()又呼叫了 mean.Date()（因為日期變數的類別是Date）, 又例如factor變數，要列印的時候我們會打print(factor var) 此時print()又會呼叫 print.factor().\nmean.Date #🏷👏\r#\u0026gt; function (x, ...) #\u0026gt; .Date(mean(unclass(x), ...))\r#\u0026gt; \u0026lt;bytecode: 0x0000000017c30d30=\u0026quot;\u0026quot;\u0026gt;\r#\u0026gt; \u0026lt;environment: namespace:base=\u0026quot;\u0026quot;\u0026gt;\r# Always works\rgetS3method(\u0026quot;mean\u0026quot;, \u0026quot;Date\u0026quot;)\r#\u0026gt; function (x, ...) #\u0026gt; .Date(mean(unclass(x), ...))\r#\u0026gt; \u0026lt;bytecode: 0x0000000017c30d30=\u0026quot;\u0026quot;\u0026gt;\r#\u0026gt; \u0026lt;environment: namespace:base=\u0026quot;\u0026quot;\u0026gt;\r\u0026lt;/environment:\u0026gt;\u0026lt;/bytecode:\u0026gt;\u0026lt;/environment:\u0026gt;\u0026lt;/bytecode:\u0026gt;\r note: 除了自己定義的函數和在base套件的函數以外，大部分都拿不到，而要透過 getS3method(\u0026quot;generic\u0026quot;, \u0026quot;class\u0026quot;) 來看到程式碼\nClasses 自行建立自己的類別，利用structure()\n# Create and assign class in one step\rfoo \u0026lt;- structure(list(), class = \u0026quot;foo\u0026quot;)\r# Create, then set class\rfoo \u0026lt;- list()\rclass(foo) \u0026lt;- \u0026quot;foo\u0026quot;\r 類別可能兩種以上，此時可以用函數inherits()\nclass(foo)\r#\u0026gt; [1] \u0026quot;foo\u0026quot;\rinherits(foo, \u0026quot;foo\u0026quot;)\r#\u0026gt; [1] TRUE\r 一次定義多個類別的例子：\nstructure(x, class = c(\u0026quot;POSIXct\u0026quot;, \u0026quot;POSIXt\u0026quot;),\rtzone = tzone\r)\r S3 has no checks for correctness. This means you can change the class of existing objects:\n# Create a linear model\rmod \u0026lt;- lm(log(mpg) ~ log(disp), data = mtcars)\rclass(mod)\r#\u0026gt; [1] \u0026quot;lm\u0026quot;\rprint(mod)\r#\u0026gt; #\u0026gt; Call:\r#\u0026gt; lm(formula = log(mpg) ~ log(disp), data = mtcars)\r#\u0026gt; #\u0026gt; Coefficients:\r#\u0026gt; (Intercept) log(disp) #\u0026gt; 5.3810 -0.4586\r# Turn it into a data frame (?!)\rclass(mod) \u0026lt;- \u0026quot;data.frame\u0026quot;\r# Unsurprisingly this doesn't work very well\rprint(mod)\r#\u0026gt; [1] coefficients residuals effects rank fitted.values\r#\u0026gt; [6] assign qr df.residual xlevels call #\u0026gt; [11] terms model #\u0026gt; \u0026lt;0 列\u0026gt; (或零長度的 row.names)\r Constructors 因為是語意上的ＯＯＰ，因此，建構子也是自己規定要怎樣，例如模仿ＯＯＰ的通則用new這個關鍵字\nnew_Date \u0026lt;- function(x) {\rstopifnot(is.double(x))\rstructure(x, class = \u0026quot;Date\u0026quot;)\r}\rnew_Date(c(-1, 0, 1))\r#\u0026gt; [1] \u0026quot;1969-12-31\u0026quot; \u0026quot;1970-01-01\u0026quot; \u0026quot;1970-01-02\u0026quot;\r 看看指令lm()產生的物件\nmod \u0026lt;- lm(mpg ~ wt, data = mtcars)\rtypeof(mod)\r#\u0026gt; [1] \u0026quot;list\u0026quot;\rnames(mod)\r#\u0026gt; [1] \u0026quot;coefficients\u0026quot; \u0026quot;residuals\u0026quot; \u0026quot;effects\u0026quot; \u0026quot;rank\u0026quot; #\u0026gt; [5] \u0026quot;fitted.values\u0026quot; \u0026quot;assign\u0026quot; \u0026quot;qr\u0026quot; \u0026quot;df.residual\u0026quot; #\u0026gt; [9] \u0026quot;xlevels\u0026quot; \u0026quot;call\u0026quot; \u0026quot;terms\u0026quot; \u0026quot;model\u0026quot;\r 這裡舉一個字鍵類型（本例中，df_class）的例子\nnew_df_class \u0026lt;- function(df, attr1, attr2) {\rstopifnot(is.data.frame(df))\rstructure(\rdf, attr1 = attr1,\rattr2 = attr2,\rclass = c(\u0026quot;df_class\u0026quot;, \u0026quot;data.frame\u0026quot;) )\r}\r 上面例子中，class的順序是有意義的，意思是df_class繼承自data.frame\nGenerics and methods 透過通用函數要達成ＯＯＰ的多型函數(dispatch)。 S3這個多型函數，利用 UseMethod(), 來呼叫類別對應的函數。 UseMethod() 兩個參數，一個是函數名稱，然後是要傳進去的參數（可省略）。\n# Dispatches on x\rgeneric \u0026lt;- function(x, y, ...) {\rUseMethod(\u0026quot;generic\u0026quot;)\r}\r# Dispatches on y\rgeneric2 \u0026lt;- function(x, y, ...) {\rUseMethod(\u0026quot;generic2\u0026quot;, y)\r}\r Note that you don't pass any of the arguments of the generic to UseMethod(); it uses black magic to pass them on automatically. Generally, you should avoid doing any computation in a generic, because the semantics are complicated and few people know the details. In general, any modifications to the arguments of the generic will be undone, leading to much confusion.\nA generic isn't useful without some methods, which are just functions that follow a naming scheme (generic.class). Because a method is just a function with a special name, you can call methods directly, but you generally shouldn't. The main reason to call the method directly is that it sometimes leads to considerable performance improvements. See performance for an example.\ngeneric.foo \u0026lt;- function(x, y, ...) {\rmessage(\u0026quot;foo method\u0026quot;)\r}\rgeneric(new_s3_scalar(class = \u0026quot;foo\u0026quot;))\r#\u0026gt; Error in new_s3_scalar(class = \u0026quot;foo\u0026quot;): 沒有這個函式 \u0026quot;new_s3_scalar\u0026quot;\r You can see all the methods defined for a generic with s3_methods_generic():\ns3_methods_generic(\u0026quot;generic\u0026quot;)\r#\u0026gt; Error in .S3methods(generic.function, class, envir): no function 'generic' is visible\r Coercion Many S3 objects can be naturally created from an existing object through coercion. If this is the case for your class, you should provide a coercion function, an S3 generic called as_class_name. Base R generally does not follow this convention, which can cause problems as illustrated by as.factor(): 在Ｒ中as.factor並不是函數as（非通用函數）的派發函數。 如果現在我們要自己建一個轉換成factor類別的通用函數\nas_factor \u0026lt;- function(x, ...) {\rUseMethod(\u0026quot;as_factor\u0026quot;)\r}\r 先定義一個對已經是factor的函數，就是說如果已經是factor那就不做任何事，因為不用轉換\nas_factor.factor \u0026lt;- function(x, ...) x\r 現在針對字串和整數定義相對應的派發函數：\nas_factor.character \u0026lt;- function(x, ...) {\rfactor(x, levels = unique(x))\r}\ras_factor.integer \u0026lt;- function(x, ...) {\rfactor(x, levels = as.character(unique(x)))\r}\r 對於不處理的類別，可以利用default\nas_factor(1)\r#\u0026gt; Error in UseMethod(\u0026quot;as_factor\u0026quot;): 沒有適用的方法可將 'as_factor' 套用到 \u0026quot;c('double', 'numeric')\u0026quot; 類別的物件\ras_factor.default \u0026lt;- function(x, ...) {\rstop(\r\u0026quot;Don't know how to coerce object of class \u0026quot;, paste(class(x), collapse = \u0026quot;/\u0026quot;), \u0026quot; into a factor\u0026quot;, call. = FALSE\r)\r}\ras_factor(1)\r#\u0026gt; Error: Don't know how to coerce object of class numeric into a factor\r Arguments 通常通用函數和派發函樹有相同的參數個數（如果是套件開發，則 R CMD check 會強迫這個規定），但是加了 ..., 就可以不受這個限制。\nMethod dispatch UseMethod() and NextMethod(). UseMethod() The purpose of UseMethod() 利用指令 paste0(\u0026quot;通用\u0026quot;, \u0026quot;.\u0026quot;, c(class(x), \u0026quot;default\u0026quot;)),然後在其中找出對應的派發函數。這裡利用 sloop::s3_dispatch(). 來列出派發函數\nx \u0026lt;- Sys.time()\rs3_dispatch(print(x))\r#\u0026gt; =\u0026gt; print.POSIXct\r#\u0026gt; print.POSIXt\r#\u0026gt; * print.default\r 如上，當我們要print出 POSIXct 物件時會怎樣?\nprint() will look for three possible methods, of which two exist, and one, print.POSIXct(), will be called. The last method is always the \u0026quot;default\u0026quot; method. This doesn't correspond to a specific class, so is a useful catch all.\nNextMethod() NextMethod()用來調用親代類別中的對應派發函數。達成ＯＯＰ中就是類似繼承親代函數的方法。\nshowoff \u0026lt;- function(x) {\rUseMethod(\u0026quot;showoff\u0026quot;)\r}\rshowoff.default \u0026lt;- function(x) {\rmessage(\u0026quot;showoff.default\u0026quot;)\rTRUE\r}\rshowoff.a \u0026lt;- function(x) {\rmessage(\u0026quot;showoff.a\u0026quot;)\rNextMethod()　#🏷👏調用\r}\rshowoff.b \u0026lt;- function(x) {\rmessage(\u0026quot;showoff.b\u0026quot;)\rNextMethod()\r}\r 建立一個繼承自b類別的,而且是a的物件。\nx \u0026lt;- structure(1,class = c(\u0026quot;b\u0026quot;, \u0026quot;a\u0026quot;)) # 🏷👏b 繼承自 a\rs3_dispatch(showoff(x))　#🏷👏 s3_dispatch() shows that all three potential methods are available\r#\u0026gt; =\u0026gt; showoff.b\r#\u0026gt; -\u0026gt; showoff.a\r#\u0026gt; -\u0026gt; showoff.default\r 看看會怎樣\nshowoff(x)\r#\u0026gt; showoff.b\r#\u0026gt; showoff.a\r#\u0026gt; showoff.default\r#\u0026gt; [1] TRUE\r Generally, you call NextMethod() without any arguments. However, if you do give arguments, they are passed on to the next method, as if they'd been supplied to the generic.\nInheritance The class attribute is not limited to a single string, but can be a character vector. This, along with S3 method dispatch and NextMethod(), gives a surprising amount of flexibility that can be used creatively to reduce code duplication. However, this flexibility can also lead to code that is hard to understand or reason about, so you are best constraining yourself to simple styles of inheritance. Here we will focus on defining subclasses that inherit their fields, and some behaviour, from a parent class.\nSubclasses use a character vector for the class attribute. There are two examples of subclasses that you might have come across in base R:\n  Generalised linear models are a generalisation of linear models that allow the error term to belong to a richer set of distributions, not just the normal distribution like the linear model. This is a natural case for the use of inheritance and indeed, in R, glm() returns objects of class c(\u0026quot;glm\u0026quot;, \u0026quot;lm\u0026quot;).\n  Ordered factors are used when the levels of a factor have some intrinsic ordering, like c(\u0026quot;Good\u0026quot;, \u0026quot;Better\u0026quot;, \u0026quot;Best\u0026quot;). Ordered factors are produced by ordered() which returns an object with class c(\u0026quot;ordered\u0026quot;, \u0026quot;factor\u0026quot;).\n  You can think of the glm class \u0026quot;inheriting\u0026quot; behaviour from the lm class, and the ordered class inheriting behaviour from the factor class because of the way method dispatch works. If there is a method available for the subclass, R will use it, otherwise it will fall back to the \u0026quot;parent\u0026quot; class. For example, if you \u0026quot;plot\u0026quot; a glm object, it falls back to the lm method, but if you compute the ANOVA, it uses a glm-specific method.\nmod1 \u0026lt;- glm(mpg ~ wt, data = mtcars)\rs3_dispatch(plot(mod1))\r#\u0026gt; plot.glm\r#\u0026gt; =\u0026gt; plot.lm\r#\u0026gt; * plot.default\rs3_dispatch(anova(mod1))\r#\u0026gt; =\u0026gt; anova.glm\r#\u0026gt; * anova.lm\r#\u0026gt; anova.default\r Constructors There are three principles to adhere to when creating a subclass:\n  A subclass should be built on the same base type as a parent.\n  The class() of the subclass should be of the form c(subclass, parent_class)\n  The fields of the subclass should include the fields of the parent.\n  And these properties should be enforced by the constructor.\nWhen you create a class, you need to decide if you want to allow subclasses, because it requires changes to the constructor and careful thought in your methods. To allow subclasses, the parent constructor needs to have ... and subclass arguments:\nnew_my_class \u0026lt;- function(x, y, ..., subclass = NULL) {\rstopifnot(is.numeric(x))\rstopifnot(is.logical(y))\rstructure(\rx,\ry = y,\r...,\rclass = c(subclass, \u0026quot;my_class\u0026quot;)\r)\r}\r Then the implementation of the subclass constructor is simple: it checks the types of the new fields, then calls the parent constructor.\nnew_subclass \u0026lt;- function(x, y, z) {\rstopifnot(is.character(z))\rnew_my_class(x, y, z, subclass = \u0026quot;subclass\u0026quot;)\r}\r If you wanted to allow this subclass to be futher subclassed, you'd need to include ... and subclass arguments:\nnew_subclass \u0026lt;- function(x, y, z, ..., subclass = NULL) {\rstopifnot(is.character(z))\rnew_my_class(x, y, z, ..., subclass = c(subclass, \u0026quot;subclass\u0026quot;))\r}\r If your subclass is more complicated, you'd also provide validator and helper functions, as described previously.\nCoercion You also need to make sure that there's some way to convert the subclass back to the parent class. The best way to do that is to add a method to the coercion generic. Generally, this method should call the parent constructor:\nas_my_class.sub_class \u0026lt;- function(x) {\rnew_my_class(attr(x, \u0026quot;x\u0026quot;), attr(x, \u0026quot;y\u0026quot;))\r}\r Methods The goal of creating a subclass is to reuse as much code as possible from the parent class. This means that you should not have to define every method that the parent class provides (if you do, reconsider if you actually need a subclass!). Generally, defining new methods is straightforward: you simply create a new method (generic.subclass) whenever the parent method doesn't do quite the right thing. In many cases, the new method will be able to call NextMethod() in order to take advantage of the computation done in the parent.\nOne wrinkle arises when you have methods that return the same type of object as the primary input. For example, dplyr has many functions (arrange(), summarise(), mutate(), ...) that input a data frame (or data frame-like object) and output a modified version of that data frame. Imagine you want to store the provenance of each data frame, i.e. who created it and when. To do so, you might create a data frame subclass called provenance:\nnew_provenance \u0026lt;- function(data, author, date = Sys.Date()) {\rstopifnot(is.data.frame(data))\rstopifnot(is.character(author), length(author) == 1)\rstopifnot(is.Date(date), length(date) == 1)\rstructure(\rdata,\rauthor = author, date = date,\rclass = c(\u0026quot;provenance\u0026quot;, \u0026quot;data.frame\u0026quot;)\r)\r}\r And now you want to make this class work with dplyr. The class doesn't change any of the computation related to the data frame, it just needs to preserve the attributes, which dplyr doesn't know anything about. That means you need to provide a method for each dplyr generic. The computation is unchanged, so you can use NextMethod() to do all the hard work, but you need to manually reconstruct the provenance object.\narrange.provenance \u0026lt;- function(.data, ...) {\rnew_provenance(\rNextMethod(), author = attr(.data, \u0026quot;author\u0026quot;),\rdate = attr(.data, \u0026quot;date\u0026quot;)\r)\r}\rmutate.provenance \u0026lt;- function(.data, ...) {\rnew_provenance(\rNextMethod(), author = attr(.data, \u0026quot;author\u0026quot;),\rdate = attr(.data, \u0026quot;date\u0026quot;)\r)\r}\r To do this for all the dplyr generics would require a lot of copying and pasting. Let's reduce some of that duplication by taking advantage of sloop::reconstruct(). reconstruct() is a generic function designed to reconstruct a subclass from an instance of the parent class, typically created by NextMethod(), and the original subclass. In other words, the job of a reconstructor is to take an object from a parent class, and copy over attributes from the subclass. (Note that reconstruct() is unusual in that it dispatches on the second argument. This allows a more natural specification.)\nreconstruct.provenance \u0026lt;- function(new, old) {\rnew_provenance(\rnew, author = attr(old, \u0026quot;author\u0026quot;),\rdate = attr(old, \u0026quot;date\u0026quot;)\r)\r}\r Now we can rewrite the methods to minimise the amount of duplicated code:\narrange.provenance \u0026lt;- function(.data, ...) {\rreconstruct(NextMethod(), .data)\r}\rmutate.provenance \u0026lt;- function(.data, ...) {\rreconstruct(NextMethod(), .data)\r}\r This duplicated code could be avoided completely if arrange.data.frame(), provided by dplyr, called reconstruct() for you. And indeed, a future version of that function will.\nWhen designing a class that can be subclassed, you need to carefully think through these issues. Generally, whenever you implement a method that returns the same type of object as the primary input, you should call reconstruct() to ensure that it also works for subclasses. That way implementors of a subclass will only need to provide methods when the computation is actually different.\nDispatch details This chapter concludes with a few additional details about method dispatch that is not well documented elsewhere. It is safe to skip these details if you're new to S3.\nEnvironments and namespaces The precise rules for where a generic looks for the methods are a little complicated because there are two paths for discovery:\n  In the calling environment of the function that called the generic.\n  In the special .__S3MethodsTable__. object in the function environment of the generic. Every package has an .__S3MethodsTable__ which lists all the S3 methods exported by the package.\n  These details are not usually important, but are necessary in order for S3 generics to find the correct method when the generic and method are in different packages.\nS3 and base types What happens when you call an S3 generic with a non-S3 object, i.e. an object that doesn't have the class attribute set? You might think it would dispatch on what class() returns:\nclass(matrix(1:5))\r#\u0026gt; [1] \u0026quot;matrix\u0026quot; \u0026quot;array\u0026quot;\r But unfortunately dispatch actually occurs on the implicit class, which has three components:\n \u0026quot;array\u0026quot; or \u0026quot;matrix\u0026quot; (if the object has dimensions). typeof() (with a few minor tweaks). If it's \u0026quot;integer\u0026quot; or \u0026quot;double\u0026quot;, \u0026quot;numeric\u0026quot;.  There is no base function that will compute the implicit class, but you can use a helper from the sloop package: \\index{implicit class} \\index{base types!implicit class}\ns3_class(matrix(1:5))\r#\u0026gt; [1] \u0026quot;matrix\u0026quot; \u0026quot;integer\u0026quot; \u0026quot;numeric\u0026quot;\r s3_dispatch() knows about the implicit class, so use it if you're ever in doubt about method dispatch:\ns3_dispatch(print(matrix(1:5)))\r#\u0026gt; print.matrix\r#\u0026gt; print.integer\r#\u0026gt; print.numeric\r#\u0026gt; =\u0026gt; print.default\r Note that this can lead to different dispatch for objects that look similar:\nx1 \u0026lt;- 1:5\rclass(x1)\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\rs3_dispatch(mean(x1))\r#\u0026gt; mean.integer\r#\u0026gt; mean.numeric\r#\u0026gt; =\u0026gt; mean.default\rx2 \u0026lt;- structure(x1, class = \u0026quot;integer\u0026quot;)\rclass(x2)\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\rs3_dispatch(mean(x2))\r#\u0026gt; mean.integer\r#\u0026gt; =\u0026gt; mean.default\r Internal generics Some S3 generics, like [, sum(), and cbind(), don't call UseMethod() because they are implemented in C. Instead, they call the C functions DispatchGroup() or DispatchOrEval(). These functions are called internal generics, because they do dispatch internally, in C code. Internal generics only exist in base R, so you can not create an internal generic in a package.\ns3_dispatch() shows internal generics by including the name of the generic at the bottom of the method class. If this method is called, all the work happens in C code, typically using [switchpatch].\ns3_dispatch(Sys.time()[1])\r#\u0026gt; =\u0026gt; [.POSIXct\r#\u0026gt; [.POSIXt\r#\u0026gt; [.default\r#\u0026gt; -\u0026gt; [ (internal)\r For performance reasons, internal generics do not dispatch to methods unless the class attribute has been set (is.object() is true). This means that internal generics do not use the implicit class. Again, if you're confused, rely on s3_dispatch() to show you the difference.\nx \u0026lt;- sample(10)\rclass(x)\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\rs3_dispatch(x[1])\r#\u0026gt; [.integer\r#\u0026gt; [.numeric\r#\u0026gt; [.default\r#\u0026gt; =\u0026gt; [ (internal)\rclass(y) #\u0026gt; Error in eval(expr, envir, enclos): 找不到物件 'y'\rs3_dispatch(mtcars[1])\r#\u0026gt; =\u0026gt; [.data.frame\r#\u0026gt; [.default\r#\u0026gt; -\u0026gt; [ (internal)\r Group generics Group generics are the most complicated part of S3 method dispatch because they involve both NextMethod() and internal generics. Group generics are worth learning about, however, because they allow you to implement a whole swath of methods with one function. Like internal generics, they only exist in base R, and you can not define your own group generic.\nBase R has four group generics, which are made up of the following generics: \\index{group generics} \\index{S3!group generics}\n  Math: abs, sign, sqrt, floor, cos, sin, log, exp, ...\n  Ops: +, -, *, /, ^, %%, %/%, \u0026amp;, |, !, ==, !=, \u0026lt;, \u0026lt;=, \u0026gt;=, \u0026gt;\n  Summary: all, any, sum, prod, min, max, range\n  Complex: Arg, Conj, Im, Mod, Re\n  Defining a single group generic for your class overrides the default behaviour for all of the members of the group. Methods for group generics are looked for only if the methods for the specific generic do not exist:\ns3_dispatch(sum(Sys.time()))\r#\u0026gt; sum.POSIXct\r#\u0026gt; sum.POSIXt\r#\u0026gt; sum.default\r#\u0026gt; =\u0026gt; Summary.POSIXct\r#\u0026gt; Summary.POSIXt\r#\u0026gt; Summary.default\r#\u0026gt; -\u0026gt; sum (internal)\r Most group generics involve a call to NextMethod(). For example, take difftime() objects. If you look at the method dispatch for abs(), you'll see there's a Math group generic defined.\ny \u0026lt;- as.difftime(10, units = \u0026quot;mins\u0026quot;)\rs3_dispatch(abs(y))\r#\u0026gt; abs.difftime\r#\u0026gt; abs.default\r#\u0026gt; =\u0026gt; Math.difftime\r#\u0026gt; Math.default\r#\u0026gt; -\u0026gt; abs (internal)\r Math.difftime basically looks like this:\nMath.difftime \u0026lt;- function(x, ...) {\rnew_difftime(NextMethod(), units = attr(x, \u0026quot;units\u0026quot;))\r}\r It dispatches to the next method, here the internal default, to perform the actual computation, then copies back over the the class and attributes.\nNote that inside a group generic function a special variable .Generic provides the actual generic function called. This can be useful when producing error messages, and can sometimes be useful if you need to manually re-call the generic with different arguments.\nDouble dispatch Generics in the \u0026quot;Ops\u0026quot; group, which includes the two-argument mathematical and logical operators like - and \u0026amp;, implement a special type of method dispatch. They dispatch on the type of both of the arguments, so called double dispatch. This is necessary to preserve the commutative property of many operators, i.e. a + b should equal b + a. Take the following simple example:\ndate \u0026lt;- as.Date(\u0026quot;2017-01-01\u0026quot;)\rinteger \u0026lt;- 1L\rdate + integer\r#\u0026gt; [1] \u0026quot;2017-01-02\u0026quot;\rinteger + date\r#\u0026gt; [1] \u0026quot;2017-01-02\u0026quot;\r If + dispatched only on the first argument, it would return different values for the two cases. To overcome this problem, generics in the Ops group use a slightly different strategy from usual. Rather than doing a single method dispatch, they do two, one for each input. There are three possible outcomes of this lookup:\n  The methods are the same, so it doesn't matter which method is used.\n  The methods are different, and R calls the first method with a warning.\n  One method is internal, in which case R calls the other method.\n  For the example above, we can look at the possible methods for each argument, taking advantage of the fact that we can call + with a single argument. In this case, the second argument would dispatch to the internal + function, so R will call +.Date.\ns3_dispatch(+date)\r#\u0026gt; =\u0026gt; +.Date\r#\u0026gt; +.default\r#\u0026gt; * Ops.Date\r#\u0026gt; Ops.default\r#\u0026gt; * + (internal)\rs3_dispatch(+integer)\r#\u0026gt; +.integer\r#\u0026gt; +.numeric\r#\u0026gt; +.default\r#\u0026gt; Ops.integer\r#\u0026gt; Ops.numeric\r#\u0026gt; Ops.default\r#\u0026gt; =\u0026gt; + (internal)\r Let's take a look at another case. What happens if you try to add a date to a factor? There is no method in common, so R calls the internal + method (which preserves the attributes of the LHS), with a warning.\nfactor \u0026lt;- factor(\u0026quot;a\u0026quot;)\rs3_dispatch(+factor)\r#\u0026gt; +.factor\r#\u0026gt; +.default\r#\u0026gt; =\u0026gt; Ops.factor\r#\u0026gt; Ops.default\r#\u0026gt; -\u0026gt; + (internal)\rdate + factor\r#\u0026gt; Warning: 不相容的方法 (\u0026quot;+.Date\u0026quot;, \u0026quot;Ops.factor\u0026quot;) 用於 \u0026quot;+\u0026quot;\r#\u0026gt; [1] \u0026quot;2017-01-02\u0026quot;\rfactor + date\r#\u0026gt; Warning: 不相容的方法 (\u0026quot;Ops.factor\u0026quot;, \u0026quot;+.Date\u0026quot;) 用於 \u0026quot;+\u0026quot;\r#\u0026gt; Error in as.character.factor(x): 異常的因子\r Finally, what happens if we try to substract a POSIXct from a POSIXlt? A common -.POSIXt method is found and called.\ndt1 \u0026lt;- as.POSIXct(date)\rdt2 \u0026lt;- as.POSIXlt(date)\rs3_dispatch(-dt1)\r#\u0026gt; -.POSIXct\r#\u0026gt; =\u0026gt; -.POSIXt\r#\u0026gt; -.default\r#\u0026gt; Ops.POSIXct\r#\u0026gt; * Ops.POSIXt\r#\u0026gt; Ops.default\r#\u0026gt; * - (internal)\rs3_dispatch(-dt2)\r#\u0026gt; -.POSIXlt\r#\u0026gt; =\u0026gt; -.POSIXt\r#\u0026gt; -.default\r#\u0026gt; Ops.POSIXlt\r#\u0026gt; * Ops.POSIXt\r#\u0026gt; Ops.default\r#\u0026gt; * - (internal)\rdt1 - dt2\r#\u0026gt; Time difference of 0 secs\r"},
{"uri": "/blogR//rlang/9_1_plot.html","title": "9.1 基本繪圖",
	"tags": [],
	"description": "基本繪圖",
	"content": "提點和參考  Quick R   基本  plot() lines() curves()   統計  boxplot() pair() hist()    💡 怎樣快速查詢？\n ??draw ?plot : 參考其中的plot.default 查看圖形選項  函數plot() 可能最常用的繪圖函數就是plot(),而這個函數比較常用的選項有：\n type: 僅分佈點（預設）是否連線等基本模板。 pch: mark cex: 放大倍數 lty: 線條樣式line style lwd: 線條寬度line width col:  type type description   p points(*)  l lines  o 點+線 重合  b, c b(both的意思) 點+線,但是不重合(上面的o是重合) (如果是\u0026quot;c\u0026quot; 則沒有點)  s, S stair steps  h histogram-like vertical lines  n does not produce any points or lines     figure\r pch 資料點 符號 設定樣本點的符號,可以用 pch (point character).\npch 的值除了從 0 到 24 共25個符號外，還有 \u0026quot;*\u0026quot;, \u0026quot;+\u0026quot;, \u0026quot;o\u0026quot;, \u0026quot;@\u0026quot;, \u0026quot;#\u0026quot; 可以用。\npch=0 square\rpch=1(*) circle\rpch=2 triangle point up\rpch=3 plus\rpch=4 cross\rpch=5 diamond\rpch=6 triangle point down\rpch=7 square cross\rpch=8 star\rpch=9 diamond plus\rpch=10 circle plus\rpch=11 triangles up and down\rpch=12 square plus\rpch=13 circle cross\rpch=14 square and triangle down\rpch=15 filled square blue\rpch=16 filled circle blue\rpch=17 filled triangle point up blue\rpch=18 filled diamond blue\rpch=19 solid circle blue\rpch=20 bullet (smaller circle)\rpch=21 filled circle red\rpch=22 filled square red\rpch=23 filled diamond red\rpch=24 filled triangle point up red\rpch=25 filled triangle point down red\r cex 資料點大小 cex 用來放大文字或符號的倍數\n因此,\ncex = 1(*) is default size cex = 1.5 is 150% of default size cex = 0.5 is 50% of default size\r[Note : cex.axis --\u0026gt; scales the axis cex.lab ---\u0026gt; scales the label cex.main --\u0026gt; scales main title cex.sub ---\u0026gt; scales the subtitle ]\r lty 線條型態 lty = 0 or lty = \u0026quot;blank\u0026quot;\rlty = 1(*) or lty = \u0026quot;solid\u0026quot;\rlty = 2 or lty = \u0026quot;dashed\u0026quot;\rlty = 3 or lty = \u0026quot;dotted\u0026quot;\rlty = 4 or lty = \u0026quot;dotdash\u0026quot;\rlty = 5 or lty = \u0026quot;longdash\u0026quot;\rlty = 6 or lty = \u0026quot;twodash\u0026quot;\r 顏色 col col = \u0026quot;blue\ncol = \u0026quot;red\u0026quot;\ncol 後的值,可用函數colors() 來查詢顏色,會傳回 657 個代表顏色的參數。或者也可以直接用16進位數字，例如\ncol = \u0026quot;#A9F3BB\u0026quot; ------\u0026gt; 分別對應 Red=A9, Green=F3, Blue=BB 16進位數字.\ncolors() #看看有甚麼顏色\u0026lt;!--html_preserve--\u0026gt;\u0026lt;div class=\u0026quot;expand ms-0 \u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;expand-label\u0026quot; onclick=\u0026quot;vexpand(this)\u0026quot;\u0026gt;\r\u0026lt;i style=\u0026quot;font-size:x-small;color:yellow\u0026quot; class=\u0026quot;fa fa-chevron-right\u0026quot;\u0026gt;\u0026lt;/i\u0026gt;\r\u0026lt;span \u0026gt;展開\u0026lt;/span\u0026gt;\r\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026quot;expand-content incode\u0026quot; style=\u0026quot;overflow-x:auto\u0026quot;\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;#\u0026gt; [1] \u0026quot;white\u0026quot; \u0026quot;aliceblue\u0026quot; \u0026quot;antiquewhite\u0026quot; #\u0026gt; [4] \u0026quot;antiquewhite1\u0026quot; \u0026quot;antiquewhite2\u0026quot; \u0026quot;antiquewhite3\u0026quot; #\u0026gt; [7] \u0026quot;antiquewhite4\u0026quot; \u0026quot;aquamarine\u0026quot; \u0026quot;aquamarine1\u0026quot; #\u0026gt; [10] \u0026quot;aquamarine2\u0026quot; \u0026quot;aquamarine3\u0026quot; \u0026quot;aquamarine4\u0026quot; #\u0026gt; [13] \u0026quot;azure\u0026quot; \u0026quot;azure1\u0026quot; \u0026quot;azure2\u0026quot; #\u0026gt; [16] \u0026quot;azure3\u0026quot; \u0026quot;azure4\u0026quot; \u0026quot;beige\u0026quot; #\u0026gt; [19] \u0026quot;bisque\u0026quot; \u0026quot;bisque1\u0026quot; \u0026quot;bisque2\u0026quot; #\u0026gt; [22] \u0026quot;bisque3\u0026quot; \u0026quot;bisque4\u0026quot; \u0026quot;black\u0026quot; #\u0026gt; [25] \u0026quot;blanchedalmond\u0026quot; \u0026quot;blue\u0026quot; \u0026quot;blue1\u0026quot; #\u0026gt; [28] \u0026quot;blue2\u0026quot; \u0026quot;blue3\u0026quot; \u0026quot;blue4\u0026quot; #\u0026gt; [31] \u0026quot;blueviolet\u0026quot; \u0026quot;brown\u0026quot; \u0026quot;brown1\u0026quot; #\u0026gt; [34] \u0026quot;brown2\u0026quot; \u0026quot;brown3\u0026quot; \u0026quot;brown4\u0026quot; #\u0026gt; [37] \u0026quot;burlywood\u0026quot; \u0026quot;burlywood1\u0026quot; \u0026quot;burlywood2\u0026quot; #\u0026gt; [40] \u0026quot;burlywood3\u0026quot; \u0026quot;burlywood4\u0026quot; \u0026quot;cadetblue\u0026quot; #\u0026gt; [43] \u0026quot;cadetblue1\u0026quot; \u0026quot;cadetblue2\u0026quot; \u0026quot;cadetblue3\u0026quot; #\u0026gt; [46] \u0026quot;cadetblue4\u0026quot; \u0026quot;chartreuse\u0026quot; \u0026quot;chartreuse1\u0026quot; #\u0026gt; [49] \u0026quot;chartreuse2\u0026quot; \u0026quot;chartreuse3\u0026quot; \u0026quot;chartreuse4\u0026quot; #\u0026gt; [52] \u0026quot;chocolate\u0026quot; \u0026quot;chocolate1\u0026quot; \u0026quot;chocolate2\u0026quot; #\u0026gt; [55] \u0026quot;chocolate3\u0026quot; \u0026quot;chocolate4\u0026quot; \u0026quot;coral\u0026quot; #\u0026gt; [58] \u0026quot;coral1\u0026quot; \u0026quot;coral2\u0026quot; \u0026quot;coral3\u0026quot; #\u0026gt; [61] \u0026quot;coral4\u0026quot; \u0026quot;cornflowerblue\u0026quot; \u0026quot;cornsilk\u0026quot; #\u0026gt; [64] \u0026quot;cornsilk1\u0026quot; \u0026quot;cornsilk2\u0026quot; \u0026quot;cornsilk3\u0026quot; #\u0026gt; [67] \u0026quot;cornsilk4\u0026quot; \u0026quot;cyan\u0026quot; \u0026quot;cyan1\u0026quot; #\u0026gt; [70] \u0026quot;cyan2\u0026quot; \u0026quot;cyan3\u0026quot; \u0026quot;cyan4\u0026quot; #\u0026gt; [73] \u0026quot;darkblue\u0026quot; \u0026quot;darkcyan\u0026quot; \u0026quot;darkgoldenrod\u0026quot; #\u0026gt; [76] \u0026quot;darkgoldenrod1\u0026quot; \u0026quot;darkgoldenrod2\u0026quot; \u0026quot;darkgoldenrod3\u0026quot; #\u0026gt; [79] \u0026quot;darkgoldenrod4\u0026quot; \u0026quot;darkgray\u0026quot; \u0026quot;darkgreen\u0026quot; #\u0026gt; [82] \u0026quot;darkgrey\u0026quot; \u0026quot;darkkhaki\u0026quot; \u0026quot;darkmagenta\u0026quot; #\u0026gt; [85] \u0026quot;darkolivegreen\u0026quot; \u0026quot;darkolivegreen1\u0026quot; \u0026quot;darkolivegreen2\u0026quot; #\u0026gt; [88] \u0026quot;darkolivegreen3\u0026quot; \u0026quot;darkolivegreen4\u0026quot; \u0026quot;darkorange\u0026quot; #\u0026gt; [91] \u0026quot;darkorange1\u0026quot; \u0026quot;darkorange2\u0026quot; \u0026quot;darkorange3\u0026quot; #\u0026gt; [94] \u0026quot;darkorange4\u0026quot; \u0026quot;darkorchid\u0026quot; \u0026quot;darkorchid1\u0026quot; #\u0026gt; [97] \u0026quot;darkorchid2\u0026quot; \u0026quot;darkorchid3\u0026quot; \u0026quot;darkorchid4\u0026quot; #\u0026gt; [100] \u0026quot;darkred\u0026quot; \u0026quot;darksalmon\u0026quot; \u0026quot;darkseagreen\u0026quot; #\u0026gt; [103] \u0026quot;darkseagreen1\u0026quot; \u0026quot;darkseagreen2\u0026quot; \u0026quot;darkseagreen3\u0026quot; #\u0026gt; [106] \u0026quot;darkseagreen4\u0026quot; \u0026quot;darkslateblue\u0026quot; \u0026quot;darkslategray\u0026quot; #\u0026gt; [109] \u0026quot;darkslategray1\u0026quot; \u0026quot;darkslategray2\u0026quot; \u0026quot;darkslategray3\u0026quot; #\u0026gt; [112] \u0026quot;darkslategray4\u0026quot; \u0026quot;darkslategrey\u0026quot; \u0026quot;darkturquoise\u0026quot; #\u0026gt; [115] \u0026quot;darkviolet\u0026quot; \u0026quot;deeppink\u0026quot; \u0026quot;deeppink1\u0026quot; #\u0026gt; [118] \u0026quot;deeppink2\u0026quot; \u0026quot;deeppink3\u0026quot; \u0026quot;deeppink4\u0026quot; #\u0026gt; [121] \u0026quot;deepskyblue\u0026quot; \u0026quot;deepskyblue1\u0026quot; \u0026quot;deepskyblue2\u0026quot; #\u0026gt; [124] \u0026quot;deepskyblue3\u0026quot; \u0026quot;deepskyblue4\u0026quot; \u0026quot;dimgray\u0026quot; #\u0026gt; [127] \u0026quot;dimgrey\u0026quot; \u0026quot;dodgerblue\u0026quot; \u0026quot;dodgerblue1\u0026quot; #\u0026gt; [130] \u0026quot;dodgerblue2\u0026quot; \u0026quot;dodgerblue3\u0026quot; \u0026quot;dodgerblue4\u0026quot; #\u0026gt; [133] \u0026quot;firebrick\u0026quot; \u0026quot;firebrick1\u0026quot; \u0026quot;firebrick2\u0026quot; #\u0026gt; [136] \u0026quot;firebrick3\u0026quot; \u0026quot;firebrick4\u0026quot; \u0026quot;floralwhite\u0026quot; #\u0026gt; [139] \u0026quot;forestgreen\u0026quot; \u0026quot;gainsboro\u0026quot; \u0026quot;ghostwhite\u0026quot; #\u0026gt; [142] \u0026quot;gold\u0026quot; \u0026quot;gold1\u0026quot; \u0026quot;gold2\u0026quot; #\u0026gt; [145] \u0026quot;gold3\u0026quot; \u0026quot;gold4\u0026quot; \u0026quot;goldenrod\u0026quot; #\u0026gt; [148] \u0026quot;goldenrod1\u0026quot; \u0026quot;goldenrod2\u0026quot; \u0026quot;goldenrod3\u0026quot; #\u0026gt; [151] \u0026quot;goldenrod4\u0026quot; \u0026quot;gray\u0026quot; \u0026quot;gray0\u0026quot; #\u0026gt; [154] \u0026quot;gray1\u0026quot; \u0026quot;gray2\u0026quot; \u0026quot;gray3\u0026quot; #\u0026gt; [157] \u0026quot;gray4\u0026quot; \u0026quot;gray5\u0026quot; \u0026quot;gray6\u0026quot; #\u0026gt; [160] \u0026quot;gray7\u0026quot; \u0026quot;gray8\u0026quot; \u0026quot;gray9\u0026quot; #\u0026gt; [163] \u0026quot;gray10\u0026quot; \u0026quot;gray11\u0026quot; \u0026quot;gray12\u0026quot; #\u0026gt; [166] \u0026quot;gray13\u0026quot; \u0026quot;gray14\u0026quot; \u0026quot;gray15\u0026quot; #\u0026gt; [169] \u0026quot;gray16\u0026quot; \u0026quot;gray17\u0026quot; \u0026quot;gray18\u0026quot; #\u0026gt; [172] \u0026quot;gray19\u0026quot; \u0026quot;gray20\u0026quot; \u0026quot;gray21\u0026quot; #\u0026gt; [175] \u0026quot;gray22\u0026quot; \u0026quot;gray23\u0026quot; \u0026quot;gray24\u0026quot; #\u0026gt; [178] \u0026quot;gray25\u0026quot; \u0026quot;gray26\u0026quot; \u0026quot;gray27\u0026quot; #\u0026gt; [181] \u0026quot;gray28\u0026quot; \u0026quot;gray29\u0026quot; \u0026quot;gray30\u0026quot; #\u0026gt; [184] \u0026quot;gray31\u0026quot; \u0026quot;gray32\u0026quot; \u0026quot;gray33\u0026quot; #\u0026gt; [187] \u0026quot;gray34\u0026quot; \u0026quot;gray35\u0026quot; \u0026quot;gray36\u0026quot; #\u0026gt; [190] \u0026quot;gray37\u0026quot; \u0026quot;gray38\u0026quot; \u0026quot;gray39\u0026quot; #\u0026gt; [193] \u0026quot;gray40\u0026quot; \u0026quot;gray41\u0026quot; \u0026quot;gray42\u0026quot; #\u0026gt; [196] \u0026quot;gray43\u0026quot; \u0026quot;gray44\u0026quot; \u0026quot;gray45\u0026quot; #\u0026gt; [199] \u0026quot;gray46\u0026quot; \u0026quot;gray47\u0026quot; \u0026quot;gray48\u0026quot; #\u0026gt; [202] \u0026quot;gray49\u0026quot; \u0026quot;gray50\u0026quot; \u0026quot;gray51\u0026quot; #\u0026gt; [205] \u0026quot;gray52\u0026quot; \u0026quot;gray53\u0026quot; \u0026quot;gray54\u0026quot; #\u0026gt; [208] \u0026quot;gray55\u0026quot; \u0026quot;gray56\u0026quot; \u0026quot;gray57\u0026quot; #\u0026gt; [211] \u0026quot;gray58\u0026quot; \u0026quot;gray59\u0026quot; \u0026quot;gray60\u0026quot; #\u0026gt; [214] \u0026quot;gray61\u0026quot; \u0026quot;gray62\u0026quot; \u0026quot;gray63\u0026quot; #\u0026gt; [217] \u0026quot;gray64\u0026quot; \u0026quot;gray65\u0026quot; \u0026quot;gray66\u0026quot; #\u0026gt; [220] \u0026quot;gray67\u0026quot; \u0026quot;gray68\u0026quot; \u0026quot;gray69\u0026quot; #\u0026gt; [223] \u0026quot;gray70\u0026quot; \u0026quot;gray71\u0026quot; \u0026quot;gray72\u0026quot; #\u0026gt; [226] \u0026quot;gray73\u0026quot; \u0026quot;gray74\u0026quot; \u0026quot;gray75\u0026quot; #\u0026gt; [229] \u0026quot;gray76\u0026quot; \u0026quot;gray77\u0026quot; \u0026quot;gray78\u0026quot; #\u0026gt; [232] \u0026quot;gray79\u0026quot; \u0026quot;gray80\u0026quot; \u0026quot;gray81\u0026quot; #\u0026gt; [235] \u0026quot;gray82\u0026quot; \u0026quot;gray83\u0026quot; \u0026quot;gray84\u0026quot; #\u0026gt; [238] \u0026quot;gray85\u0026quot; \u0026quot;gray86\u0026quot; \u0026quot;gray87\u0026quot; #\u0026gt; [241] \u0026quot;gray88\u0026quot; \u0026quot;gray89\u0026quot; \u0026quot;gray90\u0026quot; #\u0026gt; [244] \u0026quot;gray91\u0026quot; \u0026quot;gray92\u0026quot; \u0026quot;gray93\u0026quot; #\u0026gt; [247] \u0026quot;gray94\u0026quot; \u0026quot;gray95\u0026quot; \u0026quot;gray96\u0026quot; #\u0026gt; [250] \u0026quot;gray97\u0026quot; \u0026quot;gray98\u0026quot; \u0026quot;gray99\u0026quot; #\u0026gt; [253] \u0026quot;gray100\u0026quot; \u0026quot;green\u0026quot; \u0026quot;green1\u0026quot; #\u0026gt; [256] \u0026quot;green2\u0026quot; \u0026quot;green3\u0026quot; \u0026quot;green4\u0026quot; #\u0026gt; [259] \u0026quot;greenyellow\u0026quot; \u0026quot;grey\u0026quot; \u0026quot;grey0\u0026quot; #\u0026gt; [262] \u0026quot;grey1\u0026quot; \u0026quot;grey2\u0026quot; \u0026quot;grey3\u0026quot; #\u0026gt; [265] \u0026quot;grey4\u0026quot; \u0026quot;grey5\u0026quot; \u0026quot;grey6\u0026quot; #\u0026gt; [268] \u0026quot;grey7\u0026quot; \u0026quot;grey8\u0026quot; \u0026quot;grey9\u0026quot; #\u0026gt; [271] \u0026quot;grey10\u0026quot; \u0026quot;grey11\u0026quot; \u0026quot;grey12\u0026quot; #\u0026gt; [274] \u0026quot;grey13\u0026quot; \u0026quot;grey14\u0026quot; \u0026quot;grey15\u0026quot; #\u0026gt; [277] \u0026quot;grey16\u0026quot; \u0026quot;grey17\u0026quot; \u0026quot;grey18\u0026quot; #\u0026gt; [280] \u0026quot;grey19\u0026quot; \u0026quot;grey20\u0026quot; \u0026quot;grey21\u0026quot; #\u0026gt; [283] \u0026quot;grey22\u0026quot; \u0026quot;grey23\u0026quot; \u0026quot;grey24\u0026quot; #\u0026gt; [286] \u0026quot;grey25\u0026quot; \u0026quot;grey26\u0026quot; \u0026quot;grey27\u0026quot; #\u0026gt; [289] \u0026quot;grey28\u0026quot; \u0026quot;grey29\u0026quot; \u0026quot;grey30\u0026quot; #\u0026gt; [292] \u0026quot;grey31\u0026quot; \u0026quot;grey32\u0026quot; \u0026quot;grey33\u0026quot; #\u0026gt; [295] \u0026quot;grey34\u0026quot; \u0026quot;grey35\u0026quot; \u0026quot;grey36\u0026quot; #\u0026gt; [298] \u0026quot;grey37\u0026quot; \u0026quot;grey38\u0026quot; \u0026quot;grey39\u0026quot; #\u0026gt; [301] \u0026quot;grey40\u0026quot; \u0026quot;grey41\u0026quot; \u0026quot;grey42\u0026quot; #\u0026gt; [304] \u0026quot;grey43\u0026quot; \u0026quot;grey44\u0026quot; \u0026quot;grey45\u0026quot; #\u0026gt; [307] \u0026quot;grey46\u0026quot; \u0026quot;grey47\u0026quot; \u0026quot;grey48\u0026quot; #\u0026gt; [310] \u0026quot;grey49\u0026quot; \u0026quot;grey50\u0026quot; \u0026quot;grey51\u0026quot; #\u0026gt; [313] \u0026quot;grey52\u0026quot; \u0026quot;grey53\u0026quot; \u0026quot;grey54\u0026quot; #\u0026gt; [316] \u0026quot;grey55\u0026quot; \u0026quot;grey56\u0026quot; \u0026quot;grey57\u0026quot; #\u0026gt; [319] \u0026quot;grey58\u0026quot; \u0026quot;grey59\u0026quot; \u0026quot;grey60\u0026quot; #\u0026gt; [322] \u0026quot;grey61\u0026quot; \u0026quot;grey62\u0026quot; \u0026quot;grey63\u0026quot; #\u0026gt; [325] \u0026quot;grey64\u0026quot; \u0026quot;grey65\u0026quot; \u0026quot;grey66\u0026quot; #\u0026gt; [328] \u0026quot;grey67\u0026quot; \u0026quot;grey68\u0026quot; \u0026quot;grey69\u0026quot; #\u0026gt; [331] \u0026quot;grey70\u0026quot; \u0026quot;grey71\u0026quot; \u0026quot;grey72\u0026quot; #\u0026gt; [334] \u0026quot;grey73\u0026quot; \u0026quot;grey74\u0026quot; \u0026quot;grey75\u0026quot; #\u0026gt; [337] \u0026quot;grey76\u0026quot; \u0026quot;grey77\u0026quot; \u0026quot;grey78\u0026quot; #\u0026gt; [340] \u0026quot;grey79\u0026quot; \u0026quot;grey80\u0026quot; \u0026quot;grey81\u0026quot; #\u0026gt; [343] \u0026quot;grey82\u0026quot; \u0026quot;grey83\u0026quot; \u0026quot;grey84\u0026quot; #\u0026gt; [346] \u0026quot;grey85\u0026quot; \u0026quot;grey86\u0026quot; \u0026quot;grey87\u0026quot; #\u0026gt; [349] \u0026quot;grey88\u0026quot; \u0026quot;grey89\u0026quot; \u0026quot;grey90\u0026quot; #\u0026gt; [352] \u0026quot;grey91\u0026quot; \u0026quot;grey92\u0026quot; \u0026quot;grey93\u0026quot; #\u0026gt; [355] \u0026quot;grey94\u0026quot; \u0026quot;grey95\u0026quot; \u0026quot;grey96\u0026quot; #\u0026gt; [358] \u0026quot;grey97\u0026quot; \u0026quot;grey98\u0026quot; \u0026quot;grey99\u0026quot; #\u0026gt; [361] \u0026quot;grey100\u0026quot; \u0026quot;honeydew\u0026quot; \u0026quot;honeydew1\u0026quot; #\u0026gt; [364] \u0026quot;honeydew2\u0026quot; \u0026quot;honeydew3\u0026quot; \u0026quot;honeydew4\u0026quot; #\u0026gt; [367] \u0026quot;hotpink\u0026quot; \u0026quot;hotpink1\u0026quot; \u0026quot;hotpink2\u0026quot; #\u0026gt; [370] \u0026quot;hotpink3\u0026quot; \u0026quot;hotpink4\u0026quot; \u0026quot;indianred\u0026quot; #\u0026gt; [373] \u0026quot;indianred1\u0026quot; \u0026quot;indianred2\u0026quot; \u0026quot;indianred3\u0026quot; #\u0026gt; [376] \u0026quot;indianred4\u0026quot; \u0026quot;ivory\u0026quot; \u0026quot;ivory1\u0026quot; #\u0026gt; [379] \u0026quot;ivory2\u0026quot; \u0026quot;ivory3\u0026quot; \u0026quot;ivory4\u0026quot; #\u0026gt; [382] \u0026quot;khaki\u0026quot; \u0026quot;khaki1\u0026quot; \u0026quot;khaki2\u0026quot; #\u0026gt; [385] \u0026quot;khaki3\u0026quot; \u0026quot;khaki4\u0026quot; \u0026quot;lavender\u0026quot; #\u0026gt; [388] \u0026quot;lavenderblush\u0026quot; \u0026quot;lavenderblush1\u0026quot; \u0026quot;lavenderblush2\u0026quot; #\u0026gt; [391] \u0026quot;lavenderblush3\u0026quot; \u0026quot;lavenderblush4\u0026quot; \u0026quot;lawngreen\u0026quot; #\u0026gt; [394] \u0026quot;lemonchiffon\u0026quot; \u0026quot;lemonchiffon1\u0026quot; \u0026quot;lemonchiffon2\u0026quot; #\u0026gt; [397] \u0026quot;lemonchiffon3\u0026quot; \u0026quot;lemonchiffon4\u0026quot; \u0026quot;lightblue\u0026quot; #\u0026gt; [400] \u0026quot;lightblue1\u0026quot; \u0026quot;lightblue2\u0026quot; \u0026quot;lightblue3\u0026quot; #\u0026gt; [403] \u0026quot;lightblue4\u0026quot; \u0026quot;lightcoral\u0026quot; \u0026quot;lightcyan\u0026quot; #\u0026gt; [406] \u0026quot;lightcyan1\u0026quot; \u0026quot;lightcyan2\u0026quot; \u0026quot;lightcyan3\u0026quot; #\u0026gt; [409] \u0026quot;lightcyan4\u0026quot; \u0026quot;lightgoldenrod\u0026quot; \u0026quot;lightgoldenrod1\u0026quot; #\u0026gt; [412] \u0026quot;lightgoldenrod2\u0026quot; \u0026quot;lightgoldenrod3\u0026quot; \u0026quot;lightgoldenrod4\u0026quot; #\u0026gt; [415] \u0026quot;lightgoldenrodyellow\u0026quot; \u0026quot;lightgray\u0026quot; \u0026quot;lightgreen\u0026quot; #\u0026gt; [418] \u0026quot;lightgrey\u0026quot; \u0026quot;lightpink\u0026quot; \u0026quot;lightpink1\u0026quot; #\u0026gt; [421] \u0026quot;lightpink2\u0026quot; \u0026quot;lightpink3\u0026quot; \u0026quot;lightpink4\u0026quot; #\u0026gt; [424] \u0026quot;lightsalmon\u0026quot; \u0026quot;lightsalmon1\u0026quot; \u0026quot;lightsalmon2\u0026quot; #\u0026gt; [427] \u0026quot;lightsalmon3\u0026quot; \u0026quot;lightsalmon4\u0026quot; \u0026quot;lightseagreen\u0026quot; #\u0026gt; [430] \u0026quot;lightskyblue\u0026quot; \u0026quot;lightskyblue1\u0026quot; \u0026quot;lightskyblue2\u0026quot; #\u0026gt; [433] \u0026quot;lightskyblue3\u0026quot; \u0026quot;lightskyblue4\u0026quot; \u0026quot;lightslateblue\u0026quot; #\u0026gt; [436] \u0026quot;lightslategray\u0026quot; \u0026quot;lightslategrey\u0026quot; \u0026quot;lightsteelblue\u0026quot; #\u0026gt; [439] \u0026quot;lightsteelblue1\u0026quot; \u0026quot;lightsteelblue2\u0026quot; \u0026quot;lightsteelblue3\u0026quot; #\u0026gt; [442] \u0026quot;lightsteelblue4\u0026quot; \u0026quot;lightyellow\u0026quot; \u0026quot;lightyellow1\u0026quot; #\u0026gt; [445] \u0026quot;lightyellow2\u0026quot; \u0026quot;lightyellow3\u0026quot; \u0026quot;lightyellow4\u0026quot; #\u0026gt; [448] \u0026quot;limegreen\u0026quot; \u0026quot;linen\u0026quot; \u0026quot;magenta\u0026quot; #\u0026gt; [451] \u0026quot;magenta1\u0026quot; \u0026quot;magenta2\u0026quot; \u0026quot;magenta3\u0026quot; #\u0026gt; [454] \u0026quot;magenta4\u0026quot; \u0026quot;maroon\u0026quot; \u0026quot;maroon1\u0026quot; #\u0026gt; [457] \u0026quot;maroon2\u0026quot; \u0026quot;maroon3\u0026quot; \u0026quot;maroon4\u0026quot; #\u0026gt; [460] \u0026quot;mediumaquamarine\u0026quot; \u0026quot;mediumblue\u0026quot; \u0026quot;mediumorchid\u0026quot; #\u0026gt; [463] \u0026quot;mediumorchid1\u0026quot; \u0026quot;mediumorchid2\u0026quot; \u0026quot;mediumorchid3\u0026quot; #\u0026gt; [466] \u0026quot;mediumorchid4\u0026quot; \u0026quot;mediumpurple\u0026quot; \u0026quot;mediumpurple1\u0026quot; #\u0026gt; [469] \u0026quot;mediumpurple2\u0026quot; \u0026quot;mediumpurple3\u0026quot; \u0026quot;mediumpurple4\u0026quot; #\u0026gt; [472] \u0026quot;mediumseagreen\u0026quot; \u0026quot;mediumslateblue\u0026quot; \u0026quot;mediumspringgreen\u0026quot; #\u0026gt; [475] \u0026quot;mediumturquoise\u0026quot; \u0026quot;mediumvioletred\u0026quot; \u0026quot;midnightblue\u0026quot; #\u0026gt; [478] \u0026quot;mintcream\u0026quot; \u0026quot;mistyrose\u0026quot; \u0026quot;mistyrose1\u0026quot; #\u0026gt; [481] \u0026quot;mistyrose2\u0026quot; \u0026quot;mistyrose3\u0026quot; \u0026quot;mistyrose4\u0026quot; #\u0026gt; [484] \u0026quot;moccasin\u0026quot; \u0026quot;navajowhite\u0026quot; \u0026quot;navajowhite1\u0026quot; #\u0026gt; [487] \u0026quot;navajowhite2\u0026quot; \u0026quot;navajowhite3\u0026quot; \u0026quot;navajowhite4\u0026quot; #\u0026gt; [490] \u0026quot;navy\u0026quot; \u0026quot;navyblue\u0026quot; \u0026quot;oldlace\u0026quot; #\u0026gt; [493] \u0026quot;olivedrab\u0026quot; \u0026quot;olivedrab1\u0026quot; \u0026quot;olivedrab2\u0026quot; #\u0026gt; [496] \u0026quot;olivedrab3\u0026quot; \u0026quot;olivedrab4\u0026quot; \u0026quot;orange\u0026quot; #\u0026gt; [499] \u0026quot;orange1\u0026quot; \u0026quot;orange2\u0026quot; \u0026quot;orange3\u0026quot; #\u0026gt; [502] \u0026quot;orange4\u0026quot; \u0026quot;orangered\u0026quot; \u0026quot;orangered1\u0026quot; #\u0026gt; [505] \u0026quot;orangered2\u0026quot; \u0026quot;orangered3\u0026quot; \u0026quot;orangered4\u0026quot; #\u0026gt; [508] \u0026quot;orchid\u0026quot; \u0026quot;orchid1\u0026quot; \u0026quot;orchid2\u0026quot; #\u0026gt; [511] \u0026quot;orchid3\u0026quot; \u0026quot;orchid4\u0026quot; \u0026quot;palegoldenrod\u0026quot; #\u0026gt; [514] \u0026quot;palegreen\u0026quot; \u0026quot;palegreen1\u0026quot; \u0026quot;palegreen2\u0026quot; #\u0026gt; [517] \u0026quot;palegreen3\u0026quot; \u0026quot;palegreen4\u0026quot; \u0026quot;paleturquoise\u0026quot; #\u0026gt; [520] \u0026quot;paleturquoise1\u0026quot; \u0026quot;paleturquoise2\u0026quot; \u0026quot;paleturquoise3\u0026quot; #\u0026gt; [523] \u0026quot;paleturquoise4\u0026quot; \u0026quot;palevioletred\u0026quot; \u0026quot;palevioletred1\u0026quot; #\u0026gt; [526] \u0026quot;palevioletred2\u0026quot; \u0026quot;palevioletred3\u0026quot; \u0026quot;palevioletred4\u0026quot; #\u0026gt; [529] \u0026quot;papayawhip\u0026quot; \u0026quot;peachpuff\u0026quot; \u0026quot;peachpuff1\u0026quot; #\u0026gt; [532] \u0026quot;peachpuff2\u0026quot; \u0026quot;peachpuff3\u0026quot; \u0026quot;peachpuff4\u0026quot; #\u0026gt; [535] \u0026quot;peru\u0026quot; \u0026quot;pink\u0026quot; \u0026quot;pink1\u0026quot; #\u0026gt; [538] \u0026quot;pink2\u0026quot; \u0026quot;pink3\u0026quot; \u0026quot;pink4\u0026quot; #\u0026gt; [541] \u0026quot;plum\u0026quot; \u0026quot;plum1\u0026quot; \u0026quot;plum2\u0026quot; #\u0026gt; [544] \u0026quot;plum3\u0026quot; \u0026quot;plum4\u0026quot; \u0026quot;powderblue\u0026quot; #\u0026gt; [547] \u0026quot;purple\u0026quot; \u0026quot;purple1\u0026quot; \u0026quot;purple2\u0026quot; #\u0026gt; [550] \u0026quot;purple3\u0026quot; \u0026quot;purple4\u0026quot; \u0026quot;red\u0026quot; #\u0026gt; [553] \u0026quot;red1\u0026quot; \u0026quot;red2\u0026quot; \u0026quot;red3\u0026quot; #\u0026gt; [556] \u0026quot;red4\u0026quot; \u0026quot;rosybrown\u0026quot; \u0026quot;rosybrown1\u0026quot; #\u0026gt; [559] \u0026quot;rosybrown2\u0026quot; \u0026quot;rosybrown3\u0026quot; \u0026quot;rosybrown4\u0026quot; #\u0026gt; [562] \u0026quot;royalblue\u0026quot; \u0026quot;royalblue1\u0026quot; \u0026quot;royalblue2\u0026quot; #\u0026gt; [565] \u0026quot;royalblue3\u0026quot; \u0026quot;royalblue4\u0026quot; \u0026quot;saddlebrown\u0026quot; #\u0026gt; [568] \u0026quot;salmon\u0026quot; \u0026quot;salmon1\u0026quot; \u0026quot;salmon2\u0026quot; #\u0026gt; [571] \u0026quot;salmon3\u0026quot; \u0026quot;salmon4\u0026quot; \u0026quot;sandybrown\u0026quot; #\u0026gt; [574] \u0026quot;seagreen\u0026quot; \u0026quot;seagreen1\u0026quot; \u0026quot;seagreen2\u0026quot; #\u0026gt; [577] \u0026quot;seagreen3\u0026quot; \u0026quot;seagreen4\u0026quot; \u0026quot;seashell\u0026quot; #\u0026gt; [580] \u0026quot;seashell1\u0026quot; \u0026quot;seashell2\u0026quot; \u0026quot;seashell3\u0026quot; #\u0026gt; [583] \u0026quot;seashell4\u0026quot; \u0026quot;sienna\u0026quot; \u0026quot;sienna1\u0026quot; #\u0026gt; [586] \u0026quot;sienna2\u0026quot; \u0026quot;sienna3\u0026quot; \u0026quot;sienna4\u0026quot; #\u0026gt; [589] \u0026quot;skyblue\u0026quot; \u0026quot;skyblue1\u0026quot; \u0026quot;skyblue2\u0026quot; #\u0026gt; [592] \u0026quot;skyblue3\u0026quot; \u0026quot;skyblue4\u0026quot; \u0026quot;slateblue\u0026quot; #\u0026gt; [595] \u0026quot;slateblue1\u0026quot; \u0026quot;slateblue2\u0026quot; \u0026quot;slateblue3\u0026quot; #\u0026gt; [598] \u0026quot;slateblue4\u0026quot; \u0026quot;slategray\u0026quot; \u0026quot;slategray1\u0026quot; #\u0026gt; [601] \u0026quot;slategray2\u0026quot; \u0026quot;slategray3\u0026quot; \u0026quot;slategray4\u0026quot; #\u0026gt; [604] \u0026quot;slategrey\u0026quot; \u0026quot;snow\u0026quot; \u0026quot;snow1\u0026quot; #\u0026gt; [607] \u0026quot;snow2\u0026quot; \u0026quot;snow3\u0026quot; \u0026quot;snow4\u0026quot; #\u0026gt; [610] \u0026quot;springgreen\u0026quot; \u0026quot;springgreen1\u0026quot; \u0026quot;springgreen2\u0026quot; #\u0026gt; [613] \u0026quot;springgreen3\u0026quot; \u0026quot;springgreen4\u0026quot; \u0026quot;steelblue\u0026quot; #\u0026gt; [616] \u0026quot;steelblue1\u0026quot; \u0026quot;steelblue2\u0026quot; \u0026quot;steelblue3\u0026quot; #\u0026gt; [619] \u0026quot;steelblue4\u0026quot; \u0026quot;tan\u0026quot; \u0026quot;tan1\u0026quot; #\u0026gt; [622] \u0026quot;tan2\u0026quot; \u0026quot;tan3\u0026quot; \u0026quot;tan4\u0026quot; #\u0026gt; [625] \u0026quot;thistle\u0026quot; \u0026quot;thistle1\u0026quot; \u0026quot;thistle2\u0026quot; #\u0026gt; [628] \u0026quot;thistle3\u0026quot; \u0026quot;thistle4\u0026quot; \u0026quot;tomato\u0026quot; #\u0026gt; [631] \u0026quot;tomato1\u0026quot; \u0026quot;tomato2\u0026quot; \u0026quot;tomato3\u0026quot; #\u0026gt; [634] \u0026quot;tomato4\u0026quot; \u0026quot;turquoise\u0026quot; \u0026quot;turquoise1\u0026quot; #\u0026gt; [637] \u0026quot;turquoise2\u0026quot; \u0026quot;turquoise3\u0026quot; \u0026quot;turquoise4\u0026quot; #\u0026gt; [640] \u0026quot;violet\u0026quot; \u0026quot;violetred\u0026quot; \u0026quot;violetred1\u0026quot; #\u0026gt; [643] \u0026quot;violetred2\u0026quot; \u0026quot;violetred3\u0026quot; \u0026quot;violetred4\u0026quot; #\u0026gt; [646] \u0026quot;wheat\u0026quot; \u0026quot;wheat1\u0026quot; \u0026quot;wheat2\u0026quot; #\u0026gt; [649] \u0026quot;wheat3\u0026quot; \u0026quot;wheat4\u0026quot; \u0026quot;whitesmoke\u0026quot; #\u0026gt; [652] \u0026quot;yellow\u0026quot; \u0026quot;yellow1\u0026quot; \u0026quot;yellow2\u0026quot; #\u0026gt; [655] \u0026quot;yellow3\u0026quot; \u0026quot;yellow4\u0026quot; \u0026quot;yellowgreen\u0026quot;\u0026lt;!--html_preserve--\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r \r\r繪製向量中的資料\nx \u0026lt;- c(1,3,4,7,8,9)\ry \u0026lt;- c(0,3,6,9,7,8)\rplot(x,y,main='plot(x,y)')\r figure\r 繪製data.frame 中的資料\nattach(mtcars)\rplot(mtcars$wt, mtcars$mpg) plot(mpg~wt,data=mtcars) # 🏷👏和上面的圖沒什麼不同\r  plot()函數，新建視窗然後畫出 weight vs. miles per gallon. abline() 不會開啟新視窗做圖，abline()的語法如下: abline(a = NULL, b = NULL, h = NULL, v = NULL, reg = NULL,coef = NULL, untf = FALSE, …)    代表的意思是畫出一條直線a+bx ，其中a代表截距常數，b則是斜率常數。例如\n Y=2X+1，則對應的函數為 abline(a=1,b=2) 。 abline(h=3),水平線 abline(v=2) 垂直  plot(mpg~wt,data=mtcars) # 🏷👏只會有資料點,同上\r# 👏下面3行疊在上面的圖形上\rabline(lm(mtcars$mpg~mtcars$wt)) #🏷註解👏❌ abline(mtcars$mpg~mtcars$wt)\rtitle(\u0026quot;Regression of MPG on Weight\u0026quot;)\r figure\r     ❓ 畫出下面的圖,驗證回歸線經過x,y的平均值。\nplot(mpg~wt,data=mtcars) abline(lm(mtcars$mpg~mtcars$wt)) title(\u0026quot;Regression of MPG on Weight\u0026quot;)\rabline(h=mean(mpg),col=\u0026quot;red\u0026quot;) #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏表示DV(mpg)平均的水平線\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rabline(v=mean(wt),col=\u0026quot;red\u0026quot;) #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏表示IV(wt)平均的垂直線\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r  figure\n\r提示\r paired pairs(~wt+mpg+disp+cyl,data = mtcars, main = \u0026quot;Scatterplot Matrix\u0026quot;)\r figure\r 如果是資料集\nplot(mtcars)\r figure\r 函數畫圖 sin\n x: -pi ~ 2*pi y: sin(x)  plot(sin, -pi, 2*pi)  figure\r line() 範例 另外參考curve()\nrequire(stats) # for lowess, rpois, rnorm\rsummary(cars)\r#\u0026gt; speed dist #\u0026gt; Min. : 4.0 Min. : 2.00 #\u0026gt; 1st Qu.:12.0 1st Qu.: 26.00 #\u0026gt; Median :15.0 Median : 36.00 #\u0026gt; Mean :15.4 Mean : 42.98 #\u0026gt; 3rd Qu.:19.0 3rd Qu.: 56.00 #\u0026gt; Max. :25.0 Max. :120.00\r#plot(cars) # 因為只有兩個欄位,直接丟進去,不分別放x,y\rplot(cars$dist~cars$speed)\rabline(lm(cars$dist~cars$speed),col=\u0026quot;red\u0026quot;) #沒有data這個參數,所以要加上cars\rlines(lowess(cars),col=\u0026quot;blue\u0026quot;) #🏷疊上額外的線條\r figure\r ⛳ 錯誤例 \r ❌abline(cars$dist ~ cars$speed) 👏要有lm,因為要找a,b ❌abline(lowness(cars)) 👏也是沒有a,b :因為lowness是非參數估計,傳回來的是樣本點  \r\r LOWESS, locally weighted scatter plot smoothing。 相關閱讀 lowess範例 attach(cars)\rplot(speed,dist,main=\u0026quot;Stopping Distance\u0026quot;, xlab=\u0026quot;Speed\u0026quot;, ylab=\u0026quot;Distance\u0026quot;, pch=21, bg=2, col=2)\rlines(lowess(cars, f=.3),col =1)\rlines(lowess(cars, f=.5),col =4)\rlines(lowess(cars, f=.1),col =7)\r   Histograms 函數hist(x)：其中x是一個數字向量，\n 選項freq=FALSE 用來畫出 probability densities 而不是次數 frequencies. 選項：breaks= ## 則是控制分成幾份。    Simple Histogram\nhist(mtcars$mpg)\r figure\r   分成12份，顏色紅色。\nhist(mtcars$mpg, breaks=12, col=\u0026quot;red\u0026quot;)\r figure\r   自行給定分割點\nhist(mtcars$mpg, breaks=c(4,5,12,50), col=\u0026quot;red\u0026quot;)\r figure\r   Add a Normal Curve Histograms can be a poor method for determining the shape of a distribution because it is so strongly affected by the number of bins used.\nx \u0026lt;- mtcars$mpg h\u0026lt;-hist(x, breaks=10, col=\u0026quot;red\u0026quot;, xlab=\u0026quot;Miles Per Gallon\u0026quot;, main=\u0026quot;Histogram with Normal Curve\u0026quot;) xfit\u0026lt;-seq(min(x),max(x),length=40) yfit\u0026lt;-dnorm(xfit,mean=mean(x),sd=sd(x)) yfit \u0026lt;- yfit*diff(h$mids[1:2])*length(x) #🏷length(X)是個數,不是長度\rlines(xfit, yfit, col=\u0026quot;blue\u0026quot;, lwd=2)\r figure\r hint: h: 次數分配圖,又\n$$ pdf = \\frac{機率}{長度} =\\frac{\\frac{n}{N}}{bin \\quad width} $$\n所以\n$$ n=pdf\\times N \\times (bin \\quad width) $$\nh\r#\u0026gt; $breaks\r#\u0026gt; [1] 10 12 14 16 18 20 22 24 26 28 30 32 34\r#\u0026gt; #\u0026gt; $counts\r#\u0026gt; [1] 2 1 7 3 5 5 2 2 1 0 2 2\r#\u0026gt; #\u0026gt; $density\r#\u0026gt; [1] 0.031250 0.015625 0.109375 0.046875 0.078125 0.078125 0.031250 0.031250\r#\u0026gt; [9] 0.015625 0.000000 0.031250 0.031250\r#\u0026gt; #\u0026gt; $mids\r#\u0026gt; [1] 11 13 15 17 19 21 23 25 27 29 31 33\r#\u0026gt; #\u0026gt; $xname\r#\u0026gt; [1] \u0026quot;x\u0026quot;\r#\u0026gt; #\u0026gt; $equidist\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; attr(,\u0026quot;class\u0026quot;)\r#\u0026gt; [1] \u0026quot;histogram\u0026quot;\r Kernel Density Plot 核密度畫圖(Kernal density plots) 用來觀察一個變量，比較有有效率，指令如：plot(density(x)) 其中x 是一個數字向量。\nd \u0026lt;- density(mtcars$mpg) # returns the density data plot(d) # plots the results\r figure\r Filled Density Plot d \u0026lt;- density(mtcars$mpg)\rplot(d, main=\u0026quot;Kernel Density of Miles Per Gallon\u0026quot;)\rpolygon(d, col=\u0026quot;red\u0026quot;, border=\u0026quot;blue\u0026quot;)\r figure\r 其他 plot(mpg): plot(~mpg) plot(mpg ~ cyl ): plot(cyl,mpg) plot(mpg ~ cyl | gear)\ndata\u0026lt;-mtcars\rattach(data)\rnames(data)\r#\u0026gt; [1] \u0026quot;mpg\u0026quot; \u0026quot;cyl\u0026quot; \u0026quot;disp\u0026quot; \u0026quot;hp\u0026quot; \u0026quot;drat\u0026quot; \u0026quot;wt\u0026quot; \u0026quot;qsec\u0026quot; \u0026quot;vs\u0026quot; \u0026quot;am\u0026quot; \u0026quot;gear\u0026quot;\r#\u0026gt; [11] \u0026quot;carb\u0026quot;\r#gear\u0026lt;-factor(gear)\r#am\u0026lt;-factor(am)\rplot(mpg ~ cyl | gear)\r figure\r"},
{"uri": "/blogR//rlang/9_2_%E5%A4%9A%E5%9C%96%E7%96%8A%E5%9C%96.html","title": "9.2 多圖疊圖",
	"tags": [],
	"description": "9_2_多圖疊圖",
	"content": "概論 畫布可以分成多個繪圖區(簡稱組合圖,多圖)，不同指令畫在同一個畫布上,文中簡稱疊圖。\n 高階指令,例如:barplot, boxplot, curve, hist, plot, dotchart, image, matplot, mosaicplot, stripchart, contour,這些指令大體上有兩個動作:  新增畫布 canvas 畫圖   低階指令則是增添到目前的畫布上。例如， abline, lines, segments, points,polygon, grid 。還有增添文字的函數,例如t: legend, text, mtext,而座標軸相關函數,則有: axis, box, rug  高階和低階函數的關係,例如指令 plot, hist, boxplot, 等等,會在目前的視窗上新增畫布，然後畫圖,而line(),scatterplot()則是疊圖。這裡另外看看幾種自行控制的方法：\n 多視窗(multiple windows)、 組合圖(combining figure) 畫布分割 疊圖(overlay)討論。同一張畫布增補其他資料或樣本點。  一般視窗作業系統的繪圖，會有一個抽象物件device。在這個device上，有一個抽象物件canvas，和繪圖工具例如，水彩筆之類的抽象物件可以指定顏色，線條粗細等等。\n在R中,對應上述作業系統的關鍵字.Devices(paired list)、.Device(長度為1)、dev.cur()(目前的裝置active device)。這裡說的Device指的是視窗。在視窗裡面的畫布,就是R提供的繪圖函數輸出所在,例如plot(),hist()等等。\n所以\n dev.new() 指的是開啟新視窗，🏷👏在Rstudio中的內定視窗名是RStudioGD dev.cur()是目前視窗號碼, dev.prev()前一個視窗號碼。 而plot.new() 則是新增畫布(我猜應該是透明,所以也可以用將兩個高階指令圖疊在一起)。見練習  多視窗 開多視窗的方法根據OS而不同，如下：\n   Function Platform     windows() Windows   X11() Unix   quartz() Mac    要關閉視窗，可以用函數dev.off()\n如果要知道目前的視窗是那一個，可以參考 dev.cur()。 Note: 如果目前有多個圖窗，則一直呼叫這個函數dev.off()，會依次關閉視窗，直到函數傳回NULL。\n\r驗證上面的說法可以利用\rdev.cur()\r#\u0026gt; png #\u0026gt; 2\rhist(mtcars$mpg) #在目前的裝置(視窗)上,開新的畫布,然後畫圖\rdev.cur()\r#\u0026gt; png #\u0026gt; 2\rhist(mtcars$mpg) #重複上面的動作,但是仍然在同一個裝置上,所以結果只看到一個直方圖\r figure\n\rdev.cur()\r#\u0026gt; png #\u0026gt; 2\rdev.off()\r#\u0026gt; null device #\u0026gt; 1\r ❓上面的範例，可以看到圖裝置的編號都是2，也就是hist畫在同一個視窗上。最後也只顯示一個圖(疊在最後面的那個)。如果在Rstudio上測試,可以利用按鈕清除目前的圖形知道,另外一張圖在下面。\n 討論下面的輸出結果，：\n比較程式碼在rmarkdown和console中執行的結果？目的只是在說,在Rmarkdown中windows()沒作用。\nif(.Platform$OS.type==\u0026quot;windows\u0026quot;) windows() else X11()\rhist(mtcars$mpg)  figure\n\rdev.cur() # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;如果不在Rmarkdown中，應該是2\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; windows #\u0026gt; 3\r# 重複上面3行\rif(.Platform$OS.type==\u0026quot;windows\u0026quot;) windows() else X11()\rhist(mtcars$mpg)\rdev.cur() # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;視窗編號正常顯示增加,但是圖形不出來。\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; windows #\u0026gt; 4\r 提示\r 在rscript✔中執行正常(會有兩個視窗)。但是在RMD中只有一個圖。函數windows()好像第二次沒作用。\n⛳ 測試,練習  plot.new() # 同一個視窗，新增圖層\rdev.new() #新視窗\rplot(1:1)\rdev.new()\rplot(2,2)\r# 圖形化完以後,才想到要補上title\rdev.set(dev.prev()) # 到前一個視窗\rtitle(main=\u0026quot;test dev 1\u0026quot;)\rdev.set(dev.next()) # 到第二個視窗\rtitle(main=\u0026quot;test dev 2\u0026quot;)\r 組合圖 組合圖的一個重要函數是par(),可以參考 。\n同時顯示多個plot的結果，可以利用函數par() 或 layout( )。函數par( )的選項有：\n mfrow=c(nrows, ncols) 填plot的方向為橫行(matrix flow by row)。 mfcol=c(nrows, ncols) 填入的方向為直行。  例如想要把不同線條的plot放在同一畫布上做比較,可以利用下面的指令 ⛳ 線條形式type的幾種基本類型 \nx \u0026lt;- c(1,3,4,7,8,9)\ry \u0026lt;- c(0,3,6,9,7,8)\rpar(mfrow=c(2,3))\rplot(x,y,main='plot(x,y)',col=\u0026quot;red\u0026quot;)\rplot(x,y,type=\u0026quot;l\u0026quot;,main=\u0026quot;plot(x,y,type='l')\u0026quot;,col=\u0026quot;green\u0026quot;)\rplot(x,y,type=\u0026quot;b\u0026quot;,main=\u0026quot;plot(x,y,type='b')\u0026quot;)\rplot(x,y,type=\u0026quot;o\u0026quot;,main=\u0026quot;plot(x,y,type='o')\u0026quot;)\rplot(x,y,type=\u0026quot;s\u0026quot;,main=\u0026quot;plot(x,y,type='s')\u0026quot;)\rplot(x,y,type=\u0026quot;h\u0026quot;,main=\u0026quot;plot(x,y,type='h')\u0026quot;)\r figure\r 範例2x2\nattach(mtcars)\rpar(mfrow=c(2,2))\rplot(wt,mpg, main=\u0026quot;Scatterplot of wt vs. mpg\u0026quot;)\rplot(wt,disp, main=\u0026quot;Scatterplot of wt vs disp\u0026quot;)\rhist(wt, main=\u0026quot;Histogram of wt\u0026quot;)\rboxplot(wt, main=\u0026quot;Boxplot of wt\u0026quot;)\r figure\r 分成三格\n# attach(mtcars)\rpar(mfrow=c(1,3)) hist(wt)\rhist(mpg)\rhist(disp)\r figure\r 在console執行(課堂執行)\n 執行 par() # 顯示目前的設定\rdef.par\u0026lt;-par() # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;將目前的參數存到def.par\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rdef.par$mfrow\rdef.par2\u0026lt;-par(mfrow=c(1,3)) # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;將還沒更改之前的參數存到def.par,在本例中和之前的def.par是一樣的，因為之前都沒動到參數。\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rdef.par$mfrow\rpar()$mfrow # 目前的設定\rpar(def.par) # 還原\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;a href=\u0026quot;#restore_par\u0026quot;\u0026gt;註解\u0026lt;/a\u0026gt;\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;   上面的程式碼，x\u0026lt;-par() 會把目前的參數拿出存到變數x。 如果par() 放了參數,會在設定完新參數以後，傳回舊紀錄(一個原因是,便於以後再還原)。  ⛳  但是在這個過程中，有些參數是無法修改的，因此\rpar() # 沒有重設功能,只是顯示目前的設定\rop \u0026lt;- par(no.readonly = TRUE) # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;op現在放的是所有可以修改的參數和參數值。 \u0026lt;code\u0026gt;no.readonly=T\u0026lt;/code\u0026gt;是說不要唯讀參數\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt; par(col.lab=\u0026quot;red\u0026quot;) # 設定 x and y labels 為紅色\rhist(mtcars$mpg) # 畫圖\rpar(op) # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;回復原來的設定\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r   \r\rnote:\n mar: the margin size  par(mar) 列出margin par(mar=c(1,1,1,1)) 更動margin   pch: the plotting symbol (default is open circle) lty: the line type (default is solid line), can be dashed, dotted, etc. lwd: the line width, specified as an integer multiple col: the plotting color, specified as a number, string, or hex code; the colors function gives you a vector of colors by name  par(col.lab=\u0026quot;red\u0026quot;) # red x and y labels   las: the orientation of the axis labels on the plot bg: the background color oma: the outer margin size (default is 0 for all sides) mfrow: number of plots per row, column (plots are filled row-wise) mfcol: number of plots per row, column (plots are filled column-wise)  是不是有需要寫個新函數，用來重設裝置參數？ 下面這個函數resetPar()只是練習用(假設沒有par()重新設定的功能)，用來將device回復成原先的設定值:\n主要看這一行:par(no.readonly = TRUE)。 意思是說，不要傳回 readonly的設定。\nresetPar \u0026lt;- function() {\rdev.new() #重新開始一個裝置\rop \u0026lt;- par(no.readonly = TRUE)#因為是新的裝置，所以裡面的設定都是預設值✔️\rdev.off()# 只是把之前的新裝置關掉\rop # 傳回預設值\r}\r# 使用方法\rpar(resetPar)\r plot.new()常發生的錯誤 : figure margins too large\n有兩個原因：1 是畫布過小 2，當前畫布的上下左右距離過大 這裡看看如何解第二個發生原因\n默認的畫布的邊款距離(margin)的預設為：\nc(5, 4, 4, 2) + 0.1.\n對應 c(bottom, left, top, right)，也就是順時針，由下到右結束一圈。\nop  \u0026lt;/div\u0026gt;\r \r\r\r更多的圖形控制: 在散佈圖中加入boxplot\n# windows圖的座標，左下角(0,0)右上角(1,1)\rpar(mar=rep(2,4)) #設定margin\rpar(fig=c(0,0.8,0,0.8)) #🏷X軸從0到0.8,Y軸也是。因此，左下(0,0)右上(0.8,0.8) # 🏷左下(x1,y1)右上(x2,y2) =\u0026gt; c(x1,x2,y1,y2) plot(mtcars$wt, mtcars$mpg, xlab=\u0026quot;Car Weight\u0026quot;,ylab=\u0026quot;Miles Per Gallon\u0026quot;)\rpar(fig=c(0,0.8,0.55,1), new=TRUE) #🏷同一個圖,因為沒有設定dev.new\rboxplot(mtcars$wt, horizontal=TRUE, axes=FALSE)\rpar(fig=c(0.65,1,0,0.8),new=TRUE)\rboxplot(mtcars$mpg, axes=FALSE)\rmtext(\u0026quot;Enhanced Scatterplot\u0026quot;, side=3, outer=TRUE, line=-3)\r figure\r ❓上例中的boxplot改為hist() ?提示\r no hint\nRMD 中的圖 並排顯示圖形(參考):\n```{r out.width=c('50%', '50%') , fig.show='hold'}\rboxplot(1:10)\rplot(rnorm(10))\r```\r 執行結果\r 疊圖 有些繪圖指令的選項，可以利用add=T。\n💥 plot指令不支援add=T\ncurve( dnorm(x,0,1), -5 , 5, lwd=1, lty=1)\rcurve( dnorm(x,0,2), add=TRUE, lwd=2, lty=2)\rcurve( dnorm(x,0,3) , add=TRUE, lwd=3, lty=3)\r# Add the legend\rlegend( \u0026quot;topright\u0026quot;,c(\u0026quot;sigma=1\u0026quot;,\u0026quot;sigma=2\u0026quot;,\u0026quot;sigma=3\u0026quot;) , lwd=1:3, lty=1:3)\r figure\r 練習 ❓練習1 讓下面兩個圖重疊\nboxplot(mtcars$wt, axes=FALSE)\rboxplot(mtcars$mpg, axes=FALSE)\r 提示\r boxplot(mtcars$wt, axes=FALSE)\rpar(new=TRUE) #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏在同一個視窗,開新畫布\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rboxplot(mtcars$mpg, axes=FALSE)\r \n❓練習2 讓disp,mpg 的histogram 疊在一起: 利用add=T\nfigure\n\r提示\r xmax=max(c(disp,mpg))\rxmin=min(c(disp,mpg))\rhist(disp,xlim=c(xmin,xmax))\rhist(mpg,xlim=c(xmin,xmax),add=T)\r \n❓練習 測試這篇文章提示\r 😜\nlayout() 函數 layout( ) 的使用方法為\tlayout(mat) 其中 mat 的元素用來指定圖形號碼。\n例如分成4個格子,順序為左右上下(byrow=TRUE)，則指令為 layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))\n 第一個參數是編號 第二個參數是分割成2x2 對應如下表     1 1  2 3      # One figure in row 1 and two figures in row 2\r#attach(mtcars)\rlayout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))\rhist(wt)\rhist(mpg)\rhist(disp)\r figure\r #dev.off()\r 在layout()函數中，也可以更改圖形大小，其參數 為： widths= 數字向量，用來代表column 寬度 heights= 數字向量，用來代表row 高度\nnote:Relative widths are specified with numeric values. Absolute widths (in centimetres) are specified with the lcm() function.\n練習:分組畫圖 sm.density.compare( ) 可以讓我們分組畫 kernal density ,例如 sm.density.compare(x, factor)如下:\nlibrary(sm)\rattach(mtcars)\r#create value labels cyl.f \u0026lt;- factor(cyl, levels= c(4,6,8),\rlabels = c(\u0026quot;4 cylinder\u0026quot;, \u0026quot;6 cylinder\u0026quot;, \u0026quot;8 cylinder\u0026quot;)) #plot densities sm.density.compare(mpg, cyl, xlab=\u0026quot;Miles Per Gallon\u0026quot;)\rtitle(main=\u0026quot;MPG Distribution by Car Cylinders\u0026quot;)\r#add legend via mouse click\rcolfill\u0026lt;-c(2:(2+length(levels(cyl.f)))) legend(locator(1), levels(cyl.f), fill=colfill)\r#\u0026gt; Error in legend(locator(1), levels(cyl.f), fill = colfill): invalid coordinate lengths\r figure\r 不用套件畫上圖 hint: kernel density 函數:density()提示\r cy.wk\u0026lt;-factor(mtcars$cy)\rby4\u0026lt;-mtcars[cy.wk==\u0026quot;4\u0026quot;,\u0026quot;mpg\u0026quot;]\rby6\u0026lt;-mtcars[cy.wk==\u0026quot;6\u0026quot;,\u0026quot;mpg\u0026quot;]\rby8\u0026lt;-mtcars[cy.wk==\u0026quot;8\u0026quot;,\u0026quot;mpg\u0026quot;]\rplot(density(by4))\rlines(density(by6))\rlines(density(by8))\r 我測了一下\nplot(density(by4,adjust=1),ylim=c(0,0.2),xlim=c(0,40),col=\u0026quot;red\u0026quot;)\rlines(density(by6,adjust=2),col=\u0026quot;green\u0026quot;)\rlines(density(by8,adjust=2),col=\u0026quot;blue\u0026quot;)\r \n"},
{"uri": "/blogR//rlang/9_3_plot.html","title": "9.3 畫圖練習",
	"tags": [],
	"description": "9_3_Plot",
	"content": "加入文字 繪圖區中的文字 函數 text() 在繪圖區根據座標填入字串,簡化的指令如下:\ntext(x, y, labels)\n x and y: 文字座標; labels: 例如 \u0026quot;a label\u0026quot; pos: 下左上右，1234 cex: 放大倍數，例如，0.65。\n範例 :  d\u0026lt;-head(mtcars)\rplot(d[,'wt'], d[,'mpg'], main=\u0026quot;Milage vs. Car Weight\\n~~~~~~~~~~~~~~~~~~~\u0026quot;,\rxlab=\u0026quot;Weight\u0026quot;, ylab=\u0026quot;Miles/(US) gallon\u0026quot;,\rpch=19, col=\u0026quot;darkgreen\u0026quot;)\rtext(d[,'wt'], d[,'mpg'], row.names(d), cex=1,pos=3,col=\u0026quot;red\u0026quot;) #🏷👏pos=3 點的上面\r figure\r 在margin中填入文字 mtext(text, side=3)\n text : 例如\u0026quot;a label\u0026quot; side : 哪一側 :  順時針 1: 下 2: 左 3: 上 4: 右    範例 :\nplot(1:10, 1:10, main=\u0026quot;mtext(...) examples\\n~~~~~~~~~~~\u0026quot;)\rmtext(\u0026quot;Magic function\u0026quot;, side=3)\r figure\r Add mathematical annotation to a plot plot(1:10, 1:10, main=\u0026quot;text(...) examples\\n~~~~~~~~~~~\u0026quot;)\rtext(4, 9, expression(hat(beta) == (X^t * X)^{-1} * X^t * y))\rtext(7, 4, expression(bar(x) == sum(frac(x[i], n), i==1, n)))\r figure\r 函數畫圖 比較函數plot()、curve()\n  plot()\nx\u0026lt;-seq(1,10,0.1)\ry\u0026lt;-exp(x)\rx\u0026lt;-y\req = function(x){x*x}\rplot(x,eq(x), type='l')\rplot(eq) #🏷👏內定範圍為0到1\r   curve()\n  plot()的參數可以是只有一個參數座標y 或兩個參數,如二為座標(x,y),或是函數名稱。🏷👏這是一個分配函數,如果遇到函數就會呼叫對應的函數。\n  💡函數curve()的第一個參數是expr,不是y座標。\n  ㊙️ 如果不指定from,to,或者xlim,內定是從0到1。\neq = function(x){x*x}\rcurve(eq, from=1, to=50, xlab=\u0026quot;x\u0026quot;, ylab=\u0026quot;y\u0026quot;) # `eq` 是一個函數名稱\rcurve(eq, xlim=c(1,50),n=100, xlab=\u0026quot;x\u0026quot;, ylab=\u0026quot;y\u0026quot;) #🏷👏xlim另一種指指定開始和結束的方法,n指定要分割成幾個點\r       ❓ 解釋為甚麼下面錯誤?如何修正?\neq = function(x){x*x}\ry\u0026lt;-eq(1:50)\rcurve(y, xlab=\u0026quot;x\u0026quot;, ylab=\u0026quot;y\u0026quot;)\r#\u0026gt; Error in y(x): 沒有這個函式 \u0026quot;y\u0026quot;\r   ❓ 解釋為甚麼下面錯誤?如何修正?\neq = function(x){x*x}\rz\u0026lt;-1:50\rcurve(eq(z), xlab=\u0026quot;x\u0026quot;, ylab=\u0026quot;y\u0026quot;)\r   提示\r  第一個參數必須是expr 一樣的錯誤型態,因為eq(z)已經變成Y座標。  解1:利用xname=\u0026quot;z\u0026quot;\neq = function(x){x*x}\rz\u0026lt;-1:50\rcurve(eq(z),xname=\u0026quot;z\u0026quot;, xlab=\u0026quot;x\u0026quot;, ylab=\u0026quot;y\u0026quot;)\r \nplot example 正常\npolyred = curve(dnorm(x), xlim = c(-4,4)) #🏷👏只有線條\rpolyred #\r展開\r#\u0026gt; $x\r#\u0026gt; [1] -4.00 -3.92 -3.84 -3.76 -3.68 -3.60 -3.52 -3.44 -3.36 -3.28 -3.20 -3.12\r#\u0026gt; [13] -3.04 -2.96 -2.88 -2.80 -2.72 -2.64 -2.56 -2.48 -2.40 -2.32 -2.24 -2.16\r#\u0026gt; [25] -2.08 -2.00 -1.92 -1.84 -1.76 -1.68 -1.60 -1.52 -1.44 -1.36 -1.28 -1.20\r#\u0026gt; [37] -1.12 -1.04 -0.96 -0.88 -0.80 -0.72 -0.64 -0.56 -0.48 -0.40 -0.32 -0.24\r#\u0026gt; [49] -0.16 -0.08 0.00 0.08 0.16 0.24 0.32 0.40 0.48 0.56 0.64 0.72\r#\u0026gt; [61] 0.80 0.88 0.96 1.04 1.12 1.20 1.28 1.36 1.44 1.52 1.60 1.68\r#\u0026gt; [73] 1.76 1.84 1.92 2.00 2.08 2.16 2.24 2.32 2.40 2.48 2.56 2.64\r#\u0026gt; [85] 2.72 2.80 2.88 2.96 3.04 3.12 3.20 3.28 3.36 3.44 3.52 3.60\r#\u0026gt; [97] 3.68 3.76 3.84 3.92 4.00\r#\u0026gt; #\u0026gt; $y\r#\u0026gt; [1] 0.0001338302 0.0001837125 0.0002505784 0.0003396012 0.0004573148\r#\u0026gt; [6] 0.0006119019 0.0008135212 0.0010746733 0.0014106023 0.0018397262\r#\u0026gt; [11] 0.0023840882 0.0030698133 0.0039275536 0.0049928992 0.0063067264\r#\u0026gt; [16] 0.0079154516 0.0098711538 0.0122315264 0.0150596163 0.0184233106\r#\u0026gt; [21] 0.0223945303 0.0270480995 0.0324602656 0.0387068561 0.0458610763\r#\u0026gt; [26] 0.0539909665 0.0631565614 0.0734068126 0.0847763613 0.0972822693\r#\u0026gt; [31] 0.1109208347 0.1256646368 0.1414599652 0.1582247904 0.1758474303\r#\u0026gt; [36] 0.1941860550 0.2130691468 0.2322970047 0.2516443411 0.2708639718\r#\u0026gt; [41] 0.2896915528 0.3078512605 0.3250622641 0.3410457886 0.3555325285\r#\u0026gt; [46] 0.3682701403 0.3790305262 0.3876166151 0.3938683616 0.3976677055\r#\u0026gt; [51] 0.3989422804 0.3976677055 0.3938683616 0.3876166151 0.3790305262\r#\u0026gt; [56] 0.3682701403 0.3555325285 0.3410457886 0.3250622641 0.3078512605\r#\u0026gt; [61] 0.2896915528 0.2708639718 0.2516443411 0.2322970047 0.2130691468\r#\u0026gt; [66] 0.1941860550 0.1758474303 0.1582247904 0.1414599652 0.1256646368\r#\u0026gt; [71] 0.1109208347 0.0972822693 0.0847763613 0.0734068126 0.0631565614\r#\u0026gt; [76] 0.0539909665 0.0458610763 0.0387068561 0.0324602656 0.0270480995\r#\u0026gt; [81] 0.0223945303 0.0184233106 0.0150596163 0.0122315264 0.0098711538\r#\u0026gt; [86] 0.0079154516 0.0063067264 0.0049928992 0.0039275536 0.0030698133\r#\u0026gt; [91] 0.0023840882 0.0018397262 0.0014106023 0.0010746733 0.0008135212\r#\u0026gt; [96] 0.0006119019 0.0004573148 0.0003396012 0.0002505784 0.0001837125\r#\u0026gt; [101] 0.0001338302\rpolygon(polyred$x, polyred$y, col = \u0026quot;red\u0026quot;) # 🏷👏填色在一個封閉區間填入顏色\r figure\r 練習:參照上例,函數是 \\(f(x)=x^2\\) 要在函數和X軸之間著色 ❓ 解釋下面兩個,第一個是錯的\n  ❌ 這不是我們要的圖\neq = function(x){x*x}\ry\u0026lt;-eq(1:50)\rcurve(eq, 1,50,xlab=\u0026quot;x\u0026quot;, ylab=\u0026quot;y\u0026quot;,lwd=5,col=\u0026quot;yellow\u0026quot;)\rpolygon(1:50,y,lty=2,col=\u0026quot;red\u0026quot;)\r   ⭕ 修正\neq = function(x){x*x}\ry\u0026lt;-eq(1:50)\rcurve(eq, 1,50,xlab=\u0026quot;x\u0026quot;, ylab=\u0026quot;y\u0026quot;,lwd=5,col=\u0026quot;yellow\u0026quot;)\rpolygon(c(1:50,50),c(y,0),lty=2,col=\u0026quot;red\u0026quot;) #🏷👏多加一個點讓繞到y=0的位置上\r 💯 第一個點和最後一個點會連在一起。然後填色。\n  rug set.seed(3)\rx \u0026lt;- rbeta(150, 3, 25)\r#png(\u0026quot;rug.png\u0026quot;)\rhist(x)\rrug(quantile(x)[2:4], col=2, lwd=2.5) # 預設是 \u0026quot;0%\u0026quot; \u0026quot;25%\u0026quot; \u0026quot;50%\u0026quot; \u0026quot;75%\u0026quot; \u0026quot;100%\u0026quot;\r figure\r set.seed(3)\rx \u0026lt;- rbeta(150, 3, 25)\r#png(\u0026quot;rug.png\u0026quot;)\rhist(x)\rabline(v= quantile(x)[2:4],lty=\u0026quot;dotted\u0026quot;,col=\u0026quot;red\u0026quot; )\rxpos= quantile(x)[2:4]\rtext(xpos[1],0, \u0026quot;25%\u0026quot;)\rtext(xpos[2],0, \u0026quot;50%\u0026quot;)\rtext(xpos[3],0, \u0026quot;75%\u0026quot;)\r figure\r 練習 劃出常態分配\n -4到4的密度,機率 qnorm,rnorm  figure\n\r提示\r par(mfrow=c(2,2))\rplot(dnorm,xlim=c(-4,4),n=100,type=\u0026quot;l\u0026quot;)\rplot(pnorm,xlim=c(-4,4),n=100,type=\u0026quot;l\u0026quot;)\rplot(qnorm,xlim=c(0,1),n=100,type=\u0026quot;l\u0026quot;)\rplot(rnorm,xlim=c(-4,4),n=100,type=\u0026quot;p\u0026quot;)\r \n圖形存檔 可以利用menu存檔，例如File -\u0026gt; Save As. 也可以利用函數： Function Output to   pdf(\u0026quot;mygraph.pdf\u0026quot;) pdf file  win.metafile(\u0026quot;mygraph.wmf\u0026quot;) windows metafile  png(\u0026quot;mygraph.png\u0026quot;) png file  jpeg(\u0026quot;mygraph.jpg\u0026quot;) jpeg file  bmp(\u0026quot;mygraph.bmp\u0026quot;) bmp file  postscript(\u0026quot;mygraph.ps\u0026quot;) postscript file    \n# Give the chart file a name.\rpng(file = \u0026quot;scatterplot_matrices.png\u0026quot;)\r# Plot the matrices between 4 variables giving 12 plots.\r# One variable with 3 others and total 4 variables.\rpairs(~wt+mpg+disp+cyl,data = mtcars,\rmain = \u0026quot;Scatterplot Matrix\u0026quot;)\r# Save the file.\rdev.off()\r"},
{"uri": "/blogR//econometrics/0_prerequest.html","title": "0 前置準備",
	"tags": [],
	"description": "0_prerequest",
	"content": "需要套件 套件\ninstall.packages(\u0026quot;wooldridge\u0026quot;)\r# 讀取stata資料\r# haven,readr,rio\rinstall.packages(\u0026quot;haven\u0026quot;) # 取代套件 rio,readr\r# more\rinstall.packages(\u0026quot;WDI\u0026quot;)\rinstall.packages(\u0026quot;dplyr\u0026quot;)\rinstall.packages(\u0026quot;ggplot\u0026quot;)\r 其他套件\n 曾經用過的套件  foreign 可以用來導入外部資料(haven就可以了) 例如，stata 的資料 dta, SPSS, SAS, Systat, Mini tab(. mtp)。 利用foreign讀入stata 的資料檔： require(foreign)\raffairs\u0026lt;- read.dta(\u0026quot;http://fmwww.bc.edu/ec-p/data/wooldridge/affairs.dta\u0026quot;)\rsave(affairs,file='./resources/affairs.RData')\r 測試\nrm(affairs)\rload('./resources/affairs.RData')\rhead(affairs)\r    "},
{"uri": "/blogR//econometrics/1_t%E6%AA%A2%E5%AE%9A.html","title": "1.0 t檢定",
	"tags": ["t-test"],
	"description": "t檢定",
	"content": "暫時 \nt檢定 t檢定\n 單一樣本 獨立樣本 配對樣本 在R中,配對樣本的平均比較 可以用函數t.test()  t.test(x, y, paired = TRUE, alternative = \u0026quot;two.sided\u0026quot;)\r  x,y: 數字向量 paired: 是否計算配對t檢定. 對立假設alternative hypothesis.  two.sided (*), greater less.    t檢定- 單樣本 One Sample t-test\rdata: audit$y\rt = -4.2768, df = 240, p-value = 2.739e-05\ralternative hypothesis: true mean is not equal to 0\r95 percent confidence interval:\r-0.1939385 -0.0716217 **說明：mu +/- c.level*(se) 見手算例 **\rsample estimates:\rmean of x -0.1327801  t檢定 - 配對 Is there any significant changes in the weights of mice after treatment?\n  產生資料\nbefore \u0026lt;-c(200.1, 190.9, 192.7, 213, 241.4, 196.9, 172.2, 185.5, 205.2, 193.7)\rafter \u0026lt;-c(392.9, 393.2, 345.1, 393, 434, 427.9, 422, 383.9, 392.3, 352.2)\r   是否有差異\n  方法1: 資料被分成兩個資料集。\n# Compute t-test\rres \u0026lt;- t.test(before, after, paired = TRUE)\rres\r#\u0026gt; #\u0026gt; Paired t-test\r#\u0026gt; #\u0026gt; data: before and after\r#\u0026gt; t = -20.883, df = 9, p-value = 6.2e-09\r#\u0026gt; alternative hypothesis: true difference in means is not equal to 0\r#\u0026gt; 95 percent confidence interval:\r#\u0026gt; -215.5581 -173.4219\r#\u0026gt; sample estimates:\r#\u0026gt; mean of the differences #\u0026gt; -194.49\r   方法2:長資料\nmy_data \u0026lt;- data.frame( group = rep(c(\u0026quot;before\u0026quot;, \u0026quot;after\u0026quot;), each = 10), weight = c(before, after)\r) # 🏷👏rep() 中的each,表示每個元素重複10次,否則就是b,a重複10次 # Compute t-test\rres \u0026lt;- t.test(weight ~ group, data = my_data, paired = TRUE)\rres\r#\u0026gt; #\u0026gt; Paired t-test\r#\u0026gt; #\u0026gt; data: weight by group\r#\u0026gt; t = 20.883, df = 9, p-value = 6.2e-09\r#\u0026gt; alternative hypothesis: true difference in means is not equal to 0\r#\u0026gt; 95 percent confidence interval:\r#\u0026gt; 173.4219 215.5581\r#\u0026gt; sample estimates:\r#\u0026gt; mean of the differences #\u0026gt; 194.49\r     之前的平均小於之後的平均\nt.test(weight ~ group, data = my_data, paired = TRUE, alternative = \u0026quot;less\u0026quot;)\r#\u0026gt; #\u0026gt; Paired t-test\r#\u0026gt; #\u0026gt; data: weight by group\r#\u0026gt; t = 20.883, df = 9, p-value = 1\r#\u0026gt; alternative hypothesis: true difference in means is less than 0\r#\u0026gt; 95 percent confidence interval:\r#\u0026gt; -Inf 211.5623\r#\u0026gt; sample estimates:\r#\u0026gt; mean of the differences #\u0026gt; 194.49\r   之前的平均大於之後的平均\nt.test(weight ~ group, data = my_data, paired = TRUE, alternative = \u0026quot;greater\u0026quot;)\r#\u0026gt; #\u0026gt; Paired t-test\r#\u0026gt; #\u0026gt; data: weight by group\r#\u0026gt; t = 20.883, df = 9, p-value = 3.1e-09\r#\u0026gt; alternative hypothesis: true difference in means is greater than 0\r#\u0026gt; 95 percent confidence interval:\r#\u0026gt; 177.4177 Inf\r#\u0026gt; sample estimates:\r#\u0026gt; mean of the differences #\u0026gt; 194.49\r   最後因為這個p值 6.210^{-9}, 小於 significance level alpha = 0.05. 因此之後顯著異於之前。\n看一下檢定的結果,例子中的res\nstr(res)\r#\u0026gt; List of 10\r#\u0026gt; $ statistic : Named num 20.9 🏷👏the value of the t test statistics\r#\u0026gt; ..- attr(*, \u0026quot;names\u0026quot;)= chr \u0026quot;t\u0026quot;\r#\u0026gt; $ parameter : Named num 9 🏷👏the degrees of freedom for the t test statistics\r#\u0026gt; ..- attr(*, \u0026quot;names\u0026quot;)= chr \u0026quot;df\u0026quot;\r#\u0026gt; $ p.value : num 6.2e-09 🏷👏the p-value for the test\r#\u0026gt; $ conf.int : num [1:2] 173 216 🏷👏a confidence interval for the mean appropriate to the specified alternative hypothesis.\r#\u0026gt; ..- attr(*, \u0026quot;conf.level\u0026quot;)= num 0.95\r#\u0026gt; $ estimate : Named num 194 🏷👏the means of the two groups being compared (in the case of independent t test) or difference in means (in the case of paired t test)\r#\u0026gt; ..- attr(*, \u0026quot;names\u0026quot;)= chr \u0026quot;mean of the differences\u0026quot;\r#\u0026gt; $ null.value : Named num 0\r#\u0026gt; ..- attr(*, \u0026quot;names\u0026quot;)= chr \u0026quot;difference in means\u0026quot;\r#\u0026gt; $ stderr : num 9.31\r#\u0026gt; $ alternative: chr \u0026quot;two.sided\u0026quot;\r#\u0026gt; $ method : chr \u0026quot;Paired t-test\u0026quot;\r#\u0026gt; $ data.name : chr \u0026quot;weight by group\u0026quot;\r#\u0026gt; - attr(*, \u0026quot;class\u0026quot;)= chr \u0026quot;htest\u0026quot;\r Preleminary test to check paired t-test assumptions  Assumption 1: Are the two samples paired?   Yes, since the data have been collected from measuring twice the weight of the same mice.   Assumption 2: Is this a large sample?   No, because n \u0026lt; 30. Since the sample size is not large enough (less than 30), we need to check whether the differences of the pairs follow a normal distribution.  ❓How to check the normality? Use Shapiro-Wilk normality test as described at: Normality Test in R.\n Null hypothesis: the data are normally distributed Alternative hypothesis: the data are not normally distributed  # 計算前後差距\rd \u0026lt;- with(my_data, weight[group == \u0026quot;before\u0026quot;] - weight[group == \u0026quot;after\u0026quot;])\r# Shapiro-Wilk normality test for the differences\rshapiro.test(d) # =\u0026gt; p-value = 0.6141\r#\u0026gt; #\u0026gt; Shapiro-Wilk normality test\r#\u0026gt; #\u0026gt; data: d\r#\u0026gt; W = 0.94536, p-value = 0.6141\r p值\u0026gt; significance level 0.05 差異的分配沒有顯著異於常態分配,因此可以假設是常態分配。 如果不是常態分配,可以考慮使用non parametric paired two-samples Wilcoxon test.\r\r\r練習 練習目的 : 熟悉R語言而已。 ❓問題: 不用sd(),mean()計算平均值,標準差,標準誤差提示\r ```r?lang=r?class=.source?preclass=\rv.n \u0026lt;- length(Change)\r#\u0026gt; Error in eval(expr, envir, enclos): 找不到物件 'Change'\rv.mean \u0026lt;- sum(Change)/v.n\r#\u0026gt; Error in eval(expr, envir, enclos): 找不到物件 'Change'\rv.std \u0026lt;-sqrt(sum((Change-v.mean)^2)/(v.n-1))\r#\u0026gt; Error in eval(expr, envir, enclos): 找不到物件 'Change'\rv.se \u0026lt;- v.std/sqrt(v.n)\r#\u0026gt; Error in eval(expr, envir, enclos): 找不到物件 'v.std'\rrst\u0026lt;-list(v.n,v.mean,v.std,v.se)\r#\u0026gt; Error in eval(expr, envir, enclos): 找不到物件 'v.n'\rrst\r#\u0026gt; Error in eval(expr, envir, enclos): 找不到物件 'rst'\r```\r \n❓利用公式 計算配對樣本的t-test\n計算t-test statistisc 的公式:\n$$ t = \\frac{m}{s/\\sqrt{n}} $$\n其中,\n m 組平均差值 n 資料大小 s 資料的standard deviation  練習需要的資料\nSR87\u0026lt;-c(10,1,6,.45,1.25,1.3,1.06,3,8.18,1.67,.98,1,.45, 5.03,8,9,18,.28,7,3.97)\rSR88\u0026lt;-c(3,1,5,.5,1.54,1.5,.8,2,.67,1.17,.51,.5,.61,6.7, 4,7,19,.2,5,3.83)\r 提示\r   直接打入資料( Wooldridge, Table C.3):\nSR87\u0026lt;-c(10,1,6,.45,1.25,1.3,1.06,3,8.18,1.67,.98,1,.45, 5.03,8,9,18,.28,7,3.97)\rSR88\u0026lt;-c(3,1,5,.5,1.54,1.5,.8,2,.67,1.17,.51,.5,.61,6.7, 4,7,19,.2,5,3.83)\r   Calculate Change (the parentheses just display the results):\n(Change \u0026lt;- SR88 - SR87)\r#\u0026gt; [1] -7.00 0.00 -1.00 0.05 0.29 0.20 -0.26 -1.00 -7.51 -0.50 -0.47 -0.50\r#\u0026gt; [13] 0.16 1.67 -4.00 -2.00 1.00 -0.08 -2.00 -0.14\r   Ingredients to CI formula\n(avgCh\u0026lt;- mean(Change)) # Change的平均\r#\u0026gt; [1] -1.1545\r(n \u0026lt;- length(Change))\r#\u0026gt; [1] 20\r(sdCh \u0026lt;- sd(Change)) # Change的標準差\r#\u0026gt; [1] 2.400639\r(se \u0026lt;- sdCh/sqrt(n)) # 標準誤\r#\u0026gt; [1] 0.5367992\r(c \u0026lt;- qt(.975, n-1)) #quantile of t dist\r#\u0026gt; [1] 2.093024\r   avgCh的95%信賴區間\nc( avgCh - c*se, avgCh + c*se )\r#\u0026gt; [1] -2.27803369 -0.03096631\r   t statistic for H0: mu=0:\n(t \u0026lt;- avgCh/se)\r#\u0026gt; [1] -2.150711\r   驗證\nt.test(SR88,SR87,paired=T)\r#\u0026gt; #\u0026gt; Paired t-test\r#\u0026gt; #\u0026gt; data: SR88 and SR87\r#\u0026gt; t = -2.1507, df = 19, p-value = 0.04458\r#\u0026gt; alternative hypothesis: true difference in means is not equal to 0\r#\u0026gt; 95 percent confidence interval:\r#\u0026gt; -2.27803369 -0.03096631\r#\u0026gt; sample estimates:\r#\u0026gt; mean of the differences #\u0026gt; -1.1545\rt.test(SR87,SR88)\r#\u0026gt; #\u0026gt; Welch Two Sample t-test\r#\u0026gt; #\u0026gt; data: SR87 and SR88\r#\u0026gt; t = 0.82325, df = 37.843, p-value = 0.4155\r#\u0026gt; alternative hypothesis: true difference in means is not equal to 0\r#\u0026gt; 95 percent confidence interval:\r#\u0026gt; -1.684837 3.993837\r#\u0026gt; sample estimates:\r#\u0026gt; mean of x mean of y #\u0026gt; 4.3810 3.2265\r    ❓黑白人士，用同一個CV找工作。 A data.frame with 241 observations on 3 variables:\nw: =1 if white app. got job offer b: =1 if black app. got job offer y: b - w\naudit\n  看一下資料\nlibrary(haven) # library(readr)\raudit\u0026lt;-read_dta('../data/audit.dta')\rhead(audit)\r#\u0026gt; # A tibble: 6 x 3\r#\u0026gt; w b y\r#\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r#\u0026gt; 1 1 1 0\r#\u0026gt; 2 1 1 0\r#\u0026gt; 3 1 1 0\r#\u0026gt; 4 1 1 0\r#\u0026gt; 5 1 1 0\r#\u0026gt; 6 0 0 0\r y是前兩個欄位相減。以第1筆資料為例，兩個都是1，沒差別(y=0)。\n  提示\r   計算\n# Ingredients to CI formula\r(avgy\u0026lt;- mean(audit$y))\r#\u0026gt; [1] -0.1327801\r(n \u0026lt;- length(audit$y))\r#\u0026gt; [1] 241\r(sdy \u0026lt;- sd(audit$y))\r#\u0026gt; [1] 0.4819709\r(se \u0026lt;- sdy/sqrt(n))\r#\u0026gt; [1] 0.03104648\r(c \u0026lt;- qnorm(.975))\r#\u0026gt; [1] 1.959964\r# 95% Confidence intervall:\ravgy + c * c(-se,+se)\r#\u0026gt; [1] -0.19363006 -0.07193011\r# 99% Confidence intervall:\ravgy + qnorm(.995) * c(-se,+se)\r#\u0026gt; [1] -0.21275051 -0.05280966\r   t statistic for H0: mu=0:\n(t \u0026lt;- avgy/se)\r#\u0026gt; [1] -4.276816\r 自由度(d.f.)為 n-1 =240 的t分配，其臨界值Critical values(如下):\nalpha.one.tailed = c(0.1, 0.05, 0.025, 0.01, 0.005, .001)\rCV \u0026lt;- qt(1 - alpha.one.tailed, n-1)\rcbind(alpha.one.tailed, CV)\r#\u0026gt; alpha.one.tailed CV\r#\u0026gt; [1,] 0.100 1.285089\r#\u0026gt; [2,] 0.050 1.651227\r#\u0026gt; [3,] 0.025 1.969898\r#\u0026gt; [4,] 0.010 2.341985\r#\u0026gt; [5,] 0.005 2.596469\r#\u0026gt; [6,] 0.001 3.124536\r   函數t.test() H0: y=5, H1:y\u0026gt;5, 信賴區間0.99\nt.test(y, mu=5, alternative=\u0026quot;greater\u0026quot;, conf.level=0.99)\r#\u0026gt; Error in t.test(y, mu = 5, alternative = \u0026quot;greater\u0026quot;, conf.level = 0.99): 找不到物件 'y'\r   驗證利用函數t.test()算：\n# two-sided CI\rt.test(audit$y) #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏只有一個參數,看起來很像one-sample t-test 和0的比較\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; #\u0026gt; One Sample t-test\r#\u0026gt; #\u0026gt; data: audit$y\r#\u0026gt; t = -4.2768, df = 240, p-value = 2.739e-05\r#\u0026gt; alternative hypothesis: true mean is not equal to 0\r#\u0026gt; 95 percent confidence interval:\r#\u0026gt; -0.1939385 -0.0716217\r#\u0026gt; sample estimates:\r#\u0026gt; mean of x #\u0026gt; -0.1327801\r# 1-sided test:\rt.test(audit$y, alternative=\u0026quot;less\u0026quot;)\r#\u0026gt; #\u0026gt; One Sample t-test\r#\u0026gt; #\u0026gt; data: audit$y\r#\u0026gt; t = -4.2768, df = 240, p-value = 1.369e-05\r#\u0026gt; alternative hypothesis: true mean is less than 0\r#\u0026gt; 95 percent confidence interval:\r#\u0026gt; -Inf -0.08151529\r#\u0026gt; sample estimates:\r#\u0026gt; mean of x #\u0026gt; -0.1327801\r    t檢定 - 獨立樣本 合併標準差(pooled standard deviation) $$ s_p \\sqrt{\\frac{1}{n_1}+\\frac{1}{n_2}} $$ $$ s_p = \\sqrt{\\frac{(n_1 - 1) \\times s_1^2 + (n_2 - 1) \\times s_2^2}{n_1 + n_2 - 2}} $$\n利用管道 準備材料 需要套件\nif(!reuire(ggpubr)) install.packages(\u0026quot;ggpubr\u0026quot;) \r利用devtools安裝\rinstall.packages(\u0026quot;devtools\u0026quot;) devtools::install_github(\u0026quot;kassambara/ggpubr\u0026quot;)\rinstall.packages(\u0026quot;PairedData\u0026quot;) #🏷👏Box plots lose the paired information. You can use the function plot.paired() [in pairedData package] to plot paired data (“before - after” plot).\r before \u0026lt;-c(200.1, 190.9, 192.7, 213, 241.4, 196.9, 172.2, 185.5, 205.2, 193.7)\rafter \u0026lt;-c(392.9, 393.2, 345.1, 393, 434, 427.9, 422, 383.9, 392.3, 352.2)\rmy_data \u0026lt;- data.frame( group = rep(c(\u0026quot;before\u0026quot;, \u0026quot;after\u0026quot;), each = 10), weight = c(before, after)\r) # 🏷👏rep() 中的each,表示每個元素重複10次,否則就是b,a重複10次\rlibrary(\u0026quot;dplyr\u0026quot;)\r# 先計算各組統計輛\rgroup_by(my_data, group) %\u0026gt;%\rsummarise(\rcount = n(),\rmean = mean(weight, na.rm = TRUE),\rsd = sd(weight, na.rm = TRUE)\r)\r#\u0026gt; # A tibble: 2 x 4\r#\u0026gt; group count mean sd\r#\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r#\u0026gt; 1 after 10 394. 29.4\r#\u0026gt; 2 before 10 199. 18.5\r 視覺探索 Visualize your data using box plots\nlibrary(\u0026quot;ggpubr\u0026quot;)\rggboxplot(my_data, x = \u0026quot;group\u0026quot;, y = \u0026quot;weight\u0026quot;, color = \u0026quot;group\u0026quot;, palette = c(\u0026quot;#00AFBB\u0026quot;, \u0026quot;#E7B800\u0026quot;),\rorder = c(\u0026quot;before\u0026quot;, \u0026quot;after\u0026quot;),\rylab = \u0026quot;Weight\u0026quot;, xlab = \u0026quot;Groups\u0026quot;)\r figure\r Plot paired data:\n# 假設my_data是從CSV讀入,要分組\rbefore \u0026lt;- subset(my_data, group == \u0026quot;before\u0026quot;, weight, drop = TRUE)\rafter \u0026lt;- subset(my_data, group == \u0026quot;after\u0026quot;, weight, drop = TRUE)\r# Plot paired data\rlibrary(PairedData)\rpd \u0026lt;- paired(before, after)\rplot(pd, type = \u0026quot;profile\u0026quot;) + theme_bw() #🏷👏theme_bw()黑白主題\r figure\r"},
{"uri": "/blogR//econometrics/2_anova.html","title": "2. ANOVA",
	"tags": [],
	"description": "1_anova",
	"content": "anova 參考  repeated measure ANOVA stata more type I II anova vs regression  圖https://online.stat.psu.edu/stat415/lesson/13/13.2\r $$ SS(TO)=\\sum\\limits_{i=1}^{m}\\sum\\limits_{j=1}^{n_i} (X_{ij}-\\bar{X}_{..})^2 $$ $$ SS(B)=\\sum\\limits_{i=1}^{m}\\sum\\limits_{j=1}^{n_i} (\\bar{X}_{i.}-\\bar{X}_{..})^2 $$ $$ SS(E)=\\sum\\limits_{i=1}^{m}\\sum\\limits_{j=1}^{n_i} (X_{ij}-\\bar{X}_{i.})^2 $$ $$ SS(TO) = SS(B) +SS(E) $$ SS(B),SS(Between) : Treatment sum of squares\n範例 stata . use https://www3.nd.edu/~rwilliam/statafiles/oneway.dta\r(One-Way Analysis of Variance)\r. summarize\rVariable | Obs Mean Std. Dev. Min Max\r-------------+---------------------------------------------------------\rscore | 20 10.35 2.254236 6 14\rprogram | 20 2.5 1.147079 1 4\r\r只有ANOVA表\r. oneway score program\rAnalysis of Variance\rSource SS df MS F Prob \u0026gt; F\r------------------------------------------------------------------------\rBetween groups 54.95 3 18.3166667 7.04 0.0031\rWithin groups 41.6 16 2.6\r------------------------------------------------------------------------\rTotal 96.55 19 5.08157895\rBartlett\u0026#39;s test for equal variances: chi2(3) = 0.5685 Prob\u0026gt;chi2 = 0.904\r\r各組列表，ANOVA表\r. oneway score program,t //\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026#34;codenote nopre\u0026#34;\u0026gt;🏷\u0026lt;span class=\u0026#34;tooltiptext\u0026#34; \u0026gt;👏選項t: 分組比對\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r| Summary of score\rprogram | Mean Std. Dev. Freq.\r------------\u0026#43;------------------------------------\r1 | 11.8 1.9235384 5\r2 | 8.8 1.6431677 5\r3 | 12.2 1.3038405 5\r4 | 8.6 1.5165751 5\r------------\u0026#43;------------------------------------\rTotal | 10.35 2.2542358 20\rAnalysis of Variance\rSource SS df MS F Prob \u0026gt; F\r------------------------------------------------------------------------\rBetween groups 54.95 3 18.3166667 7.04 0.0031\rWithin groups 41.6 16 2.6\r------------------------------------------------------------------------\rTotal 96.55 19 5.08157895\rBartlett\u0026#39;s test for equal variances: chi2(3) = 0.5685 Prob\u0026gt;chi2 = 0.904\r\r各組列表，ANOVA表，paired t test\r. oneway score program, t bon sid sch | Summary of score\rprogram | Mean Std. Dev. Freq.\r------------\u0026#43;------------------------------------\r1 | 11.8 1.9235384 5\r2 | 8.8 1.6431677 5\r3 | 12.2 1.3038405 5\r4 | 8.6 1.5165751 5\r------------\u0026#43;------------------------------------\rTotal | 10.35 2.2542358 20\rAnalysis of Variance\rSource SS df MS F Prob \u0026gt; F\r------------------------------------------------------------------------\rBetween groups 54.95 3 18.3166667 7.04 0.0031\rWithin groups 41.6 16 2.6\r------------------------------------------------------------------------\rTotal 96.55 19 5.08157895\rBartlett\u0026#39;s test for equal variances: chi2(3) = 0.5685 Prob\u0026gt;chi2 = 0.904\rComparison of score by program\r(Bonferroni)\rRow Mean-|\rCol Mean | 1 2 3\r---------\u0026#43;---------------------------------\r2 | -3\r| 0.057\r|\r3 | .4 3.4\r| 1.000 0.025\r|\r4 | -3.2 -.2 -3.6\r| 0.038 1.000 0.017\rComparison of score by program\r(Scheffe)\rRow Mean-|\rCol Mean | 1 2 3\r---------\u0026#43;---------------------------------\r2 | -3\r| 0.068\r|\r3 | .4 3.4\r| 0.984 0.034\r|\r4 | -3.2 -.2 -3.6\r| 0.048 0.998 0.024\rComparison of score by program\r(Sidak)\rRow Mean-|\rCol Mean | 1 2 3\r---------\u0026#43;---------------------------------\r2 | -3\r| 0.056\r|\r3 | .4 3.4\r| 0.999 0.025\r|\r4 | -3.2 -.2 -3.6\r| 0.038 1.000 0.017\r 表中的的significant F 7.04 說組平均不是全部相等,也就是至少有一個treatment effect 異於0。\n上面的指令\noneway score program\roneway score program,t //🏷👏選項t: 分組比對\roneway score program, t bon sid sch //🏷👏Bonferroni,Scheffe, and Sidak multiple comparison tests 可以用來判定這個不同來自於哪裡(成對比較各組, J*[J-1]/2 = 6次比較)。\r Note that these tests tend to be conservative: they reduce the likelihood that you will reject the null when the null is true (i.e. they reduce the likelihood of Type I error.) However, they increase the likelihood of not rejecting the null when the null is false (i.e. they make Type II error more likely.)\r\r\r\r這裡看一下pairedwise 的比對結果\r. oneway score program, t bon sid sch | Summary of score #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏來自t選項\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rprogram | Mean Std. Dev. Freq.\r------------+------------------------------------\r1 | 11.8 1.9235384 5\r2 | 8.8 1.6431677 5\r3 | 12.2 1.3038405 5\r4 | 8.6 1.5165751 5\r------------+------------------------------------\rTotal | 10.35 2.2542358 20\rAnalysis of Variance #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏選項: bon sid sch\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rSource SS df MS F Prob \u0026gt; F\r------------------------------------------------------------------------\rBetween groups 54.95 3 18.3166667 7.04 0.0031\rWithin groups 41.6 16 2.6\r------------------------------------------------------------------------\rTotal 96.55 19 5.08157895 #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏R的aov()沒有這行,參考\u0026lt;a href=\u0026quot;#addtotal\u0026quot;\u0026gt;練習\u0026lt;/a\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rBartlett's test for equal variances: chi2(3) = 0.5685 Prob\u0026gt;chi2 = 0.904\rComparison of score by program\r(Bonferroni)\rRow Mean-|\rCol Mean | 1 2 3\r---------+---------------------------------\r2 | -3 \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏參看上表可以知道(8.8- 11.8 )\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r| 0.057\r|\r3 | .4 3.4\r| 1.000 0.025\r|\r4 | -3.2 -.2 -3.6\r| 0.038 1.000 0.017\rComparison of score by program\r(Scheffe)\rRow Mean-|\rCol Mean | 1 2 3\r---------+---------------------------------\r2 | -3\r| 0.068\r|\r3 | .4 3.4\r| 0.984 0.034\r|\r4 | -3.2 -.2 -3.6\r| 0.048 0.998 0.024\rComparison of score by program\r(Sidak)\rRow Mean-|\rCol Mean | 1 2 3\r---------+---------------------------------\r2 | -3\r| 0.056\r|\r3 | .4 3.4\r| 0.999 0.025\r|\r4 | -3.2 -.2 -3.6\r| 0.038 1.000 0.017\r 上面的幾種驗證方式基本上都同意 1 vs 3, 2 vs 4 僅僅有些微差異,而1 vs 4, 2 vs 3, 3 vs 4 有顯著差異; 1 vs 2 差點就顯著。\n\nr 對照上面的stata結果\n  ANOVA\nlibrary(haven)\rurl \u0026lt;- \u0026quot;https://www3.nd.edu/~rwilliam/statafiles/oneway.dta\u0026quot;\rdata.df \u0026lt;- read_dta(url)\rdata.df # \r展開\r# A tibble: 20 x 2\rscore program\r\u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r1 9 1\r2 12 1\r3 14 1\r4 11 1\r5 13 1\r6 10 2\r7 6 2\r8 9 2\r9 9 2\r10 10 2\r11 12 3\r12 14 3\r13 11 3\r14 13 3\r15 11 3\r16 9 4\r17 8 4\r18 11 4\r19 7 4\r20 8 4\r \rdata.df$program \u0026lt;-factor(data.df$program) #👺 🏷👏如果沒有這個轉換,算出來是錯的,利用str(data)檢查每個欄位的型態\rANOVAresults \u0026lt;- aov(score~program,data.df) # 🏷👏\rsummary(ANOVAresults)\rDf Sum Sq Mean Sq F value Pr(\u0026gt;F) program 3 54.95 18.32 7.045 0.00311 **\rResiduals 16 41.60 2.60 ---\rSignif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r   pairwised t test\npairwise.t.test(data.df$score,data.df$program,p.adjust.method = \u0026quot;bonf\u0026quot;)\rPairwise comparisons using t tests with pooled SD data: data.df$score and data.df$program 1 2 3 2 0.057 - - 3 1.000 0.025 - 4 0.038 1.000 0.017\rP value adjustment method: bonferroni    上面函數的p.adjust.methods可以由下面的指令知道\np.adjust.methods\r[1] \u0026quot;holm\u0026quot; \u0026quot;hochberg\u0026quot; \u0026quot;hommel\u0026quot; \u0026quot;bonferroni\u0026quot; \u0026quot;BH\u0026quot; [6] \u0026quot;BY\u0026quot; \u0026quot;fdr\u0026quot; \u0026quot;none\u0026quot;    圖\nplot(data.df$score~data.df$program)\r figure\r plot(ANOVAresults)\r figure\rfigure\rfigure\rfigure\r\n  ❓練習: 利用t.test()做出如上表的結果,就是1對2組,1對3組,1對4組做t-test 🏷👏利用t-test 對每組做,這裡只是練習用,在統計應用上過時了。提示\r pairwise.t.test(data.df$score, data.df$program, p.adjust.method=\u0026quot;none\u0026quot;, paired=T, pool.sd=FALSE) # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏pool.sd =F，否則答案差很多\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rPairwise comparisons using paired t tests data: data.df$score and data.df$program 1 2 3 2 0.070 - - 3 0.757 0.053 - 4 0.020 0.838 0.033\rP value adjustment method: none t.test(score~program,data=data.df[data.df$program %in% c(1,2),],paired=T)\rPaired t-test\rdata: score by program\rt = 2.4495, df = 4, p-value = 0.07048\ralternative hypothesis: true difference in means is not equal to 0\r95 percent confidence interval:\r-0.4004369 6.4004369\rsample estimates:\rmean of the differences 3 t.test(score~program,data=data.df[data.df$program %in% c(1,3),],paired=T)\rPaired t-test\rdata: score by program\rt = -0.33104, df = 4, p-value = 0.7572\ralternative hypothesis: true difference in means is not equal to 0\r95 percent confidence interval:\r-3.754791 2.954791\rsample estimates:\rmean of the differences -0.4 t.test(score~program,data=data.df[data.df$program %in% c(1,4),],paired=T)\rPaired t-test\rdata: score by program\rt = 3.7199, df = 4, p-value = 0.02048\ralternative hypothesis: true difference in means is not equal to 0\r95 percent confidence interval:\r0.8116116 5.5883884\rsample estimates:\rmean of the differences 3.2 t.test(score~program,data=data.df[data.df$program %in% c(2,3),],paired=T)\rPaired t-test\rdata: score by program\rt = -2.7222, df = 4, p-value = 0.05287\ralternative hypothesis: true difference in means is not equal to 0\r95 percent confidence interval:\r-6.86777882 0.06777882\rsample estimates:\rmean of the differences -3.4 t.test(score~program,data=data.df[data.df$program %in% c(2,4),],paired=T)\rPaired t-test\rdata: score by program\rt = 0.21822, df = 4, p-value = 0.8379\ralternative hypothesis: true difference in means is not equal to 0\r95 percent confidence interval:\r-2.344654 2.744654\rsample estimates:\rmean of the differences 0.2 t.test(score~program,data=data.df[data.df$program %in% c(3,4),],paired=T)\rPaired t-test\rdata: score by program\rt = 3.2071, df = 4, p-value = 0.03268\ralternative hypothesis: true difference in means is not equal to 0\r95 percent confidence interval:\r0.4834481 6.7165519\rsample estimates:\rmean of the differences 3.6  ❓問題:如何用迴圈改進?\n\n❓問題:⛳  如何在結果中顯示問號那一行?\nDf Sum Sq Mean Sq F value Pr(\u0026gt;F) program 3 54.95 18.32 7.045 0.00311 **\rResiduals 16 41.60 2.60 Total 19 96.55 #❓\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;❓要加入這行\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt; ---\rSignif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r 提示\r anova.tab\u0026lt;-function(fm){\rtab\u0026lt;-summary(fm) #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏這是一個長度為1的list\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rk\u0026lt;-length(tab[[1]])-2 #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏長度為5(欄位數目),看相關註解\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rtemp\u0026lt;-c(sum(tab[[1]][,1]), sum(tab[[1]][,2]), rep(NA,k)) #\u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏有5個COLUMN,所以填把了3個NA\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rtab[[1]][\u0026quot;Total\u0026quot;,]\u0026lt;-temp # \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏加入新的ROW\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\rtab\r}\ranova.tab(ANOVAresults)\r 💡可以知道\n summary()是一個分配函數,實際執行的是summary.aov(),程式碼中產生的tab  tab: 是一個list tab[[1]]: 利用指令str(tab[[1]]結果顯示類別為 ‘anova’ and 'data.frame':\t2 obs. of 5 variables: length(tab[[1]]),為5,因為data.frame 實際上也是data.frame 類別。所以是變數(欄位)個數。    \n範例 -重複測量ANOVA 這個案例中,同樣一個個體在不同時間或情況的變數下，有著對應的測量值。(AKA within-subjects ANOVA or ANOVA with repeated measures)\n來源\nuse http://www.stata-press.com/data/r13/apple\rlist, abbrev(10) sepby(treatment)\rsummarize\ranova weight treatment\rregress\rregress,baselevels\r . use http://www.stata-press.com/data/r13/apple\r(Apple trees)\r. list, abbrev(10) sepby(treatment)\r+--------------------+\r| treatment weight |\r|--------------------|\r1. | 1 117.5 |\r2. | 1 113.8 |\r3. | 1 104.4 |\r|--------------------|\r4. | 2 48.9 |\r5. | 2 50.4 |\r6. | 2 58.9 |\r|--------------------|\r7. | 3 70.4 |\r8. | 3 86.9 |\r|--------------------|\r9. | 4 87.7 |\r10. | 4 67.3 |\r+--------------------+\r. summarize\rVariable | Obs Mean Std. Dev. Min Max\r-------------+---------------------------------------------------------\rtreatment | 10 2.3 1.159502 1 4\rweight | 10 80.62 25.36212 48.9 117.5\r. anova weight treatment\rNumber of obs = 10 R-squared = 0.9147\rRoot MSE = 9.07002 Adj R-squared = 0.8721\rSource | Partial SS df MS F Prob\u0026gt;F\r-----------+----------------------------------------------------\rModel | 5295.5443 3 1765.1814 21.46 0.0013\r|\rtreatment | 5295.5443 3 1765.1814 21.46 0.0013\r|\rResidual | 493.59167 6 82.265278 -----------+----------------------------------------------------\rTotal | 5789.136 9 643.23733 . regress\rSource | SS df MS Number of obs = 10\r-------------+---------------------------------- F(3, 6) = 21.46\rModel | 5295.54433 3 1765.18144 Prob \u0026gt; F = 0.0013\rResidual | 493.591667 6 82.2652778 R-squared = 0.9147\r-------------+---------------------------------- Adj R-squared = 0.8721\rTotal | 5789.136 9 643.237333 Root MSE = 9.07\r------------------------------------------------------------------------------\rweight | Coef. Std. Err. t P\u0026gt;|t| [95% Conf. Interval]\r-------------+----------------------------------------------------------------\rtreatment |\r2 | -59.16667 7.405641 -7.99 0.000 -77.28762 -41.04572\r3 | -33.25 8.279758 -4.02 0.007 -53.50984 -12.99016\r4 | -34.4 8.279758 -4.15 0.006 -54.65984 -14.14016\r|\r_cons | 111.9 5.236579 21.37 0.000 99.08655 124.7134\r------------------------------------------------------------------------------\r. regress,baselevels\rSource | SS df MS Number of obs = 10\r-------------+---------------------------------- F(3, 6) = 21.46\rModel | 5295.54433 3 1765.18144 Prob \u0026gt; F = 0.0013\rResidual | 493.591667 6 82.2652778 R-squared = 0.9147\r-------------+---------------------------------- Adj R-squared = 0.8721\rTotal | 5789.136 9 643.237333 Root MSE = 9.07\r------------------------------------------------------------------------------\rweight | Coef. Std. Err. t P\u0026gt;|t| [95% Conf. Interval]\r-------------+----------------------------------------------------------------\rtreatment |\r1 | 0 (base)\r2 | -59.16667 7.405641 -7.99 0.000 -77.28762 -41.04572\r3 | -33.25 8.279758 -4.02 0.007 -53.50984 -12.99016\r4 | -34.4 8.279758 -4.15 0.006 -54.65984 -14.14016\r|\r_cons | 111.9 5.236579 21.37 0.000 99.08655 124.7134\r------------------------------------------------------------------------------\r  repeated measure  use http://www.stata-press.com/data/r14/t43\rhugocmd expand,hbody(title=資料)\rtabdisp person drug, cellvar(score)\rlist, sepby(person)\r// reshape long drug, i(person) j(dr) //寬轉長\rhugocmd expand,end\ranova score person drug, repeated(drug)\r . use http://www.stata-press.com/data/r14/t43\r(T4.3 -- Winer, Brown, Michels)\r\r資料\r. tabdisp person drug, cellvar(score)\r----------------------------------\r| drug person | 1 2 3 4\r----------\u0026#43;-----------------------\r1 | 30 28 16 34\r2 | 14 18 10 22\r3 | 24 20 18 30\r4 | 38 34 20 44\r5 | 26 28 14 30\r----------------------------------\r. list, sepby(person)\r\u0026#43;-----------------------\u0026#43;\r| person drug score |\r|-----------------------|\r1. | 1 1 30 |\r2. | 1 2 28 |\r3. | 1 3 16 |\r4. | 1 4 34 |\r|-----------------------|\r5. | 2 1 14 |\r6. | 2 2 18 |\r7. | 2 3 10 |\r8. | 2 4 22 |\r|-----------------------|\r9. | 3 1 24 |\r10. | 3 2 20 |\r11. | 3 3 18 |\r12. | 3 4 30 |\r|-----------------------|\r13. | 4 1 38 |\r14. | 4 2 34 |\r15. | 4 3 20 |\r16. | 4 4 44 |\r|-----------------------|\r17. | 5 1 26 |\r18. | 5 2 28 |\r19. | 5 3 14 |\r20. | 5 4 30 |\r\u0026#43;-----------------------\u0026#43;\r. // reshape long drug, i(person) j(dr) //寬轉長\r. anova score person drug, repeated(drug)\rNumber of obs = 20 R-squared = 0.9244\rRoot MSE = 3.06594 Adj R-squared = 0.8803\rSource | Partial SS df MS F Prob\u0026gt;F\r-----------+----------------------------------------------------\rModel | 1379 7 197 20.96 0.0000\r|\rperson | 680.8 4 170.2 18.11 0.0001\rdrug | 698.2 3 232.73333 24.76 0.0000\r|\rResidual | 112.8 12 9.4 -----------+----------------------------------------------------\rTotal | 1491.8 19 78.515789 Between-subjects error term: person\rLevels: 5 (4 df)\rLowest b.s.e. variable: person\rRepeated variable: drug\rHuynh-Feldt epsilon = 1.0789\r*Huynh-Feldt epsilon reset to 1.0000\rGreenhouse-Geisser epsilon = 0.6049\rBox's conservative epsilon = 0.3333\r------------ Prob \u0026gt; F ------------\rSource | df F Regular H-F G-G Box\r-----------+----------------------------------------------------\rdrug | 3 24.76 0.0000 0.0000 0.0006 0.0076\rResidual | 12\r----------------------------------------------------------------\r.   reshape  df\u0026lt;-as.data.frame(read_dta(\u0026quot;http://www.stata-press.com/data/r14/t43.dta\u0026quot;)) #🏷👏read_dta()讀進來的是tibble,直接使用reshape()轉換都是空值🤷‍♀️\rdfw\u0026lt;-reshape(df, idvar=\u0026quot;person\u0026quot;, timevar = \u0026quot;drug\u0026quot;, v.names=\u0026quot;score\u0026quot;, direction = \u0026quot;wide\u0026quot;)\rdfw\r  person score.1 score.2 score.3 score.4   1 1 30 28 16 34  5 2 14 18 10 22  9 3 24 20 18 30  13 4 38 34 20 44  17 5 26 28 14 30     df$drug\u0026lt;-factor(df$drug)\rdf$person\u0026lt;-factor(df$person)\rm2\u0026lt;-aov(score~drug+Error(person/drug),df) #🏷👏只能是長資料\rsummary(m2)\rError: person\rDf Sum Sq Mean Sq F value Pr(\u0026gt;F)\rResiduals 4 680.8 170.2 Error: person:drug\rDf Sum Sq Mean Sq F value Pr(\u0026gt;F) drug 3 698.2 232.7 24.76 1.99e-05 ***\rResiduals 12 112.8 9.4 ---\rSignif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r 對照\nm1\u0026lt;-aov(score~drug,df) summary(m1) # \r展開\r Df Sum Sq Mean Sq F value Pr(\u0026gt;F) drug 3 698.2 232.7 4.692 0.0155 *\rResiduals 16 793.6 49.6 ---\rSignif. codes: 0 \u0026#39;***\u0026#39; 0.001 \u0026#39;**\u0026#39; 0.01 \u0026#39;*\u0026#39; 0.05 \u0026#39;.\u0026#39; 0.1 \u0026#39; \u0026#39; 1\rm2\u0026lt;-aov(score~drug+Error(person),df)\rsummary(m2) # \r展開\rError: person\rDf Sum Sq Mean Sq F value Pr(\u0026gt;F)\rResiduals 4 680.8 170.2 Error: Within\rDf Sum Sq Mean Sq F value Pr(\u0026gt;F) drug 3 698.2 232.7 24.76 1.99e-05 ***\rResiduals 12 112.8 9.4 ---\rSignif. codes: 0 \u0026#39;***\u0026#39; 0.001 \u0026#39;**\u0026#39; 0.01 \u0026#39;*\u0026#39; 0.05 \u0026#39;.\u0026#39; 0.1 \u0026#39; \u0026#39; 1\rm3\u0026lt;-aov(score~drug+person,df)\rsummary(m2) # \r展開\rError: person\rDf Sum Sq Mean Sq F value Pr(\u0026gt;F)\rResiduals 4 680.8 170.2 Error: Within\rDf Sum Sq Mean Sq F value Pr(\u0026gt;F) drug 3 698.2 232.7 24.76 1.99e-05 ***\rResiduals 12 112.8 9.4 ---\rSignif. codes: 0 \u0026#39;***\u0026#39; 0.001 \u0026#39;**\u0026#39; 0.01 \u0026#39;*\u0026#39; 0.05 \u0026#39;.\u0026#39; 0.1 \u0026#39; \u0026#39; 1\r"},
{"uri": "/blogR//econometrics/a_a_%E8%B3%87%E6%96%99%E8%99%95%E7%90%86.html","title": "A.a 資料處理",
	"tags": [],
	"description": "data",
	"content": "需要 套件\ninstall.packages(\u0026quot;wooldridge\u0026quot;)\r# 讀取stata資料\r# haven,readr,rio\rinstall.packages(\u0026quot;haven\u0026quot;) # 取代套件 rio,readr\r# more\rinstall.packages(\u0026quot;WDI\u0026quot;)\rinstall.packages(\u0026quot;dplyr\u0026quot;)\rinstall.packages(\u0026quot;ggplot\u0026quot;)\r 練習資料的幾種載入資料的方法 data(affairs, package='wooldridge')\r# Version 2: Adjust path\raffairs2 \u0026lt;- haven::read_dta(\u0026quot;~/data/wooldridge/affairs.dta\u0026quot;)\r# Version 3: Change working directory\rsetwd(\u0026quot;~/data/wooldridge\u0026quot;)\raffairs3 \u0026lt;- haven::read_dta(\u0026quot;affairs.dta\u0026quot;)\r# Version 4: directly load from internet\raffairs4 \u0026lt;- haven::read_dta(\u0026quot;http://fmwww.bc.edu/ec-p/data/wooldridge/affairs.dta\u0026quot;)\r 以套件載入為例\ndata(affairs, package='wooldridge')\r# 計算平均\rmean(affairs$naffairs)\r#\u0026gt; [1] 1.455907\r 一般資料處理 - 讀、轉、算、寫 # Define one x vector for all:\ryear \u0026lt;- c(2008,2009,2010,2011,2012,2013)\r# Define a matrix of y values:\rproduct1\u0026lt;-c(0,3,6,9,7,8); product2\u0026lt;-c(1,2,3,5,9,6); product3\u0026lt;-c(2,4,4,2,3,2)\rsales_mat \u0026lt;- cbind(product1,product2,product3)\rrownames(sales_mat) \u0026lt;- year\r# The matrix looks like this:\rsales_mat\r#\u0026gt; product1 product2 product3\r#\u0026gt; 2008 0 1 2\r#\u0026gt; 2009 3 2 4\r#\u0026gt; 2010 6 3 4\r#\u0026gt; 2011 9 5 2\r#\u0026gt; 2012 7 9 3\r#\u0026gt; 2013 8 6 2\r# Create a data frame and display it:\rsales \u0026lt;- as.data.frame(sales_mat) # 🏷👏轉\rsales\r  product1 product2 product3   2008 0 1 2  2009 3 2 4  2010 6 3 4  2011 9 5 2  2012 7 9 3  2013 8 6 2     colMeans(sales) #🏷👏 算: 每個變數的平均\r#\u0026gt; product1 product2 product3 #\u0026gt; 5.500000 4.333333 2.833333\rsave(sales, file = \u0026quot;data/oursalesdata.RData\u0026quot;) # 🏷👏寫\rrm(sales) #清除\rexists(\u0026quot;sales\u0026quot;) # 工作區中是否仍然有這個變數\r#\u0026gt; [1] FALSE\rload(\u0026quot;data/oursalesdata.RData\u0026quot;) # 載入之前的工作集\r basic statistic 1 - pnorm(2,4,3) + pnorm(-2,4,3)\r#\u0026gt; [1] 0.7702576\r# Using the transformation:\rpnorm(2/3) - pnorm(-2/3)\r#\u0026gt; [1] 0.4950149\r# Working directly with the distribution of X:\rpnorm(6,4,3) - pnorm(2,4,3)\r#\u0026gt; [1] 0.4950149\r table # load data set\rdata(affairs, package='wooldridge')\r# Generate \u0026quot;Factors\u0026quot; to attach labels\rhaskids \u0026lt;- factor(affairs$kids,labels=c(\u0026quot;no\u0026quot;,\u0026quot;yes\u0026quot;))\rmlab \u0026lt;- c(\u0026quot;very unhappy\u0026quot;,\u0026quot;unhappy\u0026quot;,\u0026quot;average\u0026quot;,\u0026quot;happy\u0026quot;, \u0026quot;very happy\u0026quot;)\rmarriage \u0026lt;- factor(affairs$ratemarr, labels=mlab)\r# Frequencies for having kids:\rtable(haskids)\r#\u0026gt; haskids\r#\u0026gt; no yes #\u0026gt; 171 430\r# Marriage ratings (share):\rprop.table(table(marriage))\r#\u0026gt; marriage\r#\u0026gt; very unhappy unhappy average happy very happy #\u0026gt; 0.0266223 0.1098170 0.1547421 0.3227953 0.3860233\r# Contigency table: counts (display \u0026amp; store in var.)\r(countstab \u0026lt;- table(marriage,haskids))\r#\u0026gt; haskids\r#\u0026gt; marriage no yes\r#\u0026gt; very unhappy 3 13\r#\u0026gt; unhappy 8 58\r#\u0026gt; average 24 69\r#\u0026gt; happy 40 154\r#\u0026gt; very happy 96 136\r# Share within \u0026quot;marriage\u0026quot; (i.e. within a row):\rprop.table(countstab, margin=1)\r#\u0026gt; haskids\r#\u0026gt; marriage no yes\r#\u0026gt; very unhappy 0.1875000 0.8125000\r#\u0026gt; unhappy 0.1212121 0.8787879\r#\u0026gt; average 0.2580645 0.7419355\r#\u0026gt; happy 0.2061856 0.7938144\r#\u0026gt; very happy 0.4137931 0.5862069\r# Share within \u0026quot;haskids\u0026quot; (i.e. within a column):\rprop.table(countstab, margin=2)\r#\u0026gt; haskids\r#\u0026gt; marriage no yes\r#\u0026gt; very unhappy 0.01754386 0.03023256\r#\u0026gt; unhappy 0.04678363 0.13488372\r#\u0026gt; average 0.14035088 0.16046512\r#\u0026gt; happy 0.23391813 0.35813953\r#\u0026gt; very happy 0.56140351 0.31627907\r 練習 Wdi library(WDI)\rwdi_raw \u0026lt;- WDI(indicator=c(\u0026quot;SP.DYN.LE00.FE.IN\u0026quot;),\rstart = 1960, end = 2014) # 🏷WDI 是一個函數,wdi_raw是一個data.frame\r# 不要直接顯示所有資料,太長\rhead(wdi_raw,n=10)\r iso2c country SP.DYN.LE00.FE.IN year   ZH Africa Eastern and Southern 63.74479 2014  ZH Africa Eastern and Southern 63.01116 2013  ZH Africa Eastern and Southern 62.19697 2012  ZH Africa Eastern and Southern 61.31294 2011  ZH Africa Eastern and Southern 60.37721 2010  ZH Africa Eastern and Southern 59.40726 2009  ZH Africa Eastern and Southern 58.42882 2008  ZH Africa Eastern and Southern 57.47517 2007  ZH Africa Eastern and Southern 56.57331 2006  ZH Africa Eastern and Southern 55.75485 2005     #tail(wdi_raw)\r descriptive statistics data(ceosal1, package='wooldridge') # class(ceosal1) = data.frame\r# sample average:\rmean(ceosal1$salary)\r#\u0026gt; [1] 1281.12\r# sample median:\rmedian(ceosal1$salary)\r#\u0026gt; [1] 1039\r#standard deviation:\rsd(ceosal1$salary)\r#\u0026gt; [1] 1372.345\r# summary information:\rsummary(ceosal1$salary)\r#\u0026gt; Min. 1st Qu. Median Mean 3rd Qu. Max. #\u0026gt; 223 736 1039 1281 1407 14822\r# correlation with ROE:\rcor(ceosal1$salary, ceosal1$roe)\r#\u0026gt; [1] 0.1148417\r plot basic plot curve(dnorm(x,0,1),-10,10,lwd=1,lty=1)\rcurve(dnorm(x,0,2),-10,10,add=TRUE,lwd=1,lty=1) #🏷疊圖\rcurve(dnorm(x,0,3),-10,10,add=TRUE,lwd=1,lty=1)\r figure\r histogram data(ceosal1, package='wooldridge')\r# Extract ROE to single vector\rROE \u0026lt;- ceosal1$roe\r# Subfigure (a): histogram (counts)\rhist(ROE)\r figure\r # Subfigure (b): histogram (densities, explicit breaks)\rhist(ROE, breaks=c(0,5,10,20,30,60) )\r figure\r ggplot2 library(ggplot2)\rhead(mpg)\r#\u0026gt; # A tibble: 6 x 11\r#\u0026gt; manufacturer model displ year cyl trans drv cty hwy fl class #\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; #\u0026gt; 1 audi a4 1.8 1999 4 auto(l5) f 18 29 p compa~\r#\u0026gt; 2 audi a4 1.8 1999 4 manual(m5) f 21 29 p compa~\r#\u0026gt; 3 audi a4 2 2008 4 manual(m6) f 20 31 p compa~\r#\u0026gt; 4 audi a4 2 2008 4 auto(av) f 21 30 p compa~\r#\u0026gt; 5 audi a4 2.8 1999 6 auto(l5) f 16 26 p compa~\r#\u0026gt; 6 audi a4 2.8 1999 6 manual(m5) f 18 26 p compa~\rggplot(mpg, aes(displ, hwy)) + geom_point() +\rgeom_smooth()\r#\u0026gt; `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r figure\r"},
{"uri": "/blogR//econometrics/a_b_mpg%E7%82%BA%E4%BE%8B%E7%9A%84ggplot.html","title": "A.b mpg為例的ggplot",
	"tags": [],
	"description": "mpg",
	"content": "ggplot ex  參考   library(ggplot2)\rggplot(midwest, aes(x=area, y=poptotal)) + geom_point()\r figure\r ex library(ggplot2)\rex1 \u0026lt;- ggplot(mtcars)\rex1 \u0026lt;- ex1 + aes(x = mpg, y = wt)\rex1 \u0026lt;- ex1 + geom_point()\rsummary(ex1)  #\u0026gt; data: mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb [32x11]\r#\u0026gt; mapping: x = ~mpg, y = ~wt\r#\u0026gt; faceting: \u0026lt;ggproto object: Class FacetNull, Facet, gg\u0026gt;\r#\u0026gt; compute_layout: function\r#\u0026gt; draw_back: function\r#\u0026gt; draw_front: function\r#\u0026gt; draw_labels: function\r#\u0026gt; draw_panels: function\r#\u0026gt; finish_data: function\r#\u0026gt; init_scales: function\r#\u0026gt; map_data: function\r#\u0026gt; params: list\r#\u0026gt; setup_data: function\r#\u0026gt; setup_params: function\r#\u0026gt; shrink: TRUE\r#\u0026gt; train_scales: function\r#\u0026gt; vars: function\r#\u0026gt; super: \u0026lt;ggproto object: Class FacetNull, Facet, gg\u0026gt;\r#\u0026gt; -----------------------------------\r#\u0026gt; geom_point: na.rm = FALSE\r#\u0026gt; stat_identity: na.rm = FALSE\r#\u0026gt; position_identity\r ex1 # 🏷這裡才有圖出來\r figure\r 部分修改: 只改變顏色\nex1 + geom_point(aes(colour = factor(cyl))) #🏷用汽缸倒顏色\r figure\r 部分修改: 只改變Y軸\nex1 + geom_point(aes(y = disp))\r figure\r 刪除\naes(y = NULL)\r #\u0026gt; Aesthetic mapping: #\u0026gt; * `y` -\u0026gt; NULL\r ex1\r figure\r mpg library(ggplot2)\r# First rows of data of data set mpg:\rhead(mpg)\r manufacturer model displ year cyl trans drv cty hwy fl class   audi a4 1.8 1999 4 auto(l5) f 18 29 p compact  audi a4 1.8 1999 4 manual(m5) f 21 29 p compact  audi a4 2.0 2008 4 manual(m6) f 20 31 p compact  audi a4 2.0 2008 4 auto(av) f 21 30 p compact  audi a4 2.8 1999 6 auto(l5) f 16 26 p compact  audi a4 2.8 1999 6 manual(m5) f 18 26 p compact     ggplot() + geom_point( data=mpg, mapping=aes(x=displ, y=hwy) )\r figure\r ggplot(mpg, aes(displ, hwy)) + geom_point() +\rgeom_smooth()\r #\u0026gt; `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r figure\r ggplot(mpg, aes(displ, hwy)) + geom_point(color=gray(0.5)) +\rgeom_smooth(color=\u0026quot;black\u0026quot;)\r #\u0026gt; `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r figure\r ggplot(mpg, aes(displ, hwy)) + geom_point( aes(color=class) ) +\rgeom_smooth(color=\u0026quot;black\u0026quot;) +\rscale_color_grey()\r #\u0026gt; `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r figure\r ggplot(mpg, aes(displ, hwy)) + geom_point( aes(color=class, shape=class) ) +\rgeom_smooth(color=\u0026quot;black\u0026quot;) +\rscale_color_grey() +\rscale_shape_manual(values=1:7)\r #\u0026gt; `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r figure\r ggplot(mpg, aes(displ, hwy, color=class, shape=class)) + geom_point() +\rgeom_smooth(se=FALSE) +\rscale_color_grey() +\rscale_shape_manual(values=1:7)\r #\u0026gt; `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r #\u0026gt; Warning in simpleLoess(y, x, w, span, degree = degree, parametric =\r#\u0026gt; parametric, : span too small. fewer data values than degrees of freedom.\r #\u0026gt; Warning in simpleLoess(y, x, w, span, degree = degree, parametric =\r#\u0026gt; parametric, : pseudoinverse used at 5.6935\r #\u0026gt; Warning in simpleLoess(y, x, w, span, degree = degree, parametric =\r#\u0026gt; parametric, : neighborhood radius 0.5065\r #\u0026gt; Warning in simpleLoess(y, x, w, span, degree = degree, parametric =\r#\u0026gt; parametric, : reciprocal condition number 0\r #\u0026gt; Warning in simpleLoess(y, x, w, span, degree = degree, parametric =\r#\u0026gt; parametric, : There are other near singularities as well. 0.65044\r #\u0026gt; Warning in simpleLoess(y, x, w, span, degree = degree, parametric =\r#\u0026gt; parametric, : pseudoinverse used at 4.008\r #\u0026gt; Warning in simpleLoess(y, x, w, span, degree = degree, parametric =\r#\u0026gt; parametric, : neighborhood radius 0.708\r #\u0026gt; Warning in simpleLoess(y, x, w, span, degree = degree, parametric =\r#\u0026gt; parametric, : reciprocal condition number 0\r #\u0026gt; Warning in simpleLoess(y, x, w, span, degree = degree, parametric =\r#\u0026gt; parametric, : There are other near singularities as well. 0.25\r figure\r"},
{"uri": "/blogR//econometrics/lmm.html","title": "lmm",
	"tags": [],
	"description": "lmm",
	"content": " stata R  Formula 大致上的公式設定形式都是 y ~ terms。 而對於 linear mixed-effects models, 公式型態為 $$ y ~ fixed + (random_1|grouping_1) + ... + (random_R|grouping_R) $$, 其中fixed, random分別包含 fixed-effects 和 random-effects terms.\nWilkinson notation:　假設\n DV, y IV, \\( X_j \\), which can be continuous or grouping variables 分組變數, \\(g_1, g_2, ..., g_R\\),  則 \\( y \\sim fixed + (random_1|g_1) + ... + (random_R|g_R) \\), 其中fixed對應到 fixed-effects design matrix X, random1 則是 random-effects design matrix Z1 對應到分組變數 g1\nWilkinson notation describes the factors present in models. The notation relates to factors present in models, not to the multipliers (coefficients) of those factors. Wilkinson Notation Factors in Standard Notation   1 Constant (intercept) term  X^k, where k is a positive integer X, X2, ..., Xk  X1 + X2 X1, X2  X1*X2 X1, X2, X1.*X2 (elementwise multiplication of X1 and X2)  X1:X2 X1.*X2 only  - X2 Do not include X2  X1*X2 + X3 X1, X2, X3, X1*X2  X1 + X2 + X3 + X1:X2 X1, X2, X3, X1*X2  X1X2X3 - X1:X2:X3 X1, X2, X3, X1X2, X1X3, X2*X3  X1*(X2 + X3) X1, X2, X3, X1X2, X1X3    \nFormula Description   'y ~ X1 + X2' Fixed effects for the intercept, X1 and X2. This is equivalent to 'y ~ 1 + X1 + X2'.  'y ~ -1 + X1 + X2' No intercept and fixed effects for X1 and X2. The implicit intercept term is suppressed by including -1.  'y ~ 1 + (1 | g1)' Fixed effects for the intercept plus random effect for the intercept for each level of the grouping variable g1.  'y ~ X1 + (1 | g1)' Random intercept model with a fixed slope.  'y ~ X1 + (X1 | g1)' Random intercept and slope, with possible correlation between them. This is equivalent to 'y ~ 1 + X1 + (1 + X1  'y ~ X1 + (1 | g1) + (-1 + X1 | g1)' Independent random effects terms for intercept and slope.  'y ~ 1 + (1 | g1) + (1 | g2) + (1 | g1:g2)' Random intercept model with independent main effects for g1 and g2, plus an independent interaction effect.     R library(dplyr)\r#\u0026gt; #\u0026gt; 載入套件：'dplyr'\r#\u0026gt; 下列物件被遮斷自 'package:stats':\r#\u0026gt; #\u0026gt; filter, lag\r#\u0026gt; 下列物件被遮斷自 'package:base':\r#\u0026gt; #\u0026gt; intersect, setdiff, setequal, union\rn.groups \u0026lt;- 4 # number of groups\rn.repeats \u0026lt;- 2 # samples per group\rgroups \u0026lt;- rep(1:n.groups, each=n.repeats) %\u0026gt;% as.factor\rgroups #\r展開\r#\u0026gt; [1] 1 1 2 2 3 3 4 4\r#\u0026gt; Levels: 1 2 3 4\rn \u0026lt;- length(groups)\rz0 \u0026lt;- rnorm(n.groups, 0, 10) (z \u0026lt;- z0[as.numeric(groups)]) # generate and inspect random group effects\r#\u0026gt; [1] -8.05104362 -8.05104362 0.07557837 0.07557837 -1.74865382 -1.74865382\r#\u0026gt; [7] 0.09171603 0.09171603\r epsilon \u0026lt;- rnorm(n,0,1) # generate measurement error\rbeta0 \u0026lt;- 2 # this is the actual parameter of interest! The global mean.\ry \u0026lt;- beta0 + z + epsilon # sample from an LMM\r library(lme4)\r#\u0026gt; 載入需要的套件：Matrix\r# fit a linear model assuming independence\rlm.5 \u0026lt;- lm(y~1) # fit a mixed-model that deals with the group dependence\rlibrary(lme4)\rlme.5 \u0026lt;- lmer(y~1|groups)  The summary of the linear model\nsummary.lm.5 \u0026lt;- summary(lm.5)\rsummary.lm.5\r#\u0026gt; #\u0026gt; Call:\r#\u0026gt; lm(formula = y ~ 1)\r#\u0026gt; #\u0026gt; Residuals:\r#\u0026gt; Min 1Q Median 3Q Max #\u0026gt; -5.351 -2.579 1.389 2.388 4.691 #\u0026gt; #\u0026gt; Coefficients:\r#\u0026gt; Estimate Std. Error t value Pr(\u0026gt;|t|)\r#\u0026gt; (Intercept) -0.5387 1.3134 -0.41 0.694\r#\u0026gt; #\u0026gt; Residual standard error: 3.715 on 7 degrees of freedom\r The summary of the LMM\nsummary.lme.5 \u0026lt;- summary(lme.5)\rsummary.lme.5\r#\u0026gt; Linear mixed model fit by REML ['lmerMod']\r#\u0026gt; Formula: y ~ 1 | groups\r#\u0026gt; #\u0026gt; REML criterion at convergence: 34.1\r#\u0026gt; #\u0026gt; Scaled residuals: #\u0026gt; Min 1Q Median 3Q Max #\u0026gt; -1.0874 -0.3856 -0.1688 0.5091 1.0596 #\u0026gt; #\u0026gt; Random effects:\r#\u0026gt; Groups Name Variance Std.Dev.\r#\u0026gt; groups (Intercept) 14.220 3.771 #\u0026gt; Residual 1.613 1.270 #\u0026gt; Number of obs: 8, groups: groups, 4\r#\u0026gt; #\u0026gt; Fixed effects:\r#\u0026gt; Estimate Std. Error t value\r#\u0026gt; (Intercept) -0.5387 1.9382 -0.278\r ex1  test  d=read.delim(\u0026quot;//Antqueen/d/Academic2/統計/lecture/dnett/s511/SeedlingDryWeight2.txt\u0026quot;)\rstr(d)\r#\u0026gt; 'data.frame':\t56 obs. of 4 variables:\r#\u0026gt; $ Genotype : chr \u0026quot;A\u0026quot; \u0026quot;A\u0026quot; \u0026quot;A\u0026quot; \u0026quot;A\u0026quot; ...\r#\u0026gt; $ Tray : int 1 1 1 1 1 2 2 2 2 2 ...\r#\u0026gt; $ Seedling : int 1 2 3 4 5 1 2 3 4 5 ...\r#\u0026gt; $ SeedlingWeight: int 8 9 11 12 10 17 17 16 15 19 ...\rd #\r \r展開\rGenotype Tray Seedling SeedlingWeight   A 1 1 8  A 1 2 9  A 1 3 11  A 1 4 12  A 1 5 10  A 2 1 17  A 2 2 17  A 2 3 16  A 2 4 15  A 2 5 19  A 2 6 18  A 2 7 18  A 2 8 18  A 2 9 24  A 3 1 12  A 3 2 12  A 3 3 16  A 3 4 15  A 3 5 15  A 3 6 14  A 4 1 17  A 4 2 20  A 4 3 20  A 4 4 19  A 4 5 19  A 4 6 18  A 4 7 20  A 4 8 19  A 4 9 19  B 5 1 9  B 5 2 12  B 5 3 13  B 5 4 16  B 5 5 14  B 5 6 14  B 6 1 10  B 6 2 10  B 6 3 9  B 6 4 8  B 6 5 13  B 6 6 9  B 6 7 11  B 7 1 12  B 7 2 16  B 7 3 17  B 7 4 15  B 7 5 15  B 7 6 15  B 8 1 9  B 8 2 6  B 8 3 8  B 8 4 8  B 8 5 13  B 8 6 9  B 8 7 9  B 8 8 10    \r X=cbind(1,d[,1]==\u0026quot;A\u0026quot;,d[,1]==\u0026quot;B\u0026quot;)\rX #🏷👏分別對A,B產生類別(問題是這樣要怎麼估計?) #\r展開\r#\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 1 1 0\r#\u0026gt; [2,] 1 1 0\r#\u0026gt; [3,] 1 1 0\r#\u0026gt; [4,] 1 1 0\r#\u0026gt; [5,] 1 1 0\r#\u0026gt; [6,] 1 1 0\r#\u0026gt; [7,] 1 1 0\r#\u0026gt; [8,] 1 1 0\r#\u0026gt; [9,] 1 1 0\r#\u0026gt; [10,] 1 1 0\r#\u0026gt; [11,] 1 1 0\r#\u0026gt; [12,] 1 1 0\r#\u0026gt; [13,] 1 1 0\r#\u0026gt; [14,] 1 1 0\r#\u0026gt; [15,] 1 1 0\r#\u0026gt; [16,] 1 1 0\r#\u0026gt; [17,] 1 1 0\r#\u0026gt; [18,] 1 1 0\r#\u0026gt; [19,] 1 1 0\r#\u0026gt; [20,] 1 1 0\r#\u0026gt; [21,] 1 1 0\r#\u0026gt; [22,] 1 1 0\r#\u0026gt; [23,] 1 1 0\r#\u0026gt; [24,] 1 1 0\r#\u0026gt; [25,] 1 1 0\r#\u0026gt; [26,] 1 1 0\r#\u0026gt; [27,] 1 1 0\r#\u0026gt; [28,] 1 1 0\r#\u0026gt; [29,] 1 1 0\r#\u0026gt; [30,] 1 0 1\r#\u0026gt; [31,] 1 0 1\r#\u0026gt; [32,] 1 0 1\r#\u0026gt; [33,] 1 0 1\r#\u0026gt; [34,] 1 0 1\r#\u0026gt; [35,] 1 0 1\r#\u0026gt; [36,] 1 0 1\r#\u0026gt; [37,] 1 0 1\r#\u0026gt; [38,] 1 0 1\r#\u0026gt; [39,] 1 0 1\r#\u0026gt; [40,] 1 0 1\r#\u0026gt; [41,] 1 0 1\r#\u0026gt; [42,] 1 0 1\r#\u0026gt; [43,] 1 0 1\r#\u0026gt; [44,] 1 0 1\r#\u0026gt; [45,] 1 0 1\r#\u0026gt; [46,] 1 0 1\r#\u0026gt; [47,] 1 0 1\r#\u0026gt; [48,] 1 0 1\r#\u0026gt; [49,] 1 0 1\r#\u0026gt; [50,] 1 0 1\r#\u0026gt; [51,] 1 0 1\r#\u0026gt; [52,] 1 0 1\r#\u0026gt; [53,] 1 0 1\r#\u0026gt; [54,] 1 0 1\r#\u0026gt; [55,] 1 0 1\r#\u0026gt; [56,] 1 0 1\r 這裡用最大蓋似法(ML)\n#d=read.delim(\u0026quot;//Antqueen/d/Academic2/統計/lecture/dnett/s511/SeedlingDryWeight2.txt\u0026quot;)\rplot(d[,2],d[,4]+rnorm(56,0,.2),\rxlab=\u0026quot;Tray\u0026quot;,ylab=\u0026quot;Seedling Dry Weight\u0026quot;,\rcol=2*(1+(d[,1]==\u0026quot;B\u0026quot;)),pch=\u0026quot;-\u0026quot;,cex=2)\rlegend(\u0026quot;topright\u0026quot;,c(\u0026quot;Genotype A\u0026quot;,\u0026quot;Genotype B\u0026quot;),fill=c(2,4),border=c(2,4))\r figure\r library(nlme)\r#\u0026gt; #\u0026gt; 載入套件：'nlme'\r#\u0026gt; 下列物件被遮斷自 'package:lme4':\r#\u0026gt; #\u0026gt; lmList\r#\u0026gt; 下列物件被遮斷自 'package:dplyr':\r#\u0026gt; #\u0026gt; collapse\rlme(SeedlingWeight~Genotype,random=~1|Tray,method=\u0026quot;ML\u0026quot;,data=d)\r#\u0026gt; Linear mixed-effects model fit by maximum likelihood\r#\u0026gt; Data: d #\u0026gt; Log-likelihood: -126.3709\r#\u0026gt; Fixed: SeedlingWeight ~ Genotype #\u0026gt; (Intercept) GenotypeB #\u0026gt; 15.301832 -3.567017 #\u0026gt; #\u0026gt; Random effects:\r#\u0026gt; Formula: ~1 | Tray\r#\u0026gt; (Intercept) Residual\r#\u0026gt; StdDev: 2.932294 1.88247\r#\u0026gt; #\u0026gt; Number of Observations: 56\r#\u0026gt; Number of Groups: 8\rlibrary(lme4)\rlmer(SeedlingWeight~Genotype+(1|Tray),REML=F,data=d)\r#\u0026gt; Linear mixed model fit by maximum likelihood ['lmerMod']\r#\u0026gt; Formula: SeedlingWeight ~ Genotype + (1 | Tray)\r#\u0026gt; Data: d\r#\u0026gt; AIC BIC logLik deviance df.resid #\u0026gt; 260.7418 268.8432 -126.3709 252.7418 52 #\u0026gt; Random effects:\r#\u0026gt; Groups Name Std.Dev.\r#\u0026gt; Tray (Intercept) 2.932 #\u0026gt; Residual 1.882 #\u0026gt; Number of obs: 56, groups: Tray, 8\r#\u0026gt; Fixed Effects:\r#\u0026gt; (Intercept) GenotypeB #\u0026gt; 15.302 -3.567\r ML VS REML\n#d=read.delim(\u0026quot;//Antqueen/d/Academic2/統計/lecture/dnett/s511/SeedlingDryWeight2.txt\u0026quot;)\rplot(d[,2],d[,4]+rnorm(56,0,.2),\rxlab=\u0026quot;Tray\u0026quot;,ylab=\u0026quot;Seedling Dry Weight\u0026quot;,\rcol=2*(1+(d[,1]==\u0026quot;B\u0026quot;)),pch=\u0026quot;-\u0026quot;,cex=2)\rlegend(\u0026quot;topright\u0026quot;,c(\u0026quot;Genotype A\u0026quot;,\u0026quot;Genotype B\u0026quot;),fill=c(2,4),border=c(2,4))\r figure\r # ML\rlme(SeedlingWeight~Genotype,random=~1|Tray,method=\u0026quot;ML\u0026quot;,data=d)\r#\u0026gt; Linear mixed-effects model fit by maximum likelihood\r#\u0026gt; Data: d #\u0026gt; Log-likelihood: -126.3709\r#\u0026gt; Fixed: SeedlingWeight ~ Genotype #\u0026gt; (Intercept) GenotypeB #\u0026gt; 15.301832 -3.567017 #\u0026gt; #\u0026gt; Random effects:\r#\u0026gt; Formula: ~1 | Tray\r#\u0026gt; (Intercept) Residual\r#\u0026gt; StdDev: 2.932294 1.88247\r#\u0026gt; #\u0026gt; Number of Observations: 56\r#\u0026gt; Number of Groups: 8\rlmer(SeedlingWeight~Genotype+(1|Tray),REML=F,data=d)\r#\u0026gt; Linear mixed model fit by maximum likelihood ['lmerMod']\r#\u0026gt; Formula: SeedlingWeight ~ Genotype + (1 | Tray)\r#\u0026gt; Data: d\r#\u0026gt; AIC BIC logLik deviance df.resid #\u0026gt; 260.7418 268.8432 -126.3709 252.7418 52 #\u0026gt; Random effects:\r#\u0026gt; Groups Name Std.Dev.\r#\u0026gt; Tray (Intercept) 2.932 #\u0026gt; Residual 1.882 #\u0026gt; Number of obs: 56, groups: Tray, 8\r#\u0026gt; Fixed Effects:\r#\u0026gt; (Intercept) GenotypeB #\u0026gt; 15.302 -3.567\r#REML is the default method for estimating variance components.\rlme(SeedlingWeight~Genotype,random=~1|Tray,data=d)\r#\u0026gt; Linear mixed-effects model fit by REML\r#\u0026gt; Data: d #\u0026gt; Log-restricted-likelihood: -123.5705\r#\u0026gt; Fixed: SeedlingWeight ~ Genotype #\u0026gt; (Intercept) GenotypeB #\u0026gt; 15.288838 -3.550201 #\u0026gt; #\u0026gt; Random effects:\r#\u0026gt; Formula: ~1 | Tray\r#\u0026gt; (Intercept) Residual\r#\u0026gt; StdDev: 3.414856 1.88223\r#\u0026gt; #\u0026gt; Number of Observations: 56\r#\u0026gt; Number of Groups: 8\rlmer(SeedlingWeight~Genotype+(1|Tray),data=d)\r#\u0026gt; Linear mixed model fit by REML ['lmerMod']\r#\u0026gt; Formula: SeedlingWeight ~ Genotype + (1 | Tray)\r#\u0026gt; Data: d\r#\u0026gt; REML criterion at convergence: 247.1411\r#\u0026gt; Random effects:\r#\u0026gt; Groups Name Std.Dev.\r#\u0026gt; Tray (Intercept) 3.415 #\u0026gt; Residual 1.882 #\u0026gt; Number of obs: 56, groups: Tray, 8\r#\u0026gt; Fixed Effects:\r#\u0026gt; (Intercept) GenotypeB #\u0026gt; 15.29 -3.55\r"},
{"uri": "/blogR//topic/simulation/2_1_%E9%9A%A8%E6%A9%9F%E8%AE%8A%E6%95%B8.html","title": "2.1 隨機變數",
	"tags": [],
	"description": "隨機變數",
	"content": "5分鐘  5分鐘github)   ref  逆轉換抽樣(Inverse transform sampling) 從某個CDF的逆函數\\(F^{-1}(x)\\)，抽出符合這個分配的亂數。 . 例如某個隨機變數\\(X\\)　其ＣＤＦ is \\(F_X(x) = P(X \\leq x)\\). 然後我們可以利用\\(U\\)　(uniformly distributed on \\([0,1]\\). )抽出隨機亂數\\(X\\)。\n Theorem: If X is a continuous r.v. with CDF \\( F_X(x) \\), then \\( U = F_X(X) \u0018\\sim U(0,1) \\). \r【inverse method的證明】\rX是隨機變數U的函數，F是連續的CDF，\\(F^{-1}\\)是逆函數，且U是均勻分配的RV，則\\(F^{-1}(U)\\)遵循F分配\nProof: $$ P(X\u0026lt;x)=P(F^{-1}(U)\u0026lt;x)=P(U\u0026lt;F(x))=F_X(x) $$\n\n 演算法 Continuous Distributions 如果要產生隨機變數抽樣 \\(X\\) 其ＣＤＦ為 \\(F_X\\). 則逆取樣演算法為\n Generate \\(U \\sim \\text{Unif}(0,1)\\) Let \\(X = F_X^{-1}(U)\\).  上面的 \\(X\\) 遵循 \\(F_X\\)的分配。\n這個演算法在 \\(X\\) 是exponential 隨機變數的時候，\\(U \\sim \\text{Unif}(0,1)\\) 取逆是很容易，但如果 \\(X\\)是隨機變數，則取逆不實際。\nDiscrete Distributions 若 \\(X\\) 離散亂數則 \\(P(X = x_i) = p_i\\).\n Generate \\(U \\sim \\text{Unif}(0,1)\\) Determine the index \\(k\\) such that \\(\\sum_{j=1}^{k-1} p_j \\leq U \u0026lt; \\sum_{j=1}^k p_j\\), and return \\(X = x_k\\).  Notice that the second step requires a search.\nAssume our random variable \\(X\\) can take on any one of \\(K\\) values with probabilities \\({p_1, \\ldots, p_K}\\). We implement the algorithm below, assuming these probabilities are stored in a vector called p.vec.\n# note: this inefficient implementation is for pedagogical purposes\r# in general, consider using the rmultinom() function\rdiscrete.inv.transform.sample \u0026lt;- function( p.vec ) {\rU \u0026lt;- runif(1)\rif(U \u0026lt;= p.vec[1]){\rreturn(1)\r}\rfor(state in 2:length(p.vec)) {\rif(sum(p.vec[1:(state-1)]) \u0026lt; U \u0026amp;\u0026amp; U \u0026lt;= sum(p.vec[1:state]) ) {\rreturn(state)\r}\r}\r}\r 【Poisson】離散分配 \\( f_X (k;λ)=P({X=k})=\\frac{λ^k}{k!} e^{-λ} \\)　\rpoisson案例\r一公司之電話通數大約每小時 20 通，求在 5 分鐘內一通電話也沒有的機率？\n每小時 20 通, 表示每分鐘平均 \\(\\lambda =\\frac{1}{3}\\) 通/分。 因此在 5 分鐘的時間區間中, 平均的電話通數為 \\( m=\\lambda T=\\frac{1}{3}\\times 5=\\frac{5}{3}\\)。\n所以\\(P(k);\\equiv;P(k,5);=;\\frac{(\\frac{5}{3})^k}{k!} e^{-\\frac{5}{3}},\\quad k=0,1,2,\\cdots\\)\n因此沒有一通電話的機率 \\(P(0)= e^{-\\frac{5}{3}};\\approx; 0.19 \\)\n\npoisson random number演算法 因為 \\( P_{i+1}=P(X=i+1)=\\frac{λ^{i+1}}{(i+1)!} e^{-λ}=\\frac{λ}{i+1}\\frac{λ^i}{i!}e^{-λ}=\\frac{λ}{i+1} p_i \\)\n \\( i=0,p=e^{-λ},F=p \\) 🏷👏此時的F是事件不發生的機率,在步驟3用來決定是否0要輸出 \\( U \\sim U(0,1) \\) 產生隨機變數Ｕ 如果U\u0026lt;F，則X=i ，否則到步驟 4重新計算F) 🏷👏(目前的i是否要輸出，產生的U如果小於F,就接受 \\( p=λ \\frac{p}{i+1},F=F+p,i=i+1 \\) 🏷👏p只是個中間值主要重新計算F 到步驟 3  language R:\nlambda \u0026lt;-2.3\ru\u0026lt;-runif(1)\ri=0\rp=exp(-lambda)\rF=p\rwhile (F\u0026lt;=u){\rp=lambda*p/(i+1)\rF=F+p\ri=i+1\r}\rx=i\rcat(x,\u0026quot;\\n\u0026quot;) # 🏷👏只有一個\r#\u0026gt; 3\r excel,vb\nPublic Function Randpoisson(ByVal lambda As Double) As Double\rDim N As Integer\rDim temp As Double\rtemp = alea() //沒有0,1 的uniform\rN = 1\rWhile (temp \u0026gt; Exp(-lambda))\rN = N + 1\rtemp = temp +alea()\rWend\rRandpoisson = N - 1\rEnd Function\r \r解說上面的演算法\rdpois(),ppois(),rpois()\n# compare with rpois(1,2.3)\rx1\u0026lt;-0:6\rlambda\u0026lt;-2.3\rp=exp(-lambda)\rF[1]=p\rfor(i in x1[-1]){\rp=lambda*p/(i)\rF[i+1]=F[i]+p\r}\ry\u0026lt;-ppois(x1,lambda)\rplot(x1,y,type=\u0026quot;p\u0026quot;)\rlines(x1,F)\r figure\n\r 【指數分佈亂數】這是逆方法 \\( PDF: f(x)=λ e^{-λx} \\)\n\\( CDF: 1-e^{-λx} \\) #🏷註解👏由poisson process知道在t時間內沒有發生事件的機率為\n\\( R.V. X=-1/λ lnU \\sim E(λ) \\)\n\\( F(x)=1-e^{-λx}=u \\) \\(　x=F^{-1}(u) =-\\frac{ln(1-u)}{λ} \\)\n⛳ \r令 W 表示在 Poisson 過程中，由開始到第一次事件發生的時間（這是一隨機變數）。由上節知 $$ P(W\u0026gt;t)=P(在[0,t]無事件發生 ) \\ =e^{-\\lambda t}, t\u0026gt;0 $$ 但 \\begin{equation}F_W(t)=P(W\\leq t)=1-P(W\u0026gt;t) =1-e^{-\\lambda t} \\end{equation}\n把t代換為單位時間(=1),就是poisson分配。\n\r\rR 練習 Continuous Example: Exponential Distribution 若 \\(Y\\) 是指數RV帶速率參數 \\(\\lambda = 2\\). 則PDF \\(p(y) = 2e^{-2y}\\), for \\(y \u0026gt; 0\\). 且CDF: $$F_Y(x) = P(Y\\leq x) = \\int_0^x 2e^{-2y} dy = 1 - e^{-2x}$$\n解得CDF逆函數 $$F_Y^{-1}(y) = -\\frac{\\ln(1-y)}{2}$$\nUsing our algorithm above, we first generate \\(U \\sim \\text{Unif}(0,1)\\), then set \\(X = F_Y^{-1}(U) = -\\frac{\\ln(1-U)}{2}\\). We do this in the R code below and compare the histogram of our samples with the true density of \\(Y\\).\n# inverse transform sampling\rnum.samples \u0026lt;- 1000\rU \u0026lt;- runif(num.samples)\rX \u0026lt;- -log(1-U)/2\r# plot\rhist(X, freq=F, xlab='X', main='Generating Exponential R.V.')\r#\u0026gt; Warning in if (freq) x$counts else x$density: 條件的長度 \u0026gt; 1，因此只能用其第一元\r#\u0026gt; 素\r#\u0026gt; Warning in if (!freq) \u0026quot;Density\u0026quot; else \u0026quot;Frequency\u0026quot;: 條件的長度 \u0026gt; 1，因此只能用其第\r#\u0026gt; 一元素\rcurve(dexp(x, rate=2) , 0, 3, lwd=2, xlab = \u0026quot;\u0026quot;, ylab = \u0026quot;\u0026quot;, add = T)\r figure\r Indeed, the plot indicates that our random variables are following the intended distribution.\nDiscrete Example Let's assume we want to simulate a discrete random variable \\(X\\) that follows the following distribution:\n   x_i P(X=x_i)     1 0.1   2 0.4   3 0.2   4 0.3    Below we simulate from this distribution using the discrete.inv.transform.sample() function above, and plot both the true probability vector, and the empirical proportions from our simulation.\nnum.samples \u0026lt;- 1000\rp.vec \u0026lt;- c(0.1, 0.4, 0.2, 0.3)\rnames(p.vec) \u0026lt;- 1:4\rsamples \u0026lt;- numeric(num.samples)\rfor(i in seq_len(num.samples) ) {\rsamples[i] \u0026lt;- discrete.inv.transform.sample(p.vec)\r}\rbarplot(p.vec, main='True Probability Mass Function')\r figure\r barplot(table(samples), main='Empirical Probability Mass Function')\r figure\r Again, the plot supports our claim that we are drawing from the true probability distribution\n"},
{"uri": "/blogR//topic/simulation/2_1_%E4%BA%82%E6%95%B8%E5%87%BD%E6%95%B8%E7%B7%B4%E7%BF%92.html","title": "2.1.1 亂數函數練習",
	"tags": [],
	"description": "2_1_亂數函數練習",
	"content": "R的亂數函數  均勻分配抽樣   標準均勻亂數\n  runif(n, min = 0, max = 1)\n  0到100的均勻分配\n  runif(100, min = 0, max = 100)\nRandomNumbers \u0026lt;- runif(10000, min = 0, max = 100)\rhist(RandomNumbers)\r figure\r    常態分配亂數   rnorm(n, mean = 0, sd = 1)\nnormalSample \u0026lt;- rnorm(10000, mean = 100, sd = 50)\rhist(normalSample)\r figure\r     Simulating a coin toss 擲硬幣10次,5H:5T,4H:6T的機率是多少?\nallHeads \u0026lt;- c()\rfor (i in 1:10000) {\rtotalHeads \u0026lt;- sum(round(runif(10, min = 0, max = 1)))\rallHeads \u0026lt;- c(allHeads,totalHeads)\r}\rx\u0026lt;-hist(allHeads) #🏷👏如果要probability density function則 hist(allHeads,✔freq=FALSE)\r figure\r x #🏷👏如果只要圖形,不用指派給變數x,就是說只要✔hist(allHeads)\r#\u0026gt; $breaks\r#\u0026gt; [1] 0.0 0.5 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0 5.5 6.0 6.5 7.0\r#\u0026gt; [16] 7.5 8.0 8.5 9.0 9.5 10.0\r#\u0026gt; #\u0026gt; $counts\r#\u0026gt; [1] 8 98 0 478 0 1154 0 1997 0 2467 0 2047 0 1189 0\r#\u0026gt; [16] 436 0 120 0 6\r#\u0026gt; #\u0026gt; $density\r#\u0026gt; [1] 0.0016 0.0196 0.0000 0.0956 0.0000 0.2308 0.0000 0.3994 0.0000 0.4934\r#\u0026gt; [11] 0.0000 0.4094 0.0000 0.2378 0.0000 0.0872 0.0000 0.0240 0.0000 0.0012\r#\u0026gt; #\u0026gt; $mids\r#\u0026gt; [1] 0.25 0.75 1.25 1.75 2.25 2.75 3.25 3.75 4.25 4.75 5.25 5.75 6.25 6.75 7.25\r#\u0026gt; [16] 7.75 8.25 8.75 9.25 9.75\r#\u0026gt; #\u0026gt; $xname\r#\u0026gt; [1] \u0026quot;allHeads\u0026quot;\r#\u0026gt; #\u0026gt; $equidist\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; attr(,\u0026quot;class\u0026quot;)\r#\u0026gt; [1] \u0026quot;histogram\u0026quot;\r 上圖是10次中出現H的0,1,2..次數。\nround(0.1)\r#\u0026gt; [1] 0\rround(0.6)\r#\u0026gt; [1] 1\r \r\r但是為甚麼柱狀之間有空格?提示\r #\u0026gt; $breaks \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏0到10中的分割點\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; [1] 0.0 0.5 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0 5.5 6.0 6.5 7.0 7.5 8.0 8.5 9.0 9.5 10.0\r#\u0026gt; #\u0026gt; $counts \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏每個分割的H個數\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; [1] 12 104 0 464 0 1163 0 2005 0 2443 0 2045 0 1207 0 449 0 102 0 6\r#\u0026gt; #\u0026gt; $density \u0026lt;!--html_preserve--\u0026gt;\u0026lt;span class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏每個BIN的密度\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;!--/html_preserve--\u0026gt;\r#\u0026gt; [1] 0.0024 0.0208 0.0000 0.0928 0.0000 0.2326 0.0000 0.4010 0.0000 0.4886 0.0000 0.4090 0.0000 0.2414 0.0000 0.0898 0.0000 0.0204 0.0000 0.0012\r 因為輸出為整數,而分隔以0.5為單位,導致有些地方沒有資料=0。\n 修正圖中不應該有的空白間隙。\nhist(allHeads, freq = FALSE, breaks = 11) #🏷👏自行指定分割點\r figure\r 產生有遺失值(missing data)的資料 set.seed(11991) # Set seed\rN \u0026lt;- 1000 # Sample size\rx_num \u0026lt;- round(rnorm(N, 0, 5)) # Numeric\rx_fac \u0026lt;- as.factor(round(runif(N, 0, 3))) # Factor\rx_cha \u0026lt;- sample(letters, N, replace = TRUE) # Character\rx_num[rbinom(N, 1, 0.2) == 1] \u0026lt;- NA # 20% missings\rx_fac[rbinom(N, 1, 0.3) == 1] \u0026lt;- NA # 30% missings\rx_cha[rbinom(N, 1, 0.05) == 1] \u0026lt;- NA # 5% missings\rdata \u0026lt;- data.frame(x_num, x_fac, x_cha, # Create data frame\rstringsAsFactors = FALSE)\rhead(data)  x_num x_fac x_cha   8 2 p  0 NA a  -4 2 j  NA 1 x  -6 1 s  -3 NA k    "},
{"uri": "/blogR//topic/simulation/4_01_sim.html","title": "4.1 模擬基本 1",
	"tags": [],
	"description": "4_01_sim",
	"content": "t-test t檢定。\n 單一樣本 獨立樣本 配對樣本  Simulating a one-sample t-test 單樣本t-test用來看某個樣本平均是否顯著異於母體平均。 如果一個班級有10個學生餐與T/F考試,現在\ntestScores \u0026lt;- rnorm(10, mean = 50, sd = 20)\rtestScores[testScores \u0026gt; 100] \u0026lt;- 100 #🏷👏但是現在問題是常態分配抽到的可能小於0,也可能大於100。修正方法是\u0026gt;100的設定為100,小於0的設定為0。\rtestScores[testScores \u0026lt; 0] \u0026lt;- 0\rmean(testScores) #🏷👏看一下這次抽樣的平均\r#\u0026gt; [1] 43.3123\rt.test(testScores,mu=50) #🏷👏one-sample t-test\r#\u0026gt; #\u0026gt; One Sample t-test\r#\u0026gt; #\u0026gt; data: testScores\r#\u0026gt; t = -0.90415, df = 9, p-value = 0.3895\r#\u0026gt; alternative hypothesis: true mean is not equal to 50\r#\u0026gt; 95 percent confidence interval:\r#\u0026gt; 26.57984 60.04476\r#\u0026gt; sample estimates:\r#\u0026gt; mean of x #\u0026gt; 43.3123\r testScores \u0026lt;- rnorm(10, mean = 80, sd = 20)\rtestScores[testScores \u0026gt; 100] \u0026lt;- 100\rtestScores[testScores \u0026lt; 0] \u0026lt;- 0\rt.test(testScores, mu = 50)\r#\u0026gt; #\u0026gt; One Sample t-test\r#\u0026gt; #\u0026gt; data: testScores\r#\u0026gt; t = 5.1905, df = 9, p-value = 0.0005713\r#\u0026gt; alternative hypothesis: true mean is not equal to 50\r#\u0026gt; 95 percent confidence interval:\r#\u0026gt; 66.40485 91.75050\r#\u0026gt; sample estimates:\r#\u0026gt; mean of x #\u0026gt; 79.07768\r 獨立樣本的t-test(independent samples t-test - two groups, between-subjects Alcohol \u0026lt;- rnorm(20, mean = 250, sd = 100)\rControl \u0026lt;- rnorm(20, mean = 150, sd = 100)\rAlcohol[Alcohol \u0026lt; 0] \u0026lt;- 0\rControl[Control \u0026lt; 0] \u0026lt;- 0\rt.test(Alcohol,Control)\r#\u0026gt; #\u0026gt; Welch Two Sample t-test\r#\u0026gt; #\u0026gt; data: Alcohol and Control\r#\u0026gt; t = 4.2856, df = 37.743, p-value = 0.0001211\r#\u0026gt; alternative hypothesis: true difference in means is not equal to 0\r#\u0026gt; 95 percent confidence interval:\r#\u0026gt; 68.71219 191.79599\r#\u0026gt; sample estimates:\r#\u0026gt; mean of x mean of y #\u0026gt; 267.5791 137.3250\r 在R中的t檢定,使用的是 Welch Two Sample t-test。如果要得到像是EXCEL,SPSS的類似數值,可以\nt.test(Alcohol,Control, var.equal = TRUE)\r#\u0026gt; #\u0026gt; Two Sample t-test\r#\u0026gt; #\u0026gt; data: Alcohol and Control\r#\u0026gt; t = 4.2856, df = 38, p-value = 0.0001199\r#\u0026gt; alternative hypothesis: true difference in means is not equal to 0\r#\u0026gt; 95 percent confidence interval:\r#\u0026gt; 68.72594 191.78223\r#\u0026gt; sample estimates:\r#\u0026gt; mean of x mean of y #\u0026gt; 267.5791 137.3250\r 成對樣本(paired samples)的t檢定t-test (two conditions, within-subjects) day1\u0026lt;-rnorm(20, mean = 20, sd = 5)\rday2\u0026lt;-rnorm(20, mean = 30, sd = 5)\rday1[day1\u0026lt;0]\u0026lt;-0\rday2[day2\u0026lt;0]\u0026lt;-0\rmean(day1)\r#\u0026gt; [1] 21.3291\rmean(day2)\r#\u0026gt; [1] 29.52225\rt.test(day1, day2, var.equal=TRUE, paired=TRUE)\r#\u0026gt; #\u0026gt; Paired t-test\r#\u0026gt; #\u0026gt; data: day1 and day2\r#\u0026gt; t = -4.7153, df = 19, p-value = 0.0001506\r#\u0026gt; alternative hypothesis: true difference in means is not equal to 0\r#\u0026gt; 95 percent confidence interval:\r#\u0026gt; -11.829904 -4.556394\r#\u0026gt; sample estimates:\r#\u0026gt; mean of the differences #\u0026gt; -8.193149\r Finally, compute the paired-samples t-test using the t.test function. This will be the same as before, except the option for a paired test will be set to TRUE.\nGenerality of the t-test examples The above examples illustrate specific cases of simulating and analyzing data for one-sample, independent sample, and paired-sample t-tests. The code can be extended to simulate data for any kind of experiment or set of data that should be analyzed by these tests. The only changes that need to be made are the names of the variables, and the predictions for the number of subjects, and means, standard deviations, or other parameters of the sampling distribution chosen to model the data.\nFormatting data in R for more complex designs 產生用來分析個體之間、之內的(between,within subject) 單/多 因子設計(single/multi factor design) 跑ANOVA利用的函數是aov()。這個函數需要資料整理成long-format的型態(在R中,使用data farme) )\n\r展開\r🎶Experimental designs involve manipulations and measurements. The manipulations are described by independent variables, and the measurements refer to dependent variables. Every independent variable has at least two levels, and possibly many more. In balanced designs there is one measurement (DV) for each of the levels of the independent variables. Thus, in order to represent the results of an experiment, it is necessary to organize the data so that the measurement for each level of each independent variable can be identified. Data is typically organized either in wide or long-format. 實驗設計包含處理和測量(manipulations and measurements)。處理就是IV,測量就是DV。每個IV可能至少有2個到多個level。在balanced designs 中,IV中的每個LEVEL有一個測量(DV)。 配合上述的實驗結果,資料紀錄的方式有寬(wide)和長(long)兩種格式。 寬資料 Subjects L1 L2 L3   1 5 5 10  2 7 6 10  3 10 8 10  4 9 10 9  5 9 6 8     長資料 Subjects IV DV   1 L1 5  2 L1 7  3 L1 10  4 L1 9  5 L1 9  1 L2 5  2 L2 6  3 L2 8  4 L2 10  5 L2 6  1 L3 10  2 L3 10  3 L3 6  4 L3 9  5 L3 8     長寬資料指的是個體號碼是否有重複。\n產生的資料大概考慮後幾點(這裡用的都是長資料)\n 個體有幾個 每個IV的level DV的觀察值個數  Single Factor ANOVAs: Data-Simulation and Analysis Simulating data for a one-way within subjects ANOVA with 3 levels 打字速度是否隨著教學時間而變化。20個受測者,DV是每分鐘的字數。IV是第1,2,3天3個LEVEL。\n產生模擬資料\n  產生DV,命名為WPM,表示第一、二、三天的打字速度:\nday1 \u0026lt;- rnorm(20, mean = 20, sd = 5)\rday2 \u0026lt;- rnorm(20, mean = 30, sd = 5)\rday3 \u0026lt;- rnorm(20, mean = 40, sd = 5)\rday1[day1 \u0026lt; 0] \u0026lt;- 0 #🏷👏讓負數成為0\rday2[day2 \u0026lt; 0] \u0026lt;- 0\rday3[day3 \u0026lt; 0] \u0026lt;- 0\rWPM \u0026lt;- c(day1,day2,day3)\r   subjects代表個體(因子)\nSubjects \u0026lt;- c(seq(1,20), seq(1,20), seq(1,20)) #🏷👏 也可以利用seq()函數: Subjects\u0026lt;-rep(seq(1,20),3)\rSubjects\u0026lt;-factor(Subjects) #🏷👏因為要進行ANOVA,所以個體變數必須是因子(在R中的對應為factor 類別)\r   目前有WPM(DV) 和Subjects(subject factor),還少了一個IV代表練習的level(1天,2天,3天),這裡用變數Practice代表\nPractice \u0026lt;- c(rep(\u0026quot;day1\u0026quot;,20), rep(\u0026quot;day2\u0026quot;,20), rep(\u0026quot;day3\u0026quot;,20))\r   整合上面三個變數為data.frame,然後命名為AllData\n 第1個欄位是個體變數(1-20號) 第2個欄位是The second column should show the Practice variable, with the names of each of the levels repeated 20 times each, and the 第3第3個欄位是每分鐘打字個數。  AllData\u0026lt;-data.frame(WPM,Subjects,Practice)\rAllData #\r \r展開\rWPM Subjects Practice   17.53071 1 day1  21.43697 2 day1  31.52852 3 day1  20.25248 4 day1  19.50004 5 day1  13.44917 6 day1  26.39973 7 day1  18.26791 8 day1  12.53538 9 day1  24.16280 10 day1  23.79540 11 day1  23.33252 12 day1  20.09107 13 day1  20.90508 14 day1  16.54755 15 day1  10.56084 16 day1  17.61916 17 day1  19.99282 18 day1  20.54418 19 day1  18.38454 20 day1  37.85092 1 day2  29.79049 2 day2  23.85790 3 day2  32.38066 4 day2  28.36341 5 day2  29.43509 6 day2  29.92492 7 day2  28.72727 8 day2  35.42817 9 day2  38.60877 10 day2  26.37381 11 day2  28.04359 12 day2  27.41671 13 day2  32.96870 14 day2  42.34004 15 day2  29.11271 16 day2  29.85050 17 day2  24.02582 18 day2  31.26926 19 day2  26.03427 20 day2  45.98557 1 day3  44.31836 2 day3  33.84533 3 day3  38.31360 4 day3  43.94651 5 day3  39.66407 6 day3  40.60591 7 day3  35.66862 8 day3  37.71101 9 day3  43.11171 10 day3  40.27382 11 day3  37.35554 12 day3  31.92775 13 day3  38.20757 14 day3  40.15106 15 day3  35.13515 16 day3  42.89976 17 day3  41.31063 18 day3  39.06312 19 day3  47.16056 20 day3    \r    執行ANOVA\nANOVAresults \u0026lt;- aov(WPM~Practice + Error(Subjects/Practice), AllData)\r   報表\nsummary(ANOVAresults)\r#\u0026gt; #\u0026gt; Error: Subjects\r#\u0026gt; Df Sum Sq Mean Sq F value Pr(\u0026gt;F)\r#\u0026gt; Residuals 19 349 18.37 #\u0026gt; #\u0026gt; Error: Subjects:Practice\r#\u0026gt; Df Sum Sq Mean Sq F value Pr(\u0026gt;F) #\u0026gt; Practice 2 4004 2002.0 90.74 3.38e-15 ***\r#\u0026gt; Residuals 38 838 22.1 #\u0026gt; ---\r#\u0026gt; Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\rmodel.tables(ANOVAresults,\u0026quot;means\u0026quot;) #\u0026gt; Tables of means\r#\u0026gt; Grand mean\r#\u0026gt; #\u0026gt; 30.08826 #\u0026gt; #\u0026gt; Practice #\u0026gt; Practice\r#\u0026gt; day1 day2 day3 #\u0026gt; 19.84 30.59 39.83\r   \r全部程式碼\rday1\u0026lt;-rnorm(20, mean = 20, sd = 5)\rday2\u0026lt;-rnorm(20, mean = 30, sd = 5)\rday3\u0026lt;-rnorm(20, mean = 40, sd = 5)\rday1[day1\u0026lt;0]\u0026lt;-0\rday2[day2\u0026lt;0]\u0026lt;-0\rday3[day3\u0026lt;0]\u0026lt;-0\rWPM\u0026lt;-c(day1,day2,day3)\rSubjects\u0026lt;-c(seq(1,20), seq(1,20), seq(1,20))\rSubjects\u0026lt;-factor(Subjects)\rPractice\u0026lt;-c(rep(\u0026quot;day1\u0026quot;,20), rep(\u0026quot;day2\u0026quot;,20), rep(\u0026quot;day3\u0026quot;,20))\rAllData\u0026lt;-data.frame(Subjects,Practice,WPM)\rANOVAresults\u0026lt;-aov(WPM~Practice + Error(Subjects/Practice), AllData)\rsummary(ANOVAresults)\rmodel.tables(ANOVAresults,\u0026quot;means\u0026quot;)  寫緊湊點\nWPM\u0026lt;-rnorm(60,c(20,30,40),5)\rWPM[WPM\u0026lt;0]\u0026lt;-0\rSubjects\u0026lt;-factor(rep(seq(1,20),each=3))\rPractice\u0026lt;-rep(c(\u0026quot;day1\u0026quot;,\u0026quot;day2\u0026quot;,\u0026quot;day3\u0026quot;),20)\rAllData\u0026lt;-data.frame(Subjects,Practice,WPM)\rANOVAresults\u0026lt;-aov(WPM~Practice + Error(Subjects/Practice), AllData)\rsummary(ANOVAresults)\rmodel.tables(ANOVAresults,\u0026quot;means\u0026quot;)   Simulating data for a one-way between subjects design with 3 levels between-subjects design with 60 subjects\n設計一個記憶實驗,個體60個分成三組,受測者讀20個字的列表。然後分為馬上,1小時,2小時候默寫出來看到的字。 預測是延遲愈久,正確率愈差 DV是正確的字。 IV是延遲的小時數。 個體編號從1到60。\nThe DV could be the number of words recalled, this number would range between 0 and 20. There are 20 subjects and 2 conditions, so the DV should have 60 observations. The variables for the DV, and Subjects and Delay factors can be constructed in a similar manner to the previous example. The major difference being that the Subjects factor will contain the numbers 1-60, reflecting the fact that 60 different subjects completed the experiment. The following code creates the complete data frame and runs the ANOVA.\nRecall\u0026lt;-c(rnorm(20,mean=17,sd=3),rnorm(20,mean=15,sd=3),rnorm(20,mean=12, sd=3))\rRecall[Recall\u0026gt;20]\u0026lt;-20\rRecall[Recall\u0026lt;0]\u0026lt;-0\rSubjects\u0026lt;-factor(seq(1,60))\rDelay\u0026lt;-c(rep(\u0026quot;Immediate\u0026quot;,20), rep(\u0026quot;1Hour\u0026quot;,20), rep(\u0026quot;2Hour\u0026quot;,20))\rAllData\u0026lt;-data.frame(Subjects,Recall,Delay)\rANOVAresults\u0026lt;-aov(Recall~Delay, AllData)\rsummary(ANOVAresults)\r#\u0026gt; Df Sum Sq Mean Sq F value Pr(\u0026gt;F) #\u0026gt; Delay 2 228.6 114.29 11.58 6.02e-05 ***\r#\u0026gt; Residuals 57 562.6 9.87 #\u0026gt; ---\r#\u0026gt; Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\rmodel.tables(ANOVAresults,\u0026quot;means\u0026quot;)\r#\u0026gt; Tables of means\r#\u0026gt; Grand mean\r#\u0026gt; #\u0026gt; 13.98015 #\u0026gt; #\u0026gt; Delay #\u0026gt; Delay\r#\u0026gt; 1Hour 2Hour Immediate #\u0026gt; 15.123 11.233 15.585\r Using the aov function for within or between-subjects designs The aov function is used for within, between and mixed design ANOVAs. The aov formula has the following syntax:\naov(formula,dataframe)\r dataframe refers to the name of the variable containing the data. The formula parameter defines the nature of the ANOVA. Here are some examples of the formula for different single and multi-factor between subject designs. The term DV will refer the name of the dependent variable, and IV for the name of the independent variable.\nBetween subjects ANOVA formulas  Single-factor design  aov(DV~IV, dataframe)   2 IVs  aov(DV~IV1*IV2, dataframe)   3 IVs  aov(DV~IV1*IV2*IV3, dataframe)    The main differences between these formulas are the additional IV variables. Each additional variable is multiplied to the others.\nThe aov formula changes in an important way for within-subjects designs. This is because within-subjects designs use an error term that incorporates the Subjects variable. This error term needs to be explicitly defined in the aov formula. It is also important that the subjects variable in the dataframe is defined as a factor. Here are some examples:\nWithin subjects ANOVA formulas (all factors within)  Single-factor design  aov(DV~IV + Error(Subjects/IV), dataframe)   2 IVs  aov(DV~IV1*IV2 + Error(Subjects/IV1*IV2), dataframe)   3 IVs  aov(DV~IV1*IV2*IV3 + Error(Subjects/IV1*IV2*IV3), dataframe)    Mixed design ANOVAs with between and within factors For these examples IVB will refer to between subject variables, and IVW will refer to within subjects variables\n One between IV and one within IV  aov(DV~IVB*IVW + Error(Subjects/IVW), dataframe)   One between IV and two Within IVs  aov(DV~IVBIVW1IVW2 + Error(Subjects/(IVW1*IVW2), dataframe)   Two between IVs and two Within IVs  aov(DV~IVB1IVB2IVW1IVW2 + Error(Subjects/(IVW1IVW2)+(IVB1*IVB2), dataframe)    note: in this last example an additional error term is added for the interaction between the two between subject variables.\nSimulating data for multi-factor designs 2x2 between subjects design The following code assumes 20 subjects per group (80 total). IV1 has two levels. IV2 has two levels.\nDV\u0026lt;-rnorm(80,c(100,200,300,400),sd=10)\rIV1\u0026lt;-rep(c(\u0026quot;level1\u0026quot;,\u0026quot;level2\u0026quot;),each=2,20)\rIV2\u0026lt;-rep(c(\u0026quot;level1\u0026quot;,\u0026quot;level2\u0026quot;),each=1,40)\rAllData\u0026lt;-data.frame(DV,IV1,IV2)\rANOVAresults\u0026lt;-aov(DV~IV1*IV2, AllData)\rsummary(ANOVAresults)\r#\u0026gt; Df Sum Sq Mean Sq F value Pr(\u0026gt;F) #\u0026gt; IV1 1 794236 794236 8079.683 \u0026lt;2e-16 ***\r#\u0026gt; IV2 1 225846 225846 2297.506 \u0026lt;2e-16 ***\r#\u0026gt; IV1:IV2 1 6 6 0.062 0.805 #\u0026gt; Residuals 76 7471 98 #\u0026gt; ---\r#\u0026gt; Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\rmodel.tables(ANOVAresults,\u0026quot;means\u0026quot;)\r#\u0026gt; Tables of means\r#\u0026gt; Grand mean\r#\u0026gt; #\u0026gt; 248.7171 #\u0026gt; #\u0026gt; IV1 #\u0026gt; IV1\r#\u0026gt; level1 level2 #\u0026gt; 149.1 348.4 #\u0026gt; #\u0026gt; IV2 #\u0026gt; IV2\r#\u0026gt; level1 level2 #\u0026gt; 195.58 301.85 #\u0026gt; #\u0026gt; IV1:IV2 #\u0026gt; IV2\r#\u0026gt; IV1 level1 level2\r#\u0026gt; level1 95.7 202.5 #\u0026gt; level2 295.5 401.2\r 2x2 within subjects designs The following code assumes 20 subjects participating in each condition. IV1 has two levels. IV2 has two levels.\nSubjects\u0026lt;-factor(rep(seq(1,20),each=4)) DV\u0026lt;-rnorm(80,c(100,200,300,400),sd=10)\rIV1\u0026lt;-rep(c(\u0026quot;level1\u0026quot;,\u0026quot;level2\u0026quot;),each=2,20)\rIV2\u0026lt;-rep(c(\u0026quot;level1\u0026quot;,\u0026quot;level2\u0026quot;),each=1,40)\rAllData\u0026lt;-data.frame(DV,IV1,IV2)\rANOVAresults\u0026lt;-aov(DV~IV1*IV2 + Error(Subjects/(IV1*IV2)), AllData)\rsummary(ANOVAresults)\r#\u0026gt; #\u0026gt; Error: Subjects\r#\u0026gt; Df Sum Sq Mean Sq F value Pr(\u0026gt;F)\r#\u0026gt; Residuals 19 1802 94.82 #\u0026gt; #\u0026gt; Error: Subjects:IV1\r#\u0026gt; Df Sum Sq Mean Sq F value Pr(\u0026gt;F) #\u0026gt; IV1 1 775293 775293 7672 \u0026lt;2e-16 ***\r#\u0026gt; Residuals 19 1920 101 #\u0026gt; ---\r#\u0026gt; Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r#\u0026gt; #\u0026gt; Error: Subjects:IV2\r#\u0026gt; Df Sum Sq Mean Sq F value Pr(\u0026gt;F) #\u0026gt; IV2 1 177718 177718 1979 \u0026lt;2e-16 ***\r#\u0026gt; Residuals 19 1706 90 #\u0026gt; ---\r#\u0026gt; Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r#\u0026gt; #\u0026gt; Error: Subjects:IV1:IV2\r#\u0026gt; Df Sum Sq Mean Sq F value Pr(\u0026gt;F)\r#\u0026gt; IV1:IV2 1 0 0.03 0 0.987\r#\u0026gt; Residuals 19 2011 105.86\rmodel.tables(ANOVAresults,\u0026quot;means\u0026quot;)\r#\u0026gt; Tables of means\r#\u0026gt; Grand mean\r#\u0026gt; #\u0026gt; 248.1555 #\u0026gt; #\u0026gt; IV1 #\u0026gt; IV1\r#\u0026gt; level1 level2 #\u0026gt; 149.7 346.6 #\u0026gt; #\u0026gt; IV2 #\u0026gt; IV2\r#\u0026gt; level1 level2 #\u0026gt; 201.02 295.29 #\u0026gt; #\u0026gt; IV1:IV2 #\u0026gt; IV2\r#\u0026gt; IV1 level1 level2\r#\u0026gt; level1 102.6 196.8 #\u0026gt; level2 299.4 393.8\r 2x2 mixed design (1 within, 1 between) The following code assumes 40 total subjects. 20 participate in each level of IVB, and all participate in each level of IVW. IVB has two levels, IVW has two levels\nSubjects\u0026lt;-factor(c(rep(seq(1,40),each=2)))\rDV\u0026lt;-rnorm(80,c(100,200,300,400),sd=10)\rIVB\u0026lt;-rep(c(\u0026quot;level1\u0026quot;,\u0026quot;level2\u0026quot;),each=2,20)\rIVW\u0026lt;-rep(c(\u0026quot;level1\u0026quot;,\u0026quot;level2\u0026quot;),each=1,40)\rAllData\u0026lt;-data.frame(DV,IVB,IVW)\rANOVAresults\u0026lt;-aov(DV~IVB*IVW + Error(Subjects/(IVW)), AllData)\rsummary(ANOVAresults)\r#\u0026gt; #\u0026gt; Error: Subjects\r#\u0026gt; Df Sum Sq Mean Sq F value Pr(\u0026gt;F) #\u0026gt; IVB 1 790598 790598 7723 \u0026lt;2e-16 ***\r#\u0026gt; Residuals 38 3890 102 #\u0026gt; ---\r#\u0026gt; Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r#\u0026gt; #\u0026gt; Error: Subjects:IVW\r#\u0026gt; Df Sum Sq Mean Sq F value Pr(\u0026gt;F) #\u0026gt; IVW 1 194722 194722 2049.830 \u0026lt;2e-16 ***\r#\u0026gt; IVB:IVW 1 188 188 1.983 0.167 #\u0026gt; Residuals 38 3610 95 #\u0026gt; ---\r#\u0026gt; Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\rmodel.tables(ANOVAresults,\u0026quot;means\u0026quot;)\r#\u0026gt; Tables of means\r#\u0026gt; Grand mean\r#\u0026gt; #\u0026gt; 250.7302 #\u0026gt; #\u0026gt; IVB #\u0026gt; IVB\r#\u0026gt; level1 level2 #\u0026gt; 151.3 350.1 #\u0026gt; #\u0026gt; IVW #\u0026gt; IVW\r#\u0026gt; level1 level2 #\u0026gt; 201.39 300.07 #\u0026gt; #\u0026gt; IVB:IVW #\u0026gt; IVW\r#\u0026gt; IVB level1 level2\r#\u0026gt; level1 103.5 199.1 #\u0026gt; level2 299.3 401.0\r Power analysis and sample-size planning by Monte Carlo simulation The above code blocks show examples of simulating data in a few different designs, and then analyzing the simulated data with an ANOVA. By repeating this process many times for any given design, we can estimate statistical properties of the design that should hold over the long run. For example, how often does the design produce a ‘significant’ (p\u0026lt;.05) effect? This can be estimated by running 1000s of independent simulations, computing and saving the p-value from each simulation, and then determining the proportion of p-values less than .05 from the distribution of simulated p-values. In principle, long-run expectations for any other statistic of a simulated design could be estimated in this way as well. In addition, design simulations can be constructed down to the level of individual trial data for individual subjects, which can aid in sample-size and cell-size planning. Some example monte-carlo simulations are presented below.\nMonte-Carlo one-sample T-test Simulation The following simulates 25 sample means from a normal distribution (mu=100, sd=10), and then conducts a one-sample t-test against the population mean of 100. This is equivalent to simulating the null. The simulation is repeated 1000 times, each time the observed p-value is saved.\nsims_to_run\u0026lt;-1000\rsave_p \u0026lt;- vector(length=sims_to_run)\rfor(i in 1:sims_to_run){\rsim_data \u0026lt;- rnorm(25,100,10)\rt.out \u0026lt;-t.test(sim_data,mu=100)\rsave_p[i] \u0026lt;- t.out$p.value\r}\rhist(save_p)\r figure\r proportion_sig\u0026lt;-length(save_p[save_p\u0026lt;.05])/sims_to_run\rproportion_sig\r#\u0026gt; [1] 0.054\r As expected, the histogram of simulated p-values is roughly uniform, indicating that all possible p-values are equally likely. In other words, chance would be expected to produce p\u0026lt;.05 about 5% of the time. The calculated proportion of significant values was 0.043. In general, as the number of simulated runs increases toward infinity, the estimated parameter should settle on it’s true expected value.\nMonte-Carlo paired T-test Simulation 25 subjects, with expected mean 100 in Condition 1 and mean 110 in Condition 2, with standard deviation 30. This simulation includes a programmed difference of 10, so there is a true effect.\nsims_to_run\u0026lt;-1000\rsave_p \u0026lt;- vector(length=sims_to_run)\rfor(i in 1:sims_to_run){\rcondition_1 \u0026lt;- rnorm(25,100,30)\rcondition_2 \u0026lt;- rnorm(25,110,30)\rt.out \u0026lt;-t.test(condition_1,condition_2,paired=TRUE,var.equal = TRUE)\rsave_p[i] \u0026lt;- t.out$p.value\r}\rhist(save_p)\r figure\r proportion_sig\u0026lt;-length(save_p[save_p\u0026lt;.05])/sims_to_run\rproportion_sig\r#\u0026gt; [1] 0.217\r [1] 0.223\nThe histogram of p-values is skewed left, so this design is more likely to produce p\u0026lt;.05 than not, but the statistical power (or proportion of significant simulations) is only 0.223.\nTo determine the number of subjects needed to achieve power = .8, you could fiddle with the number of subjects until you find the number, or you could add another loop to run multiple monte carlo simulations with difference numbers of subjects.\nsubject_numbers\u0026lt;-c(25,50,75,100,125,150,175,200)\rpower\u0026lt;-vector(length=length(subject_numbers))\rfor(subnum in 1:length(subject_numbers)){\rsims_to_run\u0026lt;-1000\rsave_p \u0026lt;- vector(length=sims_to_run)\rfor(i in 1:sims_to_run){\rcondition_1 \u0026lt;- rnorm(subject_numbers[subnum],100,30)\rcondition_2 \u0026lt;- rnorm(subject_numbers[subnum],110,30)\rt.out \u0026lt;-t.test(condition_1,condition_2,paired=TRUE,var.equal = TRUE)\rsave_p[i] \u0026lt;- t.out$p.value\r}\rpower[subnum]\u0026lt;-length(save_p[save_p\u0026lt;.05])/sims_to_run\r}\rpower_table\u0026lt;-data.frame(subject_numbers,power)\rkable(power_table)\r    subject_numbers power     25 0.201   50 0.389   75 0.523   100 0.656   125 0.744   150 0.821   175 0.871   200 0.917    subject_numbers\tpower 25\t0.213 50\t0.359 75\t0.503 100\t0.651 125\t0.747 150\t0.811 175\t0.871 200\t0.895\nMonte-Carlo One-way Repeated Measures Simulation The above simulations estimated individual subject sample means by drawing values directly from distributions. The individual trial data for each subject can also be simulated if desired. This can be useful for design planning as both the number of subjects and cell-size determine the power of the design. Depending on the situation, increasing the number of trials may do more for improving the sensitivity of the design than increasing the number of subjects, or vice-versa. To illustrate, the following example simulates individual trial data for subjects in a Stroop experiment. The retimes package is used to generate RT distributions.\nBefore simulating an entire experiment it is worth simulating a Stroop effect for a single simulated subject. This shows the variance of Stroop effects given programmed values for the mean difference between congruent and incongruent trials, values of mu, sigma, and tau for the base RT distributions, as well as number of trials.\nlibrary(retimes)\r#\u0026gt; Error in library(retimes): 不存在叫 'retimes' 這個名稱的套件\rlibrary(ggplot2)\rstroop_effects\u0026lt;-c()\rn_trials \u0026lt;- 144\rsim_mu \u0026lt;- 600\rsim_sigma \u0026lt;- 80\rsim_tau \u0026lt;- 150\rcongruency_effect \u0026lt;- 100\rfor(i in 1:1000){\rCongruentRTs \u0026lt;- rexgauss(n_trials,mu=sim_mu,sigma=sim_sigma,tau=sim_tau)\rIncongruentRTs \u0026lt;- rexgauss(n_trials,mu=sim_mu+congruency_effect,sigma=sim_sigma,tau=sim_tau)\rstroop_effects \u0026lt;- c(stroop_effects,mean(IncongruentRTs)-mean(CongruentRTs))\r}\r#\u0026gt; Error in rexgauss(n_trials, mu = sim_mu, sigma = sim_sigma, tau = sim_tau): 沒有這個函式 \u0026quot;rexgauss\u0026quot;\rqplot(stroop_effects)+xlab(\u0026quot;Simulated Stroop Effects\u0026quot;)+geom_bar(fill=\u0026quot;white\u0026quot;,color=\u0026quot;black\u0026quot;)\r figure\r  ??? stat_bin() using bins = 30. Pick better value with binwidth. The histogram shows that under the simulated parameters, the programmed Stroop effect of 100ms can easily take a value -from 50 to 150. The variance in the simulated Stroop effect for a single subject is determined by the variance in the underlying RT distributions for the congruent and incongruent conditions.\n The following simulation expands on the above to model multiple subjects in a Stroop experiment. We start with a minimum number of 10 trials per condition, in an Experiment with 20 subjects, and programmed Stroop effect of 50ms.\nsims_to_run\u0026lt;-100\rn_trials \u0026lt;- 10\rsim_mu \u0026lt;- 600\rsim_sigma \u0026lt;- 80\rsim_tau \u0026lt;- 150\rcongruency_effect \u0026lt;- 50\rn_subjects \u0026lt;- 20\rsave_p\u0026lt;-vector(length=sims_to_run)\rfor(i in 1:sims_to_run){\rall_subjects\u0026lt;-data.frame()\rfor(sub in 1:n_subjects){\rCongruentRTs \u0026lt;- rexgauss(n_trials,mu=sim_mu,sigma=sim_sigma,tau=sim_tau)\rIncongruentRTs \u0026lt;- rexgauss(n_trials,mu=sim_mu+congruency_effect,sigma=sim_sigma,tau=sim_tau)\rtemp_subject \u0026lt;- data.frame(subject=rep(sub,n_trials*2),\rcondition=rep(c(\u0026quot;Congruent\u0026quot;,\u0026quot;Incongruent\u0026quot;),each=n_trials),\rRTs=c(CongruentRTs,IncongruentRTs))\rall_subjects\u0026lt;-rbind(all_subjects,temp_subject)\r}\rmean_subject_data\u0026lt;-aggregate(RTs~subject*condition,all_subjects,mean)\raov.out\u0026lt;-summary(aov(RTs~condition+Error(subject/condition),mean_subject_data))\rsave_p[i]\u0026lt;-aov.out[[3]][[1]][[5]][1]\r}\r#\u0026gt; Error in rexgauss(n_trials, mu = sim_mu, sigma = sim_sigma, tau = sim_tau): 沒有這個函式 \u0026quot;rexgauss\u0026quot;\rhist(save_p)\r#\u0026gt; Error in hist.default(save_p): 'x' 必須是數值\rproportion_sig\u0026lt;-length(save_p[save_p\u0026lt;.05])/sims_to_run\r Tith these minimum trial counts, the power is 0.26 to detect the Stroop effect. Estimated power will increase with increasing numbers of subjects and/or trials in the simulated design. The last simulation shows how power increases as function of increasing trial counts.\nsims_to_run\u0026lt;-100\rn_trials \u0026lt;- c(10,20,30,40,50,60,70)\rsim_mu \u0026lt;- 600\rsim_sigma \u0026lt;- 80\rsim_tau \u0026lt;- 150\rcongruency_effect \u0026lt;- 50\rn_subjects \u0026lt;- 20\rsave_p\u0026lt;-vector(length=sims_to_run)\rproportion_sig\u0026lt;-vector(length=length(n_trials))\rfor(trials in 1:length(n_trials)){\rfor(i in 1:sims_to_run){\rall_subjects\u0026lt;-data.frame()\rfor(sub in 1:n_subjects){\rCongruentRTs \u0026lt;- rexgauss(n_trials[trials],mu=sim_mu,sigma=sim_sigma,tau=sim_tau)\rIncongruentRTs \u0026lt;- rexgauss(n_trials[trials],mu=sim_mu+congruency_effect,sigma=sim_sigma,tau=sim_tau)\rtemp_subject \u0026lt;- data.frame(subject=rep(sub,n_trials[trials]*2),\rcondition=rep(c(\u0026quot;Congruent\u0026quot;,\u0026quot;Incongruent\u0026quot;),each=n_trials[trials]),\rRTs=c(CongruentRTs,IncongruentRTs))\rall_subjects\u0026lt;-rbind(all_subjects,temp_subject)\r}\rmean_subject_data\u0026lt;-aggregate(RTs~subject*condition,all_subjects,mean)\raov.out\u0026lt;-summary(aov(RTs~condition+Error(subject/condition),mean_subject_data))\rsave_p[i]\u0026lt;-aov.out[[3]][[1]][[5]][1]\r}\rproportion_sig[trials]\u0026lt;-length(save_p[save_p\u0026lt;.05])/sims_to_run\r}\r#\u0026gt; Error in rexgauss(n_trials[trials], mu = sim_mu, sigma = sim_sigma, tau = sim_tau): 沒有這個函式 \u0026quot;rexgauss\u0026quot;\rkable(data.frame(n_trials,proportion_sig))\r    n_trials proportion_sig     10 FALSE   20 FALSE   30 FALSE   40 FALSE   50 FALSE   60 FALSE   70 FALSE    Analysing data from a file This tutorial comes with a folder containing several data files. All of these files are .txt files that you can open and view in any text editor. Each of the files has data formatted in a specific way, called long format. The first line of each file contains headers or names for each of the columns of data in the file. For example, The SingleFactor_Between.txt file contains 61 lines of text. The first few lines should like something like this (except the text file will not include the number signs).\nAllData[1:5,]\r DV IVB IVW   90.84322 level1 level1  199.66018 level1 level2  298.69142 level2 level1  385.57085 level2 level2  93.92569 level1 level1     The Subjects column refers to individual subjects in the data file. Each number corresponds to a unique subject. The IV1 column refers to the single independent variable or factor in this data file. There are three levels: Group1, Group2, and Group3. If you scroll down the lines of the data file you will see that subjects 1-20 are associated with Group1, subjects 21-40 are associated with Group2, and subjects 41-60 are associated with Group3. The final column DV stands for the dependent variable, and the numbers in this column represent mean values for each subject in each condition.\nReading data into R There are several ways to import data into R. We focus on using the read.table function (but see also scan). To use read.table you will need to tell R where it can find your data files. In R studio look at the bottom right panel, and find the “Files” tab. When you click on the “Files” tab you should see the current working directory. Use the file section to navigate to the folder on your computer that contains the data files. When you have succesfully done this you will see the data files listed in the bottom-right window. Now you want to set the current working directoy to this folder (that contains the data files). Choose the option “More”, listed underneath the “files” tab. You should see an option to “set as working directory”. Click this option. Now R will be able to find your data files.\nThe next step is to input the data file into a variable in R. If you have correctly set the working directory then type the second line of code into the R terminal on the bottom left window of R-studio, then press enter. The first line of code shows how the working directory can be set with a script.\nAllData\u0026lt;-read.table(\u0026quot;RFiles/SingleFactor_Between.txt\u0026quot;,header=TRUE,sep=\u0026quot;\\t\u0026quot;) You should now see a variable called AllData appear in the workspace (top right window). If you type AllData into the terminal and press enter, you should see R list your data file in the terminal.\n5.11 Running an ANOVA for a single-factor design between-subjects design We have already used the aov function to conduct ANOVAs on our simulated data sets. The same function is used to anlayse data inputted into R. In this case, the data file that we have inputted is already structured in long-format, and R reads the data in as a dataframe object. So, to conduct the ANOVA we simply need to write the following:\nsummary(aov(DV~IV1,AllData))\r#\u0026gt; Df Sum Sq Mean Sq F value Pr(\u0026gt;F) #\u0026gt; IV1 1 790598 790598 304.7 \u0026lt;2e-16 ***\r#\u0026gt; Residuals 78 202410 2595 #\u0026gt; ---\r#\u0026gt; Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r In the above print-out, the Df column refers to degrees of freedom, Sum Sq refers to the sum of squares, Mean Sq refers to Mean squared error, F-value is the F-statistic, and Pr(\u0026gt;F) is the p-value.\nWe can see that the p-value is .0166, indicating significance. This means that at least one of the three groups is significantly different from the others. However, the ANOVA alone does not tell us either the means of each group, or which ones are significantly different from each other. This requires specific comparisons between levels.\nThe summary function does not provide descriptive statistics, so we are unable to see the means for each condition. One option to view the means is to use thethe aggregate function.\naggregate(DV~IV1,AllData,mean)\r \rIV1 DV   level1 151.3196  level2 350.1408     It is worth pointing out that although the summary function does not immediately display the means for each condition, it does create a data structure that represents this information. And, the means can be found using model.tables in the following way.\naovResults\u0026lt;-aov(DV~IV1,AllData)\rprint(model.tables(aovResults,\u0026quot;means\u0026quot;),digits=6)\r#\u0026gt; Tables of means\r#\u0026gt; Grand mean\r#\u0026gt; #\u0026gt; 250.7302 #\u0026gt; #\u0026gt; IV1 #\u0026gt; IV1\r#\u0026gt; level1 level2 #\u0026gt; 151.320 350.141\r We see that the mean for Group 1 is numerically smaller than the mean for Group 2, which is numerically smaller than the mean for Group 3. We can conclude, based on the ANOVA, that the largest and smallest means are different from each other, so we know that the mean for Group 1 was significantly smaller than the mean for Group 3. We need to perform a follow-up t-test to determine whether Group 1 is different from Group 2, and yet another test to determine if Group 2 is different from Group 3.\nThe design is between-subjects, so the appropriate t-test is an independent samples t-test. We can conduct this test comparing groups 1 and 2 using the t.test function as follows:\nt.test(AllData[AllData$IV1==\u0026quot;Group1\u0026quot;,]$DV,AllData[AllData$IV1==\u0026quot;Group2\u0026quot;,]$DV,var.equal=TRUE)\r#\u0026gt; Error in t.test.default(AllData[AllData$IV1 == \u0026quot;Group1\u0026quot;, ]$DV, AllData[AllData$IV1 == : not enough 'x' observations\r We see that the p-value is p=0.06831, which is not \u0026lt;.05. So, Group 1 is not significantly different than Group 2.\nWe can run an additional t-test comparing Group 2 and Group 3 using the following:\nt.test(AllData[AllData$IV1==\u0026quot;Group2\u0026quot;,]$DV,AllData[AllData$IV1==\u0026quot;Group3\u0026quot;,]$DV,var.equal=TRUE)\r#\u0026gt; Error in t.test.default(AllData[AllData$IV1 == \u0026quot;Group2\u0026quot;, ]$DV, AllData[AllData$IV1 == : not enough 'x' observations\r Again, we see that the difference is not significant (p=.284). So Group 2 is not significantly different from Group 3.\nPrettier results using kable and broom The results of anovas or t-tests aren’t appealing look to at when they are printed to the console, and often look cluttered when printed to a .pdf or .html file using Rmarkdown. The kable function from the package knitr, and the xtable function from the xtable package can help with improving the look and feel of ANOVA and other tables.\nlibrary(knitr)\rlibrary(xtable)\raov.out \u0026lt;- summary(aov(DV~IV1,AllData))\rkable(xtable(aov.out),format='markdown')\r     Df Sum Sq Mean Sq F value Pr(\u0026gt;F)     IV1 1 790597.8 790597.753 304.6624 0   Residuals 78 202409.7 2594.996 NA NA   Df\tSum Sq\tMean Sq\tF value\tPr(\u0026gt;F)        IV1\t2\t101780.0\t50890.02\t4.405401\t0.0166327        Residuals\t57\t658448.8\t11551.73\tNA\tNA        The results from t-tests can be prettified using broom         library(broom)\rkable(tidy(t.test(DV~IV1,AllData[AllData$IV1!=\u0026quot;Group1\u0026quot;,], paired=TRUE)))\r#\u0026gt; Error in model.frame.default(formula = DV ~ IV1, data = AllData[AllData$IV1 != : 變數的長度不一樣('IV1')\r estimate\tstatistic\tp.value\tparameter\tconf.low\tconf.high\tmethod\talternative -33.88101\t-1.06247\t0.3013409\t19\t-100.6253\t32.86325\tPaired t-test\ttwo.sided\nWriting up the results The preceding section covered the steps of loading a data-file into R. The data-file was for a single-factor between subjects design with 3 levels, and 20 subjects per level. An ANOVA revealed a significant effect, and the post-hoc t-tests showed that the only significant result was between Group 1 and 2. With all of this information in hand it is now possible to write-up a complete results section for this analysis. Here is an example:\nMean reaction times for each subject in each condition were submitted to a one-way ANOVA. The main effect of group was significant, F(2,57) = 4.405, MSE = 11552, p\u0026lt;.016. The mean reaction times were 490 ms, 555 ms, and 589 ms, for groups one, two, and three, respectively. Follow-up comparisons showed that group one was not significantly different from group two, t(38)=1.876, p=.068. Similarly, group 2 was not significantly different from group 3, t(38)=1.086, p=.284.\nRunning a between subjects ANOVA for a 2x2 Factorial design The data file 2x2Factorial_Between.txt contains simulated data for a classic memory experiment performed by Godden \u0026amp; Baddeley (1975). The purpose of their experiment was to test the role of contextual information in guiding memory retrieval. They had different groups of subjects encode a list of words for a later memory test in one of two contexts, either on land or under water (the subjects were expert divers). Thus, the first IV was encoding context (land vs. water). In a later memory test the subjects were asked to recall as many words as possible from the list. For the subjects who encoded the words in the land context, half of the subjects performed the recall test on land, and half performed under water. The same was true for the subjects who encoded the words in the under water context. Thus, the second IV was the context of the memory test (Land vs. Water). The purpose of the experiment was to determine whether memory performance would be better when the encoding and test contexts matched (e.g., encoded and tested on land, or encoded and tested under water), compared to when the encoding and test contexts mismathced (e.g., encoded on land but tested under water, or encoded under water but tested on land).\nThe file contains simulated data for 80 subjects. There were four total conditions, and twenty subjects completed each condition. For example, 20 subjects encoded on land and tested on land, 20 subjects encoded on land and tested under water, 20 subjects encoded on land tested under water, and 20 subjects encoded under water and tested under water. The design can be described as a 2 (Encoding context: land vs. water) x 2 (Testing context: land vs. water) between subjects experiment. The dependent variable was proportion of words correctly recalled. The proportion ranges from 0 (no words recalled) to 1 (all words correctly recalled).\nLet’s load the data file into R, then perform the necessary statistical tests to interpret the results. The final product will be a complete results section.\nLoad the data into R\nAllData\u0026lt;-read.table(\u0026quot;RFiles/2x2Factorial_Between.txt\u0026quot;,header=TRUE,sep=\u0026quot;\\t\u0026quot;) Perform a 2x2 ANOVA Note: Accuracy is the name of the column in the data file representing the DV, so it is used in the aov formula. Similarly, TestContext and EncodingContext are the names of the columns representing the IVs, so they are used in the aov formula.\nsummary(aov(Accuracy~TestContext*EncodingContext,AllData))\r#\u0026gt; Error in eval(predvars, data, env): 找不到物件 'Accuracy'\r We can see the ANOVA produced two main effects and one interaction. The main effect for test context was not signifcant, and the main effect for encoding context was not significant. However, the interaction between encoding and test context was significant. The p-value is expressed in scientific notation, meaning that 8.79e-13 is really 0.000000000000879. This is definetly p\u0026lt; .05.\nThe next step is to find the means for each main effect, and the means for the interaction.\nThe means for main effect of test context can be found as follows:\naggregate(Accuracy~TestContext,AllData,mean)\r#\u0026gt; Error in eval(predvars, data, env): 找不到物件 'Accuracy'\r The means for the main effect of encoding context can be found as follows:\naggregate(Accuracy~EncodingContext,AllData,mean)\r#\u0026gt; Error in eval(predvars, data, env): 找不到物件 'Accuracy'\r The means for the interaction between test and encoding context can be found as follows:\naggregate(Accuracy~TestContext*EncodingContext,AllData,mean)\r#\u0026gt; Error in eval(predvars, data, env): 找不到物件 'Accuracy'\r The ANOVA shows that the only the interaction is significant. The means for the interaction effect are displayed immediately above. There are four means, corresponding to each of the ways that the encoding context is paired with the test context. The next step is to interpret the pattern of this interaction. In some sense, the question here is the same as interpreting a significant result from ANOVA on a single-factor with 4-levels. A significant result in either case indicates that at least one of the means is different from the other three, but the ANOVA itself does not specify which means are different from each other. That is, the ANOVA alone does not explain the pattern of the means.\nInspecting the numbers we see what is known as a cross-over interaction. If these numbers were graphed in a line chart, we would see that the lines would cross-over. Indeed, the pattern of the cross-over interaction is exactly what was predicted. Remember, the main prediction of the study was that memory accuracy should be better when the encoding and test contexts match than when they mismatch. Memory performance was .83 and .77 in the matching conditions (land/land, water/water). Memory performance was .61 and .60 in the mismatching conditions (water/land, land/water). It is important to keep the predictions in mind when conducting the follow-up tests.\nThere are 6 possible comparisons that can be made to fully explain the interaction pattern. For example, the means between 1\u0026amp;2, 1\u0026amp;3, 1\u0026amp;4, 2\u0026amp;3, 2\u0026amp;4, and 3\u0026amp;4 can all be submitted to separate t-tests. Sometimes it is necessary to conduct all of the possible comparisons, but usually it is only necessary to conduct the comparisons most relevant to the predictions at hand.\nLet’s start with the subjects who encoded words on Land. They should have better memory when they were tested on land than under water. The t-test is:\nt.test(Accuracy~TestContext, data=AllData[AllData$EncodingContext==\u0026quot;Land\u0026quot;,], var.equal=TRUE)\r#\u0026gt; Error in eval(predvars, data, env): 找不到物件 'Accuracy'\r Next, the subjects who encoded words under water. They should have better memory memory when they were tested under water than on land. The t-test is:\nt.test(Accuracy~TestContext, data=AllData[AllData$EncodingContext==\u0026quot;Water\u0026quot;,], var.equal=TRUE)\r#\u0026gt; Error in eval(predvars, data, env): 找不到物件 'Accuracy'\r These two t-test verify the main predictions of the study. If you look at the original paper, you will see that the authors conducted additional tests to show that there were no significant differences between memory performance in the matching conditions (land/land vs. water/water), and no significant differences between memory performance in the non-matching conditions (land/water vs. water/land).\nWriting up the results section The preceding section produced ANOVA results for a 2x2 between-subjects design, and means for each main effect and interaction, as well as follow-up tests to explain the significant interaction. With all of this information in place it is possible to write-up a complete results section. Here is an example:\nThe mean proportions of correctly recalled words for each subject in each condition were submitted to a 2 (encoding context: land vs. water) x 2 (test context: land vs. water) between-subjects ANOVA. The main effect of encoding context was not significant, F\u0026lt;1. The main effect of test context not significant, F(1,76) = 1.190, MSE = .011, p = .279. The two-way interaction between encoding and test context was significant, F(1,76) = 73.495, MSE = .011, p \u0026lt; .001 . Planned comparisons showed that for participants who encoded words on land, proportion recall was higher when they tested on land (.83) than under water (.61), t(38) = 7.00, p\u0026lt; .001. Similarly, for participants who encoded words under water, proportion recall was higher when they tested under water (.79) than on land (.60), t(38) = 5.23, p\u0026lt; .001.\nNote: The above results section is written with a few guidelines in mind. When a result is not significant some authors decide to simply state that the result was not significant. Some journals may require the author to fully report the F-value, the MSE, and the p-value for all non-significant effects. In the above example, the full report is not given for the first non-significant effect because the F-value was less than 1. In this case, it is often appropriate to simply report that F was less than one. Also notice that the means for the nonsignificant effects were not given. Some journals may require that these means are listed. At the very least it is important that all of the important means can be reconstructed. In this case, the four means from the interaction effect are individually listed; thus, it is is possible for the reader to reconstruct the means for both of the main effects.\nPractice Problems Single factor design with a within-subjects factor The datafile is titled SingleFactor_Within.txt\nThe data file contains simulated data for 20 subjects in a sequence learning task. The dependent variable is ReactionTime. The single independent variable is called Practice, and it has four levels, 1, 2, 3, and 4. Each level represents four different blocks of practicing the sequence. The general prediction is that reaction time should decrease across the four practice blocks. Use R to load the data file and conduct a repeated-measures ANOVA, compute the means for each of the practice blocks, and conduct the necessary paired-samples t-tests. Then write a complete results section for the example data.\nTo get you started the necessary R commands are listed below\nAllData\u0026lt;-read.table(\u0026quot;RFiles/SingleFactor_Within.txt\u0026quot;,header=TRUE,sep=\u0026quot;\\t\u0026quot;)\rsummary(aov(ReactionTime~Practice + Error(as.character(Subjects)/Practice),AllData))\raggregate(ReactionTime~Practice,AllData,mean)\rt.test(AllData[AllData$Practice==\u0026quot;Block1\u0026quot;,]$ReactionTime,AllData[AllData$Practice==\u0026quot;Block2\u0026quot;,]$ReactionTime, paired=TRUE,var.equal=TRUE)\rnote: for the t-test, change the terms Block1 and Block2 to make other comparisons (e.g., Block3 or Block4).\r#\u0026gt; Error: \u0026lt;text\u0026gt;:6:11: 未預期的符號\r#\u0026gt; 5: t.test(AllData[AllData$Practice==\u0026quot;Block1\u0026quot;,]$ReactionTime,AllData[AllData$Practice==\u0026quot;Block2\u0026quot;,]$ReactionTime, paired=TRUE,var.equal=TRUE)\r#\u0026gt; 6: note: for the\r#\u0026gt; ^\r 2x2 within-subjects design The datafile is titled 2x2Factorial_Within.txt\nThe data file contains simulated for 20 subjects in a Stroop task. In a Stroop task, participants are presented with color words printed in congruent or incongruent ink-colors. For example, the word blue printed in BLUE color is a congruent item. The word red printed in BLUE is an incongruent item. In the standard task, participants are instructed to identify the ink-color and ignore the word. Typically, reactions are faster for congruent than incongruent items. In this experiment, participants completed the Stroop task with two different instructions. In one phase they were presented with congruent and incongruent items, and were told to identify the ink-color and ignore the word, this is called the NameColor condition. In the other phase, participants were presented with congruent and incongruent items, and were told to identify the word and ignore the ink-color, this is called the NameWord condition. The predictions are that RTs should generally be faster for congruent than incongruent trials. Also, RTs should generally be faster for the word naming task than the color naming task. Finally, there should be an interaction between congruency and task, such that the Stroop effect (difference between incongruent and congruent items) is larger for the name color task than the name word task.\nThere are two IVS. The first IV is Congruency, with the levels Congruent and Incongruent. The second IV is Task, with the levels NameColor and and Name Word. The DV is ReactionTime. Use R to load the data file, then conduct a repeated-measures ANOVA, compute the means for each of the main effects and the interaction, and conduct any necessary paired-sample t-tests. Then write a complete results section for the example data.\nTo get you started here are the neccessary R commands:\nAllData\u0026lt;-read.table(\u0026quot;RFiles/2x2Factorial_Within.txt\u0026quot;,header=TRUE,sep=\u0026quot;\\t\u0026quot;)\rsummary(aov(ReactionTime~Task*Congruency + Error(as.character(Subjects)/(Task*Congruency)),AllData))\r You can also put the results of the aov into a variable\naovResult\u0026lt;-aov(ReactionTime~Task*Congruency + Error(as.character(Subjects)/(Task*Congruency)),AllData)\r Then you can print all of the means for the main effects and interactions using the following:\nmodel.tables(aovResult,\u0026quot;means\u0026quot;)  Loading raw-data into R Using R to analyze the results from real experiments requires that raw data-files are loaded into R and then transformed into a long-format data frame. Depending on how the raw data is formatted this process can be fairly straightforward, or not. The following provides an example of how to load multiple subjects data files into R and then complete an analysis. The example is taken from a Stroop experiment conducted in PsychoPy. Each subject’s data file is saved as separate .csv files (comma separated value). Each .csv file contains the raw data from a 24 trial Stroop experiment with 12 congruent and 12 incongruent items. The data files are already organized in long-format. The first row contains the columns headers, and each remaining row contains the raw data for each trial. The data files are named Subject1.csv, Subject2.csv, and so on.\nThe following read.table will load a single file into a datafram. However, the working directory must first be set to the location of the file.\nSubject1\u0026lt;-read.table(\u0026quot;RFiles/PsychoPyStroop.csv\u0026quot;,header=TRUE,sep=\u0026quot;,\u0026quot;)\r The ultimate goal here is to load in all 8 subjects worth of data into a single dataframe. This is done using a for loop in R.\nfnames\u0026lt;-c(\u0026quot;RFiles/Subject1.csv\u0026quot;,\u0026quot;RFiles/Subject2.csv\u0026quot;,\u0026quot;RFiles/Subject3.csv\u0026quot;,\u0026quot;RFiles/Subject4.csv\u0026quot;,\u0026quot;RFiles/Subject5.csv\u0026quot;,\u0026quot;RFiles/Subject6.csv\u0026quot;,\u0026quot;RFiles/Subject7.csv\u0026quot;,\u0026quot;RFiles/Subject8.csv\u0026quot;)\rAllSubjectData\u0026lt;-data.frame()\rfor (i in 1:length(fnames)){\rSubjectData\u0026lt;-read.table(fnames[i],header=TRUE,sep=\u0026quot;,\u0026quot;)\rAllSubjectData\u0026lt;-rbind(AllSubjectData,SubjectData)\r}\rCongruencyMeans\u0026lt;-aggregate(KeypressTime.rt~participant*congruency,data=AllSubjectData,mean)\rANOVAresults\u0026lt;-aov(KeypressTime.rt~factor(congruency) + Error(as.character(participant)/factor(congruency)),CongruencyMeans)\rsummary(ANOVAresults)\rmodel.tables(ANOVAresults,\u0026quot;means\u0026quot;)\r"},
{"uri": "/blogR//topic/simulation/4_02_sim.html","title": "4.2 模擬基本 2",
	"tags": [],
	"description": "4_02_sim",
	"content": "basic dnorm : PDF pnorm : CDF qnorm : inverse CDF rnorm : random\ncdf z_scores \u0026lt;- seq(-3, 3, by = .1)\rpvalues \u0026lt;- pnorm(z_scores)\r# Now we'll plot these values\rplot(pvalues, # Plot where y = values and x = index of the value in the vector\rxaxt = \u0026quot;n\u0026quot;, # Don't label the x-axis\rtype = \u0026quot;l\u0026quot;, # Make it a line plot\rmain = \u0026quot;cdf of the Standard Normal\u0026quot;,\rxlab= \u0026quot;Quantiles\u0026quot;,\rylab=\u0026quot;Probability Density\u0026quot;) # These commands label the x-axis\raxis(1, at=which(pvalues == pnorm(-2)), labels=round(pnorm(-2), 2))\raxis(1, at=which(pvalues == pnorm(-1)), labels=round(pnorm(-1), 2))\raxis(1, at=which(pvalues == pnorm(0)), labels=c(.5))\raxis(1, at=which(pvalues == pnorm(1)), labels=round(pnorm(1), 2))\raxis(1, at=which(pvalues == pnorm(2)), labels=round(pnorm(2), 2))\r figure\r 👍 axis下左上又(1,2,3,4) 第2個參數用的是要顯示的號碼值,對樣每個樣本點。 如果是x,y plot這個axis()無作用,這裡只用到Y。\npdf z_scores \u0026lt;- seq(-3, 3, by = .1)\rdvalues \u0026lt;- dnorm(z_scores)\rplot(dvalues, # Plot where y = values and x = index of the value in the vector\rxaxt = \u0026quot;n\u0026quot;, # Don't label the x-axis\rtype = \u0026quot;l\u0026quot;, # Make it a line plot\rmain = \u0026quot;pdf of the Standard Normal\u0026quot;,\rxlab= \u0026quot;Z-score\u0026quot;) # These commands label the x-axis\raxis(1, at=which(dvalues == dnorm(0)), labels=c(0))\raxis(1, at=which(dvalues == dnorm(1)), labels=c(-1, 1))\raxis(1, at=which(dvalues == dnorm(2)), labels=c(-2, 2))\r figure\r pnorm pnorm(2) ## [1] 0.9772499\r#\u0026gt; [1] 0.9772499\rpnorm(2, mean = 5, sd = 3) ## [1] 0.1586553\r#\u0026gt; [1] 0.1586553\rpnorm(2, mean = 5, sd = 3, lower.tail = FALSE)\r#\u0026gt; [1] 0.8413447\r compare oldpar \u0026lt;- par()\rpar(mfrow=c(1,2))\rz_scores \u0026lt;- seq(-3, 3, by = .1)\rpvalues \u0026lt;- pnorm(z_scores)\rquantiles \u0026lt;- seq(0, 1, by = .05)\rqvalues \u0026lt;- qnorm(quantiles)\r# Plot the z_scores\rplot(qvalues,\rtype = \u0026quot;l\u0026quot;, # We want a line graph\rxaxt = \u0026quot;n\u0026quot;, # No x-axis\rxlab=\u0026quot;Probability Density\u0026quot;,\rylab=\u0026quot;Z-scores\u0026quot;)\r# Same pnorm plot from before\rplot(pvalues, # Plot where y = values and x = index of the value in the vector\rxaxt = \u0026quot;n\u0026quot;, # Don't label the x-axis\rtype = \u0026quot;l\u0026quot;, # Make it a line plot\rmain = \u0026quot;cdf of the Standard Normal\u0026quot;,\rxlab= \u0026quot;Quantiles\u0026quot;,\rylab=\u0026quot;Probability Density\u0026quot;) # These commands label the x-axis\raxis(1, at=which(pvalues == pnorm(-2)), labels=round(pnorm(-2), 2))\raxis(1, at=which(pvalues == pnorm(-1)), labels=round(pnorm(-1), 2))\raxis(1, at=which(pvalues == pnorm(0)), labels=c(.5))\raxis(1, at=which(pvalues == pnorm(1)), labels=round(pnorm(1), 2))\raxis(1, at=which(pvalues == pnorm(2)), labels=round(pnorm(2), 2))\r figure\r  qnorm(0.95) ? 一個標準差占了佔了多少百分比?  \r\r\rhint\r1. zscore of 95 percent 1. percent\u0026lt;-pnorm(1)-pnorm(-1) simulate 1    身高 女生 男生      1 0   平均 180 170   標準差 10 10    fn_num\u0026lt;-100\rfh\u0026lt;-rnorm(fn_num,180,10)\rfm\u0026lt;-rnorm(200-fn_num,170,10)\rheight\u0026lt;-c(fh,fm)\rsex\u0026lt;-c(rep(1,fn_num),rep(0,200-fn_num))\rr1\u0026lt;-tapply(height, sex,mean)\rr1\r#\u0026gt; 0 1 #\u0026gt; 172.0062 179.6464\r fn_num_set\u0026lt;-sample(1:199,1000,replace=T) #先抽出female的個數\rrst\u0026lt;-matrix(rep(0,2000),ncol=2) #每一次抽樣男生/女生的平均值\rfor(idx in 1:1000)\r{\rfn_num \u0026lt;-fn_num_set[idx]\rfh\u0026lt;-rnorm(fn_num,180,10)\rfm\u0026lt;-rnorm(200-fn_num,170,10)\rheight\u0026lt;-c(fh,fm)\rsex\u0026lt;-c(rep(1,fn_num),rep(0,200-fn_num))\rr1\u0026lt;-tapply(height, sex,mean)\rrst[idx,1]=r1[1]\rrst[idx,2]=r1[2]\r}\rsummary(rst)\r#\u0026gt; V1 V2 #\u0026gt; Min. :159.1 Min. :162.6 #\u0026gt; 1st Qu.:169.3 1st Qu.:179.3 #\u0026gt; Median :170.0 Median :180.0 #\u0026gt; Mean :170.0 Mean :180.0 #\u0026gt; 3rd Qu.:170.7 3rd Qu.:180.8 #\u0026gt; Max. :183.7 Max. :198.5\r 下面這個,好像在rmarkdown 畫不出來 unknown reason !!\nalist\u0026lt;-list(rst[,1],rst[,2])\rdinfo\u0026lt;-lapply(alist,density)\rt1\u0026lt;-sapply(dinfo,function(item){range(item$x)})\rrx\u0026lt;-range(t1)\rt2\u0026lt;-sapply(dinfo,function(item){range(item$y)})\rry\u0026lt;-range(t2)\rplot(dinfo[[1]], xlim = rx, ylim = ry, main = \u0026quot;\u0026quot;)\rfor(i in 1:length(dinfo)) {\rlines(dinfo[[i]], xlim = rx, ylim = ry, col = i)\r}  figure\r 轉函數\n總體而言，轉成函數的考慮就是如何避免hard coding。\nplot.multi.density\u0026lt;-function (alist)\r{\rdinfo\u0026lt;-lapply(alist,density)#每組資料，求density\r# 每組資料的x範圍\rt1\u0026lt;-sapply(dinfo,function(item){range(item$x)})\rrx\u0026lt;-range(t1)\r# 每組資料的y範圍\rt2\u0026lt;-sapply(dinfo,function(item){range(item$y)})\rry\u0026lt;-range(t2)\rplot(dinfo[[1]],xlim = rx, ylim = ry, main = \u0026quot;\u0026quot;)\rfor(i in 1:length(dinfo)) {\rlines(dinfo[[i]],xlim = rx, ylim = ry, col = i)\r} }  討論：上面函數的限制？ 第一個限制，先看看有沒有預設組別\n問題：如果要加上區域顏色？ 簡單一點的話，可以用選項type=\u0026quot;h\u0026quot;, (plot, line兩個函數都吃)\n應用自己的函數\nalist\u0026lt;-list(rst[,1],rst[,2])\rplot.multi.density(alist)\r figure\r 上面的函數，預設參數是傳入使用者指定的list，裡面有使用者指定的組別 但是如果因為需要，發現傳入矩陣比較方便（例如每一個欄位代表每一組的模擬結果，那樣怎樣避免hard coding?\nelist\u0026lt;-vector(\u0026quot;list\u0026quot;,ncol(rst))#指定大小的list,如果空集合elist\u0026lt;-list()\rfor(i in 1:ncol(rst)){\relist[[i]]\u0026lt;-rst[,i] #注意雙括號\r}\r 之前有提過，大部分的文件都是說單/雙括號的差別是前者拿到的仍然是list,後者拿到的是內容。 但是以程式語言的眼光來看，我們先說凡是陣列，其元素的型態都只能放一樣（也就是大小固定），但是現在list的元素型態可以不單一，因此，編譯器無法知道如何指派大小，解決辦法就是每一個元素其實都是一個指標。 （todo: 需要一個圖）\r\r\r利用套件sm The sm package also includes a way of doing multiple density plots. The data must be in a data frame.\nlibrary(sm)\r#\u0026gt; Package 'sm', version 2.2-5.6: type help(sm) for summary information\rrstdf\u0026lt;-data.frame(rst)\rcolnames(rstdf)\u0026lt;-c(\u0026quot;male\u0026quot;,\u0026quot;female\u0026quot;)\rsm.density.compare(rstdf$male, rstdf$female)\r figure\r # Add a legend (the color numbers start from 2 and go up)\r#legend(\u0026quot;topright\u0026quot;, levels(data$cond), fill=2+(0:nlevels(data$cond)))\r sm 範例 sm.density.compare(iris$Sepal.Length, iris$Species, xlab=\u0026quot;Species\u0026quot;)\rtitle(main=\u0026quot;Distributions of Species\u0026quot;)\r figure\r x \u0026lt;- seq(from = 110, to = 174, by = 0.5)\ry1 \u0026lt;- dnorm(x, mean = 145, sd = 9)\ry2 \u0026lt;- dnorm(x, mean = 138, sd = 8)\rplot(x, y1, type=\u0026quot;l\u0026quot;, lwd=2, col=\u0026quot;red\u0026quot;,\rmain=\u0026quot;Systolic Blood Pressure Before and After Treatment\u0026quot;,\rxlab = \u0026quot;Systolic Blood Pressure (mmHg)\u0026quot;,\rylab = \u0026quot;Frequency\u0026quot;, yaxt=\u0026quot;n\u0026quot;,\rxlim = c(110, 175), ylim = c(0, 0.05))\rlines(x, y2)\rpolygon(c(110,x,175),c(0,y2,0), col=\u0026quot;firebrick3\u0026quot;,\rborder = \u0026quot;black\u0026quot;)\rpolygon(c(117,x,175),c(0,y1,0), col=\u0026quot;dodgerblue4\u0026quot;,\rborder = \u0026quot;black\u0026quot;)\rylab=c(seq(from=0, to=175, by=25))\ry=c(seq(from=0, to=0.05, length.out = 8))\raxis(2,at=y,labels=ylab, las=1)#下左（2），在y向量上標ylab,las 文字和座標的角度\rtext(x = 120, y = 0.045, \u0026quot;- Pre-Treatment BP\u0026quot;, col = \u0026quot;dodgerblue4\u0026quot;, cex = 0.9)\rtext(x = 120, y = 0.04, \u0026quot; - Post-Treatment BP\u0026quot;, col = \u0026quot;firebrick3\u0026quot;, cex = 0.9)\rpoints(109, 0.0445, pch = 15, col = \u0026quot;dodgerblue4\u0026quot;)\rpoints(109, 0.0395, pch = 15, col = \u0026quot;firebrick3\u0026quot;)\r figure\r 其他測試\nx \u0026lt;- seq(-2, 2, 0.05)\ry1 \u0026lt;- pnorm(x)\ry2 \u0026lt;- pnorm(x,1,1)\rplot(x,y1,type=\u0026quot;l\u0026quot;,col=\u0026quot;red\u0026quot;)\rlines(x,y2,col=\u0026quot;green\u0026quot;)\r figure\r plot( x, y1, type=\u0026quot;l\u0026quot;, col=\u0026quot;red\u0026quot; )\rpar(new=TRUE)\rplot( x, y2, type=\u0026quot;l\u0026quot;, col=\u0026quot;green\u0026quot; )\r figure\r note: add=TRUE 有時候不作用，例如plot\nhist( y1 ,col=\u0026quot;red\u0026quot; )\rhist( y2, add=TRUE,col=\u0026quot;blue\u0026quot; )\r figure\r"},
{"uri": "/blogR//topic/simulation/mc_%E5%9F%BA%E6%9C%AC.html","title": "MC_基本",
	"tags": [],
	"description": "MC_基本",
	"content": "亂數 # Sample from a standard normal RV with sample size n=5:\rrnorm(5)\r# A different sample from the same distribution:\rrnorm(5)\r# Set the seed of the random number generator and take two samples:\rset.seed(6254137)\rrnorm(5)\rrnorm(5)\r# Reset the seed to the same value to get the same samples again:\rset.seed(6254137)\rrnorm(5)\rrnorm(5)\r 抽樣 rbinom(10,1,0.5) # Bernouli rnorm(10) # normal\r 重複抽樣\n# Set the random seed\rset.seed(123456)\r# initialize ybar to a vector of length r=10000 to later store results:\rr \u0026lt;- 10000\rybar \u0026lt;- numeric(r)\r# repeat r times:\rfor(j in 1:r) {\r# Draw a sample and store the sample mean in pos. j=1,2,... of ybar: sample \u0026lt;- rnorm(100,10,2)\rybar[j] \u0026lt;- mean(sample)\r}\r 結果分析\n# The first 20 of 10000 estimates:\rybar[1:20]\r# Simulated mean:\rmean(ybar)\r# Simulated variance:\rvar(ybar)\r# Simulated density:\rplot(density(ybar))\rcurve( dnorm(x,10,sqrt(.04)), add=TRUE,lty=2)\r 模擬估計 # Set the random seed\rset.seed(123456)\r# Draw a sample given the population parameters\rsample \u0026lt;- rnorm(100,10,2)\r# Estimate the population mean with the sample average\rmean(sample)\r#\u0026gt; [1] 10.03364\r# Draw a different sample and estimate again:\rsample \u0026lt;- rnorm(100,10,2)\rmean(sample)\r#\u0026gt; [1] 9.913197\r# Draw a third sample and estimate again:\rsample \u0026lt;- rnorm(100,10,2)\rmean(sample)\r#\u0026gt; [1] 10.21746\r 模擬推論 # Set the random seed\rset.seed(123456)\r# initialize vectors to later store results:\rr \u0026lt;- 10000\rCIlower \u0026lt;- numeric(r); CIupper \u0026lt;- numeric(r)\rpvalue1 \u0026lt;- numeric(r); pvalue2 \u0026lt;- numeric(r)\r# repeat r times:\rfor(j in 1:r) {\r# Draw a sample\rsample \u0026lt;- rnorm(100,10,2)\r# test the (correct) null hypothesis mu=10:\rtestres1 \u0026lt;- t.test(sample,mu=10)\r# store CI \u0026amp; p value:\rCIlower[j] \u0026lt;- testres1$conf.int[1]\rCIupper[j] \u0026lt;- testres1$conf.int[2]\rpvalue1[j] \u0026lt;- testres1$p.value\r# test the (incorrect) null hypothesis mu=9.5 \u0026amp; store the p value:\rpvalue2[j] \u0026lt;- t.test(sample,mu=9.5)$p.value\r}\r# Test results as logical value\rreject1\u0026lt;-pvalue1\u0026lt;=0.05; reject2\u0026lt;-pvalue2\u0026lt;=0.05\rtable(reject1)\r#\u0026gt; reject1\r#\u0026gt; FALSE TRUE #\u0026gt; 9492 508\rtable(reject2)\r#\u0026gt; reject2\r#\u0026gt; FALSE TRUE #\u0026gt; 3043 6957\r"},
{"uri": "/blogR//topic/simulation/poisson%E5%88%86%E9%85%8D.html","title": "Poisson分配",
	"tags": [],
	"description": "Poisson分配",
	"content": " 相關🤦‍♂️ 金門🤦‍♂️ 直接✔  R Functions dpois, ppois, and rpois\n\\( f_X (k;λ)=P({X=k})=\\frac{λ^k}{k!} e^{-λ} \\)　平均 \\(μ=λ\\)\n變異數 \\(σ^2=λ\\)\n dpois(x, lambda) ppois(q, lambda, lower.tail) is the cumulative probability (lower.tail = TRUE for left tail, lower.tail = FALSE for right tail) of less than or equal to q successes. rpois(n, lambda) 產生亂數 x ~ Poisson distribution(lambda). qpois(p, lambda, lower.tail) returns the value (quantile) at the specified cumulative probability (percentile) p.  Example What is the probability of making 2 to 4 sales in a week if the average sales rate is 3 per week?\n# Using cumulative probability\rppois(q = 4, lambda = 3, lower.tail = TRUE) - ppois(q = 1, lambda = 3, lower.tail = TRUE)\r#\u0026gt; [1] 0.616115\r# Using exact probability\rdpois(x = 2, lambda = 3) +\rdpois(x = 3, lambda = 3) +\rdpois(x = 4, lambda = 4)\r#\u0026gt; [1] 0.6434504\r# expected number of sales = lambda = 3\r# variance = lambda = 3\rlibrary(ggplot2)\rlibrary(dplyr)\r#\u0026gt; #\u0026gt; 載入套件：'dplyr'\r#\u0026gt; 下列物件被遮斷自 'package:stats':\r#\u0026gt; #\u0026gt; filter, lag\r#\u0026gt; 下列物件被遮斷自 'package:base':\r#\u0026gt; #\u0026gt; intersect, setdiff, setequal, union\roptions(scipen = 999, digits = 2) # sig digits\revents \u0026lt;- 0:10\rdensity \u0026lt;- dpois(x = events, lambda = 3)\rprob \u0026lt;- ppois(q = events, lambda = 3, lower.tail = TRUE)\rdf \u0026lt;- data.frame(events, density, prob)\rggplot(df, aes(x = factor(events), y = density)) +\rgeom_col() +\rgeom_text(\raes(label = round(density,2), y = density + 0.01),\rposition = position_dodge(0.9),\rsize = 3,\rvjust = 0\r) +\rlabs(title = \u0026quot;PMF and CDF of Poisson Distribution\u0026quot;,\rsubtitle = \u0026quot;P(3).\u0026quot;,\rx = \u0026quot;Events (x)\u0026quot;,\ry = \u0026quot;Density\u0026quot;) +\rgeom_line(data = df, aes(x = events, y = prob))\r figure\r Example\nSuppose a baseball player has a p=.300 batting average. What is the probability of X\u0026lt;=150 hits in n=500 at bats? X=150? X\u0026gt;150?\n# probability of x \u0026lt;= 150\rppois(q = 150, lambda = .300 * 500, lower.tail = TRUE)\r#\u0026gt; [1] 0.52\r# probability of x = 150\rdpois(x = 150, lambda = .300 * 500)\r#\u0026gt; [1] 0.033\r# probability of x \u0026gt; 150\rppois(q = 150, lambda = .300 * 500, lower.tail = FALSE) #\u0026gt; [1] 0.48\rlibrary(ggplot2)\rlibrary(dplyr)\roptions(scipen = 999, digits = 2) # sig digits\rhits \u0026lt;- 0:100 * 3\rdensity \u0026lt;- dpois(x = hits, lambda = .300 * 500)\rprob \u0026lt;- ppois(q = hits, lambda = .300 * 500, lower.tail = TRUE)\rdf \u0026lt;- data.frame(hits, density, prob)\rggplot(df, aes(x = hits, y = density)) +\rgeom_col() +\rlabs(title = \u0026quot;Poisson(150)\u0026quot;,\rsubtitle = \u0026quot;PMF and CDF of Poisson(3) distribution.\u0026quot;,\rx = \u0026quot;Hits (x)\u0026quot;,\ry = \u0026quot;Density\u0026quot;) +\rgeom_line(data = df, aes(x = hits, y = prob))\r figure\r The Poisson distribution approximates the binomial distribution with λ=np if n\u0026gt;=20 and p\u0026lt;=0.05.\nExample What is the distribution of successes from a sample of n = 50 when the probability of success is p = .03?\nlibrary(ggplot2)\rlibrary(dplyr)\rlibrary(tidyr)\roptions(scipen = 999, digits = 2) # sig digits\rn = 0:10\rdf \u0026lt;- data.frame(events = 0:10, Poisson = dpois(x = n, lambda = .03 * 50),\rBinomial = dbinom(x = n, size = 50, p = .03))\rdf_tidy \u0026lt;- gather(df, key = \u0026quot;Distribution\u0026quot;, value = \u0026quot;density\u0026quot;, -c(events))\rggplot(df_tidy, aes(x = factor(events), y = density, fill = Distribution)) +\rgeom_col(position = \u0026quot;dodge\u0026quot;) +\rlabs(title = \u0026quot;Poisson(15) and Binomial(50, .03)\u0026quot;,\rsubtitle = \u0026quot;Poisson approximates binomial when n \u0026gt;= 20 and p \u0026lt;= .05.\u0026quot;,\rx = \u0026quot;Events (x)\u0026quot;,\ry = \u0026quot;Density\u0026quot;)\r figure\r Example Suppose the probability that a drug produces a certain side effect is p = = 0.1% and n = 1,000 patients in a clinical trial receive the drug. What is the probability 0 people experience the side effect?\n# The expected value is np\r1000 * .001\r#\u0026gt; [1] 1\r# The probability of measuring 0 when the expected value is 1\rdpois(x = 0, lambda = 1000 * .001) #\u0026gt; [1] 0.37\rlibrary(ggplot2)\rlibrary(dplyr)\roptions(scipen = 999, digits = 2) # sig digits\rx \u0026lt;- 0:10\rdensity \u0026lt;- dpois(x = x, lambda = 1000 * .001)\rprob \u0026lt;- ppois(q = x, lambda = 1000 * .001, lower.tail = TRUE)\rdf \u0026lt;- data.frame(x, density, prob)\rggplot(df, aes(x = x, y = density)) +\rgeom_col() +\rgeom_text(\raes(label = round(density,2), y = density + 0.01),\rposition = position_dodge(0.9),\rsize = 3,\rvjust = 0\r) +\rlabs(title = \u0026quot;Poisson(1)\u0026quot;,\rsubtitle = \u0026quot;PMF and CDF of Poisson(1) distribution.\u0026quot;,\rx = \u0026quot;Events (x)\u0026quot;,\ry = \u0026quot;Density\u0026quot;) +\rgeom_line(data = df, aes(x = x, y = prob))\r figure\r"},
{"uri": "/blogR//topic/simulation/central.html","title": "中央",
	"tags": [],
	"description": "包括中央極限",
	"content": "大數法則的實驗 x \u0026lt;-rnorm(1000, 10, 1)\ry \u0026lt;-cumsum(x)/(1:1000)\rplot(y, t ='l')\rabline(h =10)\r figure\r test 員工的薪水分配，嚴重懷疑不是常態分配\n100: -\u0026gt;\n mu\u0026lt;-100 sd\u0026lt;-100 se(stander error) \u0026lt;- /sd/sqrt(100)  1.96\n-1.96*/se , /mu , 1.96* /se\nboot strapping 把我們得到的100個樣本，重複抽1000，(每次必須抽100個)然後得到1000個平均 mu,sd percentile(2.5) , mu, percentile(97.5)\nN\u0026lt;-10\rmetasample\u0026lt;-rnorm(N,5,2)\rbmu\u0026lt;-numeric(1000)\rfor(i in 1:1000){\rrndno\u0026lt;-as.integer(runif(N)*N)+1 smp\u0026lt;-metasample[rndno]\rbmu[i]\u0026lt;-mean(smp)\r}\rp\u0026lt;-density(bmu)\rplot(p)\rqq\u0026lt;-quantile(bmu)\rrug(qq,col=\u0026quot;red\u0026quot;)\r figure\r qq\r#\u0026gt; 0% 25% 50% 75% 100% #\u0026gt; 1.694805 4.186672 4.608124 5.090237 6.352302\r N\u0026lt;-100\rmetasample\u0026lt;-rnorm(N,5,2)\rbmu\u0026lt;-numeric(1000)\rfor(i in 1:1000){\rrndno\u0026lt;-as.integer(runif(N)*N)+1 smp\u0026lt;-metasample[rndno]\rbmu[i]\u0026lt;-mean(smp)\r}\rp\u0026lt;-density(bmu)\rplot(p)\rqq\u0026lt;-quantile(bmu)\rrug(qq,col=\u0026quot;red\u0026quot;)\r figure\r qq\r#\u0026gt; 0% 25% 50% 75% 100% #\u0026gt; 4.502879 4.990880 5.127810 5.260000 5.787620\r N\u0026lt;-100\rmetasample\u0026lt;-rnorm(N,5,2)\rhinfo\u0026lt;-hist(metasample)\rlx\u0026lt;-seq(min(metasample),max(metasample),length=100)\rly\u0026lt;-dnorm(lx,mean(metasample),sd(metasample))\rsy\u0026lt;-ly*(diff(lx)[1])*N lines(lx,sy,col=\u0026quot;blue\u0026quot;)\r figure\r N\u0026lt;-100\rmetasample\u0026lt;-rnorm(N,5,2)\rhinfo\u0026lt;-hist(metasample)\rly\u0026lt;-dnorm(hinfo$mids,mean(metasample),sd(metasample))\rsy\u0026lt;-ly*(diff(hinfo$mids)[1])*N lines(hinfo$mids,sy,col=\u0026quot;blue\u0026quot;)\r figure\r"}]
