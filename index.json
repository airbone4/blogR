[
{"uri": "/blogR//rlang/hw/dataset_class.html","title": "資料集",
	"tags": [],
	"description": "練習",
	"content": "\r\r\r\r\r❓\n 要知道目前有哪些資料集   📝data()可以列出目前有甚麼資料可以用,也可以放入參數,只列出某個package的資料集。   寫個函數,判斷目前我們要的資料集是不是存在  ❓\n 要知道資料集cars的欄位 列出前10筆資料   normal pretty: 📝 安裝DT: install.pacakges(“DT”),參考 💣 會缺失各種程式庫  hint  data() names(cars)  List of 4 #🏷👍跟我們說這是list ,有4個元素\r$ title : chr \u0026quot;Data sets\u0026quot;\r$ header : NULL\r$ results: chr [1:104, 1:4] # 🏷(這是一個字串矩陣,可以大致資料在這裡) \u0026quot;datasets\u0026quot; \u0026quot;datasets\u0026quot; \u0026quot;datasets\u0026quot; \u0026quot;datasets\u0026quot; ...\r..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2 ## 🏷(2維度的名稱,這裡可以看到沒有ROW名稱,但是有欄位名稱) .. ..$ : NULL .. ..$ : chr [1:4] #🏷(這裡可以看出是一個矩陣) \u0026quot;Package\u0026quot; \u0026quot;LibPath\u0026quot; \u0026quot;Item\u0026quot; \u0026quot;Title\u0026quot;\r$ footer : chr \u0026quot;Use ‘data(package = .packages(all.available = TRUE))’\\nto list the data sets in all *available* packages.\u0026quot;\r- attr(*, \u0026quot;class\u0026quot;)= chr \u0026quot;packageIQR\u0026quot;\r 📝 安裝DT: install.pacakges(“DT”),參考  practice \r展開\r``` r\rlibrary(DT)\rdn\u0026lt;-data()\rss\u0026lt;-dn$results[,\u0026#34;Title\u0026#34;]\rds\u0026lt;-data.frame(ss)\rdatatable(ds)\r```\r\u0026lt;div id=\u0026quot;htmlwidget-1\u0026quot; style=\u0026quot;width:100%;height:auto;\u0026quot; class=\u0026quot;datatables html-widget\u0026quot;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script type=\u0026quot;application/json\u0026quot; data-for=\u0026quot;htmlwidget-1\u0026quot;\u0026gt;{\u0026quot;x\u0026quot;:{\u0026quot;filter\u0026quot;:\u0026quot;none\u0026quot;,\u0026quot;vertical\u0026quot;:false,\u0026quot;data\u0026quot;:[[\u0026quot;1\u0026quot;,\u0026quot;2\u0026quot;,\u0026quot;3\u0026quot;,\u0026quot;4\u0026quot;,\u0026quot;5\u0026quot;,\u0026quot;6\u0026quot;,\u0026quot;7\u0026quot;,\u0026quot;8\u0026quot;,\u0026quot;9\u0026quot;,\u0026quot;10\u0026quot;,\u0026quot;11\u0026quot;,\u0026quot;12\u0026quot;,\u0026quot;13\u0026quot;,\u0026quot;14\u0026quot;,\u0026quot;15\u0026quot;,\u0026quot;16\u0026quot;,\u0026quot;17\u0026quot;,\u0026quot;18\u0026quot;,\u0026quot;19\u0026quot;,\u0026quot;20\u0026quot;,\u0026quot;21\u0026quot;,\u0026quot;22\u0026quot;,\u0026quot;23\u0026quot;,\u0026quot;24\u0026quot;,\u0026quot;25\u0026quot;,\u0026quot;26\u0026quot;,\u0026quot;27\u0026quot;,\u0026quot;28\u0026quot;,\u0026quot;29\u0026quot;,\u0026quot;30\u0026quot;,\u0026quot;31\u0026quot;,\u0026quot;32\u0026quot;,\u0026quot;33\u0026quot;,\u0026quot;34\u0026quot;,\u0026quot;35\u0026quot;,\u0026quot;36\u0026quot;,\u0026quot;37\u0026quot;,\u0026quot;38\u0026quot;,\u0026quot;39\u0026quot;,\u0026quot;40\u0026quot;,\u0026quot;41\u0026quot;,\u0026quot;42\u0026quot;,\u0026quot;43\u0026quot;,\u0026quot;44\u0026quot;,\u0026quot;45\u0026quot;,\u0026quot;46\u0026quot;,\u0026quot;47\u0026quot;,\u0026quot;48\u0026quot;,\u0026quot;49\u0026quot;,\u0026quot;50\u0026quot;,\u0026quot;51\u0026quot;,\u0026quot;52\u0026quot;,\u0026quot;53\u0026quot;,\u0026quot;54\u0026quot;,\u0026quot;55\u0026quot;,\u0026quot;56\u0026quot;,\u0026quot;57\u0026quot;,\u0026quot;58\u0026quot;,\u0026quot;59\u0026quot;,\u0026quot;60\u0026quot;,\u0026quot;61\u0026quot;,\u0026quot;62\u0026quot;,\u0026quot;63\u0026quot;,\u0026quot;64\u0026quot;,\u0026quot;65\u0026quot;,\u0026quot;66\u0026quot;,\u0026quot;67\u0026quot;,\u0026quot;68\u0026quot;,\u0026quot;69\u0026quot;,\u0026quot;70\u0026quot;,\u0026quot;71\u0026quot;,\u0026quot;72\u0026quot;,\u0026quot;73\u0026quot;,\u0026quot;74\u0026quot;,\u0026quot;75\u0026quot;,\u0026quot;76\u0026quot;,\u0026quot;77\u0026quot;,\u0026quot;78\u0026quot;,\u0026quot;79\u0026quot;,\u0026quot;80\u0026quot;,\u0026quot;81\u0026quot;,\u0026quot;82\u0026quot;,\u0026quot;83\u0026quot;,\u0026quot;84\u0026quot;,\u0026quot;85\u0026quot;,\u0026quot;86\u0026quot;,\u0026quot;87\u0026quot;,\u0026quot;88\u0026quot;,\u0026quot;89\u0026quot;,\u0026quot;90\u0026quot;,\u0026quot;91\u0026quot;,\u0026quot;92\u0026quot;,\u0026quot;93\u0026quot;,\u0026quot;94\u0026quot;,\u0026quot;95\u0026quot;,\u0026quot;96\u0026quot;,\u0026quot;97\u0026quot;,\u0026quot;98\u0026quot;,\u0026quot;99\u0026quot;,\u0026quot;100\u0026quot;,\u0026quot;101\u0026quot;,\u0026quot;102\u0026quot;,\u0026quot;103\u0026quot;,\u0026quot;104\u0026quot;],[\u0026quot;Monthly Airline Passenger Numbers 1949-1960\u0026quot;,\u0026quot;Sales Data with Leading Indicator\u0026quot;,\u0026quot;Sales Data with Leading Indicator\u0026quot;,\u0026quot;Biochemical Oxygen Demand\u0026quot;,\u0026quot;Carbon Dioxide Uptake in Grass Plants\u0026quot;,\u0026quot;Weight versus age of chicks on different diets\u0026quot;,\u0026quot;Elisa assay of DNase\u0026quot;,\u0026quot;Daily Closing Prices of Major European Stock Indices, 1991-1998\u0026quot;,\u0026quot;Determination of Formaldehyde\u0026quot;,\u0026quot;Hair and Eye Color of Statistics Students\u0026quot;,\u0026quot;Harman Example 2.3\u0026quot;,\u0026quot;Harman Example 7.4\u0026quot;,\u0026quot;Pharmacokinetics of Indomethacin\u0026quot;,\u0026quot;Effectiveness of Insect Sprays\u0026quot;,\u0026quot;Quarterly Earnings per Johnson \u0026amp; Johnson Share\u0026quot;,\u0026quot;Level of Lake Huron 1875-1972\u0026quot;,\u0026quot;Intercountry Life-Cycle Savings Data\u0026quot;,\u0026quot;Growth of Loblolly pine trees\u0026quot;,\u0026quot;Flow of the River Nile\u0026quot;,\u0026quot;Growth of Orange Trees\u0026quot;,\u0026quot;Potency of Orchard Sprays\u0026quot;,\u0026quot;Results from an Experiment on Plant Growth\u0026quot;,\u0026quot;Reaction Velocity of an Enzymatic Reaction\u0026quot;,\u0026quot;Road Casualties in Great Britain 1969-84\u0026quot;,\u0026quot;Pharmacokinetics of Theophylline\u0026quot;,\u0026quot;Survival of passengers on the Titanic\u0026quot;,\u0026quot;The Effect of Vitamin C on Tooth Growth in Guinea Pigs\u0026quot;,\u0026quot;Student Admissions at UC Berkeley\u0026quot;,\u0026quot;Road Casualties in Great Britain 1969-84\u0026quot;,\u0026quot;UK Quarterly Gas Consumption\u0026quot;,\u0026quot;Accidental Deaths in the US 1973-1978\u0026quot;,\u0026quot;Violent Crime Rates by US State\u0026quot;,\u0026quot;Lawyers' Ratings of State Judges in the US Superior Court\u0026quot;,\u0026quot;Personal Expenditure Data\u0026quot;,\u0026quot;Distances Between European Cities and Between US Cities\u0026quot;,\u0026quot;Death Rates in Virginia (1940)\u0026quot;,\u0026quot;Internet Usage per Minute\u0026quot;,\u0026quot;The World's Telephones\u0026quot;,\u0026quot;Ability and Intelligence Tests\u0026quot;,\u0026quot;Passenger Miles on Commercial US Airlines, 1937-1960\u0026quot;,\u0026quot;New York Air Quality Measurements\u0026quot;,\u0026quot;Anscombe's Quartet of 'Identical' Simple Linear Regressions\u0026quot;,\u0026quot;The Joyner-Boore Attenuation Data\u0026quot;,\u0026quot;The Chatterjee-Price Attitude Data\u0026quot;,\u0026quot;Quarterly Time Series of the Number of Australian Residents\u0026quot;,\u0026quot;Body Temperature Series of Two Beavers\u0026quot;,\u0026quot;Body Temperature Series of Two Beavers\u0026quot;,\u0026quot;Speed and Stopping Distances of Cars\u0026quot;,\u0026quot;Chicken Weights by Feed Type\u0026quot;,\u0026quot;Mauna Loa Atmospheric CO2 Concentration\u0026quot;,\u0026quot;Student's 3000 Criminals Data\u0026quot;,\u0026quot;Yearly Numbers of Important Discoveries\u0026quot;,\u0026quot;Smoking, Alcohol and (O)esophageal Cancer\u0026quot;,\u0026quot;Conversion Rates of Euro Currencies\u0026quot;,\u0026quot;Conversion Rates of Euro Currencies\u0026quot;,\u0026quot;Distances Between European Cities and Between US Cities\u0026quot;,\u0026quot;Old Faithful Geyser Data\u0026quot;,\u0026quot;Monthly Deaths from Lung Diseases in the UK\u0026quot;,\u0026quot;Freeny's Revenue Data\u0026quot;,\u0026quot;Freeny's Revenue Data\u0026quot;,\u0026quot;Freeny's Revenue Data\u0026quot;,\u0026quot;Infertility after Spontaneous and Induced Abortion\u0026quot;,\u0026quot;Edgar Anderson's Iris Data\u0026quot;,\u0026quot;Edgar Anderson's Iris Data\u0026quot;,\u0026quot;Areas of the World's Major Landmasses\u0026quot;,\u0026quot;Monthly Deaths from Lung Diseases in the UK\u0026quot;,\u0026quot;Luteinizing Hormone in Blood Samples\u0026quot;,\u0026quot;Longley's Economic Regression Data\u0026quot;,\u0026quot;Annual Canadian Lynx trappings 1821-1934\u0026quot;,\u0026quot;Monthly Deaths from Lung Diseases in the UK\u0026quot;,\u0026quot;Michelson Speed of Light Data\u0026quot;,\u0026quot;Motor Trend Car Road Tests\u0026quot;,\u0026quot;Average Yearly Temperatures in New Haven\u0026quot;,\u0026quot;Average Monthly Temperatures at Nottingham, 1920-1939\u0026quot;,\u0026quot;Classical N, P, K Factorial Experiment\u0026quot;,\u0026quot;Occupational Status of Fathers and their Sons\u0026quot;,\u0026quot;Annual Precipitation in US Cities\u0026quot;,\u0026quot;Quarterly Approval Ratings of US Presidents\u0026quot;,\u0026quot;Vapor Pressure of Mercury as a Function of Temperature\u0026quot;,\u0026quot;Locations of Earthquakes off Fiji\u0026quot;,\u0026quot;Random Numbers from Congruential Generator RANDU\u0026quot;,\u0026quot;Lengths of Major North American Rivers\u0026quot;,\u0026quot;Measurements on Petroleum Rock Samples\u0026quot;,\u0026quot;Student's Sleep Data\u0026quot;,\u0026quot;Brownlee's Stack Loss Plant Data\u0026quot;,\u0026quot;Brownlee's Stack Loss Plant Data\u0026quot;,\u0026quot;Brownlee's Stack Loss Plant Data\u0026quot;,\u0026quot;US State Facts and Figures\u0026quot;,\u0026quot;US State Facts and Figures\u0026quot;,\u0026quot;US State Facts and Figures\u0026quot;,\u0026quot;US State Facts and Figures\u0026quot;,\u0026quot;US State Facts and Figures\u0026quot;,\u0026quot;US State Facts and Figures\u0026quot;,\u0026quot;US State Facts and Figures\u0026quot;,\u0026quot;Monthly Sunspot Data, from 1749 to \u0026amp;#34;Present\u0026amp;#34;\u0026quot;,\u0026quot;Yearly Sunspot Data, 1700-1988\u0026quot;,\u0026quot;Monthly Sunspot Numbers, 1749-1983\u0026quot;,\u0026quot;Swiss Fertility and Socioeconomic Indicators (1888) Data\u0026quot;,\u0026quot;Yearly Treering Data, -6000-1979\u0026quot;,\u0026quot;Diameter, Height and Volume for Black Cherry Trees\u0026quot;,\u0026quot;Populations Recorded by the US Census\u0026quot;,\u0026quot;Topographic Information on Auckland's Maunga Whau Volcano\u0026quot;,\u0026quot;The Number of Breaks in Yarn during Weaving\u0026quot;,\u0026quot;Average Heights and Weights for American Women\u0026quot;]],\u0026quot;container\u0026quot;:\u0026quot;\u0026lt;table class=\u0026amp;#34;display\u0026amp;#34;\u0026gt;\\n \u0026lt;thead\u0026gt;\\n \u0026lt;tr\u0026gt;\\n \u0026lt;th\u0026gt; \u0026lt;/th\u0026gt;\\n \u0026lt;th\u0026gt;ss\u0026lt;/th\u0026gt;\\n \u0026lt;/tr\u0026gt;\\n \u0026lt;/thead\u0026gt;\\n\u0026lt;/table\u0026gt;\u0026quot;,\u0026quot;options\u0026quot;:{\u0026quot;order\u0026quot;:[],\u0026quot;autoWidth\u0026quot;:false,\u0026quot;orderClasses\u0026quot;:false,\u0026quot;columnDefs\u0026quot;:[{\u0026quot;orderable\u0026quot;:false,\u0026quot;targets\u0026quot;:0}]}},\u0026quot;evals\u0026quot;:[],\u0026quot;jsHooks\u0026quot;:[]}\u0026lt;/script\u0026gt;\nx \u0026lt;- sample(replace = TRUE, 20, x = c(1:10, NA))\ry \u0026lt;- runif(min = 0, max = 1, 20)\rcor(m = \u0026quot;k\u0026quot;, y = y, u = \u0026quot;p\u0026quot;, x = x)\r "},
{"uri": "/blogR//rlang/hw/hw_filesystem.html","title": "檔案系統",
	"tags": [],
	"description": "練習",
	"content": "\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r❓ 1  要知道目前有哪些套件  View 列表(datatable) 寫入檔案(3個欄位,套件名稱、套件路徑和套件版本,按照名稱排序) 如果不要row.names,而且欄位名稱是中文。   分析  主要版本第2版的有幾個,有哪些? 平均每個套件有幾個檔案?    pkgs\u0026lt;-installed.packages()\rstr(pkgs) #\u0026gt; chr [1:206, 1:16] \u0026quot;abind\u0026quot; \u0026quot;AER\u0026quot; \u0026quot;askpass\u0026quot; \u0026quot;assertthat\u0026quot; \u0026quot;babynames\u0026quot; ...\r#\u0026gt; - attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r#\u0026gt; ..$ : chr [1:206] \u0026quot;abind\u0026quot; \u0026quot;AER\u0026quot; \u0026quot;askpass\u0026quot; \u0026quot;assertthat\u0026quot; ...\r#\u0026gt; ..$ : chr [1:16] \u0026quot;Package\u0026quot; \u0026quot;LibPath\u0026quot; \u0026quot;Version\u0026quot; \u0026quot;Priority\u0026quot; ...\r# 🏷上面可以知道是matrix\rhead(rownames(pkgs),5)\r#\u0026gt; [1] \u0026quot;abind\u0026quot; \u0026quot;AER\u0026quot; \u0026quot;askpass\u0026quot; \u0026quot;assertthat\u0026quot; \u0026quot;babynames\u0026quot;\rhead(colnames(pkgs),5)\r#\u0026gt; [1] \u0026quot;Package\u0026quot; \u0026quot;LibPath\u0026quot; \u0026quot;Version\u0026quot; \u0026quot;Priority\u0026quot; \u0026quot;Depends\u0026quot;\r library(DT)\rfm\u0026lt;-data.frame(pkgs[,c(1,2,3)])\rdatatable(fm)\r \r{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"abind\",\"AER\",\"askpass\",\"assertthat\",\"babynames\",\"backports\",\"base64enc\",\"bindr\",\"bindrcpp\",\"bit\",\"bit64\",\"blob\",\"blogdown\",\"bookdown\",\"brew\",\"brio\",\"broom\",\"bslib\",\"bsplus\",\"cachem\",\"callr\",\"car\",\"carData\",\"cellranger\",\"cli\",\"clipr\",\"codetools\",\"colorspace\",\"commonmark\",\"conquer\",\"cpp11\",\"crayon\",\"credentials\",\"crosstalk\",\"curl\",\"data.table\",\"DBI\",\"dbplyr\",\"desc\",\"devtools\",\"diffobj\",\"digest\",\"dplyr\",\"DT\",\"dtplyr\",\"ellipsis\",\"emo\",\"evaluate\",\"fansi\",\"farver\",\"fastmap\",\"forcats\",\"Formula\",\"fs\",\"gargle\",\"generics\",\"gert\",\"ggplot2\",\"gh\",\"gitcreds\",\"glue\",\"googledrive\",\"googlesheets4\",\"gtable\",\"haven\",\"highr\",\"hms\",\"htmltools\",\"htmlwidgets\",\"httpuv\",\"httr\",\"ids\",\"ini\",\"isoband\",\"jquerylib\",\"jsonlite\",\"knitr\",\"labeling\",\"later\",\"lazyeval\",\"lifecycle\",\"lme4\",\"lmtest\",\"lubridate\",\"magrittr\",\"maptools\",\"markdown\",\"MatrixModels\",\"matrixStats\",\"memoise\",\"mime\",\"miniUI\",\"minqa\",\"modelr\",\"moments\",\"munsell\",\"nloptr\",\"numDeriv\",\"openssl\",\"openxlsx\",\"pbkrtest\",\"pillar\",\"pkgbuild\",\"pkgconfig\",\"pkgload\",\"plogr\",\"praise\",\"prettyunits\",\"processx\",\"progress\",\"promises\",\"ps\",\"purrr\",\"quantreg\",\"R6\",\"rappdirs\",\"rcmdcheck\",\"RColorBrewer\",\"Rcpp\",\"RcppArmadillo\",\"RcppEigen\",\"readr\",\"readxl\",\"rematch\",\"rematch2\",\"remotes\",\"reprex\",\"rio\",\"rjson\",\"RJSONIO\",\"rlang\",\"rmarkdown\",\"roxygen2\",\"rprojroot\",\"rstudioapi\",\"rversions\",\"rvest\",\"sandwich\",\"sass\",\"scales\",\"selectr\",\"servr\",\"sessioninfo\",\"shiny\",\"sm\",\"sourcetools\",\"sp\",\"SparseM\",\"stringi\",\"stringr\",\"sys\",\"testthat\",\"tibble\",\"tidyr\",\"tidyselect\",\"tidyverse\",\"tinytex\",\"tzdb\",\"usethis\",\"utf8\",\"uuid\",\"vctrs\",\"viridisLite\",\"vroom\",\"waldo\",\"WDI\",\"whisker\",\"withr\",\"wooldridge\",\"xfun\",\"xml2\",\"xopen\",\"xtable\",\"yaml\",\"zip\",\"zoo\",\"base\",\"boot\",\"class\",\"cluster\",\"codetools.1\",\"compiler\",\"datasets\",\"foreign\",\"graphics\",\"grDevices\",\"grid\",\"KernSmooth\",\"lattice\",\"MASS\",\"Matrix\",\"methods\",\"mgcv\",\"nlme\",\"nnet\",\"parallel\",\"rpart\",\"spatial\",\"splines\",\"stats\",\"stats4\",\"survival\",\"tcltk\",\"tools\",\"translations\",\"utils\"],[\"abind\",\"AER\",\"askpass\",\"assertthat\",\"babynames\",\"backports\",\"base64enc\",\"bindr\",\"bindrcpp\",\"bit\",\"bit64\",\"blob\",\"blogdown\",\"bookdown\",\"brew\",\"brio\",\"broom\",\"bslib\",\"bsplus\",\"cachem\",\"callr\",\"car\",\"carData\",\"cellranger\",\"cli\",\"clipr\",\"codetools\",\"colorspace\",\"commonmark\",\"conquer\",\"cpp11\",\"crayon\",\"credentials\",\"crosstalk\",\"curl\",\"data.table\",\"DBI\",\"dbplyr\",\"desc\",\"devtools\",\"diffobj\",\"digest\",\"dplyr\",\"DT\",\"dtplyr\",\"ellipsis\",\"emo\",\"evaluate\",\"fansi\",\"farver\",\"fastmap\",\"forcats\",\"Formula\",\"fs\",\"gargle\",\"generics\",\"gert\",\"ggplot2\",\"gh\",\"gitcreds\",\"glue\",\"googledrive\",\"googlesheets4\",\"gtable\",\"haven\",\"highr\",\"hms\",\"htmltools\",\"htmlwidgets\",\"httpuv\",\"httr\",\"ids\",\"ini\",\"isoband\",\"jquerylib\",\"jsonlite\",\"knitr\",\"labeling\",\"later\",\"lazyeval\",\"lifecycle\",\"lme4\",\"lmtest\",\"lubridate\",\"magrittr\",\"maptools\",\"markdown\",\"MatrixModels\",\"matrixStats\",\"memoise\",\"mime\",\"miniUI\",\"minqa\",\"modelr\",\"moments\",\"munsell\",\"nloptr\",\"numDeriv\",\"openssl\",\"openxlsx\",\"pbkrtest\",\"pillar\",\"pkgbuild\",\"pkgconfig\",\"pkgload\",\"plogr\",\"praise\",\"prettyunits\",\"processx\",\"progress\",\"promises\",\"ps\",\"purrr\",\"quantreg\",\"R6\",\"rappdirs\",\"rcmdcheck\",\"RColorBrewer\",\"Rcpp\",\"RcppArmadillo\",\"RcppEigen\",\"readr\",\"readxl\",\"rematch\",\"rematch2\",\"remotes\",\"reprex\",\"rio\",\"rjson\",\"RJSONIO\",\"rlang\",\"rmarkdown\",\"roxygen2\",\"rprojroot\",\"rstudioapi\",\"rversions\",\"rvest\",\"sandwich\",\"sass\",\"scales\",\"selectr\",\"servr\",\"sessioninfo\",\"shiny\",\"sm\",\"sourcetools\",\"sp\",\"SparseM\",\"stringi\",\"stringr\",\"sys\",\"testthat\",\"tibble\",\"tidyr\",\"tidyselect\",\"tidyverse\",\"tinytex\",\"tzdb\",\"usethis\",\"utf8\",\"uuid\",\"vctrs\",\"viridisLite\",\"vroom\",\"waldo\",\"WDI\",\"whisker\",\"withr\",\"wooldridge\",\"xfun\",\"xml2\",\"xopen\",\"xtable\",\"yaml\",\"zip\",\"zoo\",\"base\",\"boot\",\"class\",\"cluster\",\"codetools\",\"compiler\",\"datasets\",\"foreign\",\"graphics\",\"grDevices\",\"grid\",\"KernSmooth\",\"lattice\",\"MASS\",\"Matrix\",\"methods\",\"mgcv\",\"nlme\",\"nnet\",\"parallel\",\"rpart\",\"spatial\",\"splines\",\"stats\",\"stats4\",\"survival\",\"tcltk\",\"tools\",\"translations\",\"utils\"],[\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\"],[\"1.4-5\",\"1.2-9\",\"1.1\",\"0.2.1\",\"1.0.1\",\"1.2.1\",\"0.1-3\",\"0.1.1\",\"0.2.2\",\"4.0.4\",\"4.0.5\",\"1.2.2\",\"1.4\",\"0.23\",\"1.0-6\",\"1.1.2\",\"0.7.9\",\"0.2.5.1\",\"0.1.2\",\"1.0.6\",\"3.7.0\",\"3.0-11\",\"3.0-4\",\"1.1.0\",\"3.0.1\",\"0.7.1\",\"0.2-18\",\"2.0-2\",\"1.7\",\"1.0.2\",\"0.3.1\",\"1.4.1\",\"1.3.1\",\"1.1.1\",\"4.3.2\",\"1.14.0\",\"1.1.1\",\"2.1.1\",\"1.3.0\",\"2.4.2\",\"0.3.4\",\"0.6.27\",\"1.0.7\",\"0.19\",\"1.1.0\",\"0.3.2\",\"0.0.0.9000\",\"0.14\",\"0.5.0\",\"2.1.0\",\"1.1.0\",\"0.5.1\",\"1.2-4\",\"1.5.0\",\"1.2.0\",\"0.1.0\",\"1.3.2\",\"3.3.5\",\"1.3.0\",\"0.1.1\",\"1.4.2\",\"2.0.0\",\"1.0.0\",\"0.3.0\",\"2.4.3\",\"0.9\",\"1.1.0\",\"0.5.2\",\"1.5.4\",\"1.6.2\",\"1.4.2\",\"1.0.1\",\"0.3.1\",\"0.2.5\",\"0.1.4\",\"1.7.2\",\"1.33\",\"0.4.2\",\"1.3.0\",\"0.2.2\",\"1.0.0\",\"1.1-27.1\",\"0.9-38\",\"1.7.10\",\"2.0.1\",\"1.1-1\",\"1.1\",\"0.5-0\",\"0.60.1\",\"2.0.0\",\"0.11\",\"0.1.1.1\",\"1.2.4\",\"0.1.8\",\"0.14\",\"0.5.0\",\"1.2.2.2\",\"2016.8-1.1\",\"1.4.5\",\"4.2.4\",\"0.5.1\",\"1.6.2\",\"1.2.0\",\"2.0.3\",\"1.2.1\",\"0.2.0\",\"1.0.0\",\"1.1.1\",\"3.5.2\",\"1.2.2\",\"1.2.0.1\",\"1.6.0\",\"0.3.4\",\"5.86\",\"2.5.1\",\"0.3.3\",\"1.3.3\",\"1.1-2\",\"1.0.7\",\"0.10.6.0.0\",\"0.3.3.9.1\",\"2.0.1\",\"1.3.1\",\"1.0.1\",\"2.1.2\",\"2.4.0\",\"2.0.1\",\"0.5.27\",\"0.2.20\",\"1.3-1.5\",\"0.4.11\",\"2.10\",\"7.1.1\",\"2.0.2\",\"0.13\",\"2.1.1\",\"1.0.1\",\"3.0-1\",\"0.4.0\",\"1.1.1\",\"0.4-2\",\"0.23\",\"1.1.1\",\"1.6.0\",\"2.2-5.6\",\"0.1.7\",\"1.4-5\",\"1.81\",\"1.7.4\",\"1.4.0\",\"3.4\",\"3.0.4\",\"3.1.4\",\"1.1.3\",\"1.1.1\",\"1.3.1\",\"0.33\",\"0.1.2\",\"2.0.1\",\"1.2.2\",\"0.1-4\",\"0.3.8\",\"0.4.0\",\"1.5.4\",\"0.3.0\",\"2.7.4\",\"0.4\",\"2.4.2\",\"1.4-1\",\"0.25\",\"1.3.2\",\"1.0.0\",\"1.8-4\",\"2.2.1\",\"2.2.0\",\"1.8-9\",\"4.1.1\",\"1.3-28\",\"7.3-19\",\"2.1.2\",\"0.2-18\",\"4.1.1\",\"4.1.1\",\"0.8-81\",\"4.1.1\",\"4.1.1\",\"4.1.1\",\"2.23-20\",\"0.20-44\",\"7.3-54\",\"1.3-4\",\"4.1.1\",\"1.8-36\",\"3.1-152\",\"7.3-16\",\"4.1.1\",\"4.1-15\",\"7.3-14\",\"4.1.1\",\"4.1.1\",\"4.1.1\",\"3.2-11\",\"4.1.1\",\"4.1.1\",\"4.1.1\",\"4.1.1\"]],\"container\":\"\\n \\n \\n  \\n Package\\n LibPath\\n Version\\n \\n \\n\",\"options\":{\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"columnDefs\":[{\"orderable\":false,\"targets\":0}]}},\"evals\":[],\"jsHooks\":[]}\r檔案 write.csv(fm,file=\u0026quot;c:\\temp\\xx.csv\u0026quot;,useB) # 🏷為甚麼錯,如何修正\r  註解  1️⃣ 輸出檔案,帶有row.names,參數:row.names 可以是T,F,也可以是一串名稱    write.csv(fm,file=\u0026quot;c:/temp/foo.csv\u0026quot;) #\r - 2️⃣  #🏷不要列名稱\rwrite.csv(fm,file=\u0026quot;c:/temp/foo1.csv\u0026quot;,row.names=F)  - 3️⃣  #🏷利用`write.table`\rwrite.table(x, file = \u0026quot;foo.csv\u0026quot;, sep = \u0026quot;,\u0026quot;, col.names = NA,\rqmethod = \u0026quot;double\u0026quot;)\rread.table(\u0026quot;foo.csv\u0026quot;, header = TRUE, sep = \u0026quot;,\u0026quot;, row.names = 1)  colnames(fm)\u0026lt;-c(\u0026quot;套件,路徑,版本\u0026quot;)\r##🏷修正:\u0026#34;套件\u0026#34;,\u0026#34;路徑\u0026#34;,\u0026#34;版本\u0026#34; \rdatatable(fm )  \r{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"abind\",\"AER\",\"askpass\",\"assertthat\",\"babynames\",\"backports\",\"base64enc\",\"bindr\",\"bindrcpp\",\"bit\",\"bit64\",\"blob\",\"blogdown\",\"bookdown\",\"brew\",\"brio\",\"broom\",\"bslib\",\"bsplus\",\"cachem\",\"callr\",\"car\",\"carData\",\"cellranger\",\"cli\",\"clipr\",\"codetools\",\"colorspace\",\"commonmark\",\"conquer\",\"cpp11\",\"crayon\",\"credentials\",\"crosstalk\",\"curl\",\"data.table\",\"DBI\",\"dbplyr\",\"desc\",\"devtools\",\"diffobj\",\"digest\",\"dplyr\",\"DT\",\"dtplyr\",\"ellipsis\",\"emo\",\"evaluate\",\"fansi\",\"farver\",\"fastmap\",\"forcats\",\"Formula\",\"fs\",\"gargle\",\"generics\",\"gert\",\"ggplot2\",\"gh\",\"gitcreds\",\"glue\",\"googledrive\",\"googlesheets4\",\"gtable\",\"haven\",\"highr\",\"hms\",\"htmltools\",\"htmlwidgets\",\"httpuv\",\"httr\",\"ids\",\"ini\",\"isoband\",\"jquerylib\",\"jsonlite\",\"knitr\",\"labeling\",\"later\",\"lazyeval\",\"lifecycle\",\"lme4\",\"lmtest\",\"lubridate\",\"magrittr\",\"maptools\",\"markdown\",\"MatrixModels\",\"matrixStats\",\"memoise\",\"mime\",\"miniUI\",\"minqa\",\"modelr\",\"moments\",\"munsell\",\"nloptr\",\"numDeriv\",\"openssl\",\"openxlsx\",\"pbkrtest\",\"pillar\",\"pkgbuild\",\"pkgconfig\",\"pkgload\",\"plogr\",\"praise\",\"prettyunits\",\"processx\",\"progress\",\"promises\",\"ps\",\"purrr\",\"quantreg\",\"R6\",\"rappdirs\",\"rcmdcheck\",\"RColorBrewer\",\"Rcpp\",\"RcppArmadillo\",\"RcppEigen\",\"readr\",\"readxl\",\"rematch\",\"rematch2\",\"remotes\",\"reprex\",\"rio\",\"rjson\",\"RJSONIO\",\"rlang\",\"rmarkdown\",\"roxygen2\",\"rprojroot\",\"rstudioapi\",\"rversions\",\"rvest\",\"sandwich\",\"sass\",\"scales\",\"selectr\",\"servr\",\"sessioninfo\",\"shiny\",\"sm\",\"sourcetools\",\"sp\",\"SparseM\",\"stringi\",\"stringr\",\"sys\",\"testthat\",\"tibble\",\"tidyr\",\"tidyselect\",\"tidyverse\",\"tinytex\",\"tzdb\",\"usethis\",\"utf8\",\"uuid\",\"vctrs\",\"viridisLite\",\"vroom\",\"waldo\",\"WDI\",\"whisker\",\"withr\",\"wooldridge\",\"xfun\",\"xml2\",\"xopen\",\"xtable\",\"yaml\",\"zip\",\"zoo\",\"base\",\"boot\",\"class\",\"cluster\",\"codetools.1\",\"compiler\",\"datasets\",\"foreign\",\"graphics\",\"grDevices\",\"grid\",\"KernSmooth\",\"lattice\",\"MASS\",\"Matrix\",\"methods\",\"mgcv\",\"nlme\",\"nnet\",\"parallel\",\"rpart\",\"spatial\",\"splines\",\"stats\",\"stats4\",\"survival\",\"tcltk\",\"tools\",\"translations\",\"utils\"],[\"abind\",\"AER\",\"askpass\",\"assertthat\",\"babynames\",\"backports\",\"base64enc\",\"bindr\",\"bindrcpp\",\"bit\",\"bit64\",\"blob\",\"blogdown\",\"bookdown\",\"brew\",\"brio\",\"broom\",\"bslib\",\"bsplus\",\"cachem\",\"callr\",\"car\",\"carData\",\"cellranger\",\"cli\",\"clipr\",\"codetools\",\"colorspace\",\"commonmark\",\"conquer\",\"cpp11\",\"crayon\",\"credentials\",\"crosstalk\",\"curl\",\"data.table\",\"DBI\",\"dbplyr\",\"desc\",\"devtools\",\"diffobj\",\"digest\",\"dplyr\",\"DT\",\"dtplyr\",\"ellipsis\",\"emo\",\"evaluate\",\"fansi\",\"farver\",\"fastmap\",\"forcats\",\"Formula\",\"fs\",\"gargle\",\"generics\",\"gert\",\"ggplot2\",\"gh\",\"gitcreds\",\"glue\",\"googledrive\",\"googlesheets4\",\"gtable\",\"haven\",\"highr\",\"hms\",\"htmltools\",\"htmlwidgets\",\"httpuv\",\"httr\",\"ids\",\"ini\",\"isoband\",\"jquerylib\",\"jsonlite\",\"knitr\",\"labeling\",\"later\",\"lazyeval\",\"lifecycle\",\"lme4\",\"lmtest\",\"lubridate\",\"magrittr\",\"maptools\",\"markdown\",\"MatrixModels\",\"matrixStats\",\"memoise\",\"mime\",\"miniUI\",\"minqa\",\"modelr\",\"moments\",\"munsell\",\"nloptr\",\"numDeriv\",\"openssl\",\"openxlsx\",\"pbkrtest\",\"pillar\",\"pkgbuild\",\"pkgconfig\",\"pkgload\",\"plogr\",\"praise\",\"prettyunits\",\"processx\",\"progress\",\"promises\",\"ps\",\"purrr\",\"quantreg\",\"R6\",\"rappdirs\",\"rcmdcheck\",\"RColorBrewer\",\"Rcpp\",\"RcppArmadillo\",\"RcppEigen\",\"readr\",\"readxl\",\"rematch\",\"rematch2\",\"remotes\",\"reprex\",\"rio\",\"rjson\",\"RJSONIO\",\"rlang\",\"rmarkdown\",\"roxygen2\",\"rprojroot\",\"rstudioapi\",\"rversions\",\"rvest\",\"sandwich\",\"sass\",\"scales\",\"selectr\",\"servr\",\"sessioninfo\",\"shiny\",\"sm\",\"sourcetools\",\"sp\",\"SparseM\",\"stringi\",\"stringr\",\"sys\",\"testthat\",\"tibble\",\"tidyr\",\"tidyselect\",\"tidyverse\",\"tinytex\",\"tzdb\",\"usethis\",\"utf8\",\"uuid\",\"vctrs\",\"viridisLite\",\"vroom\",\"waldo\",\"WDI\",\"whisker\",\"withr\",\"wooldridge\",\"xfun\",\"xml2\",\"xopen\",\"xtable\",\"yaml\",\"zip\",\"zoo\",\"base\",\"boot\",\"class\",\"cluster\",\"codetools\",\"compiler\",\"datasets\",\"foreign\",\"graphics\",\"grDevices\",\"grid\",\"KernSmooth\",\"lattice\",\"MASS\",\"Matrix\",\"methods\",\"mgcv\",\"nlme\",\"nnet\",\"parallel\",\"rpart\",\"spatial\",\"splines\",\"stats\",\"stats4\",\"survival\",\"tcltk\",\"tools\",\"translations\",\"utils\"],[\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\"],[\"1.4-5\",\"1.2-9\",\"1.1\",\"0.2.1\",\"1.0.1\",\"1.2.1\",\"0.1-3\",\"0.1.1\",\"0.2.2\",\"4.0.4\",\"4.0.5\",\"1.2.2\",\"1.4\",\"0.23\",\"1.0-6\",\"1.1.2\",\"0.7.9\",\"0.2.5.1\",\"0.1.2\",\"1.0.6\",\"3.7.0\",\"3.0-11\",\"3.0-4\",\"1.1.0\",\"3.0.1\",\"0.7.1\",\"0.2-18\",\"2.0-2\",\"1.7\",\"1.0.2\",\"0.3.1\",\"1.4.1\",\"1.3.1\",\"1.1.1\",\"4.3.2\",\"1.14.0\",\"1.1.1\",\"2.1.1\",\"1.3.0\",\"2.4.2\",\"0.3.4\",\"0.6.27\",\"1.0.7\",\"0.19\",\"1.1.0\",\"0.3.2\",\"0.0.0.9000\",\"0.14\",\"0.5.0\",\"2.1.0\",\"1.1.0\",\"0.5.1\",\"1.2-4\",\"1.5.0\",\"1.2.0\",\"0.1.0\",\"1.3.2\",\"3.3.5\",\"1.3.0\",\"0.1.1\",\"1.4.2\",\"2.0.0\",\"1.0.0\",\"0.3.0\",\"2.4.3\",\"0.9\",\"1.1.0\",\"0.5.2\",\"1.5.4\",\"1.6.2\",\"1.4.2\",\"1.0.1\",\"0.3.1\",\"0.2.5\",\"0.1.4\",\"1.7.2\",\"1.33\",\"0.4.2\",\"1.3.0\",\"0.2.2\",\"1.0.0\",\"1.1-27.1\",\"0.9-38\",\"1.7.10\",\"2.0.1\",\"1.1-1\",\"1.1\",\"0.5-0\",\"0.60.1\",\"2.0.0\",\"0.11\",\"0.1.1.1\",\"1.2.4\",\"0.1.8\",\"0.14\",\"0.5.0\",\"1.2.2.2\",\"2016.8-1.1\",\"1.4.5\",\"4.2.4\",\"0.5.1\",\"1.6.2\",\"1.2.0\",\"2.0.3\",\"1.2.1\",\"0.2.0\",\"1.0.0\",\"1.1.1\",\"3.5.2\",\"1.2.2\",\"1.2.0.1\",\"1.6.0\",\"0.3.4\",\"5.86\",\"2.5.1\",\"0.3.3\",\"1.3.3\",\"1.1-2\",\"1.0.7\",\"0.10.6.0.0\",\"0.3.3.9.1\",\"2.0.1\",\"1.3.1\",\"1.0.1\",\"2.1.2\",\"2.4.0\",\"2.0.1\",\"0.5.27\",\"0.2.20\",\"1.3-1.5\",\"0.4.11\",\"2.10\",\"7.1.1\",\"2.0.2\",\"0.13\",\"2.1.1\",\"1.0.1\",\"3.0-1\",\"0.4.0\",\"1.1.1\",\"0.4-2\",\"0.23\",\"1.1.1\",\"1.6.0\",\"2.2-5.6\",\"0.1.7\",\"1.4-5\",\"1.81\",\"1.7.4\",\"1.4.0\",\"3.4\",\"3.0.4\",\"3.1.4\",\"1.1.3\",\"1.1.1\",\"1.3.1\",\"0.33\",\"0.1.2\",\"2.0.1\",\"1.2.2\",\"0.1-4\",\"0.3.8\",\"0.4.0\",\"1.5.4\",\"0.3.0\",\"2.7.4\",\"0.4\",\"2.4.2\",\"1.4-1\",\"0.25\",\"1.3.2\",\"1.0.0\",\"1.8-4\",\"2.2.1\",\"2.2.0\",\"1.8-9\",\"4.1.1\",\"1.3-28\",\"7.3-19\",\"2.1.2\",\"0.2-18\",\"4.1.1\",\"4.1.1\",\"0.8-81\",\"4.1.1\",\"4.1.1\",\"4.1.1\",\"2.23-20\",\"0.20-44\",\"7.3-54\",\"1.3-4\",\"4.1.1\",\"1.8-36\",\"3.1-152\",\"7.3-16\",\"4.1.1\",\"4.1-15\",\"7.3-14\",\"4.1.1\",\"4.1.1\",\"4.1.1\",\"3.2-11\",\"4.1.1\",\"4.1.1\",\"4.1.1\",\"4.1.1\"]],\"container\":\"\\n \\n \\n  \\n 套件,路徑,版本\\n NA\\n NA\\n \\n \\n\",\"options\":{\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"columnDefs\":[{\"orderable\":false,\"targets\":0}]}},\"evals\":[],\"jsHooks\":[]}\r# 🏷❓怎樣把表格中的row.names去掉?  # 🏷datatable(fm,rownames=F)  colnames(fm)\u0026lt;-c(\u0026quot;套件\u0026quot;,\u0026quot;路徑\u0026quot;,\u0026quot;版本\u0026quot;)\rdatatable(fm,rownames=F )  \r{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"abind\",\"AER\",\"askpass\",\"assertthat\",\"babynames\",\"backports\",\"base64enc\",\"bindr\",\"bindrcpp\",\"bit\",\"bit64\",\"blob\",\"blogdown\",\"bookdown\",\"brew\",\"brio\",\"broom\",\"bslib\",\"bsplus\",\"cachem\",\"callr\",\"car\",\"carData\",\"cellranger\",\"cli\",\"clipr\",\"codetools\",\"colorspace\",\"commonmark\",\"conquer\",\"cpp11\",\"crayon\",\"credentials\",\"crosstalk\",\"curl\",\"data.table\",\"DBI\",\"dbplyr\",\"desc\",\"devtools\",\"diffobj\",\"digest\",\"dplyr\",\"DT\",\"dtplyr\",\"ellipsis\",\"emo\",\"evaluate\",\"fansi\",\"farver\",\"fastmap\",\"forcats\",\"Formula\",\"fs\",\"gargle\",\"generics\",\"gert\",\"ggplot2\",\"gh\",\"gitcreds\",\"glue\",\"googledrive\",\"googlesheets4\",\"gtable\",\"haven\",\"highr\",\"hms\",\"htmltools\",\"htmlwidgets\",\"httpuv\",\"httr\",\"ids\",\"ini\",\"isoband\",\"jquerylib\",\"jsonlite\",\"knitr\",\"labeling\",\"later\",\"lazyeval\",\"lifecycle\",\"lme4\",\"lmtest\",\"lubridate\",\"magrittr\",\"maptools\",\"markdown\",\"MatrixModels\",\"matrixStats\",\"memoise\",\"mime\",\"miniUI\",\"minqa\",\"modelr\",\"moments\",\"munsell\",\"nloptr\",\"numDeriv\",\"openssl\",\"openxlsx\",\"pbkrtest\",\"pillar\",\"pkgbuild\",\"pkgconfig\",\"pkgload\",\"plogr\",\"praise\",\"prettyunits\",\"processx\",\"progress\",\"promises\",\"ps\",\"purrr\",\"quantreg\",\"R6\",\"rappdirs\",\"rcmdcheck\",\"RColorBrewer\",\"Rcpp\",\"RcppArmadillo\",\"RcppEigen\",\"readr\",\"readxl\",\"rematch\",\"rematch2\",\"remotes\",\"reprex\",\"rio\",\"rjson\",\"RJSONIO\",\"rlang\",\"rmarkdown\",\"roxygen2\",\"rprojroot\",\"rstudioapi\",\"rversions\",\"rvest\",\"sandwich\",\"sass\",\"scales\",\"selectr\",\"servr\",\"sessioninfo\",\"shiny\",\"sm\",\"sourcetools\",\"sp\",\"SparseM\",\"stringi\",\"stringr\",\"sys\",\"testthat\",\"tibble\",\"tidyr\",\"tidyselect\",\"tidyverse\",\"tinytex\",\"tzdb\",\"usethis\",\"utf8\",\"uuid\",\"vctrs\",\"viridisLite\",\"vroom\",\"waldo\",\"WDI\",\"whisker\",\"withr\",\"wooldridge\",\"xfun\",\"xml2\",\"xopen\",\"xtable\",\"yaml\",\"zip\",\"zoo\",\"base\",\"boot\",\"class\",\"cluster\",\"codetools\",\"compiler\",\"datasets\",\"foreign\",\"graphics\",\"grDevices\",\"grid\",\"KernSmooth\",\"lattice\",\"MASS\",\"Matrix\",\"methods\",\"mgcv\",\"nlme\",\"nnet\",\"parallel\",\"rpart\",\"spatial\",\"splines\",\"stats\",\"stats4\",\"survival\",\"tcltk\",\"tools\",\"translations\",\"utils\"],[\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Users/linchao/Documents/R/win-library/4.1\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\",\"C:/Program Files/R/R-4.1.1/library\"],[\"1.4-5\",\"1.2-9\",\"1.1\",\"0.2.1\",\"1.0.1\",\"1.2.1\",\"0.1-3\",\"0.1.1\",\"0.2.2\",\"4.0.4\",\"4.0.5\",\"1.2.2\",\"1.4\",\"0.23\",\"1.0-6\",\"1.1.2\",\"0.7.9\",\"0.2.5.1\",\"0.1.2\",\"1.0.6\",\"3.7.0\",\"3.0-11\",\"3.0-4\",\"1.1.0\",\"3.0.1\",\"0.7.1\",\"0.2-18\",\"2.0-2\",\"1.7\",\"1.0.2\",\"0.3.1\",\"1.4.1\",\"1.3.1\",\"1.1.1\",\"4.3.2\",\"1.14.0\",\"1.1.1\",\"2.1.1\",\"1.3.0\",\"2.4.2\",\"0.3.4\",\"0.6.27\",\"1.0.7\",\"0.19\",\"1.1.0\",\"0.3.2\",\"0.0.0.9000\",\"0.14\",\"0.5.0\",\"2.1.0\",\"1.1.0\",\"0.5.1\",\"1.2-4\",\"1.5.0\",\"1.2.0\",\"0.1.0\",\"1.3.2\",\"3.3.5\",\"1.3.0\",\"0.1.1\",\"1.4.2\",\"2.0.0\",\"1.0.0\",\"0.3.0\",\"2.4.3\",\"0.9\",\"1.1.0\",\"0.5.2\",\"1.5.4\",\"1.6.2\",\"1.4.2\",\"1.0.1\",\"0.3.1\",\"0.2.5\",\"0.1.4\",\"1.7.2\",\"1.33\",\"0.4.2\",\"1.3.0\",\"0.2.2\",\"1.0.0\",\"1.1-27.1\",\"0.9-38\",\"1.7.10\",\"2.0.1\",\"1.1-1\",\"1.1\",\"0.5-0\",\"0.60.1\",\"2.0.0\",\"0.11\",\"0.1.1.1\",\"1.2.4\",\"0.1.8\",\"0.14\",\"0.5.0\",\"1.2.2.2\",\"2016.8-1.1\",\"1.4.5\",\"4.2.4\",\"0.5.1\",\"1.6.2\",\"1.2.0\",\"2.0.3\",\"1.2.1\",\"0.2.0\",\"1.0.0\",\"1.1.1\",\"3.5.2\",\"1.2.2\",\"1.2.0.1\",\"1.6.0\",\"0.3.4\",\"5.86\",\"2.5.1\",\"0.3.3\",\"1.3.3\",\"1.1-2\",\"1.0.7\",\"0.10.6.0.0\",\"0.3.3.9.1\",\"2.0.1\",\"1.3.1\",\"1.0.1\",\"2.1.2\",\"2.4.0\",\"2.0.1\",\"0.5.27\",\"0.2.20\",\"1.3-1.5\",\"0.4.11\",\"2.10\",\"7.1.1\",\"2.0.2\",\"0.13\",\"2.1.1\",\"1.0.1\",\"3.0-1\",\"0.4.0\",\"1.1.1\",\"0.4-2\",\"0.23\",\"1.1.1\",\"1.6.0\",\"2.2-5.6\",\"0.1.7\",\"1.4-5\",\"1.81\",\"1.7.4\",\"1.4.0\",\"3.4\",\"3.0.4\",\"3.1.4\",\"1.1.3\",\"1.1.1\",\"1.3.1\",\"0.33\",\"0.1.2\",\"2.0.1\",\"1.2.2\",\"0.1-4\",\"0.3.8\",\"0.4.0\",\"1.5.4\",\"0.3.0\",\"2.7.4\",\"0.4\",\"2.4.2\",\"1.4-1\",\"0.25\",\"1.3.2\",\"1.0.0\",\"1.8-4\",\"2.2.1\",\"2.2.0\",\"1.8-9\",\"4.1.1\",\"1.3-28\",\"7.3-19\",\"2.1.2\",\"0.2-18\",\"4.1.1\",\"4.1.1\",\"0.8-81\",\"4.1.1\",\"4.1.1\",\"4.1.1\",\"2.23-20\",\"0.20-44\",\"7.3-54\",\"1.3-4\",\"4.1.1\",\"1.8-36\",\"3.1-152\",\"7.3-16\",\"4.1.1\",\"4.1-15\",\"7.3-14\",\"4.1.1\",\"4.1.1\",\"4.1.1\",\"3.2-11\",\"4.1.1\",\"4.1.1\",\"4.1.1\",\"4.1.1\"]],\"container\":\"\\n \\n \\n 套件\\n 路徑\\n 版本\\n \\n \\n\",\"options\":{\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}\r拿到主要版本 x\u0026lt;-strsplit(fm[,3],\u0026quot;\\\\.\u0026quot;)\rsapply(x,head,1)\r "},
{"uri": "/blogR//rlang/hw/hw_basic.html","title": "assignment-1",
	"tags": [],
	"description": "assignment",
	"content": "part 1 basic  參考程式碼,數學上,e既然是純量,那就是1X1的矩陣。在R中,如果 e\u0026lt;-3那麼在R中判斷e是不是相量,是不是矩陣?  e\u0026lt;-3\rlength(e)\r#\u0026gt; [1] 1\ris.vector(e) # q1: true or false\r#\u0026gt; [1] TRUE\ris.matrix(e) # q2: true or false\r#\u0026gt; [1] FALSE\r# 指定沒有任何資料的向量\re1\u0026lt;-numeric(0)\rlength(e1)\r#\u0026gt; [1] 0\ris.vector(e) # q3: true or false\r#\u0026gt; [1] TRUE\r 建立向量e21,e22,e23 解釋出現的訊息  e21\u0026lt;-1:3 # 向量,內容為[1,2,3] 也可以e2\u0026lt;-seq(1,3),e2\u0026lt;-c(1,2,3)\re22\u0026lt;-1:4\re23\u0026lt;-1:6\re21==e23\r#\u0026gt; [1] TRUE TRUE TRUE FALSE FALSE FALSE\re21==e22\r#\u0026gt; Warning in e21 == e22: 較長的物件長度並非較短物件長度的倍數\r#\u0026gt; [1] TRUE TRUE TRUE FALSE\r \u0026gt; e21==e23\r[1] TRUE TRUE TRUE FALSE FALSE FALSE\r\u0026gt; e21==e22\r[1] TRUE TRUE TRUE FALSE\rWarning message:\rIn e21 == e22 : 較長的物件長度並非較短物件長度的倍數\r 3.解釋第2行alpha的長度,如果只要保持前3個元素?\nalpha\u0026lt;-1:10\ralpha \u0026lt;- alpha[2 * 1:5]\r hint: 也可以length(alpha)\u0026lt;-3 但是不建議。\n合併成矩陣 利用前述的e21,e22,e23 ,分別解釋下面兩行  c(e21,e22)\r#\u0026gt; [1] 1 2 3 1 2 3 4\rcbind(e21,e22)\r#\u0026gt; Warning in cbind(e21, e22): number of rows of result is not a multiple of vector\r#\u0026gt; length (arg 1)\r#\u0026gt; e21 e22\r#\u0026gt; [1,] 1 1\r#\u0026gt; [2,] 2 2\r#\u0026gt; [3,] 3 3\r#\u0026gt; [4,] 1 4\r  產生5x20的亂數矩陣\n  為甚麼有a[\u0026quot;x1\u0026quot;]? 這題的用意只是記住甚麼是c()函數。\n  a\u0026lt;-c(x=1:2,y=3:4)\ra[\u0026quot;x1\u0026quot;] # 不是a[x1]\r ❓ 回答x2 是甚麼型態\nx1\u0026lt;-list(3,4,5)\rx2\u0026lt;-c(1,2,x1)  ❓ 怎樣把list,e.g.x2, 轉vector ?\n❓把偶數找出來\nx \u0026lt;- rpois(40, lambda=5)\r \rhint\r```r\rx[x %% 2 == 0]\r```\rfunction 寫一個matlab 的矩陣函數\nmm\u0026lt;-function(rcnt,ccnt,value){\rtotal\u0026lt;-rcnt*ccnt\rv\u0026lt;-double(total)\rv[1:total]\u0026lt;-value\rreturn(matrix(v,rcnt,ccnt))\r}\r 寫一個函數,判斷目前的資料夾中,有沒有檔案mm.R\nisExists\u0026lt;-function(afile){\rall\u0026lt;-dir()\rrst\u0026lt;-length(all[all==afile])\rreturn (rst)\r}\r "},
{"uri": "/blogR//rlang/hw/hw_regexp.html","title": "regexpr",
	"tags": [],
	"description": "assignment",
	"content": "reference cheatsheet\n抽取字組 看看是不是#開頭的字串,如果是的話要置換,例如 \u0026quot;# hello\u0026quot; -\u0026gt;\u0026quot;# hello \u0026quot;\nstr\u0026lt;-\u0026quot;# hello\u0026quot;\rif(grepl(\u0026quot;^[#]* \u0026quot;,str)) {\rx\u0026lt;-sub(\u0026quot;(^[#]* )(.*$)\u0026quot;,\u0026quot;\\\\1 \u0026lt;font color='red'\u0026gt; \\\\2 \u0026lt;/font\u0026gt;\u0026quot;,str, perl=TRUE)\rprint(x)\r}\r#\u0026gt; [1] \u0026quot;# \u0026lt;font color='red'\u0026gt; hello \u0026lt;/font\u0026gt;\u0026quot;\r 類似上題 divtitle\u0026lt;-function (str){\rif(grepl(\u0026quot;^[#]* \u0026quot;,str)) {\rrst\u0026lt;-sub(\u0026quot;(^[#]* )(.*$)\u0026quot;,\u0026quot;\\\\1 \u0026lt;div class='outposix'\u0026gt; \\\\2 \u0026lt;/div\u0026gt;\u0026quot;,str, perl=TRUE)\r}else{\rrst\u0026lt;-paste0(\u0026quot;\u0026lt;div class='outposix'\u0026gt;\u0026quot;,str,\u0026quot;\u0026lt;/div\u0026gt;\u0026quot;)\r}\r}\r 測試what1 pattern\u0026lt;-\u0026quot;out\u0026quot;\rext\u0026lt;-\u0026quot;oo\u0026quot;\rlist\u0026lt;-list(\u0026quot;out_中文_1.oo\u0026quot;,\u0026quot;out_1.oo\u0026quot;,\u0026quot;out_xx_1.oo\u0026quot;)\rwhat\u0026lt;-paste0(\u0026quot;(?\u0026lt;=\u0026quot;,pattern,\u0026quot;_).*\u0026quot;,\u0026quot;(?=\\\\.\u0026quot;,ext,\u0026quot;)\u0026quot;);\ridxlist\u0026lt;-as.integer(stringr::str_extract(list,what));\r#\u0026gt; Warning: 強制變更過程中產生了 NA\ridxlist\r#\u0026gt; [1] NA 1 NA\r 執行結果\n#\u0026gt; Warning: 強制變更過程中產生了 NA\ridxlist\r#\u0026gt; [1] NA 1 NA\r  解釋 NA, 和 為甚麼?  測試what2 pattern\u0026lt;-\u0026quot;out\u0026quot;\rext\u0026lt;-\u0026quot;oo\u0026quot;\rlist\u0026lt;-list(\u0026quot;out_中文_1.oo\u0026quot;,\u0026quot;out_1.oo\u0026quot;,\u0026quot;out_xx_1.oo\u0026quot;,\u0026quot;out_中文2_1.oo\u0026quot;)\rwhat\u0026lt;-paste0(\u0026quot;(?\u0026lt;=\u0026quot;,pattern,\u0026quot;_).*(\\\\d)+\u0026quot;,\u0026quot;(?=\\\\.\u0026quot;,ext,\u0026quot;)\u0026quot;);\rr1\u0026lt;-stringr::str_extract(list,what)\rr1\r#\u0026gt; [1] \u0026quot;中文_1\u0026quot; \u0026quot;1\u0026quot; \u0026quot;xx_1\u0026quot; \u0026quot;中文2_1\u0026quot;\rstringr::str_extract(r1,\u0026quot;\\\\d$\u0026quot;)\r#\u0026gt; [1] \u0026quot;1\u0026quot; \u0026quot;1\u0026quot; \u0026quot;1\u0026quot; \u0026quot;1\u0026quot;\r shopping_list \u0026lt;- c(\u0026quot;apples x4\u0026quot;, \u0026quot;bag of flour\u0026quot;, \u0026quot;bag of sugar\u0026quot;, \u0026quot;milk x2\u0026quot;)\rstringr::str_extract(shopping_list, \u0026quot;\\\\d\u0026quot;)\r#\u0026gt; [1] \u0026quot;4\u0026quot; NA NA \u0026quot;2\u0026quot;\r "},
{"uri": "/blogR//rlang/demo/citation.html","title": "引用",
	"tags": [],
	"description": "暫時",
	"content": "introduction Goal: Estimate the effect of the price per citation on the number of library subscriptions\n\rJournals.csv\r \u0026lt;ol class=\u0026quot;attachments-files\u0026quot;\u0026gt;\u0026lt;li\u0026gt;\r\u0026lt;a id=\u0026quot;f_0a6a004dccc39cd502246d648eb99b09\u0026quot; href=\u0026quot;/rlang/resources/Journals.csv\u0026quot; class=\u0026quot;toa-item\u0026quot; \u0026gt;Journals.csv\u0026lt;/a\u0026gt;\r\u0026lt;/li\u0026gt;\u0026lt;/ol\u0026gt;\r \rinitial options(prompt = \u0026quot;R\u0026gt; \u0026quot;, continue = \u0026quot;+ \u0026quot;, width = 64, digits = 4, show.signif.stars = FALSE, useFancyQuotes = FALSE) library(\u0026quot;AER\u0026quot;) set.seed(1071)\nlibrary(\u0026quot;AER\u0026quot;)\r#\u0026gt; 載入需要的套件：car\r#\u0026gt; 載入需要的套件：carData\r#\u0026gt; 載入需要的套件：lmtest\r#\u0026gt; 載入需要的套件：zoo\r#\u0026gt; #\u0026gt; 載入套件：'zoo'\r#\u0026gt; 下列物件被遮斷自 'package:base':\r#\u0026gt; #\u0026gt; as.Date, as.Date.numeric\r#\u0026gt; 載入需要的套件：sandwich\r#\u0026gt; 載入需要的套件：survival\rdata(\u0026quot;Journals\u0026quot;, package = \u0026quot;AER\u0026quot;)\r#View(Journals)\rjournals \u0026lt;- Journals[, c(\u0026quot;subs\u0026quot;, \u0026quot;price\u0026quot;)]\rjournals$citeprice \u0026lt;- Journals$price/Journals$citations\rsummary(journals)\r#\u0026gt; subs price citeprice #\u0026gt; Min. : 2.0 Min. : 20.0 Min. : 0.005223 #\u0026gt; 1st Qu.: 52.0 1st Qu.: 134.5 1st Qu.: 0.464495 #\u0026gt; Median : 122.5 Median : 282.0 Median : 1.320513 #\u0026gt; Mean : 196.9 Mean : 417.7 Mean : 2.548455 #\u0026gt; 3rd Qu.: 268.2 3rd Qu.: 540.8 3rd Qu.: 3.440171 #\u0026gt; Max. :1098.0 Max. :2120.0 Max. :24.459459\r ❓ 練習: 改成datatable\nplot(log(subs) ~ log(citeprice), data = journals)\rjour_lm \u0026lt;- lm(log(subs) ~ log(citeprice), data = journals)\rabline(jour_lm)\r ❓ what is jour_lm ?\nclass(jour_lm)\r#\u0026gt; [1] \u0026quot;lm\u0026quot;\rnames(jour_lm)\r#\u0026gt; [1] \u0026quot;coefficients\u0026quot; \u0026quot;residuals\u0026quot; \u0026quot;effects\u0026quot; \u0026quot;rank\u0026quot; #\u0026gt; [5] \u0026quot;fitted.values\u0026quot; \u0026quot;assign\u0026quot; \u0026quot;qr\u0026quot; \u0026quot;df.residual\u0026quot; #\u0026gt; [9] \u0026quot;xlevels\u0026quot; \u0026quot;call\u0026quot; \u0026quot;terms\u0026quot; \u0026quot;model\u0026quot;\rstr(jour_lm) #🏷注意`list of 12` \r#\u0026gt; List of 12\r#\u0026gt; $ coefficients : Named num [1:2] 4.766 -0.533\r#\u0026gt; ..- attr(*, \u0026quot;names\u0026quot;)= chr [1:2] \u0026quot;(Intercept)\u0026quot; \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; $ residuals : Named num [1:180] -1.185 -0.739 -0.332 -2.725 1.136 ...\r#\u0026gt; ..- attr(*, \u0026quot;names\u0026quot;)= chr [1:180] \u0026quot;APEL\u0026quot; \u0026quot;SAJoEH\u0026quot; \u0026quot;CE\u0026quot; \u0026quot;MEPiTE\u0026quot; ...\r#\u0026gt; $ effects : Named num [1:180] -63.599 -11.222 -0.338 -2.715 1.146 ...\r#\u0026gt; ..- attr(*, \u0026quot;names\u0026quot;)= chr [1:180] \u0026quot;(Intercept)\u0026quot; \u0026quot;log(citeprice)\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; ...\r#\u0026gt; $ rank : int 2\r#\u0026gt; $ fitted.values: Named num [1:180] 3.82 4.82 3.17 3.42 3.43 ...\r#\u0026gt; ..- attr(*, \u0026quot;names\u0026quot;)= chr [1:180] \u0026quot;APEL\u0026quot; \u0026quot;SAJoEH\u0026quot; \u0026quot;CE\u0026quot; \u0026quot;MEPiTE\u0026quot; ...\r#\u0026gt; $ assign : int [1:2] 0 1\r#\u0026gt; $ qr :List of 5\r#\u0026gt; ..$ qr : num [1:180, 1:2] -13.4164 0.0745 0.0745 0.0745 0.0745 ...\r#\u0026gt; .. ..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r#\u0026gt; .. .. ..$ : chr [1:180] \u0026quot;APEL\u0026quot; \u0026quot;SAJoEH\u0026quot; \u0026quot;CE\u0026quot; \u0026quot;MEPiTE\u0026quot; ...\r#\u0026gt; .. .. ..$ : chr [1:2] \u0026quot;(Intercept)\u0026quot; \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; .. ..- attr(*, \u0026quot;assign\u0026quot;)= int [1:2] 0 1\r#\u0026gt; ..$ qraux: num [1:2] 1.07 1.01\r#\u0026gt; ..$ pivot: int [1:2] 1 2\r#\u0026gt; ..$ tol : num 1e-07\r#\u0026gt; ..$ rank : int 2\r#\u0026gt; ..- attr(*, \u0026quot;class\u0026quot;)= chr \u0026quot;qr\u0026quot;\r#\u0026gt; $ df.residual : int 178\r#\u0026gt; $ xlevels : Named list()\r#\u0026gt; $ call : language lm(formula = log(subs) ~ log(citeprice), data = journals)\r#\u0026gt; $ terms :Classes 'terms', 'formula' language log(subs) ~ log(citeprice)\r#\u0026gt; .. ..- attr(*, \u0026quot;variables\u0026quot;)= language list(log(subs), log(citeprice))\r#\u0026gt; .. ..- attr(*, \u0026quot;factors\u0026quot;)= int [1:2, 1] 0 1\r#\u0026gt; .. .. ..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r#\u0026gt; .. .. .. ..$ : chr [1:2] \u0026quot;log(subs)\u0026quot; \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; .. .. .. ..$ : chr \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; .. ..- attr(*, \u0026quot;term.labels\u0026quot;)= chr \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; .. ..- attr(*, \u0026quot;order\u0026quot;)= int 1\r#\u0026gt; .. ..- attr(*, \u0026quot;intercept\u0026quot;)= int 1\r#\u0026gt; .. ..- attr(*, \u0026quot;response\u0026quot;)= int 1\r#\u0026gt; .. ..- attr(*, \u0026quot;.Environment\u0026quot;)=\u0026lt;environment: R_GlobalEnv\u0026gt; #\u0026gt; .. ..- attr(*, \u0026quot;predvars\u0026quot;)= language list(log(subs), log(citeprice))\r#\u0026gt; .. ..- attr(*, \u0026quot;dataClasses\u0026quot;)= Named chr [1:2] \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot;\r#\u0026gt; .. .. ..- attr(*, \u0026quot;names\u0026quot;)= chr [1:2] \u0026quot;log(subs)\u0026quot; \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; $ model :'data.frame':\t180 obs. of 2 variables:\r#\u0026gt; ..$ log(subs) : num [1:180] 2.639 4.078 2.833 0.693 4.564 ...\r#\u0026gt; ..$ log(citeprice): num [1:180] 1.7677 -0.0953 3.0025 2.5294 2.5089 ...\r#\u0026gt; ..- attr(*, \u0026quot;terms\u0026quot;)=Classes 'terms', 'formula' language log(subs) ~ log(citeprice)\r#\u0026gt; .. .. ..- attr(*, \u0026quot;variables\u0026quot;)= language list(log(subs), log(citeprice))\r#\u0026gt; .. .. ..- attr(*, \u0026quot;factors\u0026quot;)= int [1:2, 1] 0 1\r#\u0026gt; .. .. .. ..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r#\u0026gt; .. .. .. .. ..$ : chr [1:2] \u0026quot;log(subs)\u0026quot; \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; .. .. .. .. ..$ : chr \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; .. .. ..- attr(*, \u0026quot;term.labels\u0026quot;)= chr \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; .. .. ..- attr(*, \u0026quot;order\u0026quot;)= int 1\r#\u0026gt; .. .. ..- attr(*, \u0026quot;intercept\u0026quot;)= int 1\r#\u0026gt; .. .. ..- attr(*, \u0026quot;response\u0026quot;)= int 1\r#\u0026gt; .. .. ..- attr(*, \u0026quot;.Environment\u0026quot;)=\u0026lt;environment: R_GlobalEnv\u0026gt; #\u0026gt; .. .. ..- attr(*, \u0026quot;predvars\u0026quot;)= language list(log(subs), log(citeprice))\r#\u0026gt; .. .. ..- attr(*, \u0026quot;dataClasses\u0026quot;)= Named chr [1:2] \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot;\r#\u0026gt; .. .. .. ..- attr(*, \u0026quot;names\u0026quot;)= chr [1:2] \u0026quot;log(subs)\u0026quot; \u0026quot;log(citeprice)\u0026quot;\r#\u0026gt; - attr(*, \u0026quot;class\u0026quot;)= chr \u0026quot;lm\u0026quot;\r ❓ 自由度在哪?\n\r提示\r```r\rjour_lm$rank\r#\u0026gt; [1] 2\r```\r最簡單的報告產生函數 summary(jour_lm)\r#\u0026gt; #\u0026gt; Call:\r#\u0026gt; lm(formula = log(subs) ~ log(citeprice), data = journals)\r#\u0026gt; #\u0026gt; Residuals:\r#\u0026gt; Min 1Q Median 3Q Max #\u0026gt; -2.72478 -0.53609 0.03721 0.46619 1.84808 #\u0026gt; #\u0026gt; Coefficients:\r#\u0026gt; Estimate Std. Error t value Pr(\u0026gt;|t|) #\u0026gt; (Intercept) 4.76621 0.05591 85.25 \u0026lt;2e-16 ***\r#\u0026gt; log(citeprice) -0.53305 0.03561 -14.97 \u0026lt;2e-16 ***\r#\u0026gt; ---\r#\u0026gt; Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r#\u0026gt; #\u0026gt; Residual standard error: 0.7497 on 178 degrees of freedom\r#\u0026gt; Multiple R-squared: 0.5573,\tAdjusted R-squared: 0.5548 #\u0026gt; F-statistic: 224 on 1 and 178 DF, p-value: \u0026lt; 2.2e-16\r  jour_slm \u0026lt;- summary(jour_lm)\rclass(jour_slm)\r#\u0026gt; [1] \u0026quot;summary.lm\u0026quot;\rnames(jour_slm)\r#\u0026gt; [1] \u0026quot;call\u0026quot; \u0026quot;terms\u0026quot; \u0026quot;residuals\u0026quot; \u0026quot;coefficients\u0026quot; #\u0026gt; [5] \u0026quot;aliased\u0026quot; \u0026quot;sigma\u0026quot; \u0026quot;df\u0026quot; \u0026quot;r.squared\u0026quot; #\u0026gt; [9] \u0026quot;adj.r.squared\u0026quot; \u0026quot;fstatistic\u0026quot; \u0026quot;cov.unscaled\u0026quot;\rjour_slm$coefficients\r#\u0026gt; Estimate Std. Error t value Pr(\u0026gt;|t|)\r#\u0026gt; (Intercept) 4.7662121 0.05590908 85.24934 2.953913e-146\r#\u0026gt; log(citeprice) -0.5330535 0.03561320 -14.96786 2.563943e-33\r  anova(jour_lm)\r#\u0026gt; Analysis of Variance Table\r#\u0026gt; #\u0026gt; Response: log(subs)\r#\u0026gt; Df Sum Sq Mean Sq F value Pr(\u0026gt;F) #\u0026gt; log(citeprice) 1 125.93 125.934 224.04 \u0026lt; 2.2e-16 ***\r#\u0026gt; Residuals 178 100.06 0.562 #\u0026gt; ---\r#\u0026gt; Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\rcoef(jour_lm)\r#\u0026gt; (Intercept) log(citeprice) #\u0026gt; 4.7662121 -0.5330535\rconfint(jour_lm, level = 0.95)\r#\u0026gt; 2.5 % 97.5 %\r#\u0026gt; (Intercept) 4.6558822 4.8765420\r#\u0026gt; log(citeprice) -0.6033319 -0.4627751\r predict(jour_lm, newdata = data.frame(citeprice = 2.11),\rinterval = \u0026quot;confidence\u0026quot;)\r#\u0026gt; fit lwr upr\r#\u0026gt; 1 4.368188 4.247485 4.48889\rpredict(jour_lm, newdata = data.frame(citeprice = 2.11), interval = \u0026quot;prediction\u0026quot;)\r#\u0026gt; fit lwr upr\r#\u0026gt; 1 4.368188 2.883746 5.852629\r  lciteprice \u0026lt;- seq(from = -6, to = 4, by = 0.25)\rjour_pred \u0026lt;- predict(jour_lm, interval = \u0026quot;prediction\u0026quot;,\rnewdata = data.frame(citeprice = exp(lciteprice))) plot(log(subs) ~ log(citeprice), data = journals)\rlines(jour_pred[, 1] ~ lciteprice, col = 1) lines(jour_pred[, 2] ~ lciteprice, col = 1, lty = 2)\rlines(jour_pred[, 3] ~ lciteprice, col = 1, lty = 2)\r 參數為模型類別的plot() 產生6種,預設4種\n residuals versus fitted values, QQ plot for normality, scale-location plot, standardized residuals versus leverages.  個別的圖:例如QQ plot:　plot(jour_lm, which = 2)\npar(mfrow = c(2, 2))\rplot(jour_lm)\rpar(mfrow = c(1, 1))\rlinearHypothesis(jour_lm, \u0026quot;log(citeprice) = -0.5\u0026quot;)\r#\u0026gt; Linear hypothesis test\r#\u0026gt; #\u0026gt; Hypothesis:\r#\u0026gt; log(citeprice) = - 0.5\r#\u0026gt; #\u0026gt; Model 1: restricted model\r#\u0026gt; Model 2: log(subs) ~ log(citeprice)\r#\u0026gt; #\u0026gt; Res.Df RSS Df Sum of Sq F Pr(\u0026gt;F)\r#\u0026gt; 1 179 100.54 #\u0026gt; 2 178 100.06 1 0.48421 0.8614 0.3546\r ❓ 利用資料集 cars : dist ~ speed\n 分別給出 speed=12,19,24 的信賴區間和預測區間 畫圖  "},
{"uri": "/blogR//rlang/1_0_requirement.html","title": "1 Requirement",
	"tags": [],
	"description": "軟體環境",
	"content": "安裝軟體 部份軟體列表 另外於linux 安裝 tidyverse時需要:\nsudo apt-get install -y libxml2-dev libcurl4-openssl-dev libssl-dev\r install.packages()\ninstall.packages('devtools')\rinstall.packages('bookdown')\rinstall.packages('rlang')\rinstall.packages('tidyr')\rinstall.packages('babynames')\rinstall.packages('ggplot2')\rinstall.packages('sm')\rinstall.packages('bindrcpp')\rinstall.packages('tidyverse')\rinstall.packages('codetools')\rinstall.packages('moments')\rlibrary('devtools')\rinstall_github(\u0026quot;Hadley/emo\u0026quot;)\rinstall.packages(\u0026quot;blogdown\u0026quot;)\rinstall.packages(\u0026quot;wooldridge\u0026quot;)\rinstall.packages(\u0026quot;WDI\u0026quot;)\rinstall.packages(\u0026quot;rjson\u0026quot;)\rinstall.packages(\u0026quot;AER\u0026quot;)\rinstall.packages(\u0026quot;DT\u0026quot;)\r##\roptions(repos = c(CRAN = \u0026quot;https://cran.revolutionanalytics.com\u0026quot;))\r 如果是linux系統要先:\n# sudo visudo\r# 然後加入\r# username ALL = NOPASSWD: /fullpath/to/command, /fullpath/to/othercommand\r# 下面這個system 需要上面兩行\rsystem('sudo apt update;sudo apt upgrade;sudo apt-get install curl')\rsystem('sudo apt-get install -y libxml2-dev libcurl4-openssl-dev libssl-dev')\r \r\r自動update package update.packages(ask=FALSE) 也可以？\nall.packages \u0026lt;- installed.packages()\rr.version \u0026lt;- paste(version[['major']], '.', version[['minor']], sep = '')\rfor (i in 1:nrow(all.packages))\r{\rpackage.name \u0026lt;- all.packages[i, 1]\rpackage.version \u0026lt;- all.packages[i, 3]\rif (package.version != r.version)\r{\rprint(paste('Installing', package.name))\rinstall.packages(package.name)\r}\r}\r 重裝R以後,更新套件  update.packages() update.packages(ask = FALSE) update.packages(ask = FALSE, checkBuilt = TRUE)   Rtools 在windows中安裝完以後，在R主控台上執行\nwriteLines('PATH=\u0026quot;${RTOOLS40_HOME}\\\\usr\\\\bin;${PATH}\u0026quot;', con = \u0026quot;~/.Renviron\u0026quot;)\r 重啟動，然後測試下面指令\nSys.which(\u0026quot;make\u0026quot;)\r 反安裝 在R console中，利用指令 .libPaths()，或者在shell(terminal)中利用 R -e '.libPaths()' 知道套裝被安裝在哪裡，然後可以移除所有的相關套件 uinstall.packages()\n"},
{"uri": "/blogR//rlang/2_2_data_explorer.html","title": "2.2 data explorer",
	"tags": [],
	"description": "資料探索",
	"content": "資料探索 常用函數  Mean Median Quartile Percentile Range Interquartile Range Box Plot Variance Standard Deviation Covariance Correlation Coefficient Central Moment Skewness Kurtosis  mean(mtcars$mpg)\r#\u0026gt; [1] 20.09062\rmedian(mtcars$mpg)\r#\u0026gt; [1] 19.2\rmin(mtcars$mpg)\r#\u0026gt; [1] 10.4\rmax(mtcars$mpg)\r#\u0026gt; [1] 33.9\rquantile(mtcars$mpg)\r#\u0026gt; 0% 25% 50% 75% 100% #\u0026gt; 10.400 15.425 19.200 22.800 33.900\rquantile(mtcars$mpg,c(0.2))\r#\u0026gt; 20% #\u0026gt; 15.2\rif(!require(moments))\rinstall.packages(\u0026quot;moment\u0026quot;)\r#\u0026gt; 載入需要的套件：moments\rskewness(mtcars$mpg)\r#\u0026gt; [1] 0.6404399\rkurtosis(mtcars$mpg)\r#\u0026gt; [1] 2.799467\r x \u0026lt;- rnorm(100)\rquantile(x, probs = c(0, 0.25, 0.5, 0.75, 1)) # quartile\rquantile(x, probs = seq(0, 1, by= 0.01)) # decile\recdf(x)\r 問題：ecdf()的結果和quantile()的結果是否一樣？\n匯入其他格式的資料 安裝package : foreign，以stata 為例(利用其中的函數read.dta())：\nif (!file.exists('resources/ceosal1.RData')){\rceosal1\u0026lt;-read.dta(\u0026quot;http://fmwww.bc.edu/ec-p/data/wooldridge/ceosal1.dta\u0026quot;)\rsave(ceosal1, file='resources/ceosal1.RData')\r}\r 來自wooldridge 的資料集 base cheat sheet\n資料 affairs\nload('resources/affairs.RData')\r# 原始資料kid是整數，加入標籤成為factor haskids \u0026lt;- factor(affairs$kids,labels=c(\u0026quot;no\u0026quot;,\u0026quot;yes\u0026quot;))\rmlab \u0026lt;- c(\u0026quot;very unhappy\u0026quot;,\u0026quot;unhappy\u0026quot;,\u0026quot;average\u0026quot;,\u0026quot;happy\u0026quot;, \u0026quot;very happy\u0026quot;)\rmarriage \u0026lt;- factor(affairs$ratemarr, labels=mlab)\r# Frequencies for having kids:\rtable(haskids)\r#\u0026gt; haskids\r#\u0026gt; no yes #\u0026gt; 171 430\r# Marriage ratings (share):\rprop.table(table(marriage))\r#\u0026gt; marriage\r#\u0026gt; very unhappy unhappy average happy very happy #\u0026gt; 0.0266223 0.1098170 0.1547421 0.3227953 0.3860233\r# Contigency table: counts (display \u0026amp; store in var.)\r(countstab \u0026lt;- table(marriage,haskids))\r#\u0026gt; haskids\r#\u0026gt; marriage no yes\r#\u0026gt; very unhappy 3 13\r#\u0026gt; unhappy 8 58\r#\u0026gt; average 24 69\r#\u0026gt; happy 40 154\r#\u0026gt; very happy 96 136\r# Share within \u0026quot;marriage\u0026quot; (i.e. within a row):\rprop.table(countstab, margin=1)\r#\u0026gt; haskids\r#\u0026gt; marriage no yes\r#\u0026gt; very unhappy 0.1875000 0.8125000\r#\u0026gt; unhappy 0.1212121 0.8787879\r#\u0026gt; average 0.2580645 0.7419355\r#\u0026gt; happy 0.2061856 0.7938144\r#\u0026gt; very happy 0.4137931 0.5862069\r# Share within \u0026quot;haskids\u0026quot; (i.e. within a column):\rprop.table(countstab, margin=2)\r#\u0026gt; haskids\r#\u0026gt; marriage no yes\r#\u0026gt; very unhappy 0.01754386 0.03023256\r#\u0026gt; unhappy 0.04678363 0.13488372\r#\u0026gt; average 0.14035088 0.16046512\r#\u0026gt; happy 0.23391813 0.35813953\r#\u0026gt; very happy 0.56140351 0.31627907\r 如果不知道函數prop.table()\n看一下資料結構\nstr(x\u0026lt;-table(haskids))\r#\u0026gt; 'table' int [1:2(1d)] 171 430\r#\u0026gt; - attr(*, \u0026quot;dimnames\u0026quot;)=List of 1\r#\u0026gt; ..$ haskids: chr [1:2] \u0026quot;no\u0026quot; \u0026quot;yes\u0026quot;\r 上面的結構顯示，\n int [1:2(1d)] 171 430 : 整數向量，長度由1到2，是個1維向量。元素1到2的內容分別是171,430。 可以由dimnames(x)得到一個list,裡面只有一個元素，這個元素又是一個char list(長度為2)。\n因此可以試試看  x/sum(x)\r#\u0026gt; haskids\r#\u0026gt; no yes #\u0026gt; 0.2845258 0.7154742\r 結果應該和prop.table()一樣。\n那麼2 way 呢？ 也是先看結構：\nstr(countstab \u0026lt;- table(marriage,haskids))\r#\u0026gt; 'table' int [1:5, 1:2] 3 8 24 40 96 13 58 69 154 136\r#\u0026gt; - attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r#\u0026gt; ..$ marriage: chr [1:5] \u0026quot;very unhappy\u0026quot; \u0026quot;unhappy\u0026quot; \u0026quot;average\u0026quot; \u0026quot;happy\u0026quot; ...\r#\u0026gt; ..$ haskids : chr [1:2] \u0026quot;no\u0026quot; \u0026quot;yes\u0026quot;\rcountstab/rowSums(countstab)\r#\u0026gt; haskids\r#\u0026gt; marriage no yes\r#\u0026gt; very unhappy 0.1875000 0.8125000\r#\u0026gt; unhappy 0.1212121 0.8787879\r#\u0026gt; average 0.2580645 0.7419355\r#\u0026gt; happy 0.2061856 0.7938144\r#\u0026gt; very happy 0.4137931 0.5862069\rcountstab/colSums(countstab)\r#\u0026gt; haskids\r#\u0026gt; marriage no yes\r#\u0026gt; very unhappy 0.01754386 0.03023256\r#\u0026gt; unhappy 0.01860465 0.33918129\r#\u0026gt; average 0.14035088 0.16046512\r#\u0026gt; happy 0.09302326 0.90058480\r#\u0026gt; very happy 0.56140351 0.31627907\r#??countstab/colsum(countstab)\r ceosal1\nload('resources/ceosal1.RData')\r# sample average:\rmean(ceosal1$salary)\r#\u0026gt; [1] 1281.12\r# sample median:\rmedian(ceosal1$salary)\r#\u0026gt; [1] 1039\r#standard deviation:\rsd(ceosal1$salary)\r#\u0026gt; [1] 1372.345\r# summary information:\rsummary(ceosal1$salary)\r#\u0026gt; Min. 1st Qu. Median Mean 3rd Qu. Max. #\u0026gt; 223 736 1039 1281 1407 14822\r# correlation with ROE:\rcor(ceosal1$salary, ceosal1$roe)\r#\u0026gt; [1] 0.1148417\rboxplot(ceosal1$roe,horizontal = T)\r boxplot(ceosal1$roe~ceosal1$consprod)\r t-test Manually enter raw data from Wooldridge, Table C.3: SR87\u0026lt;-c(10,1,6,.45,1.25,1.3,1.06,3,8.18,1.67,.98,1,.45,\r5.03,8,9,18,.28,7,3.97)\rSR88\u0026lt;-c(3,1,5,.5,1.54,1.5,.8,2,.67,1.17,.51,.5,.61,6.7,\r4,7,19,.2,5,3.83)\r Calculate Change (the parentheses just display the results): (Change \u0026lt;- SR88 - SR87)\r#\u0026gt; [1] -7.00 0.00 -1.00 0.05 0.29 0.20 -0.26 -1.00 -7.51 -0.50 -0.47 -0.50\r#\u0026gt; [13] 0.16 1.67 -4.00 -2.00 1.00 -0.08 -2.00 -0.14\r Ingredients to CI formula (avgCh\u0026lt;- mean(Change))\r#\u0026gt; [1] -1.1545\r(n \u0026lt;- length(Change))\r#\u0026gt; [1] 20\r(sdCh \u0026lt;- sd(Change))\r#\u0026gt; [1] 2.400639\r(se \u0026lt;- sdCh/sqrt(n))\r#\u0026gt; [1] 0.5367992\r(c \u0026lt;- qt(.975, n-1))\r#\u0026gt; [1] 2.093024\r Confidence intervall: c( avgCh - c*se, avgCh + c*se )\r#\u0026gt; [1] -2.27803369 -0.03096631\r 驗證\nv.n \u0026lt;- length(Change)\rv.mean \u0026lt;- sum(Change)/v.n\rv.std \u0026lt;-sqrt(sum((Change-v.mean)^2)/(v.n-1))\rv.se \u0026lt;- v.std/sqrt(v.n)\rrst\u0026lt;-list(v.n,v.mean,v.std,v.se)\rrst\r#\u0026gt; [[1]]\r#\u0026gt; [1] 20\r#\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] -1.1545\r#\u0026gt; #\u0026gt; [[3]]\r#\u0026gt; [1] 2.400639\r#\u0026gt; #\u0026gt; [[4]]\r#\u0026gt; [1] 0.5367992\r 練習：黑白種，用同一個CV找工作。\naudit\nload('resources/audit.dta')\rhead(audit)\r#\u0026gt; w b y\r#\u0026gt; 1 1 1 0\r#\u0026gt; 2 1 1 0\r#\u0026gt; 3 1 1 0\r#\u0026gt; 4 1 1 0\r#\u0026gt; 5 1 1 0\r#\u0026gt; 6 0 0 0\r y是前兩個欄位相減。以第1筆資料為例，兩個都是1，沒差別(y=0)。\nby hand t statistic for H0: mu=0:\n自由度(d.f.)為 n-1 =240 的t分配，其臨界值Critical values(如下):\nalpha.one.tailed = c(0.1, 0.05, 0.025, 0.01, 0.005, .001)\rCV \u0026lt;- qt(1 - alpha.one.tailed, n-1)\rcbind(alpha.one.tailed, CV)\r#\u0026gt; alpha.one.tailed CV\r#\u0026gt; [1,] 0.100 1.285089\r#\u0026gt; [2,] 0.050 1.651227\r#\u0026gt; [3,] 0.025 1.969898\r#\u0026gt; [4,] 0.010 2.341985\r#\u0026gt; [5,] 0.005 2.596469\r#\u0026gt; [6,] 0.001 3.124536\r by 函數t.test() H0: y=5, H1:y\u0026gt;5, 信賴區間0.99 t.test(y, mu=5, alternative=\u0026quot;greater\u0026quot;, conf.level=0.99) 利用函數算：\n# ex.C.3: two-sided CI\rt.test(audit$y)\r# ex.C.5 \u0026amp; C.7: 1-sided test:\rt.test(audit$y, alternative=\u0026quot;less\u0026quot;)\r One Sample t-test\rdata: audit$y\rt = -4.2768, df = 240, p-value = 2.739e-05\ralternative hypothesis: true mean is not equal to 0\r95 percent confidence interval:\r-0.1939385 -0.0716217 **說明：mu +/- c.level*(se) 見手算例 **\rsample estimates:\rmean of x -0.1327801 One Sample t-test\rdata: audit$y\rt = -4.2768, df = 240, p-value = 1.369e-05\ralternative hypothesis: true mean is less than 0\r95 percent confidence interval:\r-Inf -0.08151529\rsample estimates:\rmean of x -0.1327801\r 分組 目的：分組求統計量 大綱是：先探索一下我們可能用到的R語言技巧，然後是寫成函數。\n方法1: 利用 for迴圈 如果不分組\nage = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372,\r34.935, 35.2115, 35.2115, 5.2115, 36.7803)\rgroup = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1)\rdframe = data.frame(age=age, group=group)\rsummary(dframe)\r#\u0026gt; age group #\u0026gt; Min. : 5.212 Min. :1.0 #\u0026gt; 1st Qu.:26.742 1st Qu.:1.0 #\u0026gt; Median :33.212 Median :1.0 #\u0026gt; Mean :29.216 Mean :1.4 #\u0026gt; 3rd Qu.:35.142 3rd Qu.:2.0 #\u0026gt; Max. :36.780 Max. :2.0\r data.frame 的record篩選，可以利用邏輯值索引來篩選分組，這裡的範例都是求得一組(以第一分類為例)：\nft\u0026lt;-factor(dframe$group)\rgn\u0026lt;-length(levels(ft)) # nlevels(ft)\rgf\u0026lt;-ft==levels(ft)[1] # 第一組\rg1\u0026lt;-dframe[gf,]\rg1\r#\u0026gt; age group\r#\u0026gt; 1 23.0883 1\r#\u0026gt; 2 25.8344 1\r#\u0026gt; 3 29.4648 1\r#\u0026gt; 5 33.6372 1\r#\u0026gt; 6 34.9350 1\r#\u0026gt; 10 36.7803 1\r 除了上面的篩選方式以外，也可以利用%in%\nft\u0026lt;-factor(dframe$group)\rgn\u0026lt;-length(levels(ft)) # nlevels(ft)\rgf\u0026lt;-as.numeric(levels(ft)[1]) # 第一組\rg1\u0026lt;-dframe[group %in% gf,] # 不是 gf %in% group\rrst\u0026lt;-summary(g1)\rrst[4,1]\r#\u0026gt; [1] \u0026quot;Mean :30.62 \u0026quot;\rrst[4,2]\r#\u0026gt; [1] \u0026quot;Mean :1 \u0026quot;\r 最後的程式碼：\nft\u0026lt;-factor(dframe$group)\rrst \u0026lt;- as.list(numeric(nlevels(ft)))\rnames(rst)\u0026lt;-levels(ft)\rfor (gi in levels(ft) ){\rgf\u0026lt;-as.numeric(gi)\rg1\u0026lt;-dframe[group %in% gf,] t\u0026lt;-summary(g1)\rrst[gi]=t[4,1]\r}\rprint(rst)\r#\u0026gt; $`1`\r#\u0026gt; [1] \u0026quot;Mean :30.62 \u0026quot;\r#\u0026gt; #\u0026gt; $`2`\r#\u0026gt; [1] \u0026quot;Mean :27.105 \u0026quot;\r 函數summary()的結果是一個table，但是而且裡面的元素是「字串」，例如\nage group Min. : 5.212 Min. :1.0 1st Qu.:26.742 1st Qu.:1.0 Median :33.212 Median :1.0 Mean :29.216 Mean :1.4 3rd Qu.:35.142 3rd Qu.:2.0 Max. :36.780 Max. :2.0  但是在很多情況下，我們希望可以自己可以控制的格式便於進步分析。例如，要一個矩陣，此時可以利用sub()： as.numeric(sub('.*:', '', summary(dframe)[4,1]))\n\r\r方法2:　函數aggregate() aggregate(dframe$age, by=list(dframe$group), FUN=mean)\r#\u0026gt; Group.1 x\r#\u0026gt; 1 1 30.62333\r#\u0026gt; 2 2 27.10507\raggregate(dframe$age, by=list(dframe$group), FUN=mean)[2]\r#\u0026gt; x\r#\u0026gt; 1 30.62333\r#\u0026gt; 2 27.10507\r aggregate()傳回data.frame，轉矩陣利用as.matrix()\n練習： 上面的範例是每組求得一個值，如果是多個呢？例如利用aggregate()求得每組min,max,median,q25,q75 ?\n方法3: 函數　tapply f1\u0026lt;-function(im)\r{\rc(min(im),median(im),mean(im),max(im))\r}\rrst\u0026lt;-tapply(dframe$age,dframe$group,FUN = f1)#結果是list兩個元素，分別對應f1的計算結果\rrstm\u0026lt;-unlist(rst) # unlist 會把rst 變成1維向量\rrstm\u0026lt;-matrix(rstm,ncol=2) # hard code2 , try `length(levels(factor(dframe$group)))`\rrownames(rstm)\u0026lt;-c(\u0026quot;min\u0026quot;,\u0026quot;median\u0026quot;,\u0026quot;mean\u0026quot;,\u0026quot;max\u0026quot;)\rcolnames(rstm)\u0026lt;-paste(\u0026quot;組別:\u0026quot;,levels(factor(dframe$group)))\rrstm\r#\u0026gt; 組別: 1 組別: 2\r#\u0026gt; min 23.08830 5.21150\r#\u0026gt; median 31.55100 33.99865\r#\u0026gt; mean 30.62333 27.10507\r#\u0026gt; max 36.78030 35.21150\r 方法3 利用其他套件 library(dplyr)\rdt \u0026lt;- data.frame(age=rchisq(20,10), group=sample(1:2,20, rep=T))\rgrp \u0026lt;- group_by(dt, group)\rsummarise(grp, mean=mean(age), sd=sd(age))\rdetach(\u0026quot;package:dplyr\u0026quot;, unload=TRUE)\r plot 這裡的分組不能用之前的hard code 中提到的方法，因為各組可能數量不同。\nv1\u0026lt;-c(1,2,3)\rv2\u0026lt;-c(4,4)\rcbind(v1,v2)\r#\u0026gt; Warning in cbind(v1, v2): number of rows of result is not a multiple of vector\r#\u0026gt; length (arg 2)\r#\u0026gt; v1 v2\r#\u0026gt; [1,] 1 4\r#\u0026gt; [2,] 2 4\r#\u0026gt; [3,] 3 4\r rbind(v1,v2) 發生錯誤，是否只能用於data.frame\n問題： 如果想要合併兩個向量，同時如果長度不一樣，就短的向量就補NA要怎麼做？練習寫成函數。\n#\u0026gt; v1 v2\r#\u0026gt; [1,] 1 4\r#\u0026gt; [2,] 2 4\r#\u0026gt; [3,] 3 NA\r 練習:\n已經知道boxplot()的參數如果傳進矩陣或資料集，將對每一個欄位作圖\nnote:boxplot吃 y~x回歸式,例如\nboxplot(formula = Ozone ~ Month, # Y ~ X data = airquality, # 資料\rxlab = \u0026quot;Month\u0026quot;, ylab = \u0026quot;Ozone (ppb)\u0026quot;, col =\u0026quot;red\u0026quot;)\r boxplot(matrix(rnorm(100),ncol=2))\r 現在要分組對年齡boxplot,請寫出程式碼，資料如下：\nage = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372,\r34.935, 35.2115, 35.2115, 5.2115, 36.7803)\rgroup = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1)\rdframe = data.frame(age=age, group=group)\r hint: 每組長度可能不一樣，需要補NA\nhint: 最簡單的寫法 boxplot(age~group)\n\u0026lt;1\u0026gt; FUN.Name 會跑到mathch.fun() 這個函數，而這個函數是用字串搜尋\nm2: 現在想要把rst轉成data.frame。\n先看一下示範，如何把list 轉成 data.frame\n# 解釋結果,問stringsAsFactors=F 有什麼效果？\rtest1 \u0026lt;- list( c(a='a',b='b',c='c'), c(a='d',b='e',c='f'))\rd1\u0026lt;-as.data.frame(test1)\rd1\r#\u0026gt; c.a....a...b....b...c....c.. c.a....d...b....e...c....f..\r#\u0026gt; a a d\r#\u0026gt; b b e\r#\u0026gt; c c f\r# ok\rtest2 \u0026lt;- list(a = c(1, 2, 3), b = c(4, 5, 6))\rd2\u0026lt;-as.data.frame(test2)\rd2\r#\u0026gt; a b\r#\u0026gt; 1 1 4\r#\u0026gt; 2 2 5\r#\u0026gt; 3 3 6\r "},
{"uri": "/blogR//rlang/2_3_data_explorer.html","title": "2.3 data explorer",
	"tags": [],
	"description": "資料探索",
	"content": "age = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372,\r34.935, 35.2115, 35.2115, 5.2115, 36.7803)\rgroup = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1)\rdframe = data.frame(age=age, group=group)\r 分組列出summary:利用函數 age = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372,\r34.935, 35.2115, 35.2115, 5.2115, 36.7803)\rgroup = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1)\rdframe = data.frame(age=age, group=group)\rmygroup\u0026lt;-function(df,g,idx)\r{\rft\u0026lt;-factor(df$g)\rgf\u0026lt;-ft==levels(ft)[idx] # 第一組\rg1\u0026lt;-df[gf,]\rreturn(g1) }\rx\u0026lt;-mygroup(dframe,\u0026quot;group\u0026quot;,1)\r 問題： 現在把某個欄位依據分組畫出boxplot A:age B:group(1,2) 不足的補NA,每一欄成為矩陣，例如共兩組，那麼矩陣欄位就是2，比數為各組資料，長度不夠補na， 最後 boxplot(mtx)\nage = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372,\r34.935, 35.2115, 35.2115, 5.2115, 36.7803)\rgroup = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1)\rdframe = data.frame(age=age, group=group)\rgf\u0026lt;-group==1\rg1\u0026lt;-dframe[gf,1]\rgf\u0026lt;-group==2\rg2\u0026lt;-dframe[gf,1]\rmlen\u0026lt;-max(length(g1),length(g2))\rlength(g1)\u0026lt;-mlen\rlength(g2)\u0026lt;-mlen\rmtx\u0026lt;-cbind(g1,g2)\rboxplot(mtx)\r age = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372,\r34.935, 35.2115, 35.2115, 5.2115, 36.7803)\rgroup = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1)\rdframe = data.frame(age=age, group=group)\rvl\u0026lt;-list()\rfor (i in 1:2){\rgf\u0026lt;-group==i\rg1\u0026lt;-dframe[gf,1]\rvl[[i]]\u0026lt;-g1\r}\rgn\u0026lt;-sapply(vl,length)\rgn\u0026lt;-max(gn)\rvl\u0026lt;-lapply(vl,`length\u0026lt;-`,gn) # 補NA\rmtx\u0026lt;-matrix(unlist(vl),nrow=gn)\rboxplot(mtx)\r summary(dframe)\nft\u0026lt;-factor(dframe$group) gn\u0026lt;-length(levels(ft)) # nlevels(ft)\ngf\u0026lt;-ft==levels(ft)[1] # 第一組 g1\u0026lt;-dframe[gf,] summary(g1)\ngf\u0026lt;-ft==levels(ft)[2] # 第一組 g2\u0026lt;-dframe[gf,] summary(g2)\nmygroup\u0026lt;-function(df,g,idx) { ft\u0026lt;-factor(df$g)\ngf\u0026lt;-ft==levels(ft)[idx] # 第一組 g1\u0026lt;-df[gf,] return(g1)\n} for (i in 1:2){ x\u0026lt;-mygroup(dframe,\u0026quot;group\u0026quot;,i)\nprint(summary(x)) }\n"},
{"uri": "/blogR//rlang/3_quickview1.html","title": "3. Quick view 1",
	"tags": [],
	"description": "操作",
	"content": "快速指令\n目前有哪些資料集可以測試 data() attach() 一般是\nlibrary(sample)\rdata(\u0026quot;mydata\u0026quot;)\r attach(\u0026quot;mydata\u0026quot;) 就不用打入mydata$欄位名稱\n幾個常用的統計量: x\u0026lt;-c(1,2,3)\rmedian(x)\rmean(x)\rmin(x)\rsd(x)\rrange(x)\rdiff(x)\r 資料型態和內容 可以先看看資料描述 ?mtcars\nmtcars\r #\u0026gt; mpg cyl disp hp drat wt qsec vs am gear carb\r#\u0026gt; Mazda RX4 21.0 6 160.0 110 3.90 2.620 16.46 0 1 4 4\r#\u0026gt; Mazda RX4 Wag 21.0 6 160.0 110 3.90 2.875 17.02 0 1 4 4\r#\u0026gt; Datsun 710 22.8 4 108.0 93 3.85 2.320 18.61 1 1 4 1\r#\u0026gt; Hornet 4 Drive 21.4 6 258.0 110 3.08 3.215 19.44 1 0 3 1\r#\u0026gt; Hornet Sportabout 18.7 8 360.0 175 3.15 3.440 17.02 0 0 3 2\r#\u0026gt; Valiant 18.1 6 225.0 105 2.76 3.460 20.22 1 0 3 1\r#\u0026gt; Duster 360 14.3 8 360.0 245 3.21 3.570 15.84 0 0 3 4\r#\u0026gt; Merc 240D 24.4 4 146.7 62 3.69 3.190 20.00 1 0 4 2\r#\u0026gt; Merc 230 22.8 4 140.8 95 3.92 3.150 22.90 1 0 4 2\r#\u0026gt; Merc 280 19.2 6 167.6 123 3.92 3.440 18.30 1 0 4 4\r#\u0026gt; Merc 280C 17.8 6 167.6 123 3.92 3.440 18.90 1 0 4 4\r#\u0026gt; Merc 450SE 16.4 8 275.8 180 3.07 4.070 17.40 0 0 3 3\r#\u0026gt; Merc 450SL 17.3 8 275.8 180 3.07 3.730 17.60 0 0 3 3\r#\u0026gt; Merc 450SLC 15.2 8 275.8 180 3.07 3.780 18.00 0 0 3 3\r#\u0026gt; Cadillac Fleetwood 10.4 8 472.0 205 2.93 5.250 17.98 0 0 3 4\r#\u0026gt; Lincoln Continental 10.4 8 460.0 215 3.00 5.424 17.82 0 0 3 4\r#\u0026gt; Chrysler Imperial 14.7 8 440.0 230 3.23 5.345 17.42 0 0 3 4\r#\u0026gt; Fiat 128 32.4 4 78.7 66 4.08 2.200 19.47 1 1 4 1\r#\u0026gt; Honda Civic 30.4 4 75.7 52 4.93 1.615 18.52 1 1 4 2\r#\u0026gt; Toyota Corolla 33.9 4 71.1 65 4.22 1.835 19.90 1 1 4 1\r#\u0026gt; Toyota Corona 21.5 4 120.1 97 3.70 2.465 20.01 1 0 3 1\r#\u0026gt; Dodge Challenger 15.5 8 318.0 150 2.76 3.520 16.87 0 0 3 2\r#\u0026gt; AMC Javelin 15.2 8 304.0 150 3.15 3.435 17.30 0 0 3 2\r#\u0026gt; Camaro Z28 13.3 8 350.0 245 3.73 3.840 15.41 0 0 3 4\r#\u0026gt; Pontiac Firebird 19.2 8 400.0 175 3.08 3.845 17.05 0 0 3 2\r#\u0026gt; Fiat X1-9 27.3 4 79.0 66 4.08 1.935 18.90 1 1 4 1\r#\u0026gt; Porsche 914-2 26.0 4 120.3 91 4.43 2.140 16.70 0 1 5 2\r#\u0026gt; Lotus Europa 30.4 4 95.1 113 3.77 1.513 16.90 1 1 5 2\r#\u0026gt; Ford Pantera L 15.8 8 351.0 264 4.22 3.170 14.50 0 1 5 4\r#\u0026gt; Ferrari Dino 19.7 6 145.0 175 3.62 2.770 15.50 0 1 5 6\r#\u0026gt; Maserati Bora 15.0 8 301.0 335 3.54 3.570 14.60 0 1 5 8\r#\u0026gt; Volvo 142E 21.4 4 121.0 109 4.11 2.780 18.60 1 1 4 2\r head(mtcars)\r #\u0026gt; mpg cyl disp hp drat wt qsec vs am gear carb\r#\u0026gt; Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4\r#\u0026gt; Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4\r#\u0026gt; Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1\r#\u0026gt; Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1\r#\u0026gt; Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2\r#\u0026gt; Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1\r tail(mtcars)\r #\u0026gt; mpg cyl disp hp drat wt qsec vs am gear carb\r#\u0026gt; Porsche 914-2 26.0 4 120.3 91 4.43 2.140 16.7 0 1 5 2\r#\u0026gt; Lotus Europa 30.4 4 95.1 113 3.77 1.513 16.9 1 1 5 2\r#\u0026gt; Ford Pantera L 15.8 8 351.0 264 4.22 3.170 14.5 0 1 5 4\r#\u0026gt; Ferrari Dino 19.7 6 145.0 175 3.62 2.770 15.5 0 1 5 6\r#\u0026gt; Maserati Bora 15.0 8 301.0 335 3.54 3.570 14.6 0 1 5 8\r#\u0026gt; Volvo 142E 21.4 4 121.0 109 4.11 2.780 18.6 1 1 4 2\r head 前幾筆資料 tail 後幾筆資料\n編輯/瀏覽資料 edit(mtcars)\rdata.entry(mtcars)\rView(mtcars)\r 個別欄位 如果要顯示個別欄位,一般可以是mtcars$mpg,但是如果要直接使用mpg欄位,可以利用attach()\nattach(mtcars)\rmpg\r 質性數據的分析 欄位cyl為質性變數,可以利用table分析\nattach(mtcars)\rtable(mtcars$cyl)\r #\u0026gt; #\u0026gt; 4 6 8 #\u0026gt; 11 7 14\r 頻率圖\nattach(mtcars)\r #\u0026gt; 下列物件被遮斷自 mtcars (pos = 3):\r#\u0026gt; #\u0026gt; am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt\r barplot(table(mtcars$cyl))\r 解釋下面兩個圖為甚麼不一樣?\nattach(mtcars)\r #\u0026gt; 下列物件被遮斷自 mtcars (pos = 3):\r#\u0026gt; #\u0026gt; am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt\r #\u0026gt; 下列物件被遮斷自 mtcars (pos = 4):\r#\u0026gt; #\u0026gt; am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt\r v\u0026lt;-as.vector(table(mtcars$cyl))\rbarplot(v)\r attach(mtcars)\r #\u0026gt; 下列物件被遮斷自 mtcars (pos = 3):\r#\u0026gt; #\u0026gt; am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt\r #\u0026gt; 下列物件被遮斷自 mtcars (pos = 4):\r#\u0026gt; #\u0026gt; am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt\r #\u0026gt; 下列物件被遮斷自 mtcars (pos = 5):\r#\u0026gt; #\u0026gt; am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt\r m\u0026lt;-as.matrix(table(mtcars$cyl))\rbarplot(m)\r 上面兩個圖不一樣,因為table()的定義,所以轉成矩陣以後是3x1。\nx\u0026lt;-c(1,1,1)\rx1\u0026lt;-as.matrix(x)\rx2\u0026lt;-as.table(x)\rx3\u0026lt;-table(x)\rx1\rx2\rx3\r  [,1]\r[1,] 1\r[2,] 1\r[3,] 1\r# x2 原地轉\rA B C 1 1 1 # x3 : 計算1有幾個\rx\r1 3  \r\rbarplot(c(11,7,4))\r barplot(mtcars$mpg)\r barplot(mtcars$cyl)\r assignment  \u0026lt;-和 -\u0026gt; 是一對 ，可以向左和向右賦值 = 是單向的 ，作用和\u0026lt;-基本相同，但對函數中的變數通常使用= \u0026lt;\u0026lt;- 這個是全域賦值 ，跟變數的作用域有關，開發自己的套件(package)的時候,常用。  ##Delete x (if it exists)\rrm(x)\r #\u0026gt; Warning in rm(x): 找不到物件 'x'\r mean(x = 1:10) #[1] 5.5\r #\u0026gt; [1] 5.5\r x #Error: object 'x' not found\r #\u0026gt; Error in eval(expr, envir, enclos): 找不到物件 'x'\r 觀察上面的x,第一行指令從環境中去掉變數x的定義。 第2行中的x是在block 中定義，因此執行完以後,會被殺掉。因此第三行指令,出現找不到x的提示。\n後面測試\u0026lt;- operator:\nmean(x \u0026lt;- 1:10) # [1] 5.5\r #\u0026gt; [1] 5.5\r x\r #\u0026gt; [1] 1 2 3 4 5 6 7 8 9 10\r  x # [1] 1 2 3 4 5 6 7 8 9 10\n This time the x variable is declared within the user workspace. When does the assignment take place ? In the code above, you may be tempted to thin that we “assign 1:10 to x, then calculate the mean. ” This would be true for #languages such as C, but it isn ’t true in R. Consider the following function:\na \u0026lt;- 1\rf \u0026lt;- function(a) return(TRUE)\rf \u0026lt;- f(a \u0026lt;- a + 1);\r# 輸出:TRUE\ra # 結果=1  #\u0026gt; [1] 1\r 注意上面a的值,仍然是1。原因是因為R的編譯器,在最佳化的時候,知道函數中沒用到參數,因此根本沒有存取到變數a,因此，原來的a是甚麼,a仍然是甚麼。\n簡單講就是f(a\u0026lt;-a+1)中的a\u0026lt;-a+1 被去掉不會被執行\nf(a\u0026lt;-a+1) =\u0026gt; f()\nrewrite\nf \u0026lt;- function(a) {\rif (runif(1) \u0026gt; 0.5) TRUE else a\r} f(a \u0026lt;- a + 1);\ra # result 2\r #\u0026gt; [1] 2\r 這個函數f用到了參數a,但是編譯器這次沒那麼聰明,知道使用者用a來做甚麼,雖然這個函數的body仍然沒有動到a,但是這次f(a\u0026lt;-a+1)中的a\u0026lt;-a+1 會被執行。\n練習\n 先去掉環境中的變數a,然後在執行上面的chunk.   hint: rm(a)  提示\r \rf(a \u0026lt;- a + 1);\r #\u0026gt; [1] TRUE\r # TRUE\ra # 2\r #\u0026gt; [1] 2\r f(a \u0026lt;- a + 1);\r #\u0026gt; [1] TRUE\r a #3\r #\u0026gt; [1] 2\r a\u0026lt;-1;\rf \u0026lt;- function(a) return(a);\rinvisible(f(a=a+1)) a\r #\u0026gt; [1] 1\r invisible(f(a\u0026lt;-a+1))\ra\r #\u0026gt; [1] 2\r 上面程式中,invisible函數在這裡的說明不重要,只是用來隱藏計算結果。\na\u0026lt;-1;\rf \u0026lt;- function(a) return(3);\rinvisible(f(a=a+1))\ra\r #\u0026gt; [1] 1\r invisible(f(a\u0026lt;-a+1))\ra\r #\u0026gt; [1] 1\r =用在參數指派 例如\nmatrix(1:20, ncol = 4)\r #\u0026gt; [,1] [,2] [,3] [,4]\r#\u0026gt; [1,] 1 6 11 16\r#\u0026gt; [2,] 2 7 12 17\r#\u0026gt; [3,] 3 8 13 18\r#\u0026gt; [4,] 4 9 14 19\r#\u0026gt; [5,] 5 10 15 20\r ncol\r #\u0026gt; function (x) #\u0026gt; dim(x)[2L]\r#\u0026gt; \u0026lt;bytecode: 0x0000000018946ad8\u0026gt;\r#\u0026gt; \u0026lt;environment: namespace:base\u0026gt;\r 產生5X4矩陣。如果\nmatrix(1:20, ncol \u0026lt;- 4)\r #\u0026gt; [,1] [,2] [,3] [,4] [,5]\r#\u0026gt; [1,] 1 5 9 13 17\r#\u0026gt; [2,] 2 6 10 14 18\r#\u0026gt; [3,] 3 7 11 15 19\r#\u0026gt; [4,] 4 8 12 16 20\r ncol\r #\u0026gt; [1] 4\r 會產生一個變數 ncol，這裡產生的為4x5的矩陣。為甚麼?因為這裡的第2個參數ncol\u0026lt;-4,指派給變數ncol,然後這個expression會return 4,而4就被當成第2個參數,也就是matrix(1:20, ncol \u0026lt;- 4)等同於matrix(1:20, 4),也就是指定ROW的維度。\n結論:x\u0026lt;-3 \u0026lt;-會在全局產生變數x然後指派3\n(x \u0026lt;- 3)\r #\u0026gt; [1] 3\r #rm(list = ls())\rrm(x)\rls()\r #\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;base_name\u0026quot; \u0026quot;cachepath\u0026quot; #\u0026gt; [4] \u0026quot;collectOutputClass\u0026quot; \u0026quot;collectSourceClass\u0026quot; \u0026quot;debugp\u0026quot; #\u0026gt; [7] \u0026quot;f\u0026quot; \u0026quot;hugocmd\u0026quot; \u0026quot;indir\u0026quot; #\u0026gt; [10] \u0026quot;infile\u0026quot; \u0026quot;m\u0026quot; \u0026quot;ncol\u0026quot; #\u0026gt; [13] \u0026quot;ohook_chunk\u0026quot; \u0026quot;ohook_output\u0026quot; \u0026quot;ohook_source\u0026quot; #\u0026gt; [16] \u0026quot;one_string\u0026quot; \u0026quot;outfile\u0026quot; \u0026quot;parseOutputHead\u0026quot; #\u0026gt; [19] \u0026quot;parseSourceHead\u0026quot; \u0026quot;relativePath\u0026quot; \u0026quot;splitLines\u0026quot; #\u0026gt; [22] \u0026quot;v\u0026quot; \u0026quot;wprint\u0026quot;\r (x = 3)\r #\u0026gt; [1] 3\r ls()\r #\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;base_name\u0026quot; \u0026quot;cachepath\u0026quot; #\u0026gt; [4] \u0026quot;collectOutputClass\u0026quot; \u0026quot;collectSourceClass\u0026quot; \u0026quot;debugp\u0026quot; #\u0026gt; [7] \u0026quot;f\u0026quot; \u0026quot;hugocmd\u0026quot; \u0026quot;indir\u0026quot; #\u0026gt; [10] \u0026quot;infile\u0026quot; \u0026quot;m\u0026quot; \u0026quot;ncol\u0026quot; #\u0026gt; [13] \u0026quot;ohook_chunk\u0026quot; \u0026quot;ohook_output\u0026quot; \u0026quot;ohook_source\u0026quot; #\u0026gt; [16] \u0026quot;one_string\u0026quot; \u0026quot;outfile\u0026quot; \u0026quot;parseOutputHead\u0026quot; #\u0026gt; [19] \u0026quot;parseSourceHead\u0026quot; \u0026quot;relativePath\u0026quot; \u0026quot;splitLines\u0026quot; #\u0026gt; [22] \u0026quot;v\u0026quot; \u0026quot;wprint\u0026quot; \u0026quot;x\u0026quot;\r 因為x是參數名稱不是變數,看mean help\n"},
{"uri": "/blogR//rlang/3_01_regular_expression.html","title": "3.1 Regular expression syntax",
	"tags": [],
	"description": "基本語法",
	"content": "利用一些特殊字元，例如 $ * + . ? [ ] ^ { } | ( ) \\構成Regular expressions，用來在文字中表達某些搜尋樣式的語法。 這裡只是簡短的介紹\nFunctions which work with regular expression patterns  strsplit: split string into substrings at occurances of regexp grep: search for a regular expression within a string sub: search and then replace an occurance of a regular expression in a strng gsub: global search and replace all occurances of a regular expression in a string  grep, grepl grep,grepl的差別是後者不支援參數value，且比對的結果和搜尋內容的個數相同。 下面的例子是找出a.c這個字串。\ngrep(\u0026quot;a\\\\.c\u0026quot;, c(\u0026quot;abc\u0026quot;, \u0026quot;a.c\u0026quot;, \u0026quot;bef\u0026quot;))\r#\u0026gt; [1] 2\rgrep(\u0026quot;a\\\\.c\u0026quot;, c(\u0026quot;abc\u0026quot;, \u0026quot;a.c\u0026quot;, \u0026quot;bef\u0026quot;),value=TRUE)\r#\u0026gt; [1] \u0026quot;a.c\u0026quot;\rgrepl(\u0026quot;a\\\\.c\u0026quot;, c(\u0026quot;abc\u0026quot;, \u0026quot;a.c\u0026quot;, \u0026quot;bef\u0026quot;))\r#\u0026gt; [1] FALSE TRUE FALSE\r 又另一個例子,是在字串中尋找單引號,假定要在國家中找尋是否有名稱包含單引號的名字,可以使用'\\'' 問題:為甚麼不是'\\\\''\nEscape sequences 正規表達式中.代表任意字元,但是如果我們要在字串中查找\u0026quot;.\u0026quot;(例如,檔案名稱中的點) 的時候要怎樣表示?答案是使用逃逸字元\\。但是在R語言中,正規表達式，也是使用字串，可是在字串中,\\本身就逃逸字元，因此需要\\\\.。\ndot \u0026lt;- \u0026quot;\\\\.\u0026quot;\rwriteLines(dot)\r#\u0026gt; \\.\rx \u0026lt;- \u0026quot;a\\\\b\u0026quot;\rwriteLines(x)\r#\u0026gt; a\\b\r 這裡的逃逸字元只是字串的標準用法,'不是正規表達式的特殊字元。電腦語言認字串的方法是成對的引號,這個時候如果寫'''那是甚麼意思?所以'\\''就是字串'的意思。所以為甚麼之前是\u0026quot;a\\.c\u0026quot;中,第二個\\是解脫正規表達中.的意義。而第一個是\\是逃逸字串解讀。\ncountry\u0026lt;-read.delim('resources/country.txt',header=FALSE)\rnames(country)\u0026lt;-\u0026quot;Name\u0026quot; cname \u0026lt;-levels(country$Name)\rgrep('\\'', cname, value = TRUE)\r#\u0026gt; character(0)\r note:\n 不是country.names\u0026lt;-\u0026quot;Name\u0026quot;  問題:下面兩行有甚麼差別?\ngrep('\\'', country$Name, value = TRUE)\rgrep('\\'', levels(country$Name), value = TRUE)\r Hint: levels 傳回唯一值\nlevels(factor(c(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;a\u0026quot;)))\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot;\rfactor(c(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;a\u0026quot;))\r#\u0026gt; [1] a b a\r#\u0026gt; Levels: a b\r \r\r練習 產生3個檔案,檔案名稱含有cat\nfile.create(c(\u0026quot;xcat1.rmd\u0026quot;, \u0026quot;ycat2.txt\u0026quot;, \u0026quot;zcat3.rmd\u0026quot;))\r files\u0026lt;-list.files(\u0026quot;.\u0026quot;)\rgrep(\u0026quot;cat\u0026quot;, files, value = TRUE)\rgrep(\u0026quot;cat\u0026quot;, files, value = FALSE)\rgrepl(\u0026quot;cat\u0026quot;, files)\r regexpr, gregexpr regexpr 函數的使用方式類似grepl。傳回整數向量(表示符合位置，如果找不到,則傳回-1),個數和比對字串串列相同。這個向量同時有屬性match.length(參考範例) .\ns\u0026lt;-\u0026quot;a.b.c.9\u0026quot;\rregexpr('b',s )\r#\u0026gt; [1] 3\r#\u0026gt; attr(,\u0026quot;match.length\u0026quot;)\r#\u0026gt; [1] 1\r#\u0026gt; attr(,\u0026quot;index.type\u0026quot;)\r#\u0026gt; [1] \u0026quot;chars\u0026quot;\r#\u0026gt; attr(,\u0026quot;useBytes\u0026quot;)\r#\u0026gt; [1] TRUE\rregexpr('.',s ) # 要定位符號「.」,這是錯的,\\.也錯\r#\u0026gt; [1] 1\r#\u0026gt; attr(,\u0026quot;match.length\u0026quot;)\r#\u0026gt; [1] 1\r#\u0026gt; attr(,\u0026quot;index.type\u0026quot;)\r#\u0026gt; [1] \u0026quot;chars\u0026quot;\r#\u0026gt; attr(,\u0026quot;useBytes\u0026quot;)\r#\u0026gt; [1] TRUE\rregexpr('\\\\.',s ) # 正確\r#\u0026gt; [1] 2\r#\u0026gt; attr(,\u0026quot;match.length\u0026quot;)\r#\u0026gt; [1] 1\r#\u0026gt; attr(,\u0026quot;index.type\u0026quot;)\r#\u0026gt; [1] \u0026quot;chars\u0026quot;\r#\u0026gt; attr(,\u0026quot;useBytes\u0026quot;)\r#\u0026gt; [1] TRUE\rregexpr('[.]',s ) # 正確 ,不需要regexpr('[\\\\.]',s )\r#\u0026gt; [1] 2\r#\u0026gt; attr(,\u0026quot;match.length\u0026quot;)\r#\u0026gt; [1] 1\r#\u0026gt; attr(,\u0026quot;index.type\u0026quot;)\r#\u0026gt; [1] \u0026quot;chars\u0026quot;\r#\u0026gt; attr(,\u0026quot;useBytes\u0026quot;)\r#\u0026gt; [1] TRUE\rregexpr('\\\\d',s ) # 正確\r#\u0026gt; [1] 7\r#\u0026gt; attr(,\u0026quot;match.length\u0026quot;)\r#\u0026gt; [1] 1\r#\u0026gt; attr(,\u0026quot;index.type\u0026quot;)\r#\u0026gt; [1] \u0026quot;chars\u0026quot;\r#\u0026gt; attr(,\u0026quot;useBytes\u0026quot;)\r#\u0026gt; [1] TRUE\rx\u0026lt;-regexpr('[0-9]',s ) # 正確\rattr(x,\u0026quot;match.length\u0026quot;)\r#\u0026gt; [1] 1\r s\u0026lt;-\u0026quot;a.b.c.9 6 8\u0026quot;\rx\u0026lt;-regexpr('[0-9]',s ) x\r#\u0026gt; [1] 7\r#\u0026gt; attr(,\u0026quot;match.length\u0026quot;)\r#\u0026gt; [1] 1\r#\u0026gt; attr(,\u0026quot;index.type\u0026quot;)\r#\u0026gt; [1] \u0026quot;chars\u0026quot;\r#\u0026gt; attr(,\u0026quot;useBytes\u0026quot;)\r#\u0026gt; [1] TRUE\rattr(x,\u0026quot;match.length\u0026quot;)\r#\u0026gt; [1] 1\r gregexpr() 和 regexpr()一樣,不同的是會在目標字串中搜尋所有符合的位置而不是只找第一個(g:全局)。 因此傳回的結果個數雖然和查找的串列元素個數一樣,但是每個元素都是一個向量。如果都沒找到,只有一個-1。\ns\u0026lt;-\u0026quot;a.b.c.9 6 8\u0026quot;\rgregexpr('[0-9]',s ) #\u0026gt; [[1]]\r#\u0026gt; [1] 7 9 11\r#\u0026gt; attr(,\u0026quot;match.length\u0026quot;)\r#\u0026gt; [1] 1 1 1\r#\u0026gt; attr(,\u0026quot;index.type\u0026quot;)\r#\u0026gt; [1] \u0026quot;chars\u0026quot;\r#\u0026gt; attr(,\u0026quot;useBytes\u0026quot;)\r#\u0026gt; [1] TRUE\r 數量修飾詞Quantifiers 指定重複次數.\n *: 至少0個。 +: 至少一個. ?: 最多一個. {n}: 剛好n個. {n,}: 至少n個. {n,m}: 次數在 n 到 m 之間(包括n,m).  (strings \u0026lt;- c(\u0026quot;a\u0026quot;, \u0026quot;ab\u0026quot;, \u0026quot;acb\u0026quot;, \u0026quot;accb\u0026quot;, \u0026quot;acccb\u0026quot;, \u0026quot;accccb\u0026quot;))\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;ab\u0026quot; \u0026quot;acb\u0026quot; \u0026quot;accb\u0026quot; \u0026quot;acccb\u0026quot; \u0026quot;accccb\u0026quot;\rgrep(\u0026quot;ac*b\u0026quot;, strings, value = TRUE)\r#\u0026gt; [1] \u0026quot;ab\u0026quot; \u0026quot;acb\u0026quot; \u0026quot;accb\u0026quot; \u0026quot;acccb\u0026quot; \u0026quot;accccb\u0026quot;\rgrep(\u0026quot;ac+b\u0026quot;, strings, value = TRUE)\r#\u0026gt; [1] \u0026quot;acb\u0026quot; \u0026quot;accb\u0026quot; \u0026quot;acccb\u0026quot; \u0026quot;accccb\u0026quot;\rgrep(\u0026quot;ac?b\u0026quot;, strings, value = TRUE)\r#\u0026gt; [1] \u0026quot;ab\u0026quot; \u0026quot;acb\u0026quot;\rgrep(\u0026quot;ac{2}b\u0026quot;, strings, value = TRUE)\r#\u0026gt; [1] \u0026quot;accb\u0026quot;\rgrep(\u0026quot;ac{2,}b\u0026quot;, strings, value = TRUE)\r#\u0026gt; [1] \u0026quot;accb\u0026quot; \u0026quot;acccb\u0026quot; \u0026quot;accccb\u0026quot;\rgrep(\u0026quot;ac{2,3}b\u0026quot;, strings, value = TRUE)\r#\u0026gt; [1] \u0026quot;accb\u0026quot; \u0026quot;acccb\u0026quot;\r 練習:Find all countries with ee in Gapminder using quantifiers.\n#\u0026gt; character(0)\r \r\rPosition of pattern within the string  ^: 字串開頭. $: 字串結尾. \\b: 左右都空白的 word. \\B: 左右不是空白 word.  (strings \u0026lt;- c(\u0026quot;abcd\u0026quot;, \u0026quot;cdab\u0026quot;, \u0026quot;cabd\u0026quot;, \u0026quot;c abd\u0026quot;))\r#\u0026gt; [1] \u0026quot;abcd\u0026quot; \u0026quot;cdab\u0026quot; \u0026quot;cabd\u0026quot; \u0026quot;c abd\u0026quot;\rgrep(\u0026quot;ab\u0026quot;, strings, value = TRUE)\r#\u0026gt; [1] \u0026quot;abcd\u0026quot; \u0026quot;cdab\u0026quot; \u0026quot;cabd\u0026quot; \u0026quot;c abd\u0026quot;\rgrep(\u0026quot;^ab\u0026quot;, strings, value = TRUE)\r#\u0026gt; [1] \u0026quot;abcd\u0026quot;\rgrep(\u0026quot;ab$\u0026quot;, strings, value = TRUE)\r#\u0026gt; [1] \u0026quot;cdab\u0026quot;\rgrep(\u0026quot;\\\\bab\u0026quot;, strings, value = TRUE)\r#\u0026gt; [1] \u0026quot;abcd\u0026quot; \u0026quot;c abd\u0026quot;\r regexpr(\u0026quot;\\\\bab\u0026quot;, strings)\r#\u0026gt; [1] 1 -1 -1 3\r#\u0026gt; attr(,\u0026quot;match.length\u0026quot;)\r#\u0026gt; [1] 2 -1 -1 2\r#\u0026gt; attr(,\u0026quot;index.type\u0026quot;)\r#\u0026gt; [1] \u0026quot;chars\u0026quot;\r#\u0026gt; attr(,\u0026quot;useBytes\u0026quot;)\r#\u0026gt; [1] TRUE\r regexpr(\u0026quot;\\\\Bab\u0026quot;, strings)\r#\u0026gt; [1] -1 3 2 -1\r#\u0026gt; attr(,\u0026quot;match.length\u0026quot;)\r#\u0026gt; [1] -1 2 2 -1\r#\u0026gt; attr(,\u0026quot;index.type\u0026quot;)\r#\u0026gt; [1] \u0026quot;chars\u0026quot;\r#\u0026gt; attr(,\u0026quot;useBytes\u0026quot;)\r#\u0026gt; [1] TRUE\r Exercise Find all .txt files in the repository.\n```{r ex_pos, echo = FALSE}\rgrep(\u0026quot;\\\\.txt$\u0026quot;, files, value = TRUE)\rgrep(\u0026quot;[.]txt$\u0026quot;, files, value = TRUE)\r```\r Operators  .: 任意字元。 [...]: 例如,[ade] 3個字元其中一個。[a-e],a到e. [^...]: 除了[]指定的字元，非[...]的意思。. \\: 抑制下列字元在字串,\u0026quot;\u0026quot;,中的特殊意思 $ * + . ? [ ] ^ { } | ( ) \\, 只是在R中,因為\\又有特殊意義 ,因此必須雙\\例如 \\\\$。 |: 或. (...): 字元組,根據出現的順序,可以用 \\\\N識別( backreference).  (strings \u0026lt;- c(\u0026quot;^ab\u0026quot;, \u0026quot;ab\u0026quot;, \u0026quot;abc\u0026quot;, \u0026quot;abd\u0026quot;, \u0026quot;abe\u0026quot;, \u0026quot;ab 12\u0026quot;))\r#\u0026gt; [1] \u0026quot;^ab\u0026quot; \u0026quot;ab\u0026quot; \u0026quot;abc\u0026quot; \u0026quot;abd\u0026quot; \u0026quot;abe\u0026quot; \u0026quot;ab 12\u0026quot;\rgrep(\u0026quot;ab.\u0026quot;, strings, value = TRUE) #\u0026gt; [1] \u0026quot;abc\u0026quot; \u0026quot;abd\u0026quot; \u0026quot;abe\u0026quot; \u0026quot;ab 12\u0026quot;\rgrep(\u0026quot;ab[c-e]\u0026quot;, strings, value = TRUE)\r#\u0026gt; [1] \u0026quot;abc\u0026quot; \u0026quot;abd\u0026quot; \u0026quot;abe\u0026quot;\rgrep(\u0026quot;ab[^c]\u0026quot;, strings, value = TRUE)\r#\u0026gt; [1] \u0026quot;abd\u0026quot; \u0026quot;abe\u0026quot; \u0026quot;ab 12\u0026quot;\rgrep(\u0026quot;^ab\u0026quot;, strings, value = TRUE) #\u0026gt; [1] \u0026quot;ab\u0026quot; \u0026quot;abc\u0026quot; \u0026quot;abd\u0026quot; \u0026quot;abe\u0026quot; \u0026quot;ab 12\u0026quot;\rgrep(\u0026quot;\\\\^ab\u0026quot;, strings, value = TRUE) #\u0026gt; [1] \u0026quot;^ab\u0026quot;\rgrep(\u0026quot;abc|abd\u0026quot;, strings, value = TRUE) #\u0026gt; [1] \u0026quot;abc\u0026quot; \u0026quot;abd\u0026quot;\rgsub(\u0026quot;(ab) 12\u0026quot;, \u0026quot;\\\\1 34\u0026quot;, strings) #\u0026gt; [1] \u0026quot;^ab\u0026quot; \u0026quot;ab\u0026quot; \u0026quot;abc\u0026quot; \u0026quot;abd\u0026quot; \u0026quot;abe\u0026quot; \u0026quot;ab 34\u0026quot;\r note: 要讓.失效，可以[.]或 \\\\. 表示。\nExcercise 找出國名中間有字元i t 並且將land結尾的字串改為大寫。例如,Finland-\u0026gt;FinLAND\n#\u0026gt; character(0)\r Character classes 預設字元分類例如 numbers, letters, 分類。 開頭[: 結尾 :] ，另一種簡寫方式為利用 \\ 。\n [:digit:] or \\d: 數字,等同 [0-9]. \\D: 非數字,等同 [^0-9]. [:lower:]: 小寫,等同 [a-z]. [:upper:]: 大寫,等同 [A-Z]. [:alpha:]: 字母,等同 [[:lower:][:upper:]] or [A-z]. [:alnum:]: 等同 [[:alpha:][:digit:]] 或 [A-z0-9]. \\w: word characters, equivalent to [[:alnum:]_] or [A-z0-9_]. \\W: not word, equivalent to [^A-z0-9_]. [:xdigit:]: hexadecimal digits (base 16), 0 1 2 3 4 5 6 7 8 9 A B C D E F a b c d e f, equivalent to [0-9A-Fa-f]. [:blank:]: blank characters, i.e. space and tab. [:space:]: space characters: tab, newline, vertical tab, form feed, carriage return, space. \\s: space,  . \\S: not space. [:punct:]: punctuation characters, ! \u0026quot; # $ % \u0026amp; ' ( ) * + , - . / : ; \u0026lt; = \u0026gt; ? @ [ \\ ] ^ _ ` { | } ~. [:graph:]: graphical (human readable) characters: equivalent to [[:alnum:][:punct:]]. [:print:]: printable characters, equivalent to [[:alnum:][:punct:]\\\\s]. [:cntrl:]: control characters, like \\n or \\r, [\\x00-\\x1F\\x7F].  Note:\n [:...:] 必須寫在中括號中, 例如 [[:digit:]]. \\ 注意 \\\\d. 和 \\t的區別。 "},
{"uri": "/blogR//rlang/4_1_4_type_more.html","title": "4.1.4 type more",
	"tags": [],
	"description": "基本語法",
	"content": "Factors R也能把資料存為factor。\n在大部分實驗中,某些解釋變數經常有不同程度的測試,稱為因子。 大意如下：\n ... includes trials for different levels of some explanatory variable. The different levels are also called factors.\n 探索一下factors fert = c(10,20,20,50,10,20,10,50,20)\rfert = factor(fert,levels=c(10,20,50),ordered=TRUE)\r levels()可以顯示factor的標籤 解釋：\nlevels(fert) 產生一個「字串向量」，內容為10, 20, 50，如下可證：\nstr(levels(fert))\r#\u0026gt; chr [1:3] \u0026quot;10\u0026quot; \u0026quot;20\u0026quot; \u0026quot;50\u0026quot;\r \r\rlevels(fert) #\u0026gt; [1] \u0026quot;10\u0026quot; \u0026quot;20\u0026quot; \u0026quot;50\u0026quot;\r fert 的內容，如果忽略標籤本身，其實已經是數字,也就是:typeof(fert)=。\nfert\r#\u0026gt; [1] 10 20 20 50 10 20 10 50 20\r#\u0026gt; Levels: 10 \u0026lt; 20 \u0026lt; 50\rtypeof(fert)\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\r 💡 因此, attr(x,\u0026quot;levels\u0026quot;)=levels(x)。\n上面的typeof(fert)說是數字,但是如果真的把它當成數字向量,又無法利用函數mean計算平均💣\nmean(fert)\r#\u0026gt; Warning in mean.default(fert): 引數不是數值也不是邏輯值：回覆 NA\r#\u0026gt; [1] NA\r 必須轉換:\nmean(as.numeric(levels(fert)[fert]))\r#\u0026gt; [1] 23.33333\r 那麼最小值呢?\nmin(fert)\r#\u0026gt; [1] 10\r#\u0026gt; Levels: 10 \u0026lt; 20 \u0026lt; 50\r ❓ 為甚麼上面的求最小可以,這裡又不行?\nfert = c(10,20,20,50,10,20,10,50,20)\rfert = factor(fert,levels=c(10,20,50) )\rmin(fert)\r#\u0026gt; Error in Summary.factor(structure(c(1L, 2L, 2L, 3L, 1L, 2L, 1L, 3L, 2L: 'min' 對因子沒有意義\r 探索 a \u0026lt;- factor(c(\u0026quot;A\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;C\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;C\u0026quot;))\r 預期答案是factor,ok。\nclass(a)\r#\u0026gt; [1] \u0026quot;factor\u0026quot;\r 因為a已經被編碼，預期是numeric，這裡答案直接給定integer:\ntypeof(a)\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\r a是一個factor,所以a[]代表a的一個子集合，因此結果看起來也是類似原來a的型態：\na[1]\r#\u0026gt; [1] A\r#\u0026gt; Levels: A B C\r 驗證是不是和上面的表示方式一樣：\na\r#\u0026gt; [1] A A B A B B C A C\r#\u0026gt; Levels: A B C\r 所以，a,a[]都是類型為factor的變數。\n按照之間[]和[[]]的規則，這裡會出現什麼？\na[[1]]\r#\u0026gt; [1] A\r#\u0026gt; Levels: A B C\r 出現的結果和a[1]一樣，這說明了，a的結構不是list,利用str()函數看一下確認：\nstr(a)\r#\u0026gt; Factor w/ 3 levels \u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;,\u0026quot;C\u0026quot;: 1 1 2 1 2 2 3 1 3\r 總之，a[1] a[[1]] 都是Factor 沒有[ 和 [[ 的分別。這很好記，因為這個factor也是r的內建資料型態。 其他驗證如下，自行推敲：\n\r typeof(a[[1]])\r[1] \"integer\"\r typeof(a[1])\r[1] \"integer\"\r class(a[[1]])\r[1] \"factor\"\r class(a[1])\r[1] \"factor\"\r 常用來和table配合\ntable(a)\r#\u0026gt; a\r#\u0026gt; A B C #\u0026gt; 4 3 2\r 利用summary函數的時候,這裡不再列出5個統計量:\nsummary(a)\r#\u0026gt; A B C #\u0026gt; 4 3 2\r 又有新的問題了，到底table(a),summary(a)的資料結構是什麼？\nstr(table(a))\r#\u0026gt; 'table' int [1:3(1d)] 4 3 2\r#\u0026gt; - attr(*, \u0026quot;dimnames\u0026quot;)=List of 1\r#\u0026gt; ..$ a: chr [1:3] \u0026quot;A\u0026quot; \u0026quot;B\u0026quot; \u0026quot;C\u0026quot;\rstr(summary(a))\r#\u0026gt; Named int [1:3] 4 3 2\r#\u0026gt; - attr(*, \u0026quot;names\u0026quot;)= chr [1:3] \u0026quot;A\u0026quot; \u0026quot;B\u0026quot; \u0026quot;C\u0026quot;\r class(table(a))\r#\u0026gt; [1] \u0026quot;table\u0026quot;\rclass(summary(a))\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\r 又來一個讓人無言的地方，輸出樣子看起來很像，但是結構一個是類別table一個是「整數向量」，然後每個元素都是因子的發生次數，帶有因子名字，這裡是\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;,\u0026quot;C\u0026quot;。\nhw ❓找回原來還沒被factor的向量。\nx\u0026lt;-c(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;c\u0026quot;) fx\u0026lt;-factor(x) # 現在x是一個factor  現在假定,我們只有fx,要找回x的內容。\n\r\r💡就像這樣:c(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;c\u0026quot;)[c(1,1,2,3,2)] ==\u0026gt; a,a,b,c,b 。\n\r展開\r```r\rx\u0026lt;-c(\u0026#34;a\u0026#34;,\u0026#34;b\u0026#34;,\u0026#34;c\u0026#34;)\rfx\u0026lt;-factor(x) # 現在x是一個factor\r#💡\rx\u0026lt;-levels(fx)[fx] #現在又被轉回原來的x\r``` factor 和函數read.csv() read.csv() 通常產生一個data.frame的類別。但是在讀檔的時候，如果遇到字串欄位，會將字串欄位預設轉為factor欄位。\n觀察carbon dioxide 對樹木的生長速率 trees91.csv [1^]\n附件\n\r附件\r\rJournals.csv\r\rsample1.csv\r\rsample2.csv\r\rsample3.csv\r\rsimple.csv\r\rsmoker.csv\r\rtrees91.csv\r\rwh.csv\r\rwh_zh_950.csv\r\rwh_zh_utf8.csv\r\r tree = read.csv(\u0026quot;./resources/trees91.csv\u0026quot;, header = TRUE, sep = \u0026quot;,\u0026quot;);\rattributes(tree)\r#\u0026gt; $names\r#\u0026gt; [1] \u0026quot;C\u0026quot; \u0026quot;N\u0026quot; \u0026quot;CHBR\u0026quot; \u0026quot;REP\u0026quot; \u0026quot;LFBM\u0026quot; \u0026quot;STBM\u0026quot; \u0026quot;RTBM\u0026quot; \u0026quot;LFNCC\u0026quot; #\u0026gt; [9] \u0026quot;STNCC\u0026quot; \u0026quot;RTNCC\u0026quot; \u0026quot;LFBCC\u0026quot; \u0026quot;STBCC\u0026quot; \u0026quot;RTBCC\u0026quot; \u0026quot;LFCACC\u0026quot; \u0026quot;STCACC\u0026quot; \u0026quot;RTCACC\u0026quot;\r#\u0026gt; [17] \u0026quot;LFKCC\u0026quot; \u0026quot;STKCC\u0026quot; \u0026quot;RTKCC\u0026quot; \u0026quot;LFMGCC\u0026quot; \u0026quot;STMGCC\u0026quot; \u0026quot;RTMGCC\u0026quot; \u0026quot;LFPCC\u0026quot; \u0026quot;STPCC\u0026quot; #\u0026gt; [25] \u0026quot;RTPCC\u0026quot; \u0026quot;LFSCC\u0026quot; \u0026quot;STSCC\u0026quot; \u0026quot;RTSCC\u0026quot; #\u0026gt; #\u0026gt; $class\r#\u0026gt; [1] \u0026quot;data.frame\u0026quot;\r#\u0026gt; #\u0026gt; $row.names\r#\u0026gt; [1] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\r#\u0026gt; [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\r#\u0026gt; [51] 51 52 53 54\rnames(tree)\r#\u0026gt; [1] \u0026quot;C\u0026quot; \u0026quot;N\u0026quot; \u0026quot;CHBR\u0026quot; \u0026quot;REP\u0026quot; \u0026quot;LFBM\u0026quot; \u0026quot;STBM\u0026quot; \u0026quot;RTBM\u0026quot; \u0026quot;LFNCC\u0026quot; #\u0026gt; [9] \u0026quot;STNCC\u0026quot; \u0026quot;RTNCC\u0026quot; \u0026quot;LFBCC\u0026quot; \u0026quot;STBCC\u0026quot; \u0026quot;RTBCC\u0026quot; \u0026quot;LFCACC\u0026quot; \u0026quot;STCACC\u0026quot; \u0026quot;RTCACC\u0026quot;\r#\u0026gt; [17] \u0026quot;LFKCC\u0026quot; \u0026quot;STKCC\u0026quot; \u0026quot;RTKCC\u0026quot; \u0026quot;LFMGCC\u0026quot; \u0026quot;STMGCC\u0026quot; \u0026quot;RTMGCC\u0026quot; \u0026quot;LFPCC\u0026quot; \u0026quot;STPCC\u0026quot; #\u0026gt; [25] \u0026quot;RTPCC\u0026quot; \u0026quot;LFSCC\u0026quot; \u0026quot;STSCC\u0026quot; \u0026quot;RTSCC\u0026quot;\r [1^]: The original spreadsheet is located at http://cdiac.ornl.gov/ftp/ndp061a/trees91.wk1.\nA description of the data file is located at http://cdiac.ornl.gov/ftp/ndp061a/ndp061a.txt .\nfactor 和函數summary() 在CHBR這個欄位中,因為不全都是數字,因此R自動假定這是一個factor。 因此針對這個欄位summary()函數不會列出5個統計量,而是列出次數表。因為，一旦向量轉為一組factors, 5個基本統計量不再有意義。\nsummary(tree$CHBR)\r#\u0026gt; Length Class Mode #\u0026gt; 54 character character\r#🏷在CHBR這個欄位中,因為不全都是數字,因此R自動假定這是一個factor。\r 但有些欄位例如C,也是一個factor。但是,R認定為數字,這時必須手動處理。\n以下將 tree$C 轉為 factor:\ntree$C #🏷這是1個factor,但是轉進來的時候,被認定為數字\r#\u0026gt; [1] 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3\r#\u0026gt; [39] 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4\rsummary(tree$C)\r#\u0026gt; Min. 1st Qu. Median Mean 3rd Qu. Max. #\u0026gt; 1.000 2.000 2.000 2.519 3.000 4.000\rtree$C \u0026lt;- factor(tree$C)\rtree$C\r#\u0026gt; [1] 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3\r#\u0026gt; [39] 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4\r#\u0026gt; Levels: 1 2 3 4\rsummary(tree$C)\r#\u0026gt; 1 2 3 4 #\u0026gt; 8 23 10 13\rlevels(tree$C)\r#\u0026gt; [1] \u0026quot;1\u0026quot; \u0026quot;2\u0026quot; \u0026quot;3\u0026quot; \u0026quot;4\u0026quot;\r node: summary() 函數，參考table一節。\nbarplot(table(tree$C))\r Data Frames 簡單介紹一下手動建立data.frame 3個欄位，分別是a,b,f\na \u0026lt;- c(1, 2, 3, 4)\rb \u0026lt;- c(2, 4, 6, 8)\rlevels \u0026lt;- factor(c(\u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;))\rbubba \u0026lt;- data.frame(first = a,\rsecond = b,\rf = levels)\rbubba\r#\u0026gt; first second f\r#\u0026gt; 1 1 2 A\r#\u0026gt; 2 2 4 B\r#\u0026gt; 3 3 6 A\r#\u0026gt; 4 4 8 B\rsummary(bubba)\r#\u0026gt; first second f #\u0026gt; Min. :1.00 Min. :2.0 A:2 #\u0026gt; 1st Qu.:1.75 1st Qu.:3.5 B:2 #\u0026gt; Median :2.50 Median :5.0 #\u0026gt; Mean :2.50 Mean :5.0 #\u0026gt; 3rd Qu.:3.25 3rd Qu.:6.5 #\u0026gt; Max. :4.00 Max. :8.0\rbubba$first\r#\u0026gt; [1] 1 2 3 4\rbubba$second\r#\u0026gt; [1] 2 4 6 8\rbubba$f\r#\u0026gt; [1] A B A B\r#\u0026gt; Levels: A B\r data frame 的常用函數：  head() - shows first 6 rows tail() - shows last 6 rows dim() - returns the dimensions of data frame (i.e. number of rows and number of columns) nrow() - number of rows ncol() - number of columns str() - structure of data frame - name, type and preview of data in each column names() - shows the names attribute for a data frame, which gives the column names. sapply(dataframe, class) - shows the class of each column in the data frame  回到之前利用read.csv讀入的data.frame : tree\n# 順便看看結構\rtypeof(tree)\r#\u0026gt; [1] \u0026quot;list\u0026quot;\rclass(tree)\r#\u0026gt; [1] \u0026quot;data.frame\u0026quot;\ris.data.frame(tree)\r#\u0026gt; [1] TRUE\r 既然tree是一個list,那麼[]和[[]]的應用就和之前討論的一樣：\ntree[1]\r#\u0026gt; C\r#\u0026gt; 1 1\r#\u0026gt; 2 1\r#\u0026gt; 3 1\r#\u0026gt; 4 1\r#\u0026gt; 5 1\r#\u0026gt; 6 1\r#\u0026gt; 7 1\r#\u0026gt; 8 1\r#\u0026gt; 9 2\r#\u0026gt; 10 2\r#\u0026gt; 11 2\r#\u0026gt; 12 2\r#\u0026gt; 13 2\r#\u0026gt; 14 2\r#\u0026gt; 15 2\r#\u0026gt; 16 2\r#\u0026gt; 17 2\r#\u0026gt; 18 2\r#\u0026gt; 19 2\r#\u0026gt; 20 2\r#\u0026gt; 21 2\r#\u0026gt; 22 2\r#\u0026gt; 23 2\r#\u0026gt; 24 2\r#\u0026gt; 25 2\r#\u0026gt; 26 2\r#\u0026gt; 27 2\r#\u0026gt; 28 2\r#\u0026gt; 29 2\r#\u0026gt; 30 2\r#\u0026gt; 31 2\r#\u0026gt; 32 3\r#\u0026gt; 33 3\r#\u0026gt; 34 3\r#\u0026gt; 35 3\r#\u0026gt; 36 3\r#\u0026gt; 37 3\r#\u0026gt; 38 3\r#\u0026gt; 39 3\r#\u0026gt; 40 3\r#\u0026gt; 41 3\r#\u0026gt; 42 4\r#\u0026gt; 43 4\r#\u0026gt; 44 4\r#\u0026gt; 45 4\r#\u0026gt; 46 4\r#\u0026gt; 47 4\r#\u0026gt; 48 4\r#\u0026gt; 49 4\r#\u0026gt; 50 4\r#\u0026gt; 51 4\r#\u0026gt; 52 4\r#\u0026gt; 53 4\r#\u0026gt; 54 4\rtree[[1]] #\u0026gt; [1] 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3\r#\u0026gt; [39] 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4\r#\u0026gt; Levels: 1 2 3 4\rclass(tree[1]) # data.frame\r#\u0026gt; [1] \u0026quot;data.frame\u0026quot;\rclass(tree[[1]]) # integer\r#\u0026gt; [1] \u0026quot;factor\u0026quot;\rtypeof(tree[1]) # list\r#\u0026gt; [1] \u0026quot;list\u0026quot;\rtypeof(tree$C) # integer\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\rtypeof(tree[[1]]) # integer\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\r tree[1] 是一個list\ntree[[1]] 外圍的tree[]首先被解讀為list類別,然後[1]傳到類別\n [[ vs [\n由typeof,class看起來\n[[抽取list中的元素 [只是分割list,中的subset\n Tables 除了data frame 以外,還有table 可以用來組織資料。 這裡只看怎樣建立table,分析看其他章節。\nOne Way Tables table()指令:\n這個指令通常用來建立因子之間的關聯表(contingency table)。參數通常是一個「因子向量」(factor vector)。\n例如建立一個單因子關聯表（one way table）:\na \u0026lt;- factor(c(\u0026quot;A\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;C\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;C\u0026quot;))\rtable_a \u0026lt;- table(a)\r table_a：\ntable_a\r#\u0026gt; a\r#\u0026gt; A B C #\u0026gt; 4 3 2\r attributes可以看出table_a裡面有哪些帶名元素\nattributes(table_a)\r#\u0026gt; $dim\r#\u0026gt; [1] 3\r#\u0026gt; #\u0026gt; $dimnames\r#\u0026gt; $dimnames$a\r#\u0026gt; [1] \u0026quot;A\u0026quot; \u0026quot;B\u0026quot; \u0026quot;C\u0026quot;\r#\u0026gt; #\u0026gt; #\u0026gt; $class\r#\u0026gt; [1] \u0026quot;table\u0026quot;\r summary(table_a)\r#\u0026gt; Number of cases in table: 9 #\u0026gt; Number of factors: 1\r 對照table(a)，直接把factor 變數，代入summary()看一下，結果是次數分配表（如下）\ntable(a)\r#\u0026gt; a\r#\u0026gt; A B C #\u0026gt; 4 3 2\rsummary(a)\r#\u0026gt; A B C #\u0026gt; 4 3 2\r 問題：如果我們知道A有4,個,B有3個,C有2個,能不能直接建立table?\n 先建立matrix 再加入欄位名稱 利用函數as.table()  # step 1\roccur \u0026lt;- matrix(c(4, 3, 2), ncol = 3, byrow = TRUE)\roccur\r#\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 4 3 2\r#step 2\rcolnames(occur) \u0026lt;- c(\u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;C\u0026quot;)\roccur\r#\u0026gt; A B C\r#\u0026gt; [1,] 4 3 2\r#step 3\roccur \u0026lt;- as.table(occur)\roccur\r#\u0026gt; A B C\r#\u0026gt; A 4 3 2\rattributes(occur)\r#\u0026gt; $dim\r#\u0026gt; [1] 1 3\r#\u0026gt; #\u0026gt; $dimnames\r#\u0026gt; $dimnames[[1]]\r#\u0026gt; [1] \u0026quot;A\u0026quot;\r#\u0026gt; #\u0026gt; $dimnames[[2]]\r#\u0026gt; [1] \u0026quot;A\u0026quot; \u0026quot;B\u0026quot; \u0026quot;C\u0026quot;\r#\u0026gt; #\u0026gt; #\u0026gt; $class\r#\u0026gt; [1] \u0026quot;table\u0026quot;\r Two Way Tables 這個例子中有兩個問題:第1個問題的答案有“Never,” “Sometimes,” or “Always.”\n第2個問題的答案有 “Yes,” “No,” or “Maybe.” 兩個問題分別以向量a,b存放( The set of vectors “a,” and “b,” contain the response for each measurement.)\na \u0026lt;- c(\u0026quot;Sometimes\u0026quot;, \u0026quot;Sometimes\u0026quot;, \u0026quot;Never\u0026quot;, \u0026quot;Always\u0026quot;, \u0026quot;Always\u0026quot;, \u0026quot;Sometimes\u0026quot;, \u0026quot;Sometimes\u0026quot;, \u0026quot;Never\u0026quot;)\rb \u0026lt;- c(\u0026quot;Maybe\u0026quot;, \u0026quot;Maybe\u0026quot;, \u0026quot;Yes\u0026quot;, \u0026quot;Maybe\u0026quot;, \u0026quot;Maybe\u0026quot;, \u0026quot;No\u0026quot;, \u0026quot;Yes\u0026quot;, \u0026quot;No\u0026quot;)\rresults \u0026lt;- table(a, b)\rresults\r#\u0026gt; b\r#\u0026gt; a Maybe No Yes\r#\u0026gt; Always 2 0 0\r#\u0026gt; Never 0 1 1\r#\u0026gt; Sometimes 2 1 1\r 在表格中,可以看到同時回答 “Maybe” “Sometimes” 的個數有幾個。\n這裡是另一個直接由我們知道的數據建立table的例子\nsexsmoke \u0026lt;- matrix(c(70, 120, 65, 140), ncol = 2, byrow = TRUE)\rrownames(sexsmoke) \u0026lt;- c(\u0026quot;male\u0026quot;, \u0026quot;female\u0026quot;)\rcolnames(sexsmoke) \u0026lt;- c(\u0026quot;smoke\u0026quot;, \u0026quot;nosmoke\u0026quot;)\rsexsmoke \u0026lt;- as.table(sexsmoke)\rsexsmoke\r#\u0026gt; smoke nosmoke\r#\u0026gt; male 70 120\r#\u0026gt; female 65 140\r "},
{"uri": "/blogR//rlang/4_2_type_post.html","title": "4.2 type post",
	"tags": [],
	"description": "補充",
	"content": "相關操作 practice1.R\n問題:想要知道有甚麼資料庫可以用? 例如， 想要知道資料庫裏面有沒有'mtcars'\nhint: grep('pattern',target)\nl\u0026lt;-list('a','b','c')\rgrep('a',l)\r#\u0026gt; [1] 1\r 利用指令data()可以列出內建資料：\nxx\u0026lt;-data()\r xx 是甚麼?直接打入xx並沒有像其他變數一樣，在console顯示內容：\nxx\r str(xx)\r#\u0026gt; List of 4\r#\u0026gt; $ title : chr \u0026quot;Data sets\u0026quot;\r#\u0026gt; $ header : NULL\r#\u0026gt; $ results: chr [1:104, 1:4] \u0026quot;datasets\u0026quot; \u0026quot;datasets\u0026quot; \u0026quot;datasets\u0026quot; \u0026quot;datasets\u0026quot; ...\r#\u0026gt; ..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r#\u0026gt; .. ..$ : NULL\r#\u0026gt; .. ..$ : chr [1:4] \u0026quot;Package\u0026quot; \u0026quot;LibPath\u0026quot; \u0026quot;Item\u0026quot; \u0026quot;Title\u0026quot;\r#\u0026gt; $ footer : chr \u0026quot;Use 'data(package = .packages(all.available = TRUE))'\\nto list the data sets in all *available* packages.\u0026quot;\r#\u0026gt; - attr(*, \u0026quot;class\u0026quot;)= chr \u0026quot;packageIQR\u0026quot;\ris.data.frame(xx)\r#\u0026gt; [1] FALSE\ris.list(xx)\r#\u0026gt; [1] TRUE\ris.table(xx)\r#\u0026gt; [1] FALSE\rclass(xx)\r#\u0026gt; [1] \u0026quot;packageIQR\u0026quot;\r class()函數說明xx是一個packageIQR物件。str()可以看出是一個長度為4的list，其中results標籤，是一個字串矩陣，大小為104 x 4。其中4個欄位的名稱為：\u0026quot;Package\u0026quot; \u0026quot;LibPath\u0026quot; \u0026quot;Item\u0026quot; \u0026quot;Title\u0026quot;（如下）：\nhead(xx$results)\r#\u0026gt; Package LibPath Item #\u0026gt; [1,] \u0026quot;datasets\u0026quot; \u0026quot;C:/Program Files/R/R-4.1.1/library\u0026quot; \u0026quot;AirPassengers\u0026quot; #\u0026gt; [2,] \u0026quot;datasets\u0026quot; \u0026quot;C:/Program Files/R/R-4.1.1/library\u0026quot; \u0026quot;BJsales\u0026quot; #\u0026gt; [3,] \u0026quot;datasets\u0026quot; \u0026quot;C:/Program Files/R/R-4.1.1/library\u0026quot; \u0026quot;BJsales.lead (BJsales)\u0026quot;\r#\u0026gt; [4,] \u0026quot;datasets\u0026quot; \u0026quot;C:/Program Files/R/R-4.1.1/library\u0026quot; \u0026quot;BOD\u0026quot; #\u0026gt; [5,] \u0026quot;datasets\u0026quot; \u0026quot;C:/Program Files/R/R-4.1.1/library\u0026quot; \u0026quot;CO2\u0026quot; #\u0026gt; [6,] \u0026quot;datasets\u0026quot; \u0026quot;C:/Program Files/R/R-4.1.1/library\u0026quot; \u0026quot;ChickWeight\u0026quot; #\u0026gt; Title #\u0026gt; [1,] \u0026quot;Monthly Airline Passenger Numbers 1949-1960\u0026quot; #\u0026gt; [2,] \u0026quot;Sales Data with Leading Indicator\u0026quot; #\u0026gt; [3,] \u0026quot;Sales Data with Leading Indicator\u0026quot; #\u0026gt; [4,] \u0026quot;Biochemical Oxygen Demand\u0026quot; #\u0026gt; [5,] \u0026quot;Carbon Dioxide Uptake in Grass Plants\u0026quot; #\u0026gt; [6,] \u0026quot;Weight versus age of chicks on different diets\u0026quot;\r 如果覺得混亂,可以利用\nView(xx$results)\r 因為是矩陣,所以不能以「$」得到Item的內容?\nxx$results$Item\r#\u0026gt; Error in xx$results$Item: $ operator is invalid for atomic vectors\r head(xx$results[,'item'])\r#\u0026gt; Error in xx$results[, \u0026quot;item\u0026quot;]: 下標超出邊界\r 為甚麼錯誤?\n因為大小寫,所以正確寫法為：\nhead(xx$results[,'Item'])\r#\u0026gt; [1] \u0026quot;AirPassengers\u0026quot; \u0026quot;BJsales\u0026quot; \u0026quot;BJsales.lead (BJsales)\u0026quot;\r#\u0026gt; [4] \u0026quot;BOD\u0026quot; \u0026quot;CO2\u0026quot; \u0026quot;ChickWeight\u0026quot;\r 利用grep()可以拿到mtcars的位置：\nidx\u0026lt;-grep('mtcars',xx$results[,'Item'])\ridx\r#\u0026gt; [1] 72\r 確認\nxx$results[idx,'Item']\r#\u0026gt; Item #\u0026gt; \u0026quot;mtcars\u0026quot;\r 常見錯誤 error l0 \u0026lt;- list(1, c(TRUE, FALSE), c(\u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;c\u0026quot;))\rl0\r  正確念法：\n正確念法 指派一個list給變數l0，裡面有三個元素，第一個元素是純量1，第二個元素是邏輯向量，長度為2，內容分別是TRUE, FALSE，第三個元素是字元向量，長度為3，內容分別是\u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;c\u0026quot;\n names(l1) \u0026lt;- c(\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;,\u0026quot;C\u0026quot;)\r  錯誤念法\n設定names(li)等於集合(\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;,\u0026quot;C\u0026quot;)\n  正確念法：\n將l1 這個list 的前3個元素名稱，分別指定為 A,B,C\n error l1$x \u0026lt;- NULL\r  正確念法：\n刪除元素名為x的元素。\n error l0 \u0026lt;- list(1, c(TRUE, FALSE), c(\u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;c\u0026quot;))\rl1 \u0026lt;- list(x = 1, y = c(TRUE, FALSE), z = c(\u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;c\u0026quot;))\rl1$x\rl1$y\rl1$z\rl1$m\r  念法 建立list變數l1,名稱分別是x,y,z,內容分別是.......\nl1$y 為邏輯向量\nl1$z 為字元向量\n🏷: l1$x === l1[[1]]\n "},
{"uri": "/blogR//rlang/4_3_type_matrix.html","title": "4.3 type matrix",
	"tags": [],
	"description": "基本語法",
	"content": "matrix 矩陣的建立有多種方式,其中一種是利用向量轉填矩陣，填入的方式預設是以coumn為主要方向。\nmatrix(c(1,2,3,4,5,6),2,3)\r#\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 1 3 5\r#\u0026gt; [2,] 2 4 6\r 問題: 怎樣產生\n1 2 3\n4 5 6\n的矩陣\ndiag(1, nrow = 5)\r#\u0026gt; [,1] [,2] [,3] [,4] [,5]\r#\u0026gt; [1,] 1 0 0 0 0\r#\u0026gt; [2,] 0 1 0 0 0\r#\u0026gt; [3,] 0 0 1 0 0\r#\u0026gt; [4,] 0 0 0 1 0\r#\u0026gt; [5,] 0 0 0 0 1\r matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), nrow = 3, byrow = TRUE, dimnames = list(c(\u0026quot;r1\u0026quot;, \u0026quot;r2\u0026quot;, \u0026quot;r3\u0026quot;), c(\u0026quot;c1\u0026quot;, \u0026quot;c2\u0026quot;, \u0026quot;c3\u0026quot;)))\r#\u0026gt; c1 c2 c3\r#\u0026gt; r1 1 2 3\r#\u0026gt; r2 4 5 6\r#\u0026gt; r3 7 8 9\r m1 \u0026lt;- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), ncol = 3)\rrownames(m1) \u0026lt;- c(\u0026quot;r1\u0026quot;, \u0026quot;r2\u0026quot;, \u0026quot;r3\u0026quot;)\rcolnames(m1) \u0026lt;- c(\u0026quot;c1\u0026quot;, \u0026quot;c2\u0026quot;, \u0026quot;c3\u0026quot;)\rm1\r#\u0026gt; c1 c2 c3\r#\u0026gt; r1 1 4 7\r#\u0026gt; r2 2 5 8\r#\u0026gt; r3 3 6 9\r B = matrix( c(2, 4, 3, 1, 5, 7), nrow=3, ncol=2) B\r#\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 2 1\r#\u0026gt; [2,] 4 5\r#\u0026gt; [3,] 3 7\r Transpose t(B)\r#\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 2 4 3\r#\u0026gt; [2,] 1 5 7\r 合併矩陣 利用函數cbind() 可以合併同樣橫行數目的兩個矩陣,例如這裡C也是3個橫行:\nC = matrix( c(7, 4, 2), nrow=3, ncol=1) C\r#\u0026gt; [,1]\r#\u0026gt; [1,] 7\r#\u0026gt; [2,] 4\r#\u0026gt; [3,] 2\r 和B合併\ncbind(B, C) #\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 2 1 7\r#\u0026gt; [2,] 4 5 4\r#\u0026gt; [3,] 3 7 2\r 同樣的,rbind() 也可以合併直行數目相同的兩個矩陣:\nD = matrix( c(6, 2), nrow=1, ncol=2) D\r#\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 6 2\rrbind(B, D) #\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 2 1\r#\u0026gt; [2,] 4 5\r#\u0026gt; [3,] 3 7\r#\u0026gt; [4,] 6 2\r 將矩陣解構回向量: 可以利用c() 會把矩陣所有的直行都合併成一個直行.\nc(B) #\u0026gt; [1] 2 4 3 1 5 7\r unlist ?\n練習:利用上面的m1 回答下面的問題:\nm1[1, 2]\rm1[1:2, 2:3]\rm1[1,]\rm1[,2]\rm1[1:2,]\rm1[, 2:3]\rm1[-1,]\rm1[,-2]\rm1[c(\u0026quot;r1\u0026quot;, \u0026quot;r3\u0026quot;), c(\u0026quot;c1\u0026quot;, \u0026quot;c3\u0026quot;)]\rm1[1]\rm1[9]\rm1[3:7]\rm1 \u0026gt; 3\rm1[m1 \u0026gt; 3]\rm1 + m1\rm1 - 2*m1\rm1 * m1\rm1 / m1\rm1 ^ 2\rm1 %*% m1\rt(m1)\r solve m2\u0026lt;-cbind(c(14,32),c(32,77))\rb\u0026lt;-c(1,1)\rsm2\u0026lt;-solve(m2)\rsm2\r#\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 1.4259259 -0.5925926\r#\u0026gt; [2,] -0.5925926 0.2592593\rsolve(m2,b)\r#\u0026gt; [1] 0.8333333 -0.3333333\r m2 %*% sm2\r#\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 1 0\r#\u0026gt; [2,] 0 1\r "},
{"uri": "/blogR//rlang/4_3_a_type_matrix.html","title": "4.3-a type matrix",
	"tags": [],
	"description": "基本語法",
	"content": "matrix 矩陣的建立有多種方式,其中一種是利用向量轉填矩陣，填入的方式預設是以coumn為主要方向。\nmatrix(c(1,2,3,4,5,6),2,3)\r #\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 1 3 5\r#\u0026gt; [2,] 2 4 6\r 問題: 怎樣產生\n1 2 3\n4 5 6\n的矩陣\ndiag(1, nrow = 5)\r #\u0026gt; [,1] [,2] [,3] [,4] [,5]\r#\u0026gt; [1,] 1 0 0 0 0\r#\u0026gt; [2,] 0 1 0 0 0\r#\u0026gt; [3,] 0 0 1 0 0\r#\u0026gt; [4,] 0 0 0 1 0\r#\u0026gt; [5,] 0 0 0 0 1\r matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), nrow = 3, byrow = TRUE, dimnames = list(c(\u0026quot;r1\u0026quot;, \u0026quot;r2\u0026quot;, \u0026quot;r3\u0026quot;), c(\u0026quot;c1\u0026quot;, \u0026quot;c2\u0026quot;, \u0026quot;c3\u0026quot;)))\r #\u0026gt; c1 c2 c3\r#\u0026gt; r1 1 2 3\r#\u0026gt; r2 4 5 6\r#\u0026gt; r3 7 8 9\r m1 \u0026lt;- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), ncol = 3)\rrownames(m1) \u0026lt;- c(\u0026quot;r1\u0026quot;, \u0026quot;r2\u0026quot;, \u0026quot;r3\u0026quot;)\rcolnames(m1) \u0026lt;- c(\u0026quot;c1\u0026quot;, \u0026quot;c2\u0026quot;, \u0026quot;c3\u0026quot;)\rm1\r #\u0026gt; c1 c2 c3\r#\u0026gt; r1 1 4 7\r#\u0026gt; r2 2 5 8\r#\u0026gt; r3 3 6 9\r B = matrix( c(2, 4, 3, 1, 5, 7), nrow=3, ncol=2) B\r #\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 2 1\r#\u0026gt; [2,] 4 5\r#\u0026gt; [3,] 3 7\r Transpose t(B)\r #\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 2 4 3\r#\u0026gt; [2,] 1 5 7\r 合併矩陣 利用函數cbind() 可以合併同樣橫行數目的兩個矩陣,例如這裡C也是3個橫行:\nC = matrix( c(7, 4, 2), nrow=3, ncol=1) C\r #\u0026gt; [,1]\r#\u0026gt; [1,] 7\r#\u0026gt; [2,] 4\r#\u0026gt; [3,] 2\r 和B合併\ncbind(B, C)  #\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 2 1 7\r#\u0026gt; [2,] 4 5 4\r#\u0026gt; [3,] 3 7 2\r 同樣的,rbind() 也可以合併直行數目相同的兩個矩陣:\nD = matrix( c(6, 2), nrow=1, ncol=2) D\r #\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 6 2\r rbind(B, D)  #\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 2 1\r#\u0026gt; [2,] 4 5\r#\u0026gt; [3,] 3 7\r#\u0026gt; [4,] 6 2\r 將矩陣解構回向量: 可以利用c() 會把矩陣所有的直行都合併成一個直行.\nc(B)  #\u0026gt; [1] 2 4 3 1 5 7\r unlist ?\n練習:利用上面的m1 回答下面的問題:\nm1[1, 2]\rm1[1:2, 2:3]\rm1[1,]\rm1[,2]\rm1[1:2,]\rm1[, 2:3]\rm1[-1,]\rm1[,-2]\rm1[c(\u0026quot;r1\u0026quot;, \u0026quot;r3\u0026quot;), c(\u0026quot;c1\u0026quot;, \u0026quot;c3\u0026quot;)]\rm1[1]\rm1[9]\rm1[3:7]\rm1 \u0026gt; 3\rm1[m1 \u0026gt; 3]\rm1 + m1\rm1 - 2*m1\rm1 * m1\rm1 / m1\rm1 ^ 2\rm1 %*% m1\rt(m1)\r solve m2\u0026lt;-cbind(c(14,32),c(32,77))\rb\u0026lt;-c(1,1)\rsm2\u0026lt;-solve(m2)\rsm2\r #\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 1.4259259 -0.5925926\r#\u0026gt; [2,] -0.5925926 0.2592593\r solve(m2,b)\r #\u0026gt; [1] 0.8333333 -0.3333333\r m2 %*% sm2\r #\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 1 0\r#\u0026gt; [2,] 0 1\r "},
{"uri": "/blogR//rlang/4_4_type_string_function.html","title": "4.4 type string",
	"tags": [],
	"description": "基本語法",
	"content": "字串函數 R提供的字串函數(ascii)  nchar: string length paste: concatenate strings substr: substring toupper: convert entire string to uppercase tolower: convert entire string to lowercase chartr: character map replacement (like \u0026quot;tr\u0026quot;) strtrim：trunates string  nchar, substr, toupper, tolower will accept string vectors as arguments and return vector results.\nstrtrim accepts both a vector of strings and a vector of truncation positions.\n \\': 等同於 \u0026quot;'\u0026quot; . \\\u0026quot;: 等同於 '\u0026quot;'. \\n: newline. \\r: carriage return. \\t: tab character.   Note: cat() and print() 處理逃逸字元的方式不一樣如果要在螢幕上解讀上面的字串,需要的是 cat().\n print(\u0026quot;a\\nb\u0026quot;)\r#\u0026gt; [1] \u0026quot;a\\nb\u0026quot;\rcat(\u0026quot;a\\nb\u0026quot;)\r#\u0026gt; a\r#\u0026gt; b\r 範例 paste 最簡單的範例\npaste0(\u0026quot;x\u0026quot;,\u0026quot;y\u0026quot;,\u0026quot;z\u0026quot;)\r#\u0026gt; [1] \u0026quot;xyz\u0026quot;\r 範例\ns1 = c('hello','Copy') s2 = c('john','pen') print(paste(s1,s2,sep=\u0026quot; \u0026quot;,collapse=\u0026quot;-\u0026quot;))\r#\u0026gt; \u0026quot;hello john-Copy pen\u0026quot;   s1 s2     hello john   copy pen     圖\r\r\r範例解說:\n paste0(c(1,2),c(3,4),collapse='') 會有甚麼答案? 怎樣得到\u0026quot;1234\u0026quot;  💡 paste0()是paste()的簡化版。基本上就是字串相連,這時用的是separator,例如,\u0026quot;a\u0026quot;+sep+\u0026quot;b\u0026quot;,paste0中的sep=\u0026quot;\u0026quot;,因此paste0()的結果為\u0026quot;ab\u0026quot;,如果連完以後是向量,但是想要變成一個字串,就必須用到collapse。\nrst=paste0(c(1,2)) rst # 🏷和c(1,2)的差別只是,這裡是字串。✔rst=c(\u0026#34;1\u0026#34;,\u0026#34;2\u0026#34;)=as.character(c(1,2)) \r#\u0026gt; [1] \u0026quot;1\u0026quot; \u0026quot;2\u0026quot;\rlength(rst)\r#\u0026gt; [1] 2\rrst=paste0(c(1,2),c(3,4),collapse=\u0026quot;*\u0026quot;)\rrst\r#\u0026gt; [1] \u0026quot;13*24\u0026quot;\rlength(rst)\r#\u0026gt; [1] 1\rrst=paste(c(1,2),c(3,4),collapse=\u0026quot;*\u0026quot;)\rrst\r#\u0026gt; [1] \u0026quot;1 3*2 4\u0026quot;\rlength(rst)\r#\u0026gt; [1] 1\r 練習 collapse 的範例,問下面的程式的執行結果\npaste(c('A', 'B', 'C'), 1:7, sep=\u0026quot;-\u0026quot;, collapse=\u0026quot;/\u0026quot;)\r 提示\r # [1] \u0026quot;A-1/B-2/C-3/A-4/B-5/C-6/A-7\u0026quot;\r \r應用範例macro version 1\nx\u0026lt;- \u0026quot;${1} is good\u0026quot;\rgsub(\u0026quot;\\\\$\\\\{1\\\\}\u0026quot;,\u0026quot;dog\u0026quot;,x)\r#\u0026gt; [1] \u0026quot;dog is good\u0026quot;\r ** version 2 to function**\nmstr\u0026lt;-function (src,mto)\r{\rreturn (gsub(\u0026quot;\\\\$\\\\{1\\\\}\u0026quot;,mto,src))\r}\rx\u0026lt;- \u0026quot;${1} is good\u0026quot;\rmstr(x,\u0026quot;dog\u0026quot;)\r#\u0026gt; [1] \u0026quot;dog is good\u0026quot;\r misc 函數 get() assign() 用來利用字串而不是變數來存取物件。而 as.name() 可以用來將字串轉為變數。 (可以配合 substitute() 建立 expression 然後eval() 。\n例如 assign(\u0026quot;a\u0026quot;,get(\u0026quot;b\u0026quot;)) 相當於 a\u0026lt;-b 。\n比較常見的方法是利用list()，例如\nobj\u0026lt;-list(a=1,b=2)\robj[[\u0026quot;a\u0026quot;]]\u0026lt;-otherobj[[\u0026quot;b\u0026quot;]]\r 此時obj[[\u0026quot;a\u0026quot;]] 是對元素a的參考。\n應用 strsplit 利用逗號分解,然後提取KEY,VALUE。\nstr= \u0026quot;cmd=bstable,class=\\\u0026quot;d-block w-50\\\u0026quot;,style=\\\u0026quot;display:none\\\u0026quot;\u0026quot;\rstrsplit(str,\u0026quot;,\u0026quot;) #🏷如果str 是字串陣列,那麼N個字串就會有N個分割,這裡只有一個分割,因此產生1個節點,這個節點是3元素的字串陣列。 \r#\u0026gt; [[1]]\r#\u0026gt; [1] \u0026quot;cmd=bstable\u0026quot; \u0026quot;class=\\\u0026quot;d-block w-50\\\u0026quot;\u0026quot; \u0026quot;style=\\\u0026quot;display:none\\\u0026quot;\u0026quot;\runlist(strsplit(str,\u0026quot;,\u0026quot;)) # 🏷產生向量 \r#\u0026gt; [1] \u0026quot;cmd=bstable\u0026quot; \u0026quot;class=\\\u0026quot;d-block w-50\\\u0026quot;\u0026quot; \u0026quot;style=\\\u0026quot;display:none\\\u0026quot;\u0026quot;\ras.list(unlist(strsplit(str,\u0026quot;,\u0026quot;)))\r#\u0026gt; [[1]]\r#\u0026gt; [1] \u0026quot;cmd=bstable\u0026quot;\r#\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] \u0026quot;class=\\\u0026quot;d-block w-50\\\u0026quot;\u0026quot;\r#\u0026gt; #\u0026gt; [[3]]\r#\u0026gt; [1] \u0026quot;style=\\\u0026quot;display:none\\\u0026quot;\u0026quot;\r "},
{"uri": "/blogR//rlang/4_5_type_vector.html","title": "4.5 type vector",
	"tags": [],
	"description": "基本語法",
	"content": "vector 函數範例 cbind,rbind x\u0026lt;-runif(5)\ry\u0026lt;-runif(6)\rcbind(x,y)\r#\u0026gt; Warning in cbind(x, y): number of rows of result is not a multiple of vector\r#\u0026gt; length (arg 1)\r#\u0026gt; x y\r#\u0026gt; [1,] 0.6312448 0.2336986\r#\u0026gt; [2,] 0.5629876 0.2262541\r#\u0026gt; [3,] 0.4413725 0.3804716\r#\u0026gt; [4,] 0.8579336 0.9751303\r#\u0026gt; [5,] 0.2360835 0.6611676\r#\u0026gt; [6,] 0.6312448 0.8971358\r 函數diff Arguments\n x: a numeric vector or matrix containing the values to be differenced. lag: an integer indicating which lag to use. differences: an integer indicating the order of the difference.\n例如 diff(x,lag=d,differences=n) x[(1+d):n] - x[1:(n-d)]  練習: 刪除向量中的一個元素 x\u0026lt;-c(1,2,3)\r 如何刪除x中的第2個元素 ?\nhint:\n數字向量元素的刪除 ，不能像是list[2]\u0026lt;-NULL ，請問你的解法？ 並說明\n物件元素的刪除，簡單一點的像是list，\nx\u0026lt;-list(1,2,3)\rx[2]\u0026lt;-NULL\rx\r 但是向量元素的刪除沒有捷徑\nx\u0026lt;-c(1,2,3)\rx[2]\u0026lt;-NULL\r#\u0026gt; Error in x[2] \u0026lt;- NULL: 置換的長度為零\r 因此，需要變通的辦法\n方法1：\nx\u0026lt;-c(1,2,3)\rt\u0026lt;-as.list(x) # note: 使用list(x)而不是as.list(x)會有什麼不同\rt[2]\u0026lt;-NULL\rx\u0026lt;-unlist(t)\rx\r#\u0026gt; [1] 1 3\r 方法2：\nx\u0026lt;-c(1,2,3)\ry\u0026lt;-x[-2]\rx\u0026lt;-y\r 練習：改為函數\ndelElement\u0026lt;-function(x,idx){\rif (is.vector(x)){\rt\u0026lt;-as.list(x)\rt[idx]\u0026lt;-NULL\rt\u0026lt;-unlist(t)\rreturn(t) } else {\rstop('must be vector')\r}\r}\rx\u0026lt;-c(1,2,3)\rx\u0026lt;-delElement(x,2)\rx\r#\u0026gt; [1] 1 3\r Adding Attributes to Vectors The attributes that you can add to vectors includes names and comments. If we continue with our vector v1 we can see that the vector currently has no attributes:\nv1 \u0026lt;- 8:17\rattributes(v1)\r#\u0026gt; NULL\r We can add names to vectors using two approaches. The first uses names() to assign names to each element of the vector. The second approach is to assign names when creating the vector.\n# assigning names to a pre-existing vector\rnames(v1) \u0026lt;- letters[1:length(v1)]\rv1\r#\u0026gt; a b c d e f g h i j #\u0026gt; 8 9 10 11 12 13 14 15 16 17\r attributes(v1)\r#\u0026gt; $names\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; \u0026quot;e\u0026quot; \u0026quot;f\u0026quot; \u0026quot;g\u0026quot; \u0026quot;h\u0026quot; \u0026quot;i\u0026quot; \u0026quot;j\u0026quot;\r 那，什麼是names(v1)\nnames(v1)\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; \u0026quot;e\u0026quot; \u0026quot;f\u0026quot; \u0026quot;g\u0026quot; \u0026quot;h\u0026quot; \u0026quot;i\u0026quot; \u0026quot;j\u0026quot;\r 也就是說names()函數返回每個元素的名子，而attributes()返回的是有什麼屬性，也是函數名稱字面上的意思。但是再仔細看看，可以發現指派attribute 給\nattributes(v1)\u0026lt;-list(x='',y='',z='')\rv1\r#\u0026gt; [1] 8 9 10 11 12 13 14 15 16 17\r#\u0026gt; attr(,\u0026quot;x\u0026quot;)\r#\u0026gt; [1] \u0026quot;\u0026quot;\r#\u0026gt; attr(,\u0026quot;y\u0026quot;)\r#\u0026gt; [1] \u0026quot;\u0026quot;\r#\u0026gt; attr(,\u0026quot;z\u0026quot;)\r#\u0026gt; [1] \u0026quot;\u0026quot;\r 測試是否可以自行加入attributes，然後讓names()可以運作，如下：\nattributes(v1)\u0026lt;-list(names=letters[1:10])\rv1\r#\u0026gt; a b c d e f g h i j #\u0026gt; 8 9 10 11 12 13 14 15 16 17\rattributes(v1)\r#\u0026gt; $names\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; \u0026quot;e\u0026quot; \u0026quot;f\u0026quot; \u0026quot;g\u0026quot; \u0026quot;h\u0026quot; \u0026quot;i\u0026quot; \u0026quot;j\u0026quot;\rnames(v1)\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; \u0026quot;e\u0026quot; \u0026quot;f\u0026quot; \u0026quot;g\u0026quot; \u0026quot;h\u0026quot; \u0026quot;i\u0026quot; \u0026quot;j\u0026quot;\r 上面這個程式暗示了什麼？\n 函數names()只是attributes()\u0026lt;-的一個特例，我們總是可以自行加入一個屬性，名稱為names讓函數names()可以把每個元素的名稱列印出來。\n 後面這段程式碼只是對照一下之前每個元素加入名稱的作法，本身沒意義：\n# adding names when creating vectors\rv2 \u0026lt;- c(name1 = 1, name2 = 2, name3 = 3)\rv2\r#\u0026gt; name1 name2 name3 #\u0026gt; 1 2 3\rattributes(v2)\r#\u0026gt; $names\r#\u0026gt; [1] \u0026quot;name1\u0026quot; \u0026quot;name2\u0026quot; \u0026quot;name3\u0026quot;\r 也可以加入註解：\ncomment(v1) \u0026lt;- \u0026quot;This is a comment on a vector\u0026quot;\rv1\r#\u0026gt; a b c d e f g h i j #\u0026gt; 8 9 10 11 12 13 14 15 16 17\rattributes(v1)\r#\u0026gt; $names\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; \u0026quot;e\u0026quot; \u0026quot;f\u0026quot; \u0026quot;g\u0026quot; \u0026quot;h\u0026quot; \u0026quot;i\u0026quot; \u0026quot;j\u0026quot;\r#\u0026gt; #\u0026gt; $comment\r#\u0026gt; [1] \u0026quot;This is a comment on a vector\u0026quot;\r "},
{"uri": "/blogR//rlang/1_2_filesystem.html","title": "1.2 檔案系統",
	"tags": [],
	"description": "讀取資料",
	"content": "分解、合成檔案路徑 在R語言中,路徑名稱不是 character string 而是 system-specific character string。例如,R函數file.path()的執行結果就是system-specific file names.\nworkingdir \u0026lt;- \u0026quot;projects\u0026quot;\rprojectdir \u0026lt;- \u0026quot;warandpeace\u0026quot;\rdatadir \u0026lt;- \u0026quot;data\u0026quot;\rfile.path(workingdir, projectdir, datadir)\r 結果\n[1] \u0026quot;projects/warandpeace/data\u0026quot;\r上面是windows 10系統上的結果,比較 Linux-based OS: [1] \u0026quot;projects/warandpeace/data\u0026quot;\r注意斜線都一樣。\r 合成路徑 利用函數 file.path()合成檔案路徑，其分隔是斜線,而不是反斜線 (例如for example C:/Program Files/R/R-3.5.1)?\nfile.path(\u0026quot;c:/temp\u0026quot;,\u0026quot;test.txt\u0026quot;)\r ## [1] \u0026quot;c:/temp/test.txt\u0026quot;\r 路徑分解  dirname() :分解路徑用，例如＂c:/temp/text.txt\u0026quot; 得到\u0026quot;c:/temp\u0026quot;，但是\u0026quot;c:/temp/\u0026quot;,\u0026quot;c:/temp\u0026quot;, \u0026quot;c:/temp.txt\u0026quot;都得到\u0026quot;c:/\u0026quot;。😒🏷有時候有後綴\u0026#34;/\u0026#34;,有時候沒有  basename()  檔案系統相關操作  dir():包括資料夾、檔案名稱 list.files() : 僅檔案 list.dirs():僅資料夾  判別是否目標檔案或資料夾已經存在(我們不希望刪除或更動已經存在的檔案):\n  file.exists(\u0026quot;xx.txt\u0026quot;): 是否存在xx.txt\n  dir.exists(\u0026quot;xx\u0026quot;): 是否存在子目錄xx\n  工作區相關\n getwd() setwd() .libPaths() : 目前套件安裝的地方。 R.Home() : 目前R安裝的地方,例如\u0026quot;C:/PROGRA~1/R/R-41~1.1\u0026quot;    範例\ncurrentwd\u0026lt;-getwd()\rsetwd(\u0026quot;~\u0026quot;) # 🏷這是使用者目錄,看你是甚麼系統而定,我的是windows \rgetwd()\r#\u0026gt; [1] \u0026quot;C:/Users/you/Documents\u0026quot;\rsetwd(currentwd)\rpath.expand(\u0026quot;~\u0026quot;) # 🏷👏展開路徑~ \rR.home()\rlibPaths()\rlist.files(R.home()) #:可以列出R的安裝的位置,然後list.files()列出檔案\rlist.dirs(R.home(\u0026quot;doc\u0026quot;))\rlist.dirs(R.home(\u0026quot;doc\u0026quot;), full.names = FALSE)\r## 在使用者指定的目錄,列出 檔案的開頭是 a到l 或 r。\rdir(\u0026quot;../..\u0026quot;, pattern = \u0026quot;^[a-lr]\u0026quot;, full.names = TRUE, ignore.case = TRUE)\r 練習 問題: 利用.libPaths() 、 list.files()問題:列出所有套件提示\r list.files(.libPaths())\r \r操作檔案系統   暫時子目錄的路徑tempdir()，暫時檔案tempfile()\n 函數 tempfile() 不是真正的建立新檔案,而是在目前的r session中隨機產生唯一檔案名稱，檔案位置預設是在暫時子目錄中。 \r展開\rmydirname \u0026lt;- tempfile(pattern = \u0026quot;mydir\u0026quot;)\rmydirname\r#\u0026gt; C:\\\\Users\\\\使用者名稱\\\\AppData\\\\Local\\\\Temp\\\\RtmpSg2qRA\\\\mydir326845a02140\r     函數 file.exists() 可以用來知道檔案是否存在,\n  函數 dir() 用來列出子目錄中的檔案,例如dir(tempdir())\n  \r範例\rs\u0026lt;-\u0026quot;C:\\\\Users\\\\使用者名稱\\\\AppData\\\\Local\\\\Temp\u0026quot;\rdir(s)\r    建立目錄 dir.create 建立子目錄\ndir.create(mydirname) file.exists(mydirname) # 上面指令建立的子目錄是否存在\rdir(tempdir(), full.names = TRUE) #列出目前子目錄內容(全名)\rfile.mtime(mydirname) #子目錄建立時間,make time\r 結果\n[1] TRUE [1] \u0026quot;C:\\\\Users\\\\xxx\\\\AppData\\\\Local\\\\Temp\\\\RtmpIp3ZiD/file87e8755a1876\u0026quot; [2] \u0026quot;C:\\\\Users\\\\xxx\\\\AppData\\\\Local\\\\Temp\\\\RtmpIp3ZiD/mydir87e86b51384d\u0026quot; [3] \u0026quot;C:\\\\Users\\\\xxx\\\\AppData\\\\Local\\\\Temp\\\\RtmpIp3ZiD/rs-graphics-0f3f81af-32b7-49c4-a272-ad1a859f222f\u0026quot; [1] \u0026quot;2018-10-25 23:42:51 CST\u0026quot;\r R系統檔案列表 如果要觀察安裝套件的檔案位置,可以使用指令system.file(),這個指令可以列出內建某個套建的全路徑。例如,\nsystem.file(package = \u0026quot;stats\u0026quot;)\r# \u0026gt; [1] \u0026quot;C:/PROGRA~1/R/R-3.5.1/library/stats\u0026quot;\rsystem.file() 🏷基本套件路徑 \r# \u0026gt; [1] \u0026quot;C:/PROGRA~1/R/R-41~1.1/library/base\u0026quot; .libPaths() 🏷另外安裝的套件路徑 \r# \u0026gt; [1] \u0026quot;C:/Users/you/Documents/R/win-library/4.1\u0026quot;\r# \u0026gt; [2] \u0026quot;C:/Program Files/R/R-4.1.1/library\u0026quot;\r system.file()的結果是一個目錄,因此可以利用dir()列出套件stats中,所有的檔案\ndir(system.file(package = \u0026quot;stats\u0026quot;))\r#\u0026gt; [1] \u0026quot;COPYRIGHTS.modreg\u0026quot; \u0026quot;demo\u0026quot; \u0026quot;DESCRIPTION\u0026quot; #\u0026gt; [4] \u0026quot;help\u0026quot; \u0026quot;html\u0026quot; \u0026quot;INDEX\u0026quot; #\u0026gt; [7] \u0026quot;libs\u0026quot; \u0026quot;Meta\u0026quot; \u0026quot;NAMESPACE\u0026quot; #\u0026gt; [10] \u0026quot;R\u0026quot; \u0026quot;SOURCES.ts\u0026quot;  上面可以看到套件中包含子目錄demo，如果還要查看demo中的檔案內容:\ndir(system.file(\u0026quot;demo\u0026quot;, package = \u0026quot;stats\u0026quot;))\r#\u0026gt; [1] \u0026quot;glm.vr.R\u0026quot; \u0026quot;lm.glm.R\u0026quot; \u0026quot;nlm.R\u0026quot; \u0026quot;smooth.R\u0026quot;\r 上面只有檔案名稱,如果要看全路徑，可以利用參數full.names:\ndir(system.file(\u0026quot;demo\u0026quot;, package = \u0026quot;stats\u0026quot;), full.names = TRUE)\r#\u0026gt; [1] \u0026quot;/usr/lib64/R/library/stats/demo/glm.vr.R\u0026quot;\r#\u0026gt; [2] \u0026quot;/usr/lib64/R/library/stats/demo/lm.glm.R\u0026quot;\r#\u0026gt; [3] \u0026quot;/usr/lib64/R/library/stats/demo/nlm.R\u0026quot; #\u0026gt; [4] \u0026quot;/usr/lib64/R/library/stats/demo/smooth.R\u0026quot;\r 應用範例 列出目前工作目錄上的檔案 x \u0026lt;- dir()\rfor (item in x) {\rprint(item) # show(item) }\r 或者,僅列出前幾個檔案\nx\u0026lt;-dir()\rhead(x)\r 檢查在目前的工作目錄下,是否存在使用者傳遞進來的目錄? 例如\nfolderlist\u0026lt;-c(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;c\u0026quot;)\rcheckdir(folderlist)  📝 利用file.exists()\n\r\r"},
{"uri": "/blogR//rlang/6_programming_1.html","title": "6. Programming 1",
	"tags": [],
	"description": "基本語法",
	"content": "programming in R 條件指令 if 一般來講，通用寫法如下：\nif(判斷式){\r成功\r}else{\r失敗\r}\r 例如\n多行寫法 if(4 \u0026gt; 3){\rTRUE\r}else{\rFALSE\r}\r 另外，如果區塊內只有一行\nif(4 \u0026gt; 3) TRUE else FALSE\nifelse的寫法 ifelse('判斷式','成功','失敗')\n例如， ifelse(4 \u0026gt; 3, T, F)\nswitch的寫法 switch('判斷式', '動作1', '動作2', ... ) ** 指定第幾行 **\nswitch(2, 1, 2, #因為判斷式為2，因此，執行動作2\r3)   也可以利用字串  switch(\u0026quot;a\u0026quot;, a = 1, b = 2, c = \u0026quot;why\u0026quot;)\r#\u0026gt; [1] 1\r 這個switch 並不是一個語法，而是一個函數，原理大概是 第1個參數以後的東西，會被變成是一個named list。 例如上面的例子中\nalist \u0026lt;-list(a=1,b=2,c=\u0026quot;why\u0026quot;)\r 然後利用判斷式 查找要返回對應的值。\n迴圈指令 R 語言的迴圈，可以搭配 break和next，前者跳出迴圈，後者繼續下一個迴圈。\nfor-loop 計算 1+2+3+4. 的值是多少？\nrst \u0026lt;- 0\rfor(i in c(1:4)){ rst \u0026lt;- rst + i\r}\r while-loop i \u0026lt;- 1\rresult \u0026lt;- 0\rwhile(i \u0026lt; 5){ rst \u0026lt;- rst + i\ri \u0026lt;- i + 1\r}\r repeat-loop i \u0026lt;- 1\rrst \u0026lt;- 0\rrepeat{ if(i \u0026gt; 4) break rst \u0026lt;- rst + i\ri \u0026lt;- i + 1\r}\r %in% operator 範例 detach_package() 討論內建函數detach_package()\n使用方法：\ndetach_package(vegan)\rdetach_package(\u0026quot;vegan\u0026quot;, TRUE)\r 注意一下第2個使用方式，第2個參數`character.only'：\ndetach_package \u0026lt;- function(pkg, character.only = FALSE)\r{\rif(!character.only) #如果沒有指定參數是字串\r{\rpkg \u0026lt;- deparse(substitute(pkg)) # 轉字串\r}\rsearch_item \u0026lt;- paste(\u0026quot;package\u0026quot;, pkg, sep = \u0026quot;:\u0026quot;)\rwhile(search_item %in% search())\r{\rdetach(search_item, unload = TRUE, character.only = TRUE)\r}\r}\r 範例2：.libPaths() .libPaths\r#\u0026gt; function (new, include.site = TRUE) #\u0026gt; {\r#\u0026gt; if (!missing(new)) {\r#\u0026gt; new \u0026lt;- Sys.glob(path.expand(new))\r#\u0026gt; paths \u0026lt;- c(new, if (include.site) .Library.site, .Library)\r#\u0026gt; paths \u0026lt;- paths[dir.exists(paths)]\r#\u0026gt; .lib.loc \u0026lt;\u0026lt;- unique(normalizePath(paths, \u0026quot;/\u0026quot;))\r#\u0026gt; }\r#\u0026gt; else .lib.loc\r#\u0026gt; }\r#\u0026gt; \u0026lt;bytecode: 0x0000000013084b10\u0026gt;\r#\u0026gt; \u0026lt;environment: 0x000000001307f990\u0026gt;\r R語言的 meta 計算。  assign() 語法解析：substitute(), parse(), deparse() 表達式構造：quote() 表達式求值：eval(), source() 表達式：expression()  parse(text='x\u0026lt;-1+2')\r#\u0026gt; expression(x \u0026lt;- 1 + 2)\r 在R中解析有 三種不同的變種：\n The read-eval-print loop Parsing of text files Parsing of character strings  read-eval-print 是讀入文本，然後進行解析，然後求值，最後打印，這個就是我們日常看到的命令行操作。\n解析文件是parse函數來完成。\n解析字符串就是parse中用text參數來表示。\ndeparse 相對於parse,deparse 把expression 轉為字串。\ndeparse(expression(1+2))\r#\u0026gt; [1] \u0026quot;expression(1 + 2)\u0026quot;\r quote* quote() 的參數也是expression，返回類別class，可以再給eval()計算。 quote()的參數雖然是expression但是不會進行計算，而是token分解。\nquote(1+2)\r#\u0026gt; 1 + 2\rtypeof(quote(1+2)) #\u0026gt; [1] \u0026quot;language\u0026quot;\rclass(quote(1+2))\r#\u0026gt; [1] \u0026quot;call\u0026quot;\r eval* parse() 和eval() text --\u0026gt;parse()--\u0026gt; expression---\u0026gt;eval()\nquote() 和eval() expression --\u0026gt;quote()--\u0026gt; call---\u0026gt;eval()\neval(quote(1+2))\r#\u0026gt; [1] 3\r 一般是用parse從字符串（或者是硬盤上的文件）解析成一個expression對象，是表達式列表，不是一個表達式。\neval(parse(text=\u0026quot;1+2\u0026quot;))\r#\u0026gt; [1] 3\r 首先使用parse()函數將字符串轉化為表達式（expression），而後使用eval()函數對表達式求解。\n?eval\r# Evaluate an R expression in a specified environment.\r# Usage\r# eval(expr, envir = parent.frame(),\r# enclos = if(is.list(envir) || is.pairlist(envir))\r# parent.frame() else baseenv())\r# evalq(expr, envir, enclos)\r# eval.parent(expr, n = 1)\r# local(expr, envir = new.env())\r substitue() 如果沒有第二個參數，是否substitue()==quote()?\n(s.e \u0026lt;- substitute(expression(a + b), list(a = 1))) #\u0026gt; expression(1 + b)\r#\u0026gt; expression(1 + b)\r(s.s \u0026lt;- substitute( a + b, list(a = 1))) #\u0026gt; 1 + b\r#\u0026gt; 1 + b\r 討論 測試紀錄 test1\u0026lt;-function (..., list = character() ) {\rnames \u0026lt;- c(as.character(substitute(list(...))[-1L]), list)\rreturn (names)\r}\rtest1(x,y,list=\u0026quot;data\u0026quot;)\r#\u0026gt; [1] \u0026quot;x\u0026quot; \u0026quot;y\u0026quot; \u0026quot;data\u0026quot;\r names \u0026lt;- c(as.character(substitute(list(...))[-1L]), list)\n list(...) 把傳進來的參數打包成list 在執行list(...)的時候，如果傳進的參數是還沒有初值的變數，會出錯，因此用substitute()打包。  為什麼用substitute()就不會出錯，因為它不執行這個expression(e.g. list(...))。 -為什麼可以不執行？因為substitue()有把它變成匿名函數(和call這個類別有關，自推論），這樣當然不會有問題。 -為什麼有-1L?接續之前的推論，第一個元素應該是匿名函數的內建名稱。    所以整個函數，就是把使用者所有的參數，打成字串向量。如範例結果。\n練習  zeros(3,2),ones(2,3)  hint:\nsapply(a,function(x) matrix(x,2,2), simplify='array')\r zeros\u0026lt;-function (nrow,ncol)\r{\rrst\u0026lt;-sapply(c(0),function(x) matrix(x,nrow,ncol),simplify='array')\rreturn(rst[,,1])\r}\rx\u0026lt;-zeros(4,5)\rx\r#\u0026gt; [,1] [,2] [,3] [,4] [,5]\r#\u0026gt; [1,] 0 0 0 0 0\r#\u0026gt; [2,] 0 0 0 0 0\r#\u0026gt; [3,] 0 0 0 0 0\r#\u0026gt; [4,] 0 0 0 0 0\r "},
{"uri": "/blogR//rlang/7_function_1.html","title": "7 Function basic",
	"tags": [],
	"description": "撰寫R 函數",
	"content": "普通函數範例 fivenum function (x, na.rm = TRUE) {\rxna \u0026lt;- is.na(x)\rif (any(xna)) {\rif (na.rm) x \u0026lt;- x[!xna]\relse return(rep.int(NA, 5))\r}\rx \u0026lt;- sort(x)\rn \u0026lt;- length(x)\rif (n == 0) rep.int(NA, 5)\relse {\rn4 \u0026lt;- floor((n + 3)/2)/2\rd \u0026lt;- c(1, n4, (n + 1)/2, n + 1 - n4, n)\r0.5 * (x[floor(d)] + x[ceiling(d)])\r}\r}\r 自己寫一個類似which()的函數。\r\r\r3個逗點 (dots) 3個逗點可以利用?dots查詢。\n範例\nf \u0026lt;- function(x, ...)\r{\rdots \u0026lt;- list(...) #1\rif(length(dots) == 0) return(NULL) cat(\u0026quot;The arguments in ... are\\n\u0026quot;)\rprint(dots)\rf(...) #2\r}\rf(1,2,3,\u0026quot;a\u0026quot;, list(\u0026quot;monkey\u0026quot;))\r operator \u0026lt;\u0026lt;- example\npower \u0026lt;- function(exponent) {\rfunction(x) x ^ exponent\r}\rsquare \u0026lt;- power(2)\rsquare(2) # -\u0026gt; [1] 4\rsquare(4) # -\u0026gt; [1] 16\rcube \u0026lt;- power(3)\rcube(2) # -\u0026gt; [1] 8\rcube(4) # -\u0026gt; [1] 64\r closure ox\u0026lt;-function (arg=3) {\rx\u0026lt;-0\ro1\u0026lt;-function(){\rx\u0026lt;\u0026lt;-x+arg;\r}\rlist(go=o1)\r}\robj\u0026lt;-ox(4)\robj$go()\r example of closure make.accumulator\u0026lt;-function(){\ra\u0026lt;-0\rfunction(x) {\ra\u0026lt;\u0026lt;-a+x\ra\r}\r}\rf\u0026lt;-make.accumulator()\rf(1)\r#\u0026gt; [1] 1\rf(1)\r#\u0026gt; [1] 2\rf(1)\r#\u0026gt; [1] 3\r ❓ 利用上述觀念建立一個計數器。 💡 例如產生的檔案個數不定,但是想要每次開始執行的時候都有一個固定編號。\r\r\r\r👍hint\r```r\rnew_counter \u0026lt;- function() {\ri \u0026lt;- 0\rfunction() {\r# do something useful, then ...\ri \u0026lt;\u0026lt;- i \u0026#43; 1\ri\r}\r}\r``` session 自己的函數存成檔案(例如名稱為myfun.R)以後,如何呼叫? 利用source(\u0026quot;myfun.R\u0026quot;) 可以載入記憶體中,此時在整體工作環境中可以看到函數定義。 離開專案的時候,如果儲存工作環境,則下次可以不用source(),直接可以使用。但是在RMD檔案中,因為每次都是新session因此,必須要先找地方source(例如在第一個chunk)。\r\r\rOOP advance R\nBase objects vs OO objects 辨別變數是基礎型別或是物件型別，可以簡單利用函數： is.object():\n基礎物件base object:\nis.object(1:10)\r#\u0026gt; [1] FALSE\r [1] FALSE\n物件導向物件 OO object\nis.object(mtcars)\r#\u0026gt; [1] TRUE\r [1] TRUE\n主要的區別在於基本物件沒有class 這個attribute\nattr(1:10, \u0026quot;class\u0026quot;) # NULL\r#\u0026gt; NULL\rattr(mtcars, \u0026quot;class\u0026quot;) # [1] \u0026quot;data.frame\u0026quot;\r#\u0026gt; [1] \u0026quot;data.frame\u0026quot;\r class()這個函數,不見得總是會和attr()的結果一致,因為，對基本物件而言,傳回的是後面討論,而不是 NULL。\n變數屬性查詢函數 names() dimnames() length() dim(): 各維度長度 class() : 變數類別 table()：各類資料計數 str()：變數的資料結構(其實是一個list)\n透過names()函數，可取得各種list元素的名稱,但是如果是data.frame則是顯示欄位名稱 islands是內建資料\nstr(islands)\r#\u0026gt; Named num [1:48] 11506 5500 16988 2968 16 ...\r#\u0026gt; - attr(*, \u0026quot;names\u0026quot;)= chr [1:48] \u0026quot;Africa\u0026quot; \u0026quot;Antarctica\u0026quot; \u0026quot;Asia\u0026quot; \u0026quot;Australia\u0026quot; ...\r head(names(islands)) #\u0026gt; [1] \u0026quot;Africa\u0026quot; \u0026quot;Antarctica\u0026quot; \u0026quot;Asia\u0026quot; \u0026quot;Australia\u0026quot; \u0026quot;Axel Heiberg\u0026quot;\r#\u0026gt; [6] \u0026quot;Baffin\u0026quot;\r 方形資料（例如，矩陣，table, data.frame)，可以透過dimnames()函數可顯示data.frame 橫行和直行的名稱 先橫行，然後直行。\ndimnames(USArrests) #\u0026gt; [[1]]\r#\u0026gt; [1] \u0026quot;Alabama\u0026quot; \u0026quot;Alaska\u0026quot; \u0026quot;Arizona\u0026quot; \u0026quot;Arkansas\u0026quot; #\u0026gt; [5] \u0026quot;California\u0026quot; \u0026quot;Colorado\u0026quot; \u0026quot;Connecticut\u0026quot; \u0026quot;Delaware\u0026quot; #\u0026gt; [9] \u0026quot;Florida\u0026quot; \u0026quot;Georgia\u0026quot; \u0026quot;Hawaii\u0026quot; \u0026quot;Idaho\u0026quot; #\u0026gt; [13] \u0026quot;Illinois\u0026quot; \u0026quot;Indiana\u0026quot; \u0026quot;Iowa\u0026quot; \u0026quot;Kansas\u0026quot; #\u0026gt; [17] \u0026quot;Kentucky\u0026quot; \u0026quot;Louisiana\u0026quot; \u0026quot;Maine\u0026quot; \u0026quot;Maryland\u0026quot; #\u0026gt; [21] \u0026quot;Massachusetts\u0026quot; \u0026quot;Michigan\u0026quot; \u0026quot;Minnesota\u0026quot; \u0026quot;Mississippi\u0026quot; #\u0026gt; [25] \u0026quot;Missouri\u0026quot; \u0026quot;Montana\u0026quot; \u0026quot;Nebraska\u0026quot; \u0026quot;Nevada\u0026quot; #\u0026gt; [29] \u0026quot;New Hampshire\u0026quot; \u0026quot;New Jersey\u0026quot; \u0026quot;New Mexico\u0026quot; \u0026quot;New York\u0026quot; #\u0026gt; [33] \u0026quot;North Carolina\u0026quot; \u0026quot;North Dakota\u0026quot; \u0026quot;Ohio\u0026quot; \u0026quot;Oklahoma\u0026quot; #\u0026gt; [37] \u0026quot;Oregon\u0026quot; \u0026quot;Pennsylvania\u0026quot; \u0026quot;Rhode Island\u0026quot; \u0026quot;South Carolina\u0026quot;\r#\u0026gt; [41] \u0026quot;South Dakota\u0026quot; \u0026quot;Tennessee\u0026quot; \u0026quot;Texas\u0026quot; \u0026quot;Utah\u0026quot; #\u0026gt; [45] \u0026quot;Vermont\u0026quot; \u0026quot;Virginia\u0026quot; \u0026quot;Washington\u0026quot; \u0026quot;West Virginia\u0026quot; #\u0026gt; [49] \u0026quot;Wisconsin\u0026quot; \u0026quot;Wyoming\u0026quot; #\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] \u0026quot;Murder\u0026quot; \u0026quot;Assault\u0026quot; \u0026quot;UrbanPop\u0026quot; \u0026quot;Rape\u0026quot;\r 方形資料，可以透過length()函數可顯示資料長度，但是如果是data.frame則顯示欄位數。\nlength(islands) #\u0026gt; [1] 48\r 透過dim() 顯示方形資料的「資料筆數」和「欄位數目」，先「橫行」，後「直行」\ndim(USArrests) #\u0026gt; [1] 50 4\r 使用class()函數可知道變數類別\nclass(pi)\r#\u0026gt; [1] \u0026quot;numeric\u0026quot;\rclass(Sys.Date())\r#\u0026gt; [1] \u0026quot;Date\u0026quot;\r 使用table()函數可知道向量中每個值出現幾次\ntable(iris$Species) ##統計結果\r#\u0026gt; #\u0026gt; setosa versicolor virginica #\u0026gt; 50 50 50\r operator %\u0026gt;% %\u0026gt;% 不是R基礎套件 而是定義再套件 magrittr (CRAN) 且常跟 dplyr (CRAN)搭配。\n意思是把左邊(LHS)當成右邊(RHS)的參數。\n例如下面的例子: 資料框iris 用來當 head()的參數: 也就是說 iris %\u0026gt;% head() 相當於 head(iris).\nlibrary(magrittr) iris %\u0026gt;% head() Sepal.Length Sepal.Width Petal.Length Petal.Width Species 1 5.1 3.5 1.4 0.2 setosa 2 4.9 3.0 1.4 0.2 setosa 3 4.7 3.2 1.3 0.2 setosa 4 4.6 3.1 1.5 0.2 setosa 5 5.0 3.6 1.4 0.2 setosa 6 5.4 3.9 1.7 0.4 setosa\n為甚麼需要這樣用,下面是一個例子\niris %\u0026gt;% head() %\u0026gt;% summary() 類似的觀念, iris %\u0026gt;% head() %\u0026gt;% summary() 等同於summary(head(iris)). 也就是說,避免了使用巢狀呼叫。\n"},
{"uri": "/blogR//rlang/7_1_apply_family.html","title": "7.1 function - apply family",
	"tags": [],
	"description": "list 的應用",
	"content": " 其他參考  apply 可以處理的對象包括 矩陣、資料集、陣列(二維、多維)，可以指定直行、橫行。\n函數定義：\napply(X, MARGIN, FUN, ...)\r 參數列表：\n X : 矩陣matrix、資料集dataframe 、陣列 array MARGIN : 1表示橫行，2表示直行 FUN : the function to be applied ... : optional arguments to FUN  在matlab 中,sum(矩陣,參數2) 參數2的可能值為1或2，分別指定欄位加總或是橫行加總,但是在R中sum(矩陣),卻是整個矩陣元素的加總。\n範例1: 橫行加總\nx\u0026lt;-matrix(1,ncol=4,nrow=3);x\r#\u0026gt; [,1] [,2] [,3] [,4]\r#\u0026gt; [1,] 1 1 1 1\r#\u0026gt; [2,] 1 1 1 1\r#\u0026gt; [3,] 1 1 1 1\rapply(x,1,sum)\r#\u0026gt; [1] 4 4 4\r 範例：\n有一個list,裡面有2個欄位，分別是x1,x2,想要分別算出每個欄位的最小和最大\nx \u0026lt;- cbind(x1 = 3, x2 = c(1:6)); # x 是矩陣\rf1\u0026lt;- function(col) {\rc(min(col),max(col)) }\rapply(x,2,f1)\r#\u0026gt; x1 x2\r#\u0026gt; [1,] 3 1\r#\u0026gt; [2,] 3 6\r 練習：如果用for loop?\n練習：哪種方式比較快？hint:利用 system.time(a function)\nlapply函數 大綱：lapply(),sapply(),vapply() 都參數都吃list 或者vector。\n函數定義：\nlapply(X, FUN, ...)\r 參數列表：\n X: list、vector、data.frame FUN: 自定義的調用函數 …: 更多參數，可選   輸入 輸出     vector list   list list   data.frame list     函數比較\n lapply(), sapply()差別是 前者返回list,後者返回matrix; sapply(), vapply() 差別是，後者可以加入row names。  範例:計算list中的每個KEY對應 的5個Tukey分位數 (minimum, lower-hinge, median, upper-hinge, maximum) 。利用fivenum()\nx \u0026lt;- list(a = 1:6, b = rnorm(2,6,8));x\r#\u0026gt; $a\r#\u0026gt; [1] 1 2 3 4 5 6\r#\u0026gt; #\u0026gt; $b\r#\u0026gt; [1] 8.92068 13.61534\rlapply(x,fivenum)\r#\u0026gt; $a\r#\u0026gt; [1] 1.0 2.0 3.5 5.0 6.0\r#\u0026gt; #\u0026gt; $b\r#\u0026gt; [1] 8.92068 8.92068 11.26801 13.61534 13.61534\r lapply 的參數如果是 list、data.frame，返回和參數長度同樣的list結構作為結果(欄位數)。\n例如，傳入的參數是data.frame(),如下，對資料集的每個欄位求和。\nlapply(data.frame(x), sum)\r#\u0026gt; $a\r#\u0026gt; [1] 21\r#\u0026gt; #\u0026gt; $b\r#\u0026gt; [1] 67.60805\r apply不同的地方是,如果參數是矩陣沒辦法指定橫行或是直行的區別,只能是逐個元素運算。就是則會對每個元素求函數值。\nx \u0026lt;- matrix(rnorm(4,5,10),nrow=2);x\r#\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 4.214953 8.275082\r#\u0026gt; [2,] 22.287792 5.324959\rlapply(x, sum)\r#\u0026gt; [[1]]\r#\u0026gt; [1] 4.214953\r#\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] 22.28779\r#\u0026gt; #\u0026gt; [[3]]\r#\u0026gt; [1] 8.275082\r#\u0026gt; #\u0026gt; [[4]]\r#\u0026gt; [1] 5.324959\r sapply函數 sapply函數包裹了一上面提到的lapply()，返回值為向量，而不是list對象。sapply增加了2個參數simplify和USE.NAMES，\n函數定義：\nsapply(X, FUN, ..., simplify=TRUE, USE.NAMES = TRUE)\r 參數列表：\n X: list、matrix、data.frame FUN: 自定義的調用函數 …: 更多參數，可選 simplify: 預設為T,返為值為向量；如果是F成list。? 設定為\u0026quot;array\u0026quot;時，輸出結果按數組進行分組 USE.NAMES: 如果X為字符串，TRUE設置字符串為數據名，FALSE不設置   輸入 輸出     vector vector,matrix,array,list   list vector,matrix,array,list   data.frame vector,matrix,array,list     simplify=FALSE和USE.NAMES=FALSE，則 sapply函數 ＝lapply函數。\n如果我們利用函數unlist 配合 lapply 的返回值，也可以得到向量，例如： unlist(lapply(1:3, function(x) x^2))\n\r\r常見範例\nsapply(2:4, seq)\r#\u0026gt; [[1]]\r#\u0026gt; [1] 1 2\r#\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] 1 2 3\r#\u0026gt; #\u0026gt; [[3]]\r#\u0026gt; [1] 1 2 3 4\r# data.frame\rsapply(data.frame(x), sum)\r#\u0026gt; X1 X2 #\u0026gt; 26.50274 13.60004\r# 確認返回類別\rlapply(x, sum)\r#\u0026gt; [[1]]\r#\u0026gt; [1] 4.214953\r#\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] 22.28779\r#\u0026gt; #\u0026gt; [[3]]\r#\u0026gt; [1] 8.275082\r#\u0026gt; #\u0026gt; [[4]]\r#\u0026gt; [1] 5.324959\rclass(lapply(x, sum))\r#\u0026gt; [1] \u0026quot;list\u0026quot;\rsapply(x, sum)\r#\u0026gt; [1] 4.214953 22.287792 8.275082 5.324959\rclass(sapply(x, sum))\r#\u0026gt; [1] \u0026quot;numeric\u0026quot;\rsapply(x, sum, simplify=FALSE, USE.NAMES=FALSE)\r#\u0026gt; [[1]]\r#\u0026gt; [1] 4.214953\r#\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] 22.28779\r#\u0026gt; #\u0026gt; [[3]]\r#\u0026gt; [1] 8.275082\r#\u0026gt; #\u0026gt; [[4]]\r#\u0026gt; [1] 5.324959\rclass(sapply(x, sum, simplify=FALSE, USE.NAMES=FALSE))\r#\u0026gt; [1] \u0026quot;list\u0026quot;\r ❌對欄位作統計運算的錯誤範例\nx \u0026lt;- cbind(x1 = 3, x2 = c(1:6)); # x 是矩陣\rx\r#\u0026gt; x1 x2\r#\u0026gt; [1,] 3 1\r#\u0026gt; [2,] 3 2\r#\u0026gt; [3,] 3 3\r#\u0026gt; [4,] 3 4\r#\u0026gt; [5,] 3 5\r#\u0026gt; [6,] 3 6\rsapply(x, sum) #結果類似lapply() 🏷將陣列元素帶入函數 \r#\u0026gt; [1] 3 3 3 3 3 3 1 2 3 4 5 6\rsapply(x, quantile) #\u0026gt; [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\r#\u0026gt; 0% 3 3 3 3 3 3 1 2 3 4 5 6\r#\u0026gt; 25% 3 3 3 3 3 3 1 2 3 4 5 6\r#\u0026gt; 50% 3 3 3 3 3 3 1 2 3 4 5 6\r#\u0026gt; 75% 3 3 3 3 3 3 1 2 3 4 5 6\r#\u0026gt; 100% 3 3 3 3 3 3 1 2 3 4 5 6\r 解釋上面出錯的原因。提示\r hint: sapply會調用函數lapply()(🏷🐱‍👤簡化的sapply來自於複雜的lapply )，而已經知道lapply()的參數是矩陣的時候，每個元素都會被傳到函數。因此欄位有12個；\n又，每個quantile()傳回5個元素，因此，橫行有5個。 正確的作法是：\nx \u0026lt;- list(x1 = 3, x2 = c(1:6))\rsapply(x, quantile) #\u0026gt; x1 x2\r#\u0026gt; 0% 3 1.00\r#\u0026gt; 25% 3 2.25\r#\u0026gt; 50% 3 3.50\r#\u0026gt; 75% 3 4.75\r#\u0026gt; 100% 3 6.00\r \r另一個範例\nlocaleCategories \u0026lt;- c(\u0026quot;LC_COLLATE\u0026quot;,\u0026quot;LC_CTYPE\u0026quot;,\u0026quot;LC_MONETARY\u0026quot;,\u0026quot;LC_NUMERIC\u0026quot;,\u0026quot;LC_TIME\u0026quot;)\rlocales \u0026lt;- setNames(sapply(localeCategories, Sys.getlocale), localeCategories)\r 範例：USE.NAMES=TRUE\nalist\u0026lt;-list(a=c(1,1,1),b=c(2,2,2),c=c(3,3,3))\rf2\u0026lt;-function(x)\r{\rmean(alist[[x]])\r}\rsapply(c(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;c\u0026quot;),f2,USE.NAMES = T)\r#\u0026gt; a b c #\u0026gt; 1 2 3\r 對於simplify為array時，我們可以參考下面的例子，構建一個三維數組，其中二個維度為方陣。\na\u0026lt;-1:2\r# 按數組分組\rsapply(a,function(x) matrix(x,2,2), simplify='array')\r#\u0026gt; , , 1\r#\u0026gt; #\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 1 1\r#\u0026gt; [2,] 1 1\r#\u0026gt; #\u0026gt; , , 2\r#\u0026gt; #\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 2 2\r#\u0026gt; [2,] 2 2\r# 默認情況，則自動合併分組\rsapply(a,function(x) matrix(x,2,2))\r#\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 1 2\r#\u0026gt; [2,] 1 2\r#\u0026gt; [3,] 1 2\r#\u0026gt; [4,] 1 2\r 比較    Function Arguments Objective Input Output     apply apply(x, MARGIN, FUN) Apply a function to the rows or columns or both Data frame or matrix vector, list, array   lapply lapply(X, FUN) Apply a function to all the elements of the input List, vector or data frame list   sapply sappy(X FUN) Apply a function to all the elements of the input List, vector or data frame vector or matrix    m\u0026lt;-matrix(1:4,4,3);m\r#\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 1 1 1\r#\u0026gt; [2,] 2 2 2\r#\u0026gt; [3,] 3 3 3\r#\u0026gt; [4,] 4 4 4\rsapply(1:3, function(x) mean(m[,x]))\r#\u0026gt; [1] 2.5 2.5 2.5\r m\u0026lt;-matrix(1:4,4,3);\rlapply(1:3, function(x) mean(m[,x]))\r#\u0026gt; [[1]]\r#\u0026gt; [1] 2.5\r#\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] 2.5\r#\u0026gt; #\u0026gt; [[3]]\r#\u0026gt; [1] 2.5\r vapply函數 vapply類似於sapply，提供了FUN.VALUE參數，用來控制返回值的行名。\nnote: sapply() 配上rownames\u0026lt;- 可以達到一樣的效果。\n函數定義：\nvapply(X, FUN, FUN.VALUE, ..., USE.NAMES = TRUE)\r 參數列表(前3個需要)：\n X:array、matrix、data.frame FUN: 使用者指定的函數,可以是自定義的函數 FUN.VALUE:  例如,logistic(1),也就是對傳進來的每個參數,都要產生邏輯值向量,且長度為1。 可以記為對每一紀錄給名稱(e.g. row.names)   …: 更多參數，可選 USE.NAMES: 如果X為字符串，TRUE設置字符串為數據名，FALSE不設置  x \u0026lt;- cbind(x1 = 3, x2 = c(1:6)); # x 是矩陣\rx\u0026lt;-data.frame(x) # ✔因為在f1()中要對每個欄位求最小最大,不能是矩陣(會對整個矩陣找最小最大) f1\u0026lt;- function(col) {\rc(min(col),max(col)) }\rr1\u0026lt;-vapply(x,f1, numeric(2)) # # ❌vapply(x,f1, numeric(1)) # ❓為甚麼錯誤 # 🏷#👏因為f1的返回值為向量,且長度為2 \rr2\u0026lt;-vapply(x,f1,c(\u0026quot;min\u0026quot;=0,\u0026quot;max\u0026quot;=0)) # FUN.VALUE 是一個named vector\r# ❌vapply(x,f1,FUN.VALUE = c(\u0026quot;min\u0026quot;,\u0026quot;max\u0026quot;)) # ❓為甚麼錯誤 # 🏷👏因為這裡說返回值是長度為2的字串向量 \rr1\r#\u0026gt; x1 x2\r#\u0026gt; [1,] 3 1\r#\u0026gt; [2,] 3 6\rr2\r#\u0026gt; x1 x2\r#\u0026gt; min 3 1\r#\u0026gt; max 3 6\r vapply練習❓ 想要列出每個欄位的類別,以內建資料集mtcars 作為練習。\nfieldType\u0026lt;-vapply(mtcars,class,character(1))\rprint(fieldType)\r \rmpg cyl disp hp drat wt qsec vs \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot; am gear carb \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot;  提示\r mapply函數 函數定義：\nmapply(FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE,USE.NAMES = TRUE)\r 參數列表：\n FUN: 自定義的調用函數 …: 接收多個數據 MoreArgs: 參數列表 SIMPLIFY: 是否轉矩陣，當值array時，輸出結果按數組進行分組 USE.NAMES: 如果X為字符串，TRUE設置字符串為數據名，FALSE不設置   如果Fun=f(x)，則 mapply(f,a1,a2)的執行是：\nf(a1), f(a2) 如果Fun=f(x,y)，則 mapply(f,a1,a2)的執行是：\nf(a1, a2)  比如，比較3個向量大小，按索引順序取較大的值。\nset.seed(1)\r# 定義3個向量\rx\u0026lt;-1:10\ry\u0026lt;-5:-4\rz\u0026lt;-round(runif(10,-5,5))\r# 按索引順序取較大的值。\rmapply(max,x,y,z)\r#\u0026gt; [1] 5 4 3 4 5 6 7 8 9 10\r 再看一個例子，生成4個符合正態分佈的數據集，分別對應的均值和方差為c(1,10,100,1000)。\nset.seed(1)\r# 長度為4\rn\u0026lt;-rep(4,4)\r# m為均值，v為方差\rm\u0026lt;-v\u0026lt;-c(1,10,100,1000)\r# 生成4組數據，按列分組\rmapply(rnorm,n,m,v)\r#\u0026gt; [,1] [,2] [,3] [,4]\r#\u0026gt; [1,] 0.3735462 13.295078 157.57814 378.7594\r#\u0026gt; [2,] 1.1836433 1.795316 69.46116 -1214.6999\r#\u0026gt; [3,] 0.1643714 14.874291 251.17812 2124.9309\r#\u0026gt; [4,] 2.5952808 17.383247 138.98432 955.0664\r tapply函數 tapply用於分組的循環計算，通過INDEX參數可以把數據集X進行分組，相當於group by的操作。\n函數定義：\ntapply(X, INDEX, FUN = NULL, ..., simplify = TRUE)\r 參數列表：\n X: 向量 INDEX: 用於分組的索引 FUN: 自定義的調用函數 …: 接收多個數據 simplify : 是否數組化，當值array時，輸出結果按數組進行分組  比如，計算不同品種的鳶尾花的花瓣(iris)長度的均值。\n# 通過iris$Species品種進行分組\rtapply(iris$Petal.Length,iris$Species,mean)\r#\u0026gt; setosa versicolor virginica #\u0026gt; 1.462 4.260 5.552\r 分組求和的範例。\nset.seed(1)\rx\u0026lt;-1:10\r# 亂術分成3組，分別是0,1,2 t\u0026lt;-round(runif(10,1,100)%%2);t\r#\u0026gt; [1] 1 2 2 1 1 2 1 0 1 1\r# 對x進行分組求和\rtapply(x,t,sum)\r#\u0026gt; 0 1 2 #\u0026gt; 8 36 11\r rapply函數 eapply函數 函數定義：\neapply(env, FUN, ..., all.names = FALSE, USE.NAMES = TRUE)\r 練習：\n1 把iris 每個欄位的加總列出 iris 有一個欄位是factor\n範例 將每個rmd檔案中需要的函數庫列表 #setwd(~/directory1/)\rlibs = lapply(list.files(pattern = \u0026quot;\\\\.Rmd$\u0026quot;),\rfunction(x){\rd = readLines(x)\rd = d[grepl(\u0026quot;library\\\\(.*\\\\)\u0026quot;, d)]\rgsub(\u0026quot;library\\\\((.*)\\\\)\u0026quot;, \u0026quot;\\\\1\u0026quot;, d)\r})\runique(unlist(libs))\r note:\ngrepl :　邏輯值\ngsub :　只拿取library(\u0026quot;函數庫名稱\u0026quot;)中的\u0026quot;函數庫名稱\u0026quot;。\n"},
{"uri": "/blogR//rlang/9_plot01.html","title": "9. Plot 01",
	"tags": [],
	"description": "基本繪圖",
	"content": "提點和參考 Quick R\nbasic 一般視窗作業系統的繪圖，會有一個抽象物件device在這個device上，有一個抽象物件canvas，和繪圖工具例如，水彩筆之類的抽象物件可以指定顏色，線條粗細等等。 在R中,對應上述作業系統的關鍵字.Devices(paired list)、.Device(長度為1)、dev.cur(目前的裝置active device)。這裡說的Device指的是視窗。在視窗裡面的畫布,就是R提供的繪圖函數輸出所在,例如plot(),hist()等等。\n所以dev.new() 指的是開啟新視窗，dev.cur是目前視窗號碼,dev.prev()前一個視窗號碼。 而plot.new() 則是新增畫布。見練習\n㊙️ 怎樣快速查詢？\n ??draw ?plot : 參考其中的plot.default 查看圖形選項  函數plot() 可能最常用的繪圖函數就是plot(),而這個函數比較常用的選項有：\n type: 僅分佈點（預設）是否連線等基本模板。 lty: 線條樣式line style lwd: 線條寬度line width col: pch: mark   type description     p points   l lines   o 重合的點和線段   b, c b(both) 點+線,不重合 (如果是\u0026quot;c\u0026quot; 則沒有點)   s, S stair steps   h histogram-like vertical lines   n does not produce any points or lines     資料點 符號\n設定樣本點的符號,可以用 pch (\u0026quot;point character\u0026quot;).\npch 的值除了從 0 到 24 共25個符號外，還有 \u0026quot;*\u0026quot;, \u0026quot;+\u0026quot;, \u0026quot;o\u0026quot;, \u0026quot;@\u0026quot;, \u0026quot;#\u0026quot; 可以用。\n pch=0 square\rpch=1 circle\rpch=2 triangle point up\rpch=3 plus\rpch=4 cross\rpch=5 diamond\rpch=6 triangle point down\rpch=7 square cross\rpch=8 star\rpch=9 diamond plus\rpch=10 circle plus\rpch=11 triangles up and down\rpch=12 square plus\rpch=13 circle cross\rpch=14 square and triangle down\rpch=15 filled square blue\rpch=16 filled circle blue\rpch=17 filled triangle point up blue\rpch=18 filled diamond blue\rpch=19 solid circle blue\rpch=20 bullet (smaller circle)\rpch=21 filled circle red\rpch=22 filled square red\rpch=23 filled diamond red\rpch=24 filled triangle point up red\rpch=25 filled triangle point down red\r cex 資料點大小\ncex 用來放大文字或符號的倍數\n因此, cex = 1 is default size\ncex = 1.5 is 150% of default size\ncex = 0.5 is 50% of default size\n[Note : cex.axis --\u0026gt; scales the axis\ncex.lab ---\u0026gt; scales the label\ncex.main --\u0026gt; scales main title\ncex.sub ---\u0026gt; scales the subtitle ]\n線條型態\n lty = 0 or lty = \u0026quot;blank\u0026quot;\rlty = 1 or lty = \u0026quot;solid\u0026quot;\rlty = 2 or lty = \u0026quot;dashed\u0026quot;\rlty = 3 or lty = \u0026quot;dotted\u0026quot;\rlty = 4 or lty = \u0026quot;dotdash\u0026quot;\rlty = 5 or lty = \u0026quot;longdash\u0026quot;\rlty = 6 or lty = \u0026quot;twodash\u0026quot;\r 參考後節 顏色 col\ncol = \u0026quot;blue\ncol = \u0026quot;red\u0026quot;\ncol 後的值,可用colors() 來查詢顏色,會傳回 657 代表顏色的參數。或者也可以直接用16進位數字，例如\ncol = \u0026quot;#A9F3BB\u0026quot; ------\u0026gt; colour corresponding to Red=A9, Green=F3, Blue=BB in hexadecimal representation.\n\r\rpar(def.par) #\u0026gt; Warning in par(def.par): 無法設定繪圖參數 \u0026quot;cin\u0026quot;\r#\u0026gt; Warning in par(def.par): 無法設定繪圖參數 \u0026quot;cra\u0026quot;\r#\u0026gt; Warning in par(def.par): 無法設定繪圖參數 \u0026quot;csi\u0026quot;\r#\u0026gt; Warning in par(def.par): 無法設定繪圖參數 \u0026quot;cxy\u0026quot;\r#\u0026gt; Warning in par(def.par): 無法設定繪圖參數 \u0026quot;din\u0026quot;\r#\u0026gt; Warning in par(def.par): 無法設定繪圖參數 \u0026quot;page\u0026quot;\r 繪製向量 中的資料\nx \u0026lt;- c(1,3,4,7,8,9)\ry \u0026lt;- c(0,3,6,9,7,8)\rplot(x,y,main='plot(x,y)')\r 繪製data.frame 中的資料\nplot(mtcars$wt, mtcars$mpg) abline(lm(mtcars$mpg~mtcars$wt))\rtitle(\u0026quot;Regression of MPG on Weight\u0026quot;)\r 如果不想要打$字號,則用attach()\nattach(mtcars)\rplot(wt, mpg) abline(lm(mpg~wt))\rtitle(\u0026quot;Regression of MPG on Weight\u0026quot;)\r plot()函數，新建視窗然後畫出 weight vs. miles per gallon.\nabline() 不會開啟新視窗做圖，abline()的語法如下:\nabline(a = NULL, b = NULL, h = NULL, v = NULL, reg = NULL,coef = NULL, untf = FALSE, …)\n代表的意思是畫出一條直線a+bx ，其中a代表截距常數，b則是斜率常數。例如\n Y=2X+1，則對應的函數為 abline(a=1,b=2) 。 abline(h=3),水平線 abline(v=2) 垂直  函數畫圖\nx: -pi ~ 2*pi y: sin(x)\nplot(sin, -pi, 2*pi)  line() 範例 require(stats) # for lowess, rpois, rnorm\rsummary(cars)\r#\u0026gt; speed dist #\u0026gt; Min. : 4.0 Min. : 2.00 #\u0026gt; 1st Qu.:12.0 1st Qu.: 26.00 #\u0026gt; Median :15.0 Median : 36.00 #\u0026gt; Mean :15.4 Mean : 42.98 #\u0026gt; 3rd Qu.:19.0 3rd Qu.: 56.00 #\u0026gt; Max. :25.0 Max. :120.00\rplot(cars)\rlines(lowess(cars)) #🏷疊上額外的線條 \r  LOWESS, locally weighted scatter plot smoothing。 相關閱讀\n attach(cars)\rplot(speed,dist,main=\u0026quot;Stopping Distance\u0026quot;, xlab=\u0026quot;Speed\u0026quot;, ylab=\u0026quot;Distance\u0026quot;, pch=21, bg=2, col=2)\rlines(lowess(cars, f=.3),col =1)\rlines(lowess(cars, f=.5),col =4)\rlines(lowess(cars, f=.1),col =7)\r scatterplot() 範例 範例\nif(!require(\u0026quot;car\u0026quot;))\rinstall.packages(\u0026quot;car\u0026quot;,repos=\u0026quot;http://cran.us.r-project.org\u0026quot;) # 🏷scatterplot 在這個套件中  #\u0026gt; 載入需要的套件：car\r#\u0026gt; 載入需要的套件：carData\rlibrary(car)\rscatterplot(wt ~ mpg, data = mtcars)\r  綠線: 回歸線 紅色虛線:the smoothed conditional spread 紅色實線:the non-parametric regression smooth  scatterplot(wt ~ mpg, data = mtcars, smooth = FALSE, grid = FALSE, frame = FALSE)\r Histograms 函數hist(x)：其中x是一個數字向量，\n 選項freq=FALSE 用來畫出 probability densities 而不是次數 frequencies. 選項：breaks= ## 則是控制分成幾份。  Simple Histogram\nhist(mtcars$mpg)\r 分成12份，顏色紅色。\nhist(mtcars$mpg, breaks=12, col=\u0026quot;red\u0026quot;)\r 自行給定分割點\nhist(mtcars$mpg, breaks=c(4,5,12,50), col=\u0026quot;red\u0026quot;)\r Add a Normal Curve Histograms can be a poor method for determining the shape of a distribution because it is so strongly affected by the number of bins used.\nx \u0026lt;- mtcars$mpg h\u0026lt;-hist(x, breaks=10, col=\u0026quot;red\u0026quot;, xlab=\u0026quot;Miles Per Gallon\u0026quot;, main=\u0026quot;Histogram with Normal Curve\u0026quot;) xfit\u0026lt;-seq(min(x),max(x),length=40) yfit\u0026lt;-dnorm(xfit,mean=mean(x),sd=sd(x)) yfit \u0026lt;- yfit*diff(h$mids[1:2])*length(x) #🏷length(X)是個數,不是長度 \rlines(xfit, yfit, col=\u0026quot;blue\u0026quot;, lwd=2)\r hint: h: 次數分配圖,又\n$$ pdf = \\frac{機率}{長度} =\\frac{\\frac{n}{N}}{bin \\quad width} $$\n所以\n$$ n=pdf\\times N \\times (bin \\quad width) $$\nh\r#\u0026gt; $breaks\r#\u0026gt; [1] 10 12 14 16 18 20 22 24 26 28 30 32 34\r#\u0026gt; #\u0026gt; $counts\r#\u0026gt; [1] 2 1 7 3 5 5 2 2 1 0 2 2\r#\u0026gt; #\u0026gt; $density\r#\u0026gt; [1] 0.031250 0.015625 0.109375 0.046875 0.078125 0.078125 0.031250 0.031250\r#\u0026gt; [9] 0.015625 0.000000 0.031250 0.031250\r#\u0026gt; #\u0026gt; $mids\r#\u0026gt; [1] 11 13 15 17 19 21 23 25 27 29 31 33\r#\u0026gt; #\u0026gt; $xname\r#\u0026gt; [1] \u0026quot;x\u0026quot;\r#\u0026gt; #\u0026gt; $equidist\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; attr(,\u0026quot;class\u0026quot;)\r#\u0026gt; [1] \u0026quot;histogram\u0026quot;\r Kernel Density Plot 核密度畫圖(Kernal density plots) 用來觀察一個變量，比較有有效率，指令如：plot(density(x)) 其中x 是一個數字向量。\nd \u0026lt;- density(mtcars$mpg) # returns the density data plot(d) # plots the results\r Filled Density Plot d \u0026lt;- density(mtcars$mpg)\rplot(d, main=\u0026quot;Kernel Density of Miles Per Gallon\u0026quot;)\rpolygon(d, col=\u0026quot;red\u0026quot;, border=\u0026quot;blue\u0026quot;)\r 多個圖和疊圖 傻瓜指令例如 (plot, hist, boxplot, etc.)基本上會開啟新視窗，然後畫圖,而line(),scatterplot()則是疊圖。這裡另外看看幾種自行控制的方法：\n多視窗(multiple windows)、組合圖(combining figure) 和疊圖(overlay)討論。\n多視窗 開多視窗的方法根據OS而不同，如下：\n   Function Platform     windows() Windows   X11() Unix   quartz() Mac    要關閉視窗，可以用函數dev.off()\n如果要知道目前的視窗是那一個，可以參考 dev.cur()。 Note: 如果目前有多個圖窗，則一直呼叫這個函數dev.off()，會依次關閉視窗，直到函數傳回NULL。\n驗證上面的說法可以利用\nhist(mtcars$mpg)\rdev.cur()\r#\u0026gt; png #\u0026gt; 2\rhist(mtcars$mpg)\rdev.cur()\r#\u0026gt; png #\u0026gt; 2\rdev.off()\r#\u0026gt; null device #\u0026gt; 1\r ❓上面的範例，可以看到圖裝置的編號都是2，也就是多個圖在一個視窗上。這是因為在Rmakdown中,視窗都是預設的裝置,方便整合到最後的文件中,如果在rscript中,則dev.cur()會顯示兩個編號。\n討論下面的輸出結果，：\n比較程式碼在rmarkdown和console中執行的結果？\nif(.Platform$OS.type==\u0026quot;windows\u0026quot;) windows() else X11()\rhist(mtcars$mpg)\rdev.cur()\rif(.Platform$OS.type==\u0026quot;windows\u0026quot;) windows() else X11()\rhist(mtcars$mpg)\rdev.cur()\r 提示\r 在rscript✔中執行正常。\r⛳**測試,練習**  plot.new() # 同一個視窗，新增圖層\rdev.new() #新視窗\rplot(1:1)\rdev.new()\rplot(2,2)\rdev.set(dev.prev()) # go back to first\rtitle(main=\u0026quot;test dev 1\u0026quot;)\rdev.set(dev.next()) # go to second\rtitle(main=\u0026quot;test dev 2\u0026quot;)\r 合併 Plots par() about par() 同時顯示多個plot的結果，可以利用函數par() or layout( )。\n函數par( )的選項有：\nmfrow=c(nrows, ncols) 填plot的方向為橫行(matrix flow by row)。\nmfcol=c(nrows, ncols) 填入的方向為直行。\n在console執行(課堂執行)\ndef.par\u0026lt;-par() # 🏷將目前的參數存到def.par \rdef.par$mfrow\rdef.par\u0026lt;-par(mfrow=c(1,3))\rdef.par$mfrow\rpar()$mfrow # 目前的設定\rpar(def.par) # 還原\r x\u0026lt;-par() 會把目前的參數拿出存到變數x。 如果par() 放了參數,會在設定完新參數以後，傳回舊紀錄(一個原因是,便於以後再還原)。在這個過程中，有些參數是無法修改的，因此\nop \u0026lt;- par(no.readonly = TRUE) # 🏷op現在放的是所有可以修改的參數和參數值。 \r... (操作)\rpar(op) # 🏷重設 \r no.readonly=T是說不要唯讀參數\r\r\r⛳線條形式`type`的幾種基本類型範例  x \u0026lt;- c(1,3,4,7,8,9)\ry \u0026lt;- c(0,3,6,9,7,8)\rpar(mfrow=c(2,3))\rplot(x,y,main='plot(x,y)',color=\u0026quot;red\u0026quot;)\r#\u0026gt; Warning in plot.window(...): \u0026quot;color\u0026quot; 不是一個繪圖參數\r#\u0026gt; Warning in plot.xy(xy, type, ...): \u0026quot;color\u0026quot; 不是一個繪圖參數\r#\u0026gt; Warning in axis(side = side, at = at, labels = labels, ...): \u0026quot;color\u0026quot; 不是一個繪\r#\u0026gt; 圖參數\r#\u0026gt; Warning in axis(side = side, at = at, labels = labels, ...): \u0026quot;color\u0026quot; 不是一個繪\r#\u0026gt; 圖參數\r#\u0026gt; Warning in box(...): \u0026quot;color\u0026quot; 不是一個繪圖參數\r#\u0026gt; Warning in title(...): \u0026quot;color\u0026quot; 不是一個繪圖參數\rplot(x,y,type=\u0026quot;l\u0026quot;,main=\u0026quot;plot(x,y,type='l')\u0026quot;,color=\u0026quot;green\u0026quot;)\r#\u0026gt; Warning in plot.window(...): \u0026quot;color\u0026quot; 不是一個繪圖參數\r#\u0026gt; Warning in plot.xy(xy, type, ...): \u0026quot;color\u0026quot; 不是一個繪圖參數\r#\u0026gt; Warning in axis(side = side, at = at, labels = labels, ...): \u0026quot;color\u0026quot; 不是一個繪\r#\u0026gt; 圖參數\r#\u0026gt; Warning in axis(side = side, at = at, labels = labels, ...): \u0026quot;color\u0026quot; 不是一個繪\r#\u0026gt; 圖參數\r#\u0026gt; Warning in box(...): \u0026quot;color\u0026quot; 不是一個繪圖參數\r#\u0026gt; Warning in title(...): \u0026quot;color\u0026quot; 不是一個繪圖參數\rplot(x,y,type=\u0026quot;b\u0026quot;,main=\u0026quot;plot(x,y,type='b')\u0026quot;)\rplot(x,y,type=\u0026quot;o\u0026quot;,main=\u0026quot;plot(x,y,type='o')\u0026quot;)\rplot(x,y,type=\u0026quot;s\u0026quot;,main=\u0026quot;plot(x,y,type='s')\u0026quot;)\rplot(x,y,type=\u0026quot;h\u0026quot;,main=\u0026quot;plot(x,y,type='h')\u0026quot;)\r 範例\nattach(mtcars)\rpar(mfrow=c(2,2))\rplot(wt,mpg, main=\u0026quot;Scatterplot of wt vs. mpg\u0026quot;)\rplot(wt,disp, main=\u0026quot;Scatterplot of wt vs disp\u0026quot;)\rhist(wt, main=\u0026quot;Histogram of wt\u0026quot;)\rboxplot(wt, main=\u0026quot;Boxplot of wt\u0026quot;)\r # attach(mtcars)\rpar(mfrow=c(1,3)) hist(wt)\rhist(mpg)\rhist(disp)\r#dev.off()\r note: par(mar) 列出margin\npar(mar=c(1,1,1,1)) 更動margin\nplot.new()常發生的錯誤 : figure margins too large\n有兩個原因：1 是畫布過小 2，當前畫布的上下左右距離過大 這裡看看如何解第二個發生原因\n默認的畫布上邊款的距離為： 預設為 c(5, 4, 4, 2) + 0.1. 對應 c(bottom, left, top, right)，也就是順時針，由下到右結束一圈。\n我們可以將其設置為0，同時將目前的設定紀錄，後面程式的第一行\nop \u0026lt;- par(mar = rep(0, 4)) # op 會紀錄之前的margin = 5.1 4.1 4.1 2.1 plot.new() # 畫圖 par(op) # 改回原先的margin  \r\r是不是有需要寫個新函數，用來重設裝置參數？ 下面這個函數resetPar()產生新的重設參數,用來將device回復成原先的設定值:\n主要看這一行:par(no.readonly = TRUE)。 意思是說，不要傳回 readonly的設定。\nresetPar \u0026lt;- function() {\rdev.new() #重新開始一個裝置\rop \u0026lt;- par(no.readonly = TRUE)#因為是新的，所以裡面的設定都是預設值\rdev.off()# 只是把之前的新裝置關掉\rop # 傳回預設值\r}\r# 使用方法\rpar(resetPar)\r 提要\npar() # view current settings opar \u0026lt;- par() # make a copy of current settings par(col.lab=\u0026quot;red\u0026quot;) # red x and y labels hist(mtcars$mpg) # create a plot with these new settings par(opar) #回復原來的設定\r \r\r更多的圖形控制: 在散佈圖中加入boxplot\n# windows圖的座標，左下角(0,0)右上角(1,1)\rpar(mar=rep(2,4)) #設定margin\rpar(fig=c(0,0.8,0,0.8)) #🏷X軸從0到0.8,Y軸也是。因此，左下(0,0)右上(0.8,0.8) # 🏷左下(x1,y1)右上(x2,y2) =\u0026gt; c(x1,x2,y1,y2)  plot(mtcars$wt, mtcars$mpg, xlab=\u0026quot;Car Weight\u0026quot;,ylab=\u0026quot;Miles Per Gallon\u0026quot;)\rpar(fig=c(0,0.8,0.55,1), new=TRUE) #🏷同一個圖,因為沒有設定dev.new \rboxplot(mtcars$wt, horizontal=TRUE, axes=FALSE)\rpar(fig=c(0.65,1,0,0.8),new=TRUE)\rboxplot(mtcars$mpg, axes=FALSE)\rmtext(\u0026quot;Enhanced Scatterplot\u0026quot;, side=3, outer=TRUE, line=-3)\r RMD 中的圖 並排顯示圖形(參考):\n```{r out.width=c('50%', '50%') , fig.show='hold'}\rboxplot(1:10)\rplot(rnorm(10))\r```\r 執行結果\r\r\r練習 練習1\n讓下面兩個圖重疊\nboxplot(mtcars$wt, axes=FALSE)\rpar(new=TRUE)\rboxplot(mtcars$mpg, axes=FALSE)\r 練習2\n讓disp,mpg 的histogram 疊在一起:\n練習3\n測試這篇文章\nlayout() 函數 layout( ) 的使用方法為\tlayout(mat) 其中 mat 的元素用來指定圖形號碼。例如分成4個格子,順序為左右上下(byrow=TRUE)\n如layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE)) 對應如下表\n         1 1   2 3    # One figure in row 1 and two figures in row 2\r#attach(mtcars)\rlayout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))\rhist(wt)\rhist(mpg)\rhist(disp)\r#dev.off()\r 在layout()函數中，也可以更改圖形大小，其參數 為： widths= 數字向量，用來代表column 寬度 heights= 數字向量，用來代表row 高度\nnote:Relative widths are specified with numeric values. Absolute widths (in centimetres) are specified with the lcm() function.\n疊圖 有些繪圖指令的選項，可以利用add=T。\n💥 plot指令不支援add=T\ncurve( dnorm(x,0,1), -5 , 5, lwd=1, lty=1)\rcurve( dnorm(x,0,2), add=TRUE, lwd=2, lty=2)\rcurve( dnorm(x,0,3) , add=TRUE, lwd=3, lty=3)\r# Add the legend\rlegend( \u0026quot;topright\u0026quot;,c(\u0026quot;sigma=1\u0026quot;,\u0026quot;sigma=2\u0026quot;,\u0026quot;sigma=3\u0026quot;) , lwd=1:3, lty=1:3)\r 分組畫圖 Comparing Groups VIA Kernal Density The sm.density.compare( ) function in the sm package allows you to superimpose the kernal density plots of two or more groups. The format is sm.density.compare(x, factor) where x is a numeric vector and factor is the grouping variable.\nCompare MPG distributions for cars with 4,6, or 8 cylinders library(sm)\rattach(mtcars)\r#create value labels cyl.f \u0026lt;- factor(cyl, levels= c(4,6,8),\rlabels = c(\u0026quot;4 cylinder\u0026quot;, \u0026quot;6 cylinder\u0026quot;, \u0026quot;8 cylinder\u0026quot;)) #plot densities sm.density.compare(mpg, cyl, xlab=\u0026quot;Miles Per Gallon\u0026quot;)\rtitle(main=\u0026quot;MPG Distribution by Car Cylinders\u0026quot;)\r#add legend via mouse click\rcolfill\u0026lt;-c(2:(2+length(levels(cyl.f)))) legend(locator(1), levels(cyl.f), fill=colfill)\r "},
{"uri": "/blogR//rlang/11_00_sampling.html","title": "11. sampling",
	"tags": [],
	"description": "基本抽樣",
	"content": "Sample and Distribution 01 N\u0026lt;-100\rpop\u0026lt;-rnorm(N,5,2)\rrndno\u0026lt;-as.integer(runif(N)*N)+1\rsmp\u0026lt;-pop[rndno]\rss\u0026lt;-summary(smp)\rs1\u0026lt;-hist(smp)\rrug(quantile(smp), col=2, lwd=2.5)\rplot(s1$mids,s1$density,type=\u0026quot;s\u0026quot;) #quiz:barplot??\rs2\u0026lt;-hist(pop)\rplot(s1,col=\u0026quot;red\u0026quot;)\rlines(s2,col=\u0026quot;blue\u0026quot;)  內建隨機抽樣 函數sample(x,n,replace=FALSE ). 其中x為要抽取的向量, n為樣本容量. replace 預設為false\n no replacement, 等機率:  例如從52張撲克牌中抽取5張:\nsample(1:52, 5)\r#\u0026gt; [1] 15 7 10 12 23\r replacement: 例如拋一枚均勻的硬幣10次  sample(c(\u0026quot;H\u0026quot;, \u0026quot;T\u0026quot;), 10, replace=T)\r#\u0026gt; [1] \u0026quot;T\u0026quot; \u0026quot;H\u0026quot; \u0026quot;T\u0026quot; \u0026quot;H\u0026quot; \u0026quot;T\u0026quot; \u0026quot;T\u0026quot; \u0026quot;H\u0026quot; \u0026quot;T\u0026quot; \u0026quot;T\u0026quot; \u0026quot;H\u0026quot;\r 練習:一棵骰子擲10次可表示為:\n不等可能的隨機抽樣: sample(x, n, replace=TRUE, prob=y) prob=y指定x中元素出現的概率, 向量y與x等長度. 例如一娃娃機取出成功的概率為0.6, 那麼10次的試驗為:  sample(c(\u0026quot;sucess\u0026quot;, \u0026quot;fail\u0026quot;), 10, replace=T, prob=c(0.6,0.4))\r#\u0026gt; [1] \u0026quot;sucess\u0026quot; \u0026quot;sucess\u0026quot; \u0026quot;fail\u0026quot; \u0026quot;sucess\u0026quot; \u0026quot;sucess\u0026quot; \u0026quot;fail\u0026quot; \u0026quot;fail\u0026quot; \u0026quot;sucess\u0026quot;\r#\u0026gt; [9] \u0026quot;sucess\u0026quot; \u0026quot;fail\u0026quot;\r 排列組合與概率的計算 例 從一副52張撲克中取4張, 求以下事件的概率:\n 抽取的4張依次為紅心A，方塊A，黑桃A和梅花A的概率; 一次抽取4張為紅心A，方塊A，黑桃A和梅花A的概率.  解\n 抽取的4張是有次序的, 因此使用排列來求解. 所求的事件(記為A)概率為 ($P(A)=\\frac{1}{52 \\times 51 \\times 50 \\times 49}$) 利用R函數  1/prod(52:49)\r#\u0026gt; [1] 1.539077e-07\r 沒有次序的, 可以使用組合數來求解.  $$ P(B)=\\frac{1}{(52,4)} $$\n其中 ($(n,m)=\\frac{n!}{m!(n-m)!}$),可以利用函數choose(),例如\n1/choose(52,4)\r#\u0026gt; [1] 3.693785e-06\r distribution 標準表格上下沒有線條,左右有\n   名稱 R函數 選項     beta beta shape1, shape2   binomial binom size, prob   Cauchy cauchy location=0, scale=1   chi-sqaured ($\\chi^2$) chisq df, ncp   exponential exp rate   Fisher (F) f df1, df2, ncp   gamma gamma shape, scale=1   geometric geom prob   hypergeometric hyper m, n, k   lognormal lnorm meanlog=0, sdlog=1   logistic logis location=0, scale=1   multinomial multinom size, prob   normal norm mean=0, sd=1   negative binomial nbinom size, prob   Poisson pois lambda   Student’s (t) t df   uniform unif min=0, max=1   Weibull weibull shape, scale=1   Wilcoxon’s statistics wilcox m, n    signrank n    對於所給的分佈名稱，有四類。\n以func為例， 四類函數的對應為:\n 「d」概率密度函數: dfunc(x, p1, p2, ...), x為數值向量; 「p」(累積)分佈函數: pfunc(q, p1, p2, ...), q為數值向量; 「q」分位數函數: qfunc(p, p1, p2, ...), p為由概率構成的向量; 「r」隨機數函數: rfunc(n, p1, p2, ...), n為生成數據的個數  這四類函數的第一個參數是有規律的: 形為dfunc的函數為x，pfunc的函數為q，qfunc的函數為p，rfunc的函數為n\nnote: (但rhyper和rwilcox是特例，他們的第一個參數為nn). 非中心參數(non-centrality parameter)僅對CDF和 少數其它幾個函數有效.\n$$ \\frac{{\\sum\\limits_{i = 1}^n {{x_i} - n\\mu } }}{{\\sqrt {n{\\sigma ^2}} }} \\sim N(0,1) $$\n$$ \\bar X = \\frac{{\\sum_{i = 1}^n {{x_i} } }}{n} \\sim N(\\mu, \\sigma^2/n) $$\nuniform a~b\n$$\\mu = (a+b)/2$$\n$$\\sigma^2=\\frac{(b-a)^2}{12} $$\ndata的每一個ROW有sample size (=i=column)\n共1000次(=N=row)\nN=1000 i=3 #sample size\rmu=0.5\rsigma=1/sqrt(12)\rdata\u0026lt;-matrix(runif(i*N),ncol=i)\rrs\u0026lt;-rowSums(data)\rrs\u0026lt;-rs/i\rz\u0026lt;-(rs-mu)/(sigma/sqrt(i))\rhist(z)\rlines(density(z), col = 'red', lwd = 3)\rx\u0026lt;-z\rcurve(dnorm(x), col = 'blue', lwd = 3, lty = 3, add = T)\rrug(sample(z,100))\r limite.central \u0026lt;-\rfunction (r = runif, distpar = c(0, 1), m = .5, s = 1 / sqrt(12), n = c(1, 3, 10, 30), N = 1000) {\rfor (i in n) {\rif (length(distpar) == 2) {\rx \u0026lt;-matrix(r(i * N, distpar[1], distpar[2]), nc = i)\r} else {\rx \u0026lt;-matrix(r(i * N, distpar), nc = i)\r}\rx \u0026lt;-(apply(x, 1, sum) - i * m) / (sqrt(i) * s)\rhist(x, col = 'light blue', probability = T, main = paste(\u0026quot;n=\u0026quot;, i),\rylim = c(0, max(.4, density(x) $y)))\rlines(density(x), col = 'red', lwd = 3)\rcurve(dnorm(x), col = 'blue', lwd = 3, lty = 3, add = T)\rif (N \u0026gt; 100) {\rrug(sample(x, 100))\r} else {\rrug(x)\r}\r}\r}\rop \u0026lt;- par(mfrow=c(2,2))\rlimite.central(rbinom, distpar=c(10 ,0.1), m=1, s=0.9)\rpar(op)\r  apply(x,1,sum) 第2個參數1表示row 方向,如果是2表示column 和matlab 相反。  "},
{"uri": "/blogR//rlang/13_0_eco_01_intro.html","title": "13. Econometrics",
	"tags": [],
	"description": "基本計量",
	"content": "package recommended package foreign 可以用來導入外部資料例如，\n stata 的資料 dta, SPSS SAS Systat Mini tab . mtp  利用foreign讀入stata 的資料檔：\nrequire(foreign)\r#\u0026gt; 載入需要的套件：foreign\raffairs\u0026lt;- read.dta(\u0026quot;http://fmwww.bc.edu/ec-p/data/wooldridge/affairs.dta\u0026quot;)\rsave(affairs,file='./resources/affairs.RData')\r 測試\nrm(affairs)\rload('./resources/affairs.RData')\rhead(affairs)\r#\u0026gt; id male age yrsmarr kids relig educ occup ratemarr naffairs affair vryhap\r#\u0026gt; 1 4 1 37 10.0 0 3 18 7 4 0 0 0\r#\u0026gt; 2 5 0 27 4.0 0 4 14 6 4 0 0 0\r#\u0026gt; 3 6 1 27 1.5 0 3 18 4 4 3 1 0\r#\u0026gt; 4 11 0 32 15.0 1 1 12 1 4 0 0 0\r#\u0026gt; 5 12 0 27 4.0 1 3 17 1 5 3 1 1\r#\u0026gt; 6 16 1 57 15.0 1 5 18 6 5 0 0 1\r#\u0026gt; hapavg avgmarr unhap vryrel smerel slghtrel notrel\r#\u0026gt; 1 1 0 0 0 0 1 0\r#\u0026gt; 2 1 0 0 0 1 0 0\r#\u0026gt; 3 1 0 0 0 0 1 0\r#\u0026gt; 4 1 0 0 0 0 0 0\r#\u0026gt; 5 0 0 0 0 0 1 0\r#\u0026gt; 6 0 0 0 1 0 0 0\r "},
{"uri": "/blogR//rlang/14_00_sim_1.html","title": "14. simulation 1",
	"tags": [],
	"description": "基本模擬",
	"content": "basic dnorm : PDF pnorm : CDF qnorm : inverse CDF rnorm : random\ncdf z_scores \u0026lt;- seq(-3, 3, by = .1)\rpvalues \u0026lt;- pnorm(z_scores)\r# Now we'll plot these values\rplot(pvalues, # Plot where y = values and x = index of the value in the vector\rxaxt = \u0026quot;n\u0026quot;, # Don't label the x-axis\rtype = \u0026quot;l\u0026quot;, # Make it a line plot\rmain = \u0026quot;cdf of the Standard Normal\u0026quot;,\rxlab= \u0026quot;Quantiles\u0026quot;,\rylab=\u0026quot;Probability Density\u0026quot;) # These commands label the x-axis\raxis(1, at=which(pvalues == pnorm(-2)), labels=round(pnorm(-2), 2))\raxis(1, at=which(pvalues == pnorm(-1)), labels=round(pnorm(-1), 2))\raxis(1, at=which(pvalues == pnorm(0)), labels=c(.5))\raxis(1, at=which(pvalues == pnorm(1)), labels=round(pnorm(1), 2))\raxis(1, at=which(pvalues == pnorm(2)), labels=round(pnorm(2), 2))\r 👍 axis下左上又(1,2,3,4) 第2個參數用的是要顯示的號碼值,對樣每個樣本點。 如果是x,y plot這個axis()無作用,這裡只用到Y。\npdf z_scores \u0026lt;- seq(-3, 3, by = .1)\rdvalues \u0026lt;- dnorm(z_scores)\rplot(dvalues, # Plot where y = values and x = index of the value in the vector\rxaxt = \u0026quot;n\u0026quot;, # Don't label the x-axis\rtype = \u0026quot;l\u0026quot;, # Make it a line plot\rmain = \u0026quot;pdf of the Standard Normal\u0026quot;,\rxlab= \u0026quot;Z-score\u0026quot;) # These commands label the x-axis\raxis(1, at=which(dvalues == dnorm(0)), labels=c(0))\raxis(1, at=which(dvalues == dnorm(1)), labels=c(-1, 1))\raxis(1, at=which(dvalues == dnorm(2)), labels=c(-2, 2))\r pnorm pnorm(2) ## [1] 0.9772499\r#\u0026gt; [1] 0.9772499\rpnorm(2, mean = 5, sd = 3) ## [1] 0.1586553\r#\u0026gt; [1] 0.1586553\rpnorm(2, mean = 5, sd = 3, lower.tail = FALSE)\r#\u0026gt; [1] 0.8413447\r compare oldpar \u0026lt;- par()\rpar(mfrow=c(1,2))\rz_scores \u0026lt;- seq(-3, 3, by = .1)\rpvalues \u0026lt;- pnorm(z_scores)\rquantiles \u0026lt;- seq(0, 1, by = .05)\rqvalues \u0026lt;- qnorm(quantiles)\r# Plot the z_scores\rplot(qvalues,\rtype = \u0026quot;l\u0026quot;, # We want a line graph\rxaxt = \u0026quot;n\u0026quot;, # No x-axis\rxlab=\u0026quot;Probability Density\u0026quot;,\rylab=\u0026quot;Z-scores\u0026quot;)\r# Same pnorm plot from before\rplot(pvalues, # Plot where y = values and x = index of the value in the vector\rxaxt = \u0026quot;n\u0026quot;, # Don't label the x-axis\rtype = \u0026quot;l\u0026quot;, # Make it a line plot\rmain = \u0026quot;cdf of the Standard Normal\u0026quot;,\rxlab= \u0026quot;Quantiles\u0026quot;,\rylab=\u0026quot;Probability Density\u0026quot;) # These commands label the x-axis\raxis(1, at=which(pvalues == pnorm(-2)), labels=round(pnorm(-2), 2))\raxis(1, at=which(pvalues == pnorm(-1)), labels=round(pnorm(-1), 2))\raxis(1, at=which(pvalues == pnorm(0)), labels=c(.5))\raxis(1, at=which(pvalues == pnorm(1)), labels=round(pnorm(1), 2))\raxis(1, at=which(pvalues == pnorm(2)), labels=round(pnorm(2), 2))\r  qnorm(0.95) ? 一個標準差占了佔了多少百分比?  \r\r\rhint\r1. zscore of 95 percent 1. percent\u0026lt;-pnorm(1)-pnorm(-1) simulate 1    身高 女生 男生      1 0   平均 180 170   標準差 10 10    fn_num\u0026lt;-100\rfh\u0026lt;-rnorm(fn_num,180,10)\rfm\u0026lt;-rnorm(200-fn_num,170,10)\rheight\u0026lt;-c(fh,fm)\rsex\u0026lt;-c(rep(1,fn_num),rep(0,200-fn_num))\rr1\u0026lt;-tapply(height, sex,mean)\rr1\r#\u0026gt; 0 1 #\u0026gt; 169.8143 180.9832\r fn_num_set\u0026lt;-sample(1:199,1000,replace=T) #先抽出female的個數\rrst\u0026lt;-matrix(rep(0,2000),ncol=2) #每一次抽樣男生/女生的平均值\rfor(idx in 1:1000)\r{\rfn_num \u0026lt;-fn_num_set[idx]\rfh\u0026lt;-rnorm(fn_num,180,10)\rfm\u0026lt;-rnorm(200-fn_num,170,10)\rheight\u0026lt;-c(fh,fm)\rsex\u0026lt;-c(rep(1,fn_num),rep(0,200-fn_num))\rr1\u0026lt;-tapply(height, sex,mean)\rrst[idx,1]=r1[1]\rrst[idx,2]=r1[2]\r}\rsummary(rst)\r#\u0026gt; V1 V2 #\u0026gt; Min. :158.6 Min. :171.0 #\u0026gt; 1st Qu.:169.2 1st Qu.:179.3 #\u0026gt; Median :170.0 Median :180.0 #\u0026gt; Mean :170.0 Mean :180.0 #\u0026gt; 3rd Qu.:170.8 3rd Qu.:180.7 #\u0026gt; Max. :182.0 Max. :201.0\r 下面這個,好像在rmarkdown 畫不出來 unknown reason !!\nalist\u0026lt;-list(rst[,1],rst[,2])\rdinfo\u0026lt;-lapply(alist,density)\rt1\u0026lt;-sapply(dinfo,function(item){range(item$x)})\rrx\u0026lt;-range(t1)\rt2\u0026lt;-sapply(dinfo,function(item){range(item$y)})\rry\u0026lt;-range(t2)\rplot(dinfo[[1]], xlim = rx, ylim = ry, main = \u0026quot;\u0026quot;)\rfor(i in 1:length(dinfo)) {\rlines(dinfo[[i]], xlim = rx, ylim = ry, col = i)\r}  轉函數\n總體而言，轉成函數的考慮就是如何避免hard coding。\nplot.multi.density\u0026lt;-function (alist)\r{\rdinfo\u0026lt;-lapply(alist,density)#每組資料，求density\r# 每組資料的x範圍\rt1\u0026lt;-sapply(dinfo,function(item){range(item$x)})\rrx\u0026lt;-range(t1)\r# 每組資料的y範圍\rt2\u0026lt;-sapply(dinfo,function(item){range(item$y)})\rry\u0026lt;-range(t2)\rplot(dinfo[[1]],xlim = rx, ylim = ry, main = \u0026quot;\u0026quot;)\rfor(i in 1:length(dinfo)) {\rlines(dinfo[[i]],xlim = rx, ylim = ry, col = i)\r} }  討論：上面函數的限制？ 第一個限制，先看看有沒有預設組別\n問題：如果要加上區域顏色？ 簡單一點的話，可以用選項type=\u0026quot;h\u0026quot;, (plot, line兩個函數都吃)\n應用自己的函數\nalist\u0026lt;-list(rst[,1],rst[,2])\rplot.multi.density(alist)\r 上面的函數，預設參數是傳入使用者指定的list，裡面有使用者指定的組別 但是如果因為需要，發現傳入矩陣比較方便（例如每一個欄位代表每一組的模擬結果，那樣怎樣避免hard coding?\nelist\u0026lt;-vector(\u0026quot;list\u0026quot;,ncol(rst))#指定大小的list,如果空集合elist\u0026lt;-list()\rfor(i in 1:ncol(rst)){\relist[[i]]\u0026lt;-rst[,i] #注意雙括號\r}\r 之前有提過，大部分的文件都是說單/雙括號的差別是前者拿到的仍然是list,後者拿到的是內容。 但是以程式語言的眼光來看，我們先說凡是陣列，其元素的型態都只能放一樣（也就是大小固定），但是現在list的元素型態可以不單一，因此，編譯器無法知道如何指派大小，解決辦法就是每一個元素其實都是一個指標。 （todo: 需要一個圖）\r\r\r利用套件sm The sm package also includes a way of doing multiple density plots. The data must be in a data frame.\nlibrary(sm)\r#\u0026gt; Package 'sm', version 2.2-5.6: type help(sm) for summary information\rrstdf\u0026lt;-data.frame(rst)\rcolnames(rstdf)\u0026lt;-c(\u0026quot;male\u0026quot;,\u0026quot;female\u0026quot;)\rsm.density.compare(rstdf$male, rstdf$female)\r# Add a legend (the color numbers start from 2 and go up)\r#legend(\u0026quot;topright\u0026quot;, levels(data$cond), fill=2+(0:nlevels(data$cond)))\r sm 範例 sm.density.compare(iris$Sepal.Length, iris$Species, xlab=\u0026quot;Species\u0026quot;)\rtitle(main=\u0026quot;Distributions of Species\u0026quot;)\r x \u0026lt;- seq(from = 110, to = 174, by = 0.5)\ry1 \u0026lt;- dnorm(x, mean = 145, sd = 9)\ry2 \u0026lt;- dnorm(x, mean = 138, sd = 8)\rplot(x, y1, type=\u0026quot;l\u0026quot;, lwd=2, col=\u0026quot;red\u0026quot;,\rmain=\u0026quot;Systolic Blood Pressure Before and After Treatment\u0026quot;,\rxlab = \u0026quot;Systolic Blood Pressure (mmHg)\u0026quot;,\rylab = \u0026quot;Frequency\u0026quot;, yaxt=\u0026quot;n\u0026quot;,\rxlim = c(110, 175), ylim = c(0, 0.05))\rlines(x, y2)\rpolygon(c(110,x,175),c(0,y2,0), col=\u0026quot;firebrick3\u0026quot;,\rborder = \u0026quot;black\u0026quot;)\rpolygon(c(117,x,175),c(0,y1,0), col=\u0026quot;dodgerblue4\u0026quot;,\rborder = \u0026quot;black\u0026quot;)\rylab=c(seq(from=0, to=175, by=25))\ry=c(seq(from=0, to=0.05, length.out = 8))\raxis(2,at=y,labels=ylab, las=1)#下左（2），在y向量上標ylab,las 文字和座標的角度\rtext(x = 120, y = 0.045, \u0026quot;- Pre-Treatment BP\u0026quot;, col = \u0026quot;dodgerblue4\u0026quot;, cex = 0.9)\rtext(x = 120, y = 0.04, \u0026quot; - Post-Treatment BP\u0026quot;, col = \u0026quot;firebrick3\u0026quot;, cex = 0.9)\rpoints(109, 0.0445, pch = 15, col = \u0026quot;dodgerblue4\u0026quot;)\rpoints(109, 0.0395, pch = 15, col = \u0026quot;firebrick3\u0026quot;)\r 其他測試\nx \u0026lt;- seq(-2, 2, 0.05)\ry1 \u0026lt;- pnorm(x)\ry2 \u0026lt;- pnorm(x,1,1)\rplot(x,y1,type=\u0026quot;l\u0026quot;,col=\u0026quot;red\u0026quot;)\rlines(x,y2,col=\u0026quot;green\u0026quot;)\r plot( x, y1, type=\u0026quot;l\u0026quot;, col=\u0026quot;red\u0026quot; )\rpar(new=TRUE)\rplot( x, y2, type=\u0026quot;l\u0026quot;, col=\u0026quot;green\u0026quot; )\r note: add=TRUE 有時候不作用，例如plot\nhist( y1 ,col=\u0026quot;red\u0026quot; )\rhist( y2, add=TRUE,col=\u0026quot;blue\u0026quot; )\r "},
{"uri": "/blogR//rlang/1_1_%E7%B3%BB%E7%B5%B1.html","title": "1.1 運作環境",
	"tags": ["環境變數"],
	"description": "作業系統, R套裝的環境",
	"content": "環境變數  windows 幾個常用的資料夾  %USERPROFILE% %LOCALAPPDATA% %APPDATA%    \r\r存取作業系統的環境變數 指令開頭是Sys\nhugocmd(\u0026quot;expand\u0026quot; ,'title=\u0026quot;\u0026quot; incode=true')\r#\u0026gt; \r展開\rSys.getenv()\r#\u0026gt; ALLUSERSPROFILE C:\\ProgramData\r#\u0026gt; APPDATA C:\\Users\\linchao\\AppData\\Roaming\r#\u0026gt; CHROME_CRASHPAD_PIPE_NAME\r#\u0026gt; \\\\.\\pipe\\crashpad_9896_XGBZVKPAVSUJKYDE\r#\u0026gt; COLORTERM truecolor\r#\u0026gt; CommonProgramFiles C:\\Program Files\\Common Files\r#\u0026gt; CommonProgramFiles(x86)\r#\u0026gt; C:\\Program Files (x86)\\Common Files\r#\u0026gt; CommonProgramW6432 C:\\Program Files\\Common Files\r#\u0026gt; COMPUTERNAME TALI\r#\u0026gt; ComSpec C:\\WINDOWS\\system32\\cmd.exe\r#\u0026gt; DriverData C:\\Windows\\System32\\Drivers\\DriverData\r#\u0026gt; EDITURL D:/work/rmi_r\r#\u0026gt; FPS_BROWSER_APP_PROFILE_STRING\r#\u0026gt; Internet Explorer\r#\u0026gt; FPS_BROWSER_USER_PROFILE_STRING\r#\u0026gt; Default\r#\u0026gt; GIT_ASKPASS c:\\Users\\linchao\\AppData\\Local\\Programs\\Microsoft\r#\u0026gt; VS\r#\u0026gt; Code\\resources\\app\\extensions\\git\\dist\\askpass.sh\r#\u0026gt; HOME C:\\Users\\linchao\\Documents\r#\u0026gt; HOMEDRIVE C:\r#\u0026gt; HOMEPATH \\Users\\linchao\r#\u0026gt; LANG zh_TW.UTF-8\r#\u0026gt; LANGUAGE zh_TW\r#\u0026gt; LOCALAPPDATA C:\\Users\\linchao\\AppData\\Local\r#\u0026gt; LOGONSERVER \\\\TALI\r#\u0026gt; MSYS2_ENV_CONV_EXCL R_ARCH\r#\u0026gt; NUMBER_OF_PROCESSORS 32\r#\u0026gt; OneDrive C:\\Users\\linchao\\OneDrive\r#\u0026gt; ORIGINAL_XDG_CURRENT_DESKTOP\r#\u0026gt; undefined\r#\u0026gt; OS Windows_NT\r#\u0026gt; PATH C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program\r#\u0026gt; Files\\Git\\cmd;C:\\Program\r#\u0026gt; Files\\R\\R-4.1.1\\bin\\x64;C:\\Users\\linchao\\AppData\\Roaming\\Hugo\\0.88.0;;C:\\Program\r#\u0026gt; Files\\Docker\\Docker\\resources\\bin;C:\\ProgramData\\DockerDesktop\\version-bin;C:\\Program\r#\u0026gt; Files\\PowerShell\\7\\;C:\\Program\r#\u0026gt; Files\\nodejs\\;C:\\Users\\linchao\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\linchao\\AppData\\Local\\Programs\\Microsoft\r#\u0026gt; VS\r#\u0026gt; Code\\bin;C:\\Users\\linchao\\AppData\\Local\\Pandoc\\;C:\\Users\\linchao\\AppData\\Roaming\\npm;C:\\Program\r#\u0026gt; Files (x86)\\EaseUS\\Todo Backup\\bin\\x64\\\r#\u0026gt; PATHEXT .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC\r#\u0026gt; POWERSHELL_DISTRIBUTION_CHANNEL\r#\u0026gt; MSI:Windows 10 Pro\r#\u0026gt; PROCESSOR_ARCHITECTURE\r#\u0026gt; AMD64\r#\u0026gt; PROCESSOR_IDENTIFIER AMD64 Family 25 Model 33 Stepping 0,\r#\u0026gt; AuthenticAMD\r#\u0026gt; PROCESSOR_LEVEL 25\r#\u0026gt; PROCESSOR_REVISION 2100\r#\u0026gt; ProgramData C:\\ProgramData\r#\u0026gt; ProgramFiles C:\\Program Files\r#\u0026gt; ProgramFiles(x86) C:\\Program Files (x86)\r#\u0026gt; ProgramW6432 C:\\Program Files\r#\u0026gt; PROMPT $P$G\r#\u0026gt; PSModulePath %ProgramFiles%\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\r#\u0026gt; PUBLIC C:\\Users\\Public\r#\u0026gt; R_ARCH /x64\r#\u0026gt; R_COMPILED_BY gcc 8.3.0\r#\u0026gt; R_HOME C:/PROGRA~1/R/R-41~1.1\r#\u0026gt; R_LIBS_USER C:\\Users\\linchao\\Documents/R/win-library/4.1\r#\u0026gt; R_USER C:\\Users\\linchao\\Documents\r#\u0026gt; RTOOLS40_HOME C:\\rtools40\r#\u0026gt; SystemDrive C:\r#\u0026gt; SystemRoot C:\\WINDOWS\r#\u0026gt; TEMP C:\\Users\\linchao\\AppData\\Local\\Temp\r#\u0026gt; TERM_PROGRAM vscode\r#\u0026gt; TERM_PROGRAM_VERSION 1.60.1\r#\u0026gt; TMP C:\\Users\\linchao\\AppData\\Local\\Temp\r#\u0026gt; USERDOMAIN TALI\r#\u0026gt; USERDOMAIN_ROAMINGPROFILE\r#\u0026gt; TALI\r#\u0026gt; USERNAME linchao\r#\u0026gt; USERPROFILE C:\\Users\\linchao\r#\u0026gt; VSCODE_GIT_ASKPASS_MAIN\r#\u0026gt; c:\\Users\\linchao\\AppData\\Local\\Programs\\Microsoft\r#\u0026gt; VS\r#\u0026gt; Code\\resources\\app\\extensions\\git\\dist\\askpass-main.js\r#\u0026gt; VSCODE_GIT_ASKPASS_NODE\r#\u0026gt; C:\\Users\\linchao\\AppData\\Local\\Programs\\Microsoft\r#\u0026gt; VS Code\\Code.exe\r#\u0026gt; VSCODE_GIT_IPC_HANDLE \\\\.\\pipe\\vscode-git-787abf7477-sock\r#\u0026gt; windir C:\\WINDOWS\rhugocmd(m=\u0026#34;expand\u0026#34; ,end=T)\r#\u0026gt; \rSys.setenv(R_TEST = \u0026quot;testit\u0026quot;)\rSys.getenv(\u0026quot;R_TEST\u0026quot;)\r#\u0026gt; [1] \u0026quot;testit\u0026quot;\rSys.unsetenv(\u0026quot;R_TEST\u0026quot;) # on Unix-alike may warn and not succeed\rSys.getenv(\u0026quot;R_TEST\u0026quot;, unset = NA)\r#\u0026gt; [1] NA\r (待補充)比較有趣的指令\nSys.sleep(0.1)\r \r\rR的環境變數 在作業系統中的檔案,例如.Renviron,.Rprofile會影響R的啟動環境(✔參考)。\n .Platform = .Platform$OS.type .Renviron - which contains environment variables to be set in R sessions.  .Renviron 在%USERPROFILE%中(預設是沒有的)。用來在R啟動之前,設定系統的環境變數，內容是文字檔,以KEY=VALUE的方式設定。例如rtools的位置(參考1)。   .Rprofile - which contains R code to be run in each session. \r範例 ~/.Renviron on Unix\r## 範例 ~/.Renviron on Unix\rR_LIBS=~/R/library\rPAGER=/usr/local/bin/less\r## Example .Renviron on Windows\rR_LIBS=C:/R/library\rMY_TCLTK=\u0026quot;c:/Program Files/Tcl/bin\u0026quot;\r## Example of setting R_DEFAULT_PACKAGES (from R CMD check)\rR_DEFAULT_PACKAGES='utils,grDevices,graphics,stats'\r# this loads the packages in the order given, so they appear on\r# the search path in reverse order.\r   前面提過每次啟動R的時候,會載入(source).Rrofile,在這個session載入之後,會執行.First(),在脫離的時候,會執行.Last()。\n  \r範例 .Rprofile .First .Last\roptions(width=65, digits=5)\roptions(show.signif.stars=FALSE)\rsetHook(packageEvent(\u0026quot;grDevices\u0026quot;, \u0026quot;onLoad\u0026quot;),\rfunction(...) grDevices::ps.options(horizontal=FALSE))\rset.seed(1234)\r.First \u0026lt;- function() cat(\u0026quot;\\n headache!\\n\\n\u0026quot;)\r.Last \u0026lt;- function() cat(\u0026quot;\\n headacue cured!\\n\\n\u0026quot;)\r    \r範例 Rprofile.site\rlocal({\r# add MASS to the default packages, set a CRAN mirror\rold \u0026lt;- getOption(\u0026quot;defaultPackages\u0026quot;); r \u0026lt;- getOption(\u0026quot;repos\u0026quot;)\rr[\u0026quot;CRAN\u0026quot;] \u0026lt;- \u0026quot;http://my.local.cran\u0026quot;\roptions(defaultPackages = c(old, \u0026quot;MASS\u0026quot;), repos = r)\r## (for Unix terminal users) set the width from COLUMNS if set\rcols \u0026lt;- Sys.getenv(\u0026quot;COLUMNS\u0026quot;)\rif(nzchar(cols)) options(width = as.integer(cols))\r# interactive sessions get a fortune cookie (needs fortunes package)\rif (interactive())\rfortunes::fortune()\r})\r## if .Renviron contains\rFOOBAR=\u0026quot;coo\\bar\u0026quot;doh\\ex\u0026quot;abc\\\u0026quot;def'\u0026quot;\r## then we get\r# \u0026gt; cat(Sys.getenv(\u0026quot;FOOBAR\u0026quot;), \u0026quot;\\n\u0026quot;)\r# coo\\bardoh\\exabc\u0026quot;def'\r    R.home() Sys.getenv(\u0026quot;R_HOME\u0026quot;) 都可以知道安裝的目錄\n  目前的設定 - 函數options()\n  options()\rgetOption(\u0026quot;windowsTimeouts\u0026quot;)\r \roptions()的執行結果\r#\u0026gt; $add.smooth\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $blogdown.method\r#\u0026gt; [1] \u0026quot;markdown\u0026quot;\r#\u0026gt; #\u0026gt; $blogdown.serve_site.startup\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $browserNLdisabled\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $CBoundsCheck\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $check.bounds\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $citation.bibtex.max\r#\u0026gt; [1] 1\r#\u0026gt; #\u0026gt; $continue\r#\u0026gt; [1] \u0026quot;+ \u0026quot;\r#\u0026gt; #\u0026gt; $contrasts\r#\u0026gt; unordered ordered #\u0026gt; \u0026quot;contr.treatment\u0026quot; \u0026quot;contr.poly\u0026quot; #\u0026gt; #\u0026gt; $defaultPackages\r#\u0026gt; [1] \u0026quot;datasets\u0026quot; \u0026quot;utils\u0026quot; \u0026quot;grDevices\u0026quot; \u0026quot;graphics\u0026quot; \u0026quot;stats\u0026quot; \u0026quot;methods\u0026quot; #\u0026gt; #\u0026gt; $demo.ask\r#\u0026gt; [1] \u0026quot;default\u0026quot;\r#\u0026gt; #\u0026gt; $deparse.cutoff\r#\u0026gt; [1] 60\r#\u0026gt; #\u0026gt; $device\r#\u0026gt; function (width = 7, height = 7, ...) #\u0026gt; {\r#\u0026gt; grDevices::pdf(NULL, width, height, ...)\r#\u0026gt; }\r#\u0026gt; \u0026lt;bytecode: 0x000000001a675208\u0026gt;\r#\u0026gt; \u0026lt;environment: namespace:knitr\u0026gt;\r#\u0026gt; #\u0026gt; $device.ask.default\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $digits\r#\u0026gt; [1] 7\r#\u0026gt; #\u0026gt; $echo\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $editor\r#\u0026gt; [1] \u0026quot;notepad\u0026quot;\r#\u0026gt; #\u0026gt; $encoding\r#\u0026gt; [1] \u0026quot;native.enc\u0026quot; \u0026lt;span data-nopre class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span data-nopre class=\u0026quot;tooltiptext\u0026quot; \u0026gt;讀檔時會用到,例如readLine() \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\r#\u0026gt; #\u0026gt; $example.ask\r#\u0026gt; [1] \u0026quot;default\u0026quot;\r#\u0026gt; #\u0026gt; $expressions\r#\u0026gt; [1] 5000\r#\u0026gt; #\u0026gt; $help.search.types\r#\u0026gt; [1] \u0026quot;vignette\u0026quot; \u0026quot;demo\u0026quot; \u0026quot;help\u0026quot; #\u0026gt; #\u0026gt; $help.try.all.packages\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $help_type\r#\u0026gt; [1] \u0026quot;html\u0026quot;\r#\u0026gt; #\u0026gt; $HTTPUserAgent\r#\u0026gt; [1] \u0026quot;R (4.1.1 x86_64-w64-mingw32 x86_64 mingw32)\u0026quot;\r#\u0026gt; #\u0026gt; $install.packages.compile.from.source\r#\u0026gt; [1] \u0026quot;interactive\u0026quot;\r#\u0026gt; #\u0026gt; $internet.info\r#\u0026gt; [1] 2\r#\u0026gt; #\u0026gt; $keep.parse.data\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $keep.parse.data.pkgs\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $keep.source\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $keep.source.pkgs\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $knitr.in.progress \u0026lt;span data-nopre class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span data-nopre class=\u0026quot;tooltiptext\u0026quot; \u0026gt;目前的文件在RMD中產生 \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $locatorBell\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $mailer\r#\u0026gt; [1] \u0026quot;mailto\u0026quot;\r#\u0026gt; #\u0026gt; $matprod\r#\u0026gt; [1] \u0026quot;default\u0026quot;\r#\u0026gt; #\u0026gt; $max.print\r#\u0026gt; [1] 99999\r#\u0026gt; #\u0026gt; $menu.graphics\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $na.action\r#\u0026gt; [1] \u0026quot;na.omit\u0026quot;\r#\u0026gt; #\u0026gt; $nwarnings\r#\u0026gt; [1] 50\r#\u0026gt; #\u0026gt; $OutDec\r#\u0026gt; [1] \u0026quot;.\u0026quot;\r#\u0026gt; #\u0026gt; $pager\r#\u0026gt; [1] \u0026quot;internal\u0026quot;\r#\u0026gt; #\u0026gt; $papersize\r#\u0026gt; [1] \u0026quot;a4\u0026quot;\r#\u0026gt; #\u0026gt; $PCRE_limit_recursion\r#\u0026gt; [1] NA\r#\u0026gt; #\u0026gt; $PCRE_study\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $PCRE_use_JIT\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $pdfviewer\r#\u0026gt; [1] \u0026quot;C:/PROGRA~1/R/R-41~1.1/bin/x64/open.exe\u0026quot;\r#\u0026gt; #\u0026gt; $pkgType\r#\u0026gt; [1] \u0026quot;both\u0026quot;\r#\u0026gt; #\u0026gt; $prompt\r#\u0026gt; [1] \u0026quot;\u0026gt; \u0026quot;\r#\u0026gt; #\u0026gt; $repos\r#\u0026gt; CRAN #\u0026gt; \u0026quot;@CRAN@\u0026quot; #\u0026gt; #\u0026gt; $scipen\r#\u0026gt; [1] 0\r#\u0026gt; #\u0026gt; $show.coef.Pvalues\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $show.error.messages\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $show.signif.stars\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $showErrorCalls\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $str\r#\u0026gt; $str$strict.width\r#\u0026gt; [1] \u0026quot;no\u0026quot;\r#\u0026gt; #\u0026gt; $str$digits.d\r#\u0026gt; [1] 3\r#\u0026gt; #\u0026gt; $str$vec.len\r#\u0026gt; [1] 4\r#\u0026gt; #\u0026gt; $str$list.len\r#\u0026gt; [1] 99\r#\u0026gt; #\u0026gt; $str$deparse.lines\r#\u0026gt; NULL\r#\u0026gt; #\u0026gt; $str$drop.deparse.attr\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $str$formatNum\r#\u0026gt; function (x, ...) #\u0026gt; format(x, trim = TRUE, drop0trailing = TRUE, ...)\r#\u0026gt; \u0026lt;environment: 0x00000000193f2900\u0026gt;\r#\u0026gt; #\u0026gt; #\u0026gt; $str.dendrogram.last\r#\u0026gt; [1] \u0026quot;`\u0026quot;\r#\u0026gt; #\u0026gt; $stringsAsFactors\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $tikzMetricsDictionary\r#\u0026gt; [1] \u0026quot;1_0_requirement-tikzDictionary\u0026quot;\r#\u0026gt; #\u0026gt; $timeout\r#\u0026gt; [1] 60\r#\u0026gt; #\u0026gt; $try.outFile\r#\u0026gt; A connection with #\u0026gt; description \u0026quot;output\u0026quot; #\u0026gt; class \u0026quot;textConnection\u0026quot;\r#\u0026gt; mode \u0026quot;wr\u0026quot; #\u0026gt; text \u0026quot;text\u0026quot; #\u0026gt; opened \u0026quot;opened\u0026quot; #\u0026gt; can read \u0026quot;no\u0026quot; #\u0026gt; can write \u0026quot;yes\u0026quot; #\u0026gt; #\u0026gt; $ts.eps\r#\u0026gt; [1] 1e-05\r#\u0026gt; #\u0026gt; $ts.S.compat\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $unzip\r#\u0026gt; [1] \u0026quot;internal\u0026quot;\r#\u0026gt; #\u0026gt; $useFancyQuotes\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $verbose\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $warn\r#\u0026gt; [1] 0\r#\u0026gt; #\u0026gt; $warning.length\r#\u0026gt; [1] 1000\r#\u0026gt; #\u0026gt; $width\r#\u0026gt; [1] 80\r#\u0026gt; #\u0026gt; $windowsTimeouts\r#\u0026gt; [1] 100 500\r  安裝的時候,出現找不到repos,可以如下,這樣不用第二次定義\nr = getOption(\u0026quot;repos\u0026quot;) \u0026lt;span data-nopre class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span data-nopre class=\u0026quot;tooltiptext\u0026quot; \u0026gt; options()$\u0026quot;repos\u0026quot; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\rr[\u0026quot;CRAN\u0026quot;] = \u0026quot;http://cran.us.r-project.org\u0026quot;\roptions(repos = r)\r 解釋\nr # \u0026lt;span data-nopre class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span data-nopre class=\u0026quot;tooltiptext\u0026quot; \u0026gt;帶名字的字串,簡單理解為元素編號可以用元素名字代替 \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\r#\u0026gt; CRAN #\u0026gt; \u0026quot;http://cran.us.r-project.org\u0026quot; #\u0026gt; attr(,\u0026quot;RStudio\u0026quot;)\r#\u0026gt; [1] TRUE\rr[\u0026quot;CRAN\u0026quot;] # \u0026lt;span data-nopre class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span data-nopre class=\u0026quot;tooltiptext\u0026quot; \u0026gt;=r[1] \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\r#\u0026gt; CRAN #\u0026gt; \u0026quot;http://cran.us.r-project.org\u0026quot;  \r\r練習 比較一下environments()這個函數，可以列出目前工作區上的變數。environment() 傳回一個frame,相當於R提供的總體變數.GlobalEnv\nnames(environment()) # 🏷因為是結構frame 因此可以利用names()列出欄位 \ridentical(.GlobalEnv, environment()) #🏷用來比較兩個參數是否相同,包括值和類別 \rnames(.GlobalEnv)\r"},
{"uri": "/blogR//rlang/1_3_%E5%9F%B7%E8%A1%8C.html","title": "1.3 執行",
	"tags": [],
	"description": "1_1_run",
	"content": "無法啟動bash args \u0026lt;- commandArgs()\rprint(args)\r.R .Rprofile  詳細的範例\n"},
{"uri": "/blogR//rlang/1_5_%E7%B7%A8%E7%A2%BC.html","title": "1.5 編碼",
	"tags": [],
	"description": "1_5_編碼",
	"content": "編碼   每一種特定的語言，都存在一種或數種的 code page(但是在不同廠商(例如IBM), code page 的數字不同) 。 例如：\n code page = 950 : 正體中文big5 windows-1252 的 code page = 1252 :西歐的英語系使用 shift_jis 的 code page = 932 : 日語中的漢字使用。    textmining\n  更多\n  參考\n  最佳編碼👍\n  看看系統本身的編碼(Current Locale)\nl10n_info()\r#\u0026gt; $MBCS ⛳註解 \r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; $`UTF-8` 🏷👏在linux系統中,這兩個(UTF-8,Latin-1)有一個是真，意思就是說，不是這個，就是那個，但是在windows中，都是Ｆ🤷‍♀️ \r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $`Latin-1`\r#\u0026gt; [1] FALSE\r#\u0026gt; #\u0026gt; $codepage\r#\u0026gt; [1] 950\r#\u0026gt; #\u0026gt; $system.codepage\r#\u0026gt; [1] 950\rsessionInfo() # 裡的 local🏷因為傳回的是結構list因此sessionInfo()$local可以看到結果 \r#\u0026gt; R version 4.1.1 (2021-08-10)\r#\u0026gt; Platform: x86_64-w64-mingw32/x64 (64-bit)\r#\u0026gt; Running under: Windows 10 x64 (build 19043)\r#\u0026gt; #\u0026gt; Matrix products: default\r#\u0026gt; #\u0026gt; locale:\r#\u0026gt; [1] LC_COLLATE=Chinese (Traditional)_Taiwan.950 🏷👏當前編碼的排序和比較規則 \r#\u0026gt; [2] LC_CTYPE=Chinese (Traditional)_Taiwan.950 🏷👏 用於字元分類和字串處理，控制所有字元的處理方式，包括字元編碼，字元是單字節還是多位元組，如何列印等\r#\u0026gt; [3] LC_MONETARY=Chinese (Traditional)_Taiwan.950 🏷👏貨幣格式 \r#\u0026gt; [4] LC_NUMERIC=C 🏷👏 非貨幣的數字顯示格式\r#\u0026gt; [5] LC_TIME=Chinese (Traditional)_Taiwan.950 🏷👏 時間和日期格式 #\u0026gt; #\u0026gt; attached base packages:\r#\u0026gt; [1] stats graphics grDevices utils datasets methods base #\u0026gt; #\u0026gt; loaded via a namespace (and not attached):\r#\u0026gt; [1] compiler_4.1.1 magrittr_2.0.1 tools_4.1.1 glue_1.4.2 stringi_1.7.4 #\u0026gt; [6] knitr_1.33 stringr_1.4.0 xfun_0.25 evaluate_0.14\rSys.getlocale(\u0026quot;LC_ALL\u0026quot;) # 🏷✔由開頭Sys，可以知道這是作業系統變數存取  🏷✔也可以只打Sys.getlocale()\r#\u0026gt; [1] \u0026quot;LC_COLLATE=Chinese (Traditional)_Taiwan.950;LC_CTYPE=Chinese (Traditional)_Taiwan.950;LC_MONETARY=Chinese (Traditional)_Taiwan.950;LC_NUMERIC=C;LC_TIME=Chinese (Traditional)_Taiwan.950\u0026quot;\rgetOption(\u0026quot;encoding\u0026quot;) # 🏷✔其實是從前面的options()中的鍵值encoding拿資料，所以options()$encoding也可以  🏷✔這個選項是用來編碼串流(例如檔案,URL等等)而不是解讀程式碼中的字串向量。內定是 \u0026#34;native.enc\u0026#34; 。白話文的意思就是通訊協定內定是ASCII（因此需要將各種不是ASCII的字元編碼，可以利用UTF-8）,考慮網路協定都是ASCII,因此,不用費腦筋在這裡了,除非要重寫系統 \r#\u0026gt; [1] \u0026quot;native.enc\u0026quot;\r 更改系統的語系，以下更改為 UTF-8\n# for mac\rSys.setlocale(category = \u0026quot;LC_ALL\u0026quot;, locale = \u0026quot;en_US.UTF-8\u0026quot;)\r# for windows\rSys.setlocale(category = \u0026quot;LC_ALL\u0026quot;, locale = \u0026quot;UTF-8\u0026quot;)\rx=\u0026quot;hello\u0026quot;\r# x is a vector\rEncoding(x) #🏷✔不是用來知道系統的編碼,而是Ｒ程式碼變數（例如這裡的x)中的資料編碼 \r Encoding()的使用範例\n 👺ascii 字串例如 x=\u0026quot;hello\u0026quot; ,Encoding(x)的結果都是 unknown,因為ASCII不用編碼,在所有的編碼系統都一致。\n x\u0026lt;- '非白馬' Encoding(x) ## [1] \u0026quot;unknown\u0026quot; \u0026lt;span data-nopre class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;a data-nopre href=\u0026quot;#%e6%8f%90%e7%a4%ba1\u0026quot;\u0026gt;註解\u0026lt;/a\u0026gt;\u0026lt;span data-nopre class=\u0026quot;tooltiptext\u0026quot; \u0026gt;❓為甚麼是unknown❓❓按照說明書,非ASCII內定都是給目前指定的locale語系，就是l10n_info()為TRUE的那個 \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\r# 如果是big5\rx2\u0026lt;- iconv(x, 'big5', 'UTF-8') #轉UTF-8，轉完以後可以用Encoding(x)再次驗證\r# 如果是GB2312\rx2\u0026lt;- iconv(x, 'GB2312', 'UTF-8') #轉UTF-8\rEncoding(x2) ## [1] \u0026quot;UTF-8\u0026quot;  讀檔案的時候,如果要自行指定編碼,那麼下面是一些相關程式碼\nsource(\u0026quot;myRcode.R\u0026quot;, encoding = \u0026quot;utf-8\u0026quot;)\rreadLines(\u0026quot;mydata.csv\u0026quot;, encoding = \u0026quot;big5\u0026quot;)\rread.table(..., fileEncoding = \u0026quot;\u0026quot;, encoding = \u0026quot;unknown\u0026quot;,...)\rdata \u0026lt;- iconv(data, \u0026quot;big5\u0026quot;, \u0026quot;utf8\u0026quot;) # 將資料轉成 UTF-8\r \r\r亂碼常用的判斷查詢 😒只在WIN上測試\n 查看目前R使用的語系: 輸入 Sys.getlocale() 或 Sys.getlocale(category = \u0026quot;LC_ALL\u0026quot;)，  \r我的系統上顯示的是\rSys.getlocale()\r# \u0026quot;LC_COLLATE=Chinese (Traditional)_Taiwan.950;LC_CTYPE=Chinese (Traditional)_Taiwan.950;LC_MONETARY=Chinese (Traditional)_Taiwan.950;LC_NUMERIC=C;LC_TIME=Chinese (Traditional)_Taiwan.950\u0026quot;\r# 😒有些系統是用/分隔，例如\r#.UTF-8/C/en_US.UTF-8/en_US.UTF-8\u0026quot;      如果不是 Chinese (Traditional)_Taiwan.950 者，可以輸入下列指令設定 RStudio/R 的語系\n 英文：  Sys.setlocale(category = \u0026quot;LC_ALL\u0026quot;, locale = “UTF-8\u0026quot;)   中文：  Sys.setlocale(\u0026quot;LC_ALL\u0026quot;,\u0026quot;Chinese (Traditional)_Taiwan.950\u0026quot;) 或Sys.setlocale(\u0026quot;LC_ALL\u0026quot;,\u0026quot;cht\u0026quot;)  \r執行結果\r😒設定的結果,就是預設的安裝環境,如下所示\r \u0026gt; Sys.setlocale(category = \u0026quot;LC_ALL\u0026quot;, locale = \u0026quot;cht\u0026quot;) # \u0026lt;span data-nopre class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span data-nopre class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏 等同於Sys.setlocale(\u0026quot;LC_ALL\u0026quot;,\u0026quot;Chinese (Traditional)_Taiwan.950\u0026quot;) \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\r[1] \u0026quot;LC_COLLATE=Chinese (Traditional)_Taiwan.950;LC_CTYPE=Chinese (Traditional)_Taiwan.950;LC_MONETARY=Chinese (Traditional)_Taiwan.950;LC_NUMERIC=C;LC_TIME=Chinese (Traditional)_Taiwan.950\u0026quot;\r    Sys.setlocale(category = \u0026quot;LC_ALL\u0026quot;, locale = \u0026quot;zh_TW.UTF-8\u0026quot;) 或 Sys.setlocale(category = \u0026quot;LC_ALL\u0026quot;, locale = \u0026quot;zh_TW\u0026quot;) #🏷👏這是linux在視窗中不行   這應該是linux 在windows 無作用,需要超級使用者      試試看(雖然也沒什麼用)\n 找到Rconsole 檔案（用everything搜尋軟體,可能位置 R的安裝目錄\\etc\\Rconsole）,。這是一個文字檔。 在其中找到 language 然後改成language = English 或 zh_TW  read.csv  stack overflow  在linux 中,如果是UTF-8,這樣就可以 read.csv(\u0026quot;japanese_utf8.csv\u0026quot;) 但是如果不是UTF-8,則指定編碼 read.csv(\u0026quot;japanese_shiftjis.csv\u0026quot;, fileEncoding = \u0026quot;SHIFT-JIS\u0026quot;) 問題是windows:\nif(!require(readr)){\rinstall.packages(\u0026quot;readr\u0026quot;,dependencies=T)\r}\r #\u0026gt; 載入需要的套件：readr\r options(stringsAsFactors = FALSE)\rdf\u0026lt;-read_csv(\u0026quot;resources/wh_zh_utf8.csv\u0026quot;,\rcomment=\u0026quot;#\u0026quot;,\rlocale = locale(encoding = \u0026quot;UTF-8\u0026quot;))\r #\u0026gt; Rows: 4 Columns: 3\r #\u0026gt; -- Column specification ----------------------------------------------------------------------------------------------------------------------------\r#\u0026gt; Delimiter: \u0026quot;,\u0026quot;\r#\u0026gt; chr (1): 性別\r#\u0026gt; dbl (2): 身高, 體重\r #\u0026gt; #\u0026gt; i Use `spec()` to retrieve the full column specification for this data.\r#\u0026gt; i Specify the column types or set `show_col_types = FALSE` to quiet this message.\r knitr::kable(df)\r    身高 體重 性別     156 56 男   167 66 女   189 70 男   180 NA 女    df\u0026lt;-read_csv(\u0026quot;resources/wh_zh_950.csv\u0026quot;,\rcomment=\u0026quot;#\u0026quot;,\rlocale = locale(encoding = \u0026quot;big5\u0026quot;) )\r #\u0026gt; Rows: 4 Columns: 3\r #\u0026gt; -- Column specification ----------------------------------------------------------------------------------------------------------------------------\r#\u0026gt; Delimiter: \u0026quot;,\u0026quot;\r#\u0026gt; chr (1): 性別\r#\u0026gt; dbl (2): 身高, 體重\r #\u0026gt; #\u0026gt; i Use `spec()` to retrieve the full column specification for this data.\r#\u0026gt; i Specify the column types or set `show_col_types = FALSE` to quiet this message.\r #🏷❌zh_TW,cht, Chinese (Traditional)_Taiwan.950。✔:big5 \rknitr::kable(df)\r    身高 體重 性別     156 56 男   167 66 女   189 70 男   180 NA 女    輔助 iconvlist()\r#\u0026gt; [1] \u0026quot;437\u0026quot; \u0026quot;850\u0026quot; #\u0026gt; [3] \u0026quot;852\u0026quot; \u0026quot;855\u0026quot; #\u0026gt; [5] \u0026quot;857\u0026quot; \u0026quot;860\u0026quot; #\u0026gt; [7] \u0026quot;861\u0026quot; \u0026quot;862\u0026quot; #\u0026gt; [9] \u0026quot;863\u0026quot; \u0026quot;865\u0026quot; #\u0026gt; [11] \u0026quot;866\u0026quot; \u0026quot;869\u0026quot; #\u0026gt; [13] \u0026quot;ANSI_X3.4-1968\u0026quot; \u0026quot;ANSI_X3.4-1986\u0026quot; #\u0026gt; [15] \u0026quot;ASCII\u0026quot; \u0026quot;ASMO-708\u0026quot; #\u0026gt; [17] \u0026quot;BIG-5\u0026quot; \u0026quot;BIG-FIVE\u0026quot; #\u0026gt; [19] \u0026quot;big5\u0026quot; \u0026quot;BIG5\u0026quot; #\u0026gt; [21] \u0026quot;big5-hkscs\u0026quot; \u0026quot;BIG5-HKSCS\u0026quot; #\u0026gt; [23] \u0026quot;big5hkscs\u0026quot; \u0026quot;BIG5HKSCS\u0026quot; #\u0026gt; [25] \u0026quot;CP-GR\u0026quot; \u0026quot;CP-IS\u0026quot; #\u0026gt; [27] \u0026quot;cp1025\u0026quot; \u0026quot;CP1125\u0026quot; #\u0026gt; [29] \u0026quot;CP1133\u0026quot; \u0026quot;CP1200\u0026quot; #\u0026gt; [31] \u0026quot;CP12000\u0026quot; \u0026quot;CP12001\u0026quot; #\u0026gt; [33] \u0026quot;CP1201\u0026quot; \u0026quot;CP1250\u0026quot; #\u0026gt; [35] \u0026quot;CP1251\u0026quot; \u0026quot;CP1252\u0026quot; #\u0026gt; [37] \u0026quot;CP1253\u0026quot; \u0026quot;CP1254\u0026quot; #\u0026gt; [39] \u0026quot;CP1255\u0026quot; \u0026quot;CP1256\u0026quot; #\u0026gt; [41] \u0026quot;CP1257\u0026quot; \u0026quot;CP1258\u0026quot; #\u0026gt; [43] \u0026quot;CP1361\u0026quot; \u0026quot;CP154\u0026quot; #\u0026gt; [45] \u0026quot;CP367\u0026quot; \u0026quot;CP437\u0026quot; #\u0026gt; [47] \u0026quot;CP50221\u0026quot; \u0026quot;CP51932\u0026quot; #\u0026gt; [49] \u0026quot;CP65001\u0026quot; \u0026quot;CP737\u0026quot; #\u0026gt; [51] \u0026quot;CP775\u0026quot; \u0026quot;CP819\u0026quot; #\u0026gt; [53] \u0026quot;CP850\u0026quot; \u0026quot;CP852\u0026quot; #\u0026gt; [55] \u0026quot;CP853\u0026quot; \u0026quot;CP855\u0026quot; #\u0026gt; [57] \u0026quot;CP857\u0026quot; \u0026quot;CP858\u0026quot; #\u0026gt; [59] \u0026quot;CP860\u0026quot; \u0026quot;CP861\u0026quot; #\u0026gt; [61] \u0026quot;CP862\u0026quot; \u0026quot;CP863\u0026quot; #\u0026gt; [63] \u0026quot;CP864\u0026quot; \u0026quot;CP865\u0026quot; #\u0026gt; [65] \u0026quot;cp866\u0026quot; \u0026quot;CP866\u0026quot; #\u0026gt; [67] \u0026quot;CP869\u0026quot; \u0026quot;CP874\u0026quot; #\u0026gt; [69] \u0026quot;cp875\u0026quot; \u0026quot;CP932\u0026quot; #\u0026gt; [71] \u0026quot;CP936\u0026quot; \u0026quot;CP949\u0026quot; #\u0026gt; [73] \u0026quot;CP950\u0026quot; \u0026quot;CSASCII\u0026quot; #\u0026gt; [75] \u0026quot;CSIBM855\u0026quot; \u0026quot;CSIBM857\u0026quot; #\u0026gt; [77] \u0026quot;CSIBM860\u0026quot; \u0026quot;CSIBM861\u0026quot; #\u0026gt; [79] \u0026quot;CSIBM863\u0026quot; \u0026quot;CSIBM864\u0026quot; #\u0026gt; [81] \u0026quot;CSIBM865\u0026quot; \u0026quot;CSIBM866\u0026quot; #\u0026gt; [83] \u0026quot;CSIBM869\u0026quot; \u0026quot;csISO2022JP\u0026quot; #\u0026gt; [85] \u0026quot;CSISOLATIN1\u0026quot; \u0026quot;CSPC775BALTIC\u0026quot; #\u0026gt; [87] \u0026quot;CSPC850MULTILINGUAL\u0026quot; \u0026quot;CSPC862LATINHEBREW\u0026quot; #\u0026gt; [89] \u0026quot;CSPC8CODEPAGE437\u0026quot; \u0026quot;CSPCP852\u0026quot; #\u0026gt; [91] \u0026quot;CSPTCP154\u0026quot; \u0026quot;CSWINDOWS31J\u0026quot; #\u0026gt; [93] \u0026quot;CYRILLIC-ASIAN\u0026quot; \u0026quot;DOS-720\u0026quot; #\u0026gt; [95] \u0026quot;DOS-862\u0026quot; \u0026quot;EUC-CN\u0026quot; #\u0026gt; [97] \u0026quot;euc-jp\u0026quot; \u0026quot;euc-kr\u0026quot; #\u0026gt; [99] \u0026quot;EUC-KR\u0026quot; \u0026quot;EUCCN\u0026quot; #\u0026gt; [101] \u0026quot;eucjp\u0026quot; \u0026quot;euckr\u0026quot; #\u0026gt; [103] \u0026quot;GB18030\u0026quot; \u0026quot;gb2312\u0026quot; #\u0026gt; [105] \u0026quot;GBK\u0026quot; \u0026quot;hz-gb-2312\u0026quot; #\u0026gt; [107] \u0026quot;IBM-CP1133\u0026quot; \u0026quot;IBM-Thai\u0026quot; #\u0026gt; [109] \u0026quot;IBM00858\u0026quot; \u0026quot;IBM00924\u0026quot; #\u0026gt; [111] \u0026quot;IBM01047\u0026quot; \u0026quot;IBM01140\u0026quot; #\u0026gt; [113] \u0026quot;IBM01141\u0026quot; \u0026quot;IBM01142\u0026quot; #\u0026gt; [115] \u0026quot;IBM01143\u0026quot; \u0026quot;IBM01144\u0026quot; #\u0026gt; [117] \u0026quot;IBM01145\u0026quot; \u0026quot;IBM01146\u0026quot; #\u0026gt; [119] \u0026quot;IBM01147\u0026quot; \u0026quot;IBM01148\u0026quot; #\u0026gt; [121] \u0026quot;IBM01149\u0026quot; \u0026quot;IBM037\u0026quot; #\u0026gt; [123] \u0026quot;IBM1026\u0026quot; \u0026quot;IBM273\u0026quot; #\u0026gt; [125] \u0026quot;IBM277\u0026quot; \u0026quot;IBM278\u0026quot; #\u0026gt; [127] \u0026quot;IBM280\u0026quot; \u0026quot;IBM284\u0026quot; #\u0026gt; [129] \u0026quot;IBM285\u0026quot; \u0026quot;IBM290\u0026quot; #\u0026gt; [131] \u0026quot;IBM297\u0026quot; \u0026quot;IBM367\u0026quot; #\u0026gt; [133] \u0026quot;IBM420\u0026quot; \u0026quot;IBM423\u0026quot; #\u0026gt; [135] \u0026quot;IBM424\u0026quot; \u0026quot;IBM437\u0026quot; #\u0026gt; [137] \u0026quot;IBM437\u0026quot; \u0026quot;IBM500\u0026quot; #\u0026gt; [139] \u0026quot;ibm737\u0026quot; \u0026quot;ibm775\u0026quot; #\u0026gt; [141] \u0026quot;IBM775\u0026quot; \u0026quot;IBM819\u0026quot; #\u0026gt; [143] \u0026quot;ibm850\u0026quot; \u0026quot;IBM850\u0026quot; #\u0026gt; [145] \u0026quot;ibm852\u0026quot; \u0026quot;IBM852\u0026quot; #\u0026gt; [147] \u0026quot;IBM855\u0026quot; \u0026quot;IBM855\u0026quot; #\u0026gt; [149] \u0026quot;ibm857\u0026quot; \u0026quot;IBM857\u0026quot; #\u0026gt; [151] \u0026quot;IBM860\u0026quot; \u0026quot;IBM860\u0026quot; #\u0026gt; [153] \u0026quot;ibm861\u0026quot; \u0026quot;IBM861\u0026quot; #\u0026gt; [155] \u0026quot;IBM862\u0026quot; \u0026quot;IBM863\u0026quot; #\u0026gt; [157] \u0026quot;IBM863\u0026quot; \u0026quot;IBM864\u0026quot; #\u0026gt; [159] \u0026quot;IBM864\u0026quot; \u0026quot;IBM865\u0026quot; #\u0026gt; [161] \u0026quot;IBM865\u0026quot; \u0026quot;IBM866\u0026quot; #\u0026gt; [163] \u0026quot;ibm869\u0026quot; \u0026quot;IBM869\u0026quot; #\u0026gt; [165] \u0026quot;IBM870\u0026quot; \u0026quot;IBM871\u0026quot; #\u0026gt; [167] \u0026quot;IBM880\u0026quot; \u0026quot;IBM905\u0026quot; #\u0026gt; [169] \u0026quot;iso-2022-jp\u0026quot; \u0026quot;iso-2022-jp\u0026quot; #\u0026gt; [171] \u0026quot;ISO-2022-JP\u0026quot; \u0026quot;ISO-2022-JP-MS\u0026quot; #\u0026gt; [173] \u0026quot;iso-2022-kr\u0026quot; \u0026quot;ISO-8859-1\u0026quot; #\u0026gt; [175] \u0026quot;iso-8859-13\u0026quot; \u0026quot;iso-8859-15\u0026quot; #\u0026gt; [177] \u0026quot;iso-8859-2\u0026quot; \u0026quot;iso-8859-3\u0026quot; #\u0026gt; [179] \u0026quot;iso-8859-4\u0026quot; \u0026quot;iso-8859-5\u0026quot; #\u0026gt; [181] \u0026quot;iso-8859-6\u0026quot; \u0026quot;iso-8859-7\u0026quot; #\u0026gt; [183] \u0026quot;iso-8859-8\u0026quot; \u0026quot;iso-8859-8-i\u0026quot; #\u0026gt; [185] \u0026quot;iso-8859-9\u0026quot; \u0026quot;ISO-IR-100\u0026quot; #\u0026gt; [187] \u0026quot;ISO-IR-6\u0026quot; \u0026quot;ISO_646.IRV:1991\u0026quot; #\u0026gt; [189] \u0026quot;iso_8859-1\u0026quot; \u0026quot;ISO_8859-1\u0026quot; #\u0026gt; [191] \u0026quot;ISO_8859-1:1987\u0026quot; \u0026quot;iso_8859-13\u0026quot; #\u0026gt; [193] \u0026quot;iso_8859-15\u0026quot; \u0026quot;iso_8859-2\u0026quot; #\u0026gt; [195] \u0026quot;iso_8859-3\u0026quot; \u0026quot;iso_8859-4\u0026quot; #\u0026gt; [197] \u0026quot;iso_8859-5\u0026quot; \u0026quot;iso_8859-6\u0026quot; #\u0026gt; [199] \u0026quot;iso_8859-7\u0026quot; \u0026quot;iso_8859-8\u0026quot; #\u0026gt; [201] \u0026quot;iso_8859-8-i\u0026quot; \u0026quot;iso_8859-9\u0026quot; #\u0026gt; [203] \u0026quot;iso_8859_1\u0026quot; \u0026quot;iso_8859_13\u0026quot; #\u0026gt; [205] \u0026quot;iso_8859_15\u0026quot; \u0026quot;iso_8859_2\u0026quot; #\u0026gt; [207] \u0026quot;iso_8859_3\u0026quot; \u0026quot;iso_8859_4\u0026quot; #\u0026gt; [209] \u0026quot;iso_8859_5\u0026quot; \u0026quot;iso_8859_6\u0026quot; #\u0026gt; [211] \u0026quot;iso_8859_7\u0026quot; \u0026quot;iso_8859_8\u0026quot; #\u0026gt; [213] \u0026quot;iso_8859_8-i\u0026quot; \u0026quot;iso_8859_9\u0026quot; #\u0026gt; [215] \u0026quot;ISO2022-JP\u0026quot; \u0026quot;ISO2022-JP-MS\u0026quot; #\u0026gt; [217] \u0026quot;iso2022-kr\u0026quot; \u0026quot;ISO646-US\u0026quot; #\u0026gt; [219] \u0026quot;iso8859-1\u0026quot; \u0026quot;ISO8859-1\u0026quot; #\u0026gt; [221] \u0026quot;iso8859-13\u0026quot; \u0026quot;iso8859-15\u0026quot; #\u0026gt; [223] \u0026quot;iso8859-2\u0026quot; \u0026quot;iso8859-3\u0026quot; #\u0026gt; [225] \u0026quot;iso8859-4\u0026quot; \u0026quot;iso8859-5\u0026quot; #\u0026gt; [227] \u0026quot;iso8859-6\u0026quot; \u0026quot;iso8859-7\u0026quot; #\u0026gt; [229] \u0026quot;iso8859-8\u0026quot; \u0026quot;iso8859-8-i\u0026quot; #\u0026gt; [231] \u0026quot;iso8859-9\u0026quot; \u0026quot;Johab\u0026quot; #\u0026gt; [233] \u0026quot;JOHAB\u0026quot; \u0026quot;koi8-r\u0026quot; #\u0026gt; [235] \u0026quot;koi8-u\u0026quot; \u0026quot;ks_c_5601-1987\u0026quot; #\u0026gt; [237] \u0026quot;L1\u0026quot; \u0026quot;latin-9\u0026quot; #\u0026gt; [239] \u0026quot;LATIN1\u0026quot; \u0026quot;latin2\u0026quot; #\u0026gt; [241] \u0026quot;latin3\u0026quot; \u0026quot;latin4\u0026quot; #\u0026gt; [243] \u0026quot;latin5\u0026quot; \u0026quot;latin7\u0026quot; #\u0026gt; [245] \u0026quot;latin9\u0026quot; \u0026quot;mac\u0026quot; #\u0026gt; [247] \u0026quot;mac-centraleurope\u0026quot; \u0026quot;mac-is\u0026quot; #\u0026gt; [249] \u0026quot;macarabic\u0026quot; \u0026quot;maccentraleurope\u0026quot; #\u0026gt; [251] \u0026quot;maccroatian\u0026quot; \u0026quot;maccyrillic\u0026quot; #\u0026gt; [253] \u0026quot;macgreek\u0026quot; \u0026quot;machebrew\u0026quot; #\u0026gt; [255] \u0026quot;maciceland\u0026quot; \u0026quot;macintosh\u0026quot; #\u0026gt; [257] \u0026quot;macis\u0026quot; \u0026quot;macroman\u0026quot; #\u0026gt; [259] \u0026quot;macromania\u0026quot; \u0026quot;macthai\u0026quot; #\u0026gt; [261] \u0026quot;macturkish\u0026quot; \u0026quot;macukraine\u0026quot; #\u0026gt; [263] \u0026quot;macukrainian\u0026quot; \u0026quot;MS-ANSI\u0026quot; #\u0026gt; [265] \u0026quot;MS-ARAB\u0026quot; \u0026quot;MS-CYRL\u0026quot; #\u0026gt; [267] \u0026quot;MS-EE\u0026quot; \u0026quot;MS-GREEK\u0026quot; #\u0026gt; [269] \u0026quot;MS-HEBR\u0026quot; \u0026quot;MS-TURK\u0026quot; #\u0026gt; [271] \u0026quot;MS50221\u0026quot; \u0026quot;MS51932\u0026quot; #\u0026gt; [273] \u0026quot;MS932\u0026quot; \u0026quot;MS936\u0026quot; #\u0026gt; [275] \u0026quot;PT154\u0026quot; \u0026quot;PTCP154\u0026quot; #\u0026gt; [277] \u0026quot;SHIFFT_JIS\u0026quot; \u0026quot;SHIFFT_JIS-MS\u0026quot; #\u0026gt; [279] \u0026quot;shift-jis\u0026quot; \u0026quot;shift_jis\u0026quot; #\u0026gt; [281] \u0026quot;SJIS\u0026quot; \u0026quot;SJIS-MS\u0026quot; #\u0026gt; [283] \u0026quot;SJIS-OPEN\u0026quot; \u0026quot;SJIS-WIN\u0026quot; #\u0026gt; [285] \u0026quot;UCS-2\u0026quot; \u0026quot;UCS-2BE\u0026quot; #\u0026gt; [287] \u0026quot;UCS-2LE\u0026quot; \u0026quot;UCS-4\u0026quot; #\u0026gt; [289] \u0026quot;UCS-4BE\u0026quot; \u0026quot;UCS-4BE\u0026quot; #\u0026gt; [291] \u0026quot;UCS-4LE\u0026quot; \u0026quot;UCS-4LE\u0026quot; #\u0026gt; [293] \u0026quot;UCS2\u0026quot; \u0026quot;UCS2BE\u0026quot; #\u0026gt; [295] \u0026quot;UCS2LE\u0026quot; \u0026quot;UCS4\u0026quot; #\u0026gt; [297] \u0026quot;UCS4BE\u0026quot; \u0026quot;UCS4LE\u0026quot; #\u0026gt; [299] \u0026quot;UHC\u0026quot; \u0026quot;unicodeFFFE\u0026quot; #\u0026gt; [301] \u0026quot;US\u0026quot; \u0026quot;US-ASCII\u0026quot; #\u0026gt; [303] \u0026quot;UTF-16\u0026quot; \u0026quot;UTF-16BE\u0026quot; #\u0026gt; [305] \u0026quot;UTF-16LE\u0026quot; \u0026quot;UTF-32\u0026quot; #\u0026gt; [307] \u0026quot;UTF-32BE\u0026quot; \u0026quot;UTF-32LE\u0026quot; #\u0026gt; [309] \u0026quot;UTF-8\u0026quot; \u0026quot;UTF16\u0026quot; #\u0026gt; [311] \u0026quot;UTF16BE\u0026quot; \u0026quot;UTF16LE\u0026quot; #\u0026gt; [313] \u0026quot;UTF32\u0026quot; \u0026quot;UTF32BE\u0026quot; #\u0026gt; [315] \u0026quot;UTF32LE\u0026quot; \u0026quot;UTF8\u0026quot; #\u0026gt; [317] \u0026quot;WINBALTRIM\u0026quot; \u0026quot;windows-1250\u0026quot; #\u0026gt; [319] \u0026quot;windows-1251\u0026quot; \u0026quot;windows-1252\u0026quot; #\u0026gt; [321] \u0026quot;windows-1253\u0026quot; \u0026quot;windows-1254\u0026quot; #\u0026gt; [323] \u0026quot;windows-1255\u0026quot; \u0026quot;windows-1256\u0026quot; #\u0026gt; [325] \u0026quot;windows-1257\u0026quot; \u0026quot;windows-1258\u0026quot; #\u0026gt; [327] \u0026quot;WINDOWS-31J\u0026quot; \u0026quot;WINDOWS-50221\u0026quot; #\u0026gt; [329] \u0026quot;WINDOWS-51932\u0026quot; \u0026quot;windows-874\u0026quot; #\u0026gt; [331] \u0026quot;WINDOWS-932\u0026quot; \u0026quot;WINDOWS-936\u0026quot; #\u0026gt; [333] \u0026quot;x-Chinese_CNS\u0026quot; \u0026quot;x-cp20001\u0026quot; #\u0026gt; [335] \u0026quot;x-cp20003\u0026quot; \u0026quot;x-cp20004\u0026quot; #\u0026gt; [337] \u0026quot;x-cp20005\u0026quot; \u0026quot;x-cp20261\u0026quot; #\u0026gt; [339] \u0026quot;x-cp20269\u0026quot; \u0026quot;x-cp20936\u0026quot; #\u0026gt; [341] \u0026quot;x-cp20949\u0026quot; \u0026quot;x-cp50227\u0026quot; #\u0026gt; [343] \u0026quot;x-EBCDIC-KoreanExtended\u0026quot; \u0026quot;x-Europa\u0026quot; #\u0026gt; [345] \u0026quot;x-IA5\u0026quot; \u0026quot;x-IA5-German\u0026quot; #\u0026gt; [347] \u0026quot;x-IA5-Norwegian\u0026quot; \u0026quot;x-IA5-Swedish\u0026quot; #\u0026gt; [349] \u0026quot;x-iscii-as\u0026quot; \u0026quot;x-iscii-be\u0026quot; #\u0026gt; [351] \u0026quot;x-iscii-de\u0026quot; \u0026quot;x-iscii-gu\u0026quot; #\u0026gt; [353] \u0026quot;x-iscii-ka\u0026quot; \u0026quot;x-iscii-ma\u0026quot; #\u0026gt; [355] \u0026quot;x-iscii-or\u0026quot; \u0026quot;x-iscii-pa\u0026quot; #\u0026gt; [357] \u0026quot;x-iscii-ta\u0026quot; \u0026quot;x-iscii-te\u0026quot; #\u0026gt; [359] \u0026quot;x-mac-arabic\u0026quot; \u0026quot;x-mac-ce\u0026quot; #\u0026gt; [361] \u0026quot;x-mac-chinesesimp\u0026quot; \u0026quot;x-mac-chinesetrad\u0026quot; #\u0026gt; [363] \u0026quot;x-mac-croatian\u0026quot; \u0026quot;x-mac-cyrillic\u0026quot; #\u0026gt; [365] \u0026quot;x-mac-greek\u0026quot; \u0026quot;x-mac-hebrew\u0026quot; #\u0026gt; [367] \u0026quot;x-mac-icelandic\u0026quot; \u0026quot;x-mac-japanese\u0026quot; #\u0026gt; [369] \u0026quot;x-mac-korean\u0026quot; \u0026quot;x-mac-romanian\u0026quot; #\u0026gt; [371] \u0026quot;x-mac-thai\u0026quot; \u0026quot;x-mac-turkish\u0026quot; #\u0026gt; [373] \u0026quot;x-mac-ukrainian\u0026quot; \u0026quot;x_Chinese-Eten\u0026quot;\r 和作業系統一致的編碼\nlocaleToCharset(locale =Sys.getlocale(\u0026quot;LC_CTYPE\u0026quot;))\r 工具程式\nnative_encode = function(x) {\rif (.Platform$OS.type == 'unix') return(x)\rx2 = enc2native(x)\rif (identical(enc2utf8(x2), x)) x2 else x\r}\r 工具程式\ndetails \u0026lt;- function(x) {\rdetails \u0026lt;-\rlist(x=x,encoding=Encoding(x),bytes=nchar(x,\u0026quot;b\u0026quot;),chars=nchar(x,\u0026quot;c\u0026quot;),\rwidth=nchar(x,\u0026quot;w\u0026quot;),raw=paste(charToRaw(x),collapse=\u0026quot;:\u0026quot;))\rprint(t(as.matrix(details)))\r}\rx \u0026lt;- \u0026quot;Maur\\xEDcio\u0026quot;\rEncoding(x) \u0026lt;- \u0026quot;latin1\u0026quot;\rdetails(x)\r#\u0026gt; x encoding bytes chars width raw #\u0026gt; [1,] \u0026quot;Mauricio\u0026quot; \u0026quot;latin1\u0026quot; 8 8 8 \u0026quot;4d:61:75:72:ed:63:69:6f\u0026quot;\rx \u0026lt;- \u0026quot;你好\u0026quot;\rEncoding(x) \u0026lt;- \u0026quot;UTF-8\u0026quot;\rdetails(x)\r#\u0026gt; Error in nchar(x, \u0026quot;c\u0026quot;): invalid multibyte string, element 1\rx \u0026lt;- \u0026quot;你好\u0026quot;\riconv(x,\u0026quot;unknown\u0026quot;,\u0026quot;utf-8\u0026quot;)\r#\u0026gt; Error in iconv(x, \u0026quot;unknown\u0026quot;, \u0026quot;utf-8\u0026quot;): 在編碼頁 950 中不支援從 'unknown' 轉換到 'utf-8'\rEncoding(x) \u0026lt;- \u0026quot;UTF-8\u0026quot;\rdetails(x)\r#\u0026gt; Error in nchar(x, \u0026quot;c\u0026quot;): invalid multibyte string, element 1\rx \u0026lt;- \u0026quot;你好\u0026quot;\ry\u0026lt;-enc2utf8(x)\rdetails(y)\r#\u0026gt; x encoding bytes chars width raw #\u0026gt; [1,] \u0026quot;你好\u0026quot; \u0026quot;UTF-8\u0026quot; 6 2 4 \u0026quot;e4:bd:a0:e5:a5:bd\u0026quot;\r 初步結論就是big5的雙位元,應該都是ASCII,因此轉換都出問題。用enc2utf8(),enc2native()應該是比較符合windows10系統的方法。\n"},
{"uri": "/blogR//rlang/11_environments.html","title": "11 Environments",
	"tags": [],
	"description": "進階",
	"content": "參考 https://holtzy.github.io/Pimp-my-rmd/\nIntroduction The environment is the data structure that powers scoping. 相關概念:lexical scoping, namespaces, and R6 classes。\n這個文件需要 devtools::install_github(\u0026quot;tidyverse/rlang\u0026quot;)\nQuiz If you can answer the following questions correctly, you already know the most important topics in this chapter. You can find the answers at the end of the chapter in answers.\n List at least three ways that an environment is different to a list. What is the parent of the global environment? What is the only environment that doesn't have a parent? What is the enclosing environment of a function? Why is it important? How do you determine the environment from which a function was called? How are \u0026lt;- and \u0026lt;\u0026lt;- different?  Outline  Environment basics introduces you to the basic properties of an environment and shows you how to create your own. Recursing over environments provides a function template for computing with environments, illustrating the idea with a useful function. Explicit environments briefly discusses three places where environments are useful data structures for solving other problems.  Prerequisites 這個章節利用了套件rlang裡的函數，來探索環境物件。\n在rlang套件中,env_函數是設計用來和pipe一起工作的,這裡不深入。\nglobal_env()和globalenv()的執行結果一樣。\n.GlobalEnv\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\rglobalenv()\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\rglobal_env()\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\r.BaseNamespaceEnv\r#\u0026gt; \u0026lt;environment: namespace:base\u0026gt;\rcurrent_env() #\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\r \r\r基本 基本上一個 environment 類似名稱串列(named list),但是有4個例外:\n 名稱唯一(就是變數唯一) 名稱沒有順序關係 會有一個parent 當改變的時候,不會自動複製 (Environments are not copied when modified).  分別探索上面四點:\n提要 要建立environment, 使用 rlang::env(). 類似使用list(),也是一組名稱-值的配對。:\ne1 \u0026lt;- env(\ra = FALSE,\rb = \u0026quot;a\u0026quot;,\rc = 2.3,\rd = 1:3\r)\r 建立environment物件,利用函數 new.env() 不用管參數 hash 和 size。注意不能利用\u0026lt;-同時定義和建立 parameters; 例如, e1 \u0026lt;- env( a \u0026lt;- FALSE ) # error\r\r\renvironment物件可以想成是一個袋子,或是names集合。因為沒有次序關係\n\r就像在 names and values, 討論的,這個物件是參考為基礎.(in C concept) 不會有copy on modifying。而且,環境物件可以自己指向自己(recursion)\ne1$d \u0026lt;- e1\r \r沒有指派的環境變數,只會顯示記憶體位址:\ne1\r#\u0026gt; \u0026lt;environment: 0x0000000013c47d10\u0026gt;\r 要知道內容可以使用 env_print() :\nenv_print(e1)\r#\u0026gt; \u0026lt;environment: 0000000013C47D10\u0026gt;\r#\u0026gt; parent: \u0026lt;environment: global\u0026gt;\r#\u0026gt; bindings:\r#\u0026gt; * a: \u0026lt;lgl\u0026gt;\r#\u0026gt; * b: \u0026lt;chr\u0026gt;\r#\u0026gt; * c: \u0026lt;dbl\u0026gt;\r#\u0026gt; * d: \u0026lt;env\u0026gt;\r 想要知道目前有哪些binding(名稱-值 配對)可以利用 env_names()\nenv_names(e1)\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot;\r 要列出環境下的繫結，在R 3.2.0 以上,可以使用函數names() ,之前的版本則是 ls(), 但是要注意的是ls 的參數 all.names 內設是 FALSE 因此.開頭的看不到。.\r\r\rImportant environments 另外參考 [Special environments]。 current_env() 可以知道目前程式碼的執行環境。例如,當我們互動執行RCODE的時候,環境通常是 [總體環境](#global environment),或者由函數global_env()可以得到。這個總體環境有時候就叫\u0026quot;workspace\u0026quot;，同時,這也是函數外面所有互動計算發生的地方。 環境物件的比較不能用==,只能用函數identical()。\nidentical(global_env(), current_env())\r#\u0026gt; [1] TRUE\rglobal_env() == current_env()\r#\u0026gt; Error in global_env() == current_env(): 只有基元或串列類型才能做比較 (1)\r  globalenv() 和.GlobalEnv: 拿到global environmentand。 environment():拿到目前的環境  global environment 的名稱為 R_GlobalEnv 。\nglobal_env()\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\rcurrent_env()\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\r.GlobalEnv\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\r \r\rParents 每一個環境物件都有一個 parent。 parent 也一個環境物件。在方塊圖中,parent以藍色圈表示,並用箭頭指向另一個環境物件。\n這個parent用來建立 lexical scoping: 如果name沒有在某個環境物件找到,R會重複的在parent中找。\n函數env()可以用來建立一個沒有名字的環境 You can set the parent environment by supplying an unnamed argument to env(). If you don't supply it, it defaults to the current environment.\ne2a \u0026lt;- env(d = 4, e = 5)\re2b \u0026lt;- env(e2a, a = 1, b = 2, c = 3)\r \r\re2b的parent 為e2a,e2a沒有parent。\n函數 env_parent()可以用來找出某個環境物件的parent:\nenv_parent(e2b)\r#\u0026gt; \u0026lt;environment: 0x0000000015418df8\u0026gt;\renv_parent(e2a)\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\r parent.env() === env_parent()\r\r\r所有的環境物件中只有一個名稱為R_EmptyEnv的物件沒有parent(用空心藍色表示):\ne2c \u0026lt;- env(empty_env(), d = 4, e = 5)\re2d \u0026lt;- env(e2c, a = 1, b = 2, c = 3)\r \remptyenv() === empty_env()\r\r\r試圖利用函數env_parent()找空環境物件的parent會發生錯誤:\nenv_parent(empty_env())\r#\u0026gt; Error: The empty environment has no parent\r 函數 env_parents()可以找出目前環境物件的所有祖先:這個函數會繼續直到遇上global environment 或是空環境物件。上述過程可以利用last環境物件控制。\nenv_parents(e2b)\r#\u0026gt; [[1]] \u0026lt;env: 0000000015418DF8\u0026gt;\r#\u0026gt; [[2]] $ \u0026lt;env: global\u0026gt;\renv_parents(e2d)\r#\u0026gt; [[1]] \u0026lt;env: 0000000015F16BB0\u0026gt;\r#\u0026gt; [[2]] $ \u0026lt;env: empty\u0026gt;\r 可以利用Use parent.env() 找到環境的parent，但是base中沒有可以找出所有祖先的函數。\r\r\rGetting and setting 存取環境中元素的方法和list類似:使用 $ 和 [[:\ne3 \u0026lt;- env(x = 1, y = 2)\re3$x\r#\u0026gt; [1] 1\re3$z \u0026lt;- 3\re3[[\u0026quot;z\u0026quot;]]\r#\u0026gt; [1] 3\r 但是不能使用 [[ +數字索引,也不能單獨使用 [:\ne3[[1]]\r#\u0026gt; Error in e3[[1]]: 取子集環境時的引數不正確\re3[c(\u0026quot;x\u0026quot;, \u0026quot;y\u0026quot;)]\r#\u0026gt; Error in e3[c(\u0026quot;x\u0026quot;, \u0026quot;y\u0026quot;)]: 'environment' 類型的物件無法具有子集合\r 當環境中的繫結不存在時(簡單點,就是變數不存在時)$ 和 [[ 會傳回 NULL 但不會引發錯誤,如果要有錯誤警告,則利用 env_get() :\ne3$xyz\r#\u0026gt; NULL\renv_get(e3, \u0026quot;xyz\u0026quot;)\r#\u0026gt; Error in env_get(e3, \u0026quot;xyz\u0026quot;): 缺少引數 \u0026quot;default\u0026quot;，也沒有預設值\r 當繫結不存在,但是想要有預設值傳回時,可以利用參數 default .\nenv_get(e3, \u0026quot;xyz\u0026quot;, default = NA)\r#\u0026gt; [1] NA\r 另有兩種方式可以在環境物件加入繫結:\n  env_poke()1 takes a name (as string) and a value:\nenv_poke(e3, \u0026quot;a\u0026quot;, 100)\re3$a\r#\u0026gt; [1] 100\r   env_bind() allows you to bind multiple values:\nenv_bind(e3, a = 10, b = 20)\renv_names(e3)\r#\u0026gt; [1] \u0026quot;x\u0026quot; \u0026quot;y\u0026quot; \u0026quot;z\u0026quot; \u0026quot;a\u0026quot; \u0026quot;b\u0026quot;\r   env_has(): 是否環境中有繫結\nenv_has(e3, \u0026quot;a\u0026quot;)\r#\u0026gt; a #\u0026gt; TRUE\r 不能像是list中刪除元素的方式(指派NULL給元素)，而必須使用 env_unbind():\ne3$a \u0026lt;- NULL\renv_has(e3, \u0026quot;a\u0026quot;)\r#\u0026gt; a #\u0026gt; TRUE\renv_unbind(e3, \u0026quot;a\u0026quot;)\renv_has(e3, \u0026quot;a\u0026quot;)\r#\u0026gt; a #\u0026gt; FALSE\r 從一個物件Unbinding 解除名稱，並不會刪除物件，是否刪除物件是 garbage collector的工作.。可以參考 GC.\nSee get(), assign(), exists(), and rm(). These are designed interactively for use with the current environment, so working with other environments is a little clunky. Also beware the inherits argument: it defaults to TRUE meaning that the base equivalents will inspect the supplied environment and all its ancestors.\r\r\rAdvanced bindings There are two more exotic variants of env_bind():\n  env_bind_exprs() creates delayed bindings, which are evaluated the first time they are accessed. Behind the scenes, delayed bindings create promises, so behave in the same way as function arguments.\nenv_bind_exprs(current_env(), b = {Sys.sleep(1); 1})\r#\u0026gt; Warning: `env_bind_exprs()` is deprecated as of rlang 0.3.0.\r#\u0026gt; Please use `env_bind_lazy()` instead.\r#\u0026gt; This warning is displayed once per session.\rsystem.time(print(b))\r#\u0026gt; [1] 1\r#\u0026gt; 使用者 系統 流逝 #\u0026gt; 0.00 0.00 1.01\rsystem.time(print(b))\r#\u0026gt; [1] 1\r#\u0026gt; 使用者 系統 流逝 #\u0026gt; 0 0 0\r Delayed bindings are used to implement autoload(), which makes R behave as if the package data is in memory, even though it's only loaded from disk when you ask for it.\n  env_bind_fns() creates active bindings which are re-computed every time they're accessed:\nenv_bind_fns(current_env(), z1 = function(val) runif(1)) #\u0026gt; Warning: `env_bind_fns()` is deprecated as of rlang 0.3.0.\r#\u0026gt; Please use `env_bind_active()` instead.\r#\u0026gt; This warning is displayed once per session.\rz1\r#\u0026gt; [1] 0.5319685\rz1\r#\u0026gt; [1] 0.2939102\r The argument to the function allows you to also override behaviour when the variable is set:\nenv_bind_fns(current_env(), z2 = function(val) {\rif (missing(val)) {\r2\r} else {\rstop(\u0026quot;Don't touch z2!\u0026quot;, call. = FALSE)\r}\r})\rz2\r#\u0026gt; [1] 2\rz2 \u0026lt;- 3\r#\u0026gt; Error: Don't touch z2!\r   See ?delayedAssign() and ?makeActiveBinding().\r\r\rExercises  List three ways in which an environment differs from a list. Create an environment as illustrated by this picture. \r Create a pair of environments as illustrated by this picture. \r Explain why e[[1]] and e[c(\u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;)] don't make sense when e is an environment. Create a version of env_poke() that will only bind new names, never re-bind old names. Some programming languages only do this, and are known as single assignment languages.  Recursing over environments If you want to operate on every ancestor of an environment, it's often convenient to write a recursive function. This section shows you how, applying your new knowledge of environments to write a function that given a name, finds the environment where() that name is defined, using R's regular scoping rules.\nThe definition of where() is straightforward. It has two arguments: the name to look for (as a string), and the environment in which to start the search. (We'll learn why caller_env() is a good default in calling environments.)\nwhere \u0026lt;- function(name, env = caller_env()) {\rif (identical(env, empty_env())) {\r# Base case\rstop(\u0026quot;Can't find \u0026quot;, name, call. = FALSE)\r} else if (env_has(env, name)) {\r# Success case\renv\r} else {\r# Recursive case\rwhere(name, env_parent(env))\r}\r}\r 3個情況:\n The base case: 到達empty environment 沒有parent無法繼續,所以丟出error. The successful case: 在env中找到name ，成功,所以傳回env。. The recursive case: 在env中找不到,繼續在parent中找。.  These three cases are illustrated with these three examples:\nwhere(\u0026quot;yyy\u0026quot;)\r#\u0026gt; Error: Can't find yyy\rx \u0026lt;- 5\rwhere(\u0026quot;x\u0026quot;)\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\rwhere(\u0026quot;mean\u0026quot;)\r#\u0026gt; \u0026lt;environment: base\u0026gt;\r 想像有兩個環境物件(如圖):\ne4a \u0026lt;- env(empty_env(), a = 1, b = 2)\re4b \u0026lt;- env(e4a, x = 10, a = 11)\r \r where(a, e4a) will find a in e4a. where(\u0026quot;b\u0026quot;, e4a) doesn't find b in e4a, so it looks in its parent, e4b, and finds it there. where(\u0026quot;c\u0026quot;, e4a) looks in e4a, then e4b, then hits the empty environment and throws an error.  It's natural to work with environments recursively, so where() provides a useful template. Removing the specifics of where() shows the structure more clearly:\nf \u0026lt;- function(..., env = caller_env()) {\rif (identical(env, empty_env())) {\r# base case\r} else if (success) {\r# success case\r} else {\r# recursive case\rf(..., env = env_parent(env))\r}\r}\r Iteration vs recursion 也可以用迭代的方式\nf2 \u0026lt;- function(..., env = caller_env()) {\rwhile (!identical(env, empty_env())) {\rif (success) {\r# success case\rreturn()\r}\r# inspect parent\renv \u0026lt;- env_parent(env)\r}\r# base case\r}\r \r\rExercises   Modify where() to return all environments that contain a binding for name. Carefully think through what type of object the function will need to return.\n  Write a function called fget() that finds only function objects. It should have two arguments, name and env, and should obey the regular scoping rules for functions: if there's an object with a matching name that's not a function, look in the parent. For an added challenge, also add an inherits argument which controls whether the function recurses up the parents or only looks in one environment.\n  Special environments 這裡討論 package environments. 然後探討當函數建立時,綁入函數的函數環境。還有當函數被呼叫時的執行環境(ephemeral)。\n套裝環境主要是看這些環境如何支援namespaces。同時,namespace讓package每次載入的時候,都有一樣的行為,而不售其他packages載入先後的影響。\n套件環境和搜尋路徑 每個套件經由library() 或 require() 接入成為總體環境的parent。而最後一個接入的套件,則是總體環境的第一個parent:\nload 和 attach不一樣，當我們使用require或 library的時候,我們做的是attach 。就是在目前(使用者)環境串列中加入我們利用library載入的物件.\n attaching and .onAttach  thus means that a package is attached to the user space aka the global environment usually this is done via library(pkg) and you can use normal fun() syntax   loading and .onLoad  thus means that package is (in any way) made available to the current R-session (e.g. by loading/attaching another package that depends on it or by using pkg::fun() syntax the first time) though you will not find functions in the global environment you can use pkg::fun()    \r\r例如找出總體環境的parent\nenv_parent(global_env())\r#\u0026gt; \u0026lt;environment: package:rlang\u0026gt;\r#\u0026gt; attr(,\u0026quot;name\u0026quot;)\r#\u0026gt; [1] \u0026quot;package:rlang\u0026quot;\r#\u0026gt; attr(,\u0026quot;path\u0026quot;)\r#\u0026gt; [1] \u0026quot;C:/Users/linchao/Documents/R/win-library/4.1/rlang\u0026quot;\r 找到是最近一次,使用指令library(packageA),裡面這個packageA。以此類推,下面找出在packageA之前的套件環境。\nenv_parent(env_parent(global_env()))\r#\u0026gt; \u0026lt;environment: package:stats\u0026gt;\r#\u0026gt; attr(,\u0026quot;name\u0026quot;)\r#\u0026gt; [1] \u0026quot;package:stats\u0026quot;\r#\u0026gt; attr(,\u0026quot;path\u0026quot;)\r#\u0026gt; [1] \u0026quot;C:/Program Files/R/R-4.1.1/library/stats\u0026quot;\r 如果一層一層parent回朔,就可以到每個套件被接入的順序,這也是R執行中會用到的 search path 因為這些環境的所有物件都可以經由 top-level interactive workspace找到。\nsearch_envs()\r#\u0026gt; [[1]] $ \u0026lt;env: global\u0026gt;\r#\u0026gt; [[2]] $ \u0026lt;env: package:rlang\u0026gt;\r#\u0026gt; [[3]] $ \u0026lt;env: package:stats\u0026gt;\r#\u0026gt; [[4]] $ \u0026lt;env: package:graphics\u0026gt;\r#\u0026gt; [[5]] $ \u0026lt;env: package:grDevices\u0026gt;\r#\u0026gt; [[6]] $ \u0026lt;env: package:utils\u0026gt;\r#\u0026gt; [[7]] $ \u0026lt;env: package:datasets\u0026gt;\r#\u0026gt; [[8]] $ \u0026lt;env: package:methods\u0026gt;\r#\u0026gt; [[9]] $ \u0026lt;env: Autoloads\u0026gt;\r#\u0026gt; [[10]] $ \u0026lt;env: package:base\u0026gt;\r 函數 search()可以找出環境物件的名稱。\r\r\r最後兩個環境物件都一樣:\n  Autoloads 環境物件,利用 delayed bindings來節省記憶體，也就是在需要的時候才載入(loading)package中的物件(例如大型資料集)。\n  base environment, package:base 或簡稱 base, 是base 套裝的環境物件。用來 載入其他套裝(bootstrap)。利用函數 base_env()存取.\n  利用圖型表示:\n\r當利用 library() attach其他套件的時候, 總體環境的parent馬上改變:\n\rThe function environment 當函數被建立的時候,現有的環境會被繫結。稱為function environment, 主要用來支援lexical scoping. 在電腦語言中,當函數紀錄它們的運作環境時,我們說這個函數屬於 closures。,這也是為甚麼這個字眼經常在R語言中出現。.\n利用函數 fn_env()可以得到函數的環境物件:\ny \u0026lt;- 1\rf \u0026lt;- function(x) x + y\rfn_env(f)\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\r 一樣利用函數 environment(f) 可以找到函數 f的環境.\r\r\r在圖形中,函數被畫成類似子彈,而彈頭的部分繫結環境。\n\r在這個案例中,f()繫結的環境物件,就是繫結名稱f的環境。但並不一定總是這樣，例如在下一個例子中,g被繫結在新環境物件e中。但是函數g()繫結的是global environment。這之間的分別是我們如何找到g和g如何找到他的變數。\ne \u0026lt;- env()\re$g \u0026lt;- function() 1\r \rNamespaces 在上面的圖形中,我們已經知道套件的parent會隨著之前套件載入的順序不同而不同。這就導致R程式設計者必須保證個別套件上如果使用別的套件的函數，必須是原始目的的那一個。namespaces 就是為此目的而產生: 每個套件必須的使用必須一致,而不管使用者如何載入套件.\n以 sd()為例子:\nsd\r#\u0026gt; function (x, na.rm = FALSE) #\u0026gt; sqrt(var(if (is.vector(x) || is.factor(x)) x else as.double(x), #\u0026gt; na.rm = na.rm))\r#\u0026gt; \u0026lt;bytecode: 0x000000001c9a2d28\u0026gt;\r#\u0026gt; \u0026lt;environment: namespace:stats\u0026gt;\r sd() 必須使用函數 var(), 因此這個var()到底來自 global environment,還是其他接入(attached)的套件的這種問題必須避免。 R avoids this problem by taking advantage of the function vs. binding environment described above.\n每個套件中的函數和一對環境物件有關:套件環境(之前學到的)還有 namespace 環境物件。\n package environment: 是套件的外部介面，這是R使用者如何在接入的套件中尋找函數的地方(或者可以利用 ::) package enviromnent 的parent 由搜尋路徑決定(可以利用search()知道)決定(也就是載入的順序) namespace environment:是套件的內部介面。package environment 控制我們如何找到函數,而namespace environment控制函數如何找到變數。  在package environment的每個繫結也可以在namespace environment中找到。這樣可以確保每個函數可以使用套件中的其他函數。但是有些繫結只能在namespace 中找到(例如內部或非輸出物件),這種內部物件通常是用來隱藏一些繁瑣的且不需要給使用者看到的細節。;\n\r每個namespace environment 有一樣的祖集合:\n 每個namespace有 imports 的環境物件，其中包含了套件中用到的所有函數繫結。而所謂輸入環境實際由套裝開發人員在檔案NAMESPACE指定 明確的輸入每個base函數,很繁瑣,所以R直接設定import enviroment的parent是base *namespae*[^1]。  The base namespace contains the same bindings as the base environment, but it has different parent.\r\r\r base namespace 的parent是總體環境(#global environment).參考下圖,這種設計導致在import environment中找不到繫結時,會開始再總體環境中尋找,而之前提過總體環境通常是互動環境下名稱搜尋的開始路徑,這也導致搜尋的方式受到套件載入順序的影響。因此,R提供了了R CMD check來警告此種情況的發生。(雖然有麻煩,但是由於S3 方法的dispatch 關係,此種方式仍然留著)  \r綜合上述,可以得到下圖:: \r所以當 sd() 搜尋var 的值的時候,搜尋順序是受到開發者的指定(在檔案NAMESPACE利用import)，而不會受到套裝使用者的影響。這樣保證每次套件程式碼執行的時候,都一樣,而不會受到一般使用者載入套件的順序而影響。\n注意在package和namespace兩種環境之間沒有直接的連結.連結是由函數環境定義。\nExecution environments execution environment. 下面的函數第一次執行的時候會傳回甚麼?第2次呢?\ng \u0026lt;- function(x) {\rif (!env_has(current_env(), \u0026quot;a\u0026quot;)) {\rmessage(\u0026quot;Defining a\u0026quot;)\ra \u0026lt;- 1\r} else {\ra \u0026lt;- a + 1\r}\ra\r}\r 再一次利用下面的調用,確認你的答案:\ng(10)\r#\u0026gt; Defining a\r#\u0026gt; [1] 1\rg(10)\r#\u0026gt; Defining a\r#\u0026gt; [1] 1\rg(11)\r#\u0026gt; Defining a\r#\u0026gt; [1] 1\r 這個函數每次執行都傳回💯一樣的答案,參考 a fresh start. 每次函數被調用的時候,一個新的環境都會被建立來主導執行。這種環境稱為執行環境。而執行環境的parent為 function environment.\n用另一個簡單點的例子說明. (圖中,執行環境的parent間接表示:經由函數環境).\nh \u0026lt;- function(x) {\r# 1.\ra \u0026lt;- 2 # 2.\rx + a\r}\ry \u0026lt;- h(1) # 3.\r \r執行環境(execution environment)短暫存在,當函數執行完畢通常會被GC。在幾種情況下,會在記憶體存在比較久,第一種是回傳給另一個變數:\nh2 \u0026lt;- function(x) {\ra \u0026lt;- x * 2\rcurrent_env()\r}\re \u0026lt;- h2(x = 10)\renv_print(e)\r#\u0026gt; \u0026lt;environment: 000000001D3DEF08\u0026gt;\r#\u0026gt; parent: \u0026lt;environment: global\u0026gt;\r#\u0026gt; bindings:\r#\u0026gt; * a: \u0026lt;dbl\u0026gt;\r#\u0026gt; * x: \u0026lt;dbl\u0026gt;\rfn_env(h2)\r#\u0026gt; \u0026lt;environment: R_GlobalEnv\u0026gt;\r Another way to capture it is to return an object with a binding to that environment, like a function. The following example illustrates that idea with a function factory, plus(). We use that factory to create a function called plus_one().\nThere's a lot going on in the diagram because the enclosing environment of plus_one() is the execution environment of plus().\nplus \u0026lt;- function(x) {\rfunction(y) x + y\r}\rplus_one \u0026lt;- plus(1)\rplus_one\r#\u0026gt; function(y) x + y\r#\u0026gt; \u0026lt;environment: 0x000000001d7333a0\u0026gt;\r \rWhat happens when we call plus_one()? Its execution environment will have the captured execution environment of plus() as its parent:\nplus_one(2)\r#\u0026gt; [1] 3\r \rYou'll learn more about function factories in functional programming.\nExercises   How is search_envs() different to env_parents(global_env())?\n  Draw a diagram that shows the enclosing environments of this function:\nf1 \u0026lt;- function(x1) {\rf2 \u0026lt;- function(x2) {\rf3 \u0026lt;- function(x3) {\rx1 + x2 + x3\r}\rf3(3)\r}\rf2(2)\r}\rf1(1)\r   Write an enhanced version of str() that provides more information about functions. Show where the function was found and what environment it was defined in.\n  The call stack 還有另一種環境稱為 caller environment, 可以經由 rlang::caller_env()存取。. This provides the environment from which the function was called, and hence varies based on how the function is called, not how the function was created. As we saw above this is a useful default whenever you write a function that takes an environment as an argument.\nparent.frame() is equivalent to caller_env(); just note that it returns an environment, not a frame.\r\r\rTo fully understand the caller environment we need to discuss two related concepts: the call stack, which is made up of frames. Executing a function creates two types of context. You've learned about one already: the execution environment is a child of the function environment, which is determined by where the function was created. There's another type of context created by where the function was called: this is called the call stack.\nThere are also a couple of small wrinkles when it comes to custom evaluation. See environments vs. frames for more details.\nSimple call stacks Let's illustrate this with a simple sequence of calls: f() calls g() calls h().\nf \u0026lt;- function(x) {\rg(x = 2)\r}\rg \u0026lt;- function(x) {\rh(x = 3)\r}\rh \u0026lt;- function(x) {\rstop()\r}\r The way you most commonly see a call stack in R is by looking at the traceback() after an error has occured:\nf(x = 1)\r#\u0026gt; Error:\rtraceback()\r#\u0026gt; 4: stop()\r#\u0026gt; 3: h(x = 3) #\u0026gt; 2: g(x = 2)\r#\u0026gt; 1: f(x = 1)\r Instead of stop() + traceback() to understand the call stack, we're going to use lobstr::cst() to print out the call stack tree:\nh \u0026lt;- function(x) {\rlobstr::cst()\r}\rf(x = 1)\r#\u0026gt; ???\r#\u0026gt; ???f(x = 1)\r#\u0026gt; ???g(x = 2)\r#\u0026gt; ???h(x = 3)\r#\u0026gt; ???lobstr::cst()\r This shows us that cst() was called from h(), which was called from g(), which was called from f(). Note that the order is the opposite from traceback(). As the call stacks get more compliated, I think it's easier to understand the sequence of calls if you start from the beginning, rather than the end (i.e. f() calls g(); rather than g() was called by f()).\nLazy evaluation The call stack above is simple - while you get a hint that there's some tree-like structure involved, everything happens on a single branch. This is typical of a call stack when all arguments are eagerly evaluated.\nLet's create a more complicated example that involves some lazy evaluation. We'll create a sequence of functions, a(), b(), c(), that pass along an argument x.\na \u0026lt;- function(x) b(x)\rb \u0026lt;- function(x) c(x)\rc \u0026lt;- function(x) x\ra(f())\r#\u0026gt; ???\r#\u0026gt; ???a(f())\r#\u0026gt; ??? ???b(x)\r#\u0026gt; ??? ???c(x)\r#\u0026gt; ???f()\r#\u0026gt; ???g(x = 2)\r#\u0026gt; ???h(x = 3)\r#\u0026gt; ???lobstr::cst()\r x is lazily evaluated so this tree gets two branches. In the first branch a() calls b(), then b() calls c(). The second branch starts when c() evaluates its argument x. This argument is evaluated in a new branch because the environment in which it is evaluated is the global environment, not the environment of c().\nFrames Each element of the call stack is a frame2, also known as an evaluation context. The frame is an extremely important internal data structure, and R code can only access a small part of the data structure because it's so critical. A frame has three main components that are accessible from R:\n  An expression (labelled with expr) giving the function call. This is what traceback() prints out.\n  An environment (labelled with env), which is typically the execution environment of a function. There are two main exceptions: the environment of the global frame is the global environment, and calling eval() also generates frames, where the environment can be anything.\n  A parent, the previous call in the call stack (shown by a grey arrow).\n  \r(To focus on the calling environments, I have omitted the bindings in the global environment from f, g, and h to the respective function objects.)\nThe frame also holds exit handlers created with on.exit(), restarts and handlers for the condition system, and which context to return() to when a function completes. These are important for the internal operation of R, but are not directly accessible.\nDynamic scope Looking up variables in the calling stack rather than in the enclosing environment is called dynamic scoping. Few languages implement dynamic scoping (Emacs Lisp is a notable exception.) This is because dynamic scoping makes it much harder to reason about how a function operates: not only do you need to know how it was defined, you also need to know the context in which it was called. Dynamic scoping is primarily useful for developing functions that aid interactive data analysis. It is one of the topics discussed in non-standard evaluation.\nExercises  Write a function that lists all the variables defined in the environment in which it was called. It should return the same results as ls().  As data structures As well as powering scoping, environments are also useful data structures in their own right because they have reference semantics. There are three common problems that they can help solve:\n  Avoiding copies of large data. Since environments have reference semantics, you'll never accidentally create a copy. This makes it a useful vessel for large objects. Bare environments are not that pleasant to work with; I recommend using R6 objects instead. Learn more in [R6].\n  Managing state within a package. Explicit environments are useful in packages because they allow you to maintain state across function calls. Normally, objects in a package are locked, so you can't modify them directly. Instead, you can do something like this:\nmy_env \u0026lt;- new.env(parent = emptyenv())\rmy_env$a \u0026lt;- 1\rget_a \u0026lt;- function() {\rmy_env$a\r}\rset_a \u0026lt;- function(value) {\rold \u0026lt;- my_env$a\rmy_env$a \u0026lt;- value\rinvisible(old)\r}\r Returning the old value from setter functions is a good pattern because it makes it easier to reset the previous value in conjunction with on.exit() (see more in on exit).\n  As a hashmap. A hashmap is a data structure that takes constant, O(1), time to find an object based on its name. Environments provide this behaviour by default, so can be used to simulate a hashmap. See the CRAN package hash for a complete development of this idea.\n  \u0026lt;\u0026lt;- The ancestors of an environment have an important relationship to \u0026lt;\u0026lt;-. The regular assignment arrow, \u0026lt;-, always creates a variable in the current environment. The deep assignment arrow, \u0026lt;\u0026lt;-, never creates a variable in the current environment, but instead modifies an existing variable found by walking up the parent environments.\nx \u0026lt;- 0\rf \u0026lt;- function() {\rx \u0026lt;\u0026lt;- 1\r}\rf()\rx\r#\u0026gt; [1] 1\r If \u0026lt;\u0026lt;- doesn't find an existing variable, it will create one in the global environment. This is usually undesirable, because global variables introduce non-obvious dependencies between functions. \u0026lt;\u0026lt;- is most often used in conjunction with a closure, as described in Closures.\nExercises   What does this function do? How does it differ from \u0026lt;\u0026lt;- and why might you prefer it?\nrebind \u0026lt;- function(name, value, env = caller_env()) {\rif (identical(env, empty_env())) {\rstop(\u0026quot;Can't find `\u0026quot;, name, \u0026quot;`\u0026quot;, call. = FALSE)\r} else if (env_has(env, name)) {\renv_poke(env, name, value)\r} else {\rrebind(name, value, env_parent(env))\r}\r}\rrebind(\u0026quot;a\u0026quot;, 10)\r#\u0026gt; Error: Can't find `a`\ra \u0026lt;- 5\rrebind(\u0026quot;a\u0026quot;, 10)\ra\r#\u0026gt; [1] 10\r   Quiz answers   There are four ways: every object in an environment must have a name; order doesn't matter; environments have parents; environments have reference semantics.\n  The parent of the global environment is the last package that you loaded. The only environment that doesn't have a parent is the empty environment.\n  The enclosing environment of a function is the environment where it was created. It determines where a function looks for variables.\n  Use caller_env() or parent.frame().\n  \u0026lt;- always creates a binding in the current environment; \u0026lt;\u0026lt;- rebinds an existing name in a parent of the current environment.\n  term global environment :總體環境 package environments imports environment   You might wonder why rlang has env_poke() instead of env_set(). This is for consistency: _set() functions return a modified copy; _poke() functions modify in place.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n NB: ?environment uses frame in a different sense: \u0026quot;Environments consist of a frame, or collection of named objects, and a pointer to an enclosing environment.\u0026quot;. We avoid this sense of frame, which comes from S, because it's very specific and not widely used in base R. For example, the \u0026quot;frame\u0026quot; in parent.frame() is an execution context, not a collection of named objects.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  "},
{"uri": "/blogR//rlang/2_1_%E8%AE%80%E6%AA%94%E5%AF%AB%E6%AA%94.html","title": "2.1 讀檔寫檔",
	"tags": [],
	"description": "讀檔寫檔",
	"content": "讀檔 基本輸入和輸出 😜參考第4部分字串一節\n print() cat() sprintf()  a\u0026lt;-\u0026quot;hello\u0026quot;\rprint(a)\r#\u0026gt; [1] \u0026quot;hello\u0026quot;\rprint(\u0026quot;hello\u0026quot;)\r#\u0026gt; [1] \u0026quot;hello\u0026quot;\rb\u0026lt;-'陌生人'\rprint(b)\r#\u0026gt; [1] \u0026quot;陌生人\u0026quot;\rprint('hello')\r#\u0026gt; [1] \u0026quot;hello\u0026quot;\rcat(a)\r#\u0026gt; hello\rcat(b)\r#\u0026gt; 陌生人\rcat(\u0026quot;陌生人\u0026quot;)\r#\u0026gt; 陌生人\rc\u0026lt;-paste0(a,b)\rprint(c)\r#\u0026gt; [1] \u0026quot;hello陌生人\u0026quot;\rc\u0026lt;-paste0(a,\u0026quot; \u0026quot;,b)\rprint(c)\r#\u0026gt; [1] \u0026quot;hello 陌生人\u0026quot;\r print(),cat()雖然在上面的例子看起來一樣。但是初學者推薦使用print()。\n cat() 認識字串中的換行符號\\n, print() 不認識 如果有多個字串,使用cat()的時候,可以設定cat(..., sep=\u0026quot;\\n\u0026quot;)。  \r補充\rcat()通常是在檔案處理的時候。在C類的語言中,鍵盤和螢幕都屬於檔案-特殊檔案,一種只能讀出,一種只能寫入,抽象觀念的描述是串流。 使用範例如下:\nsink(\u0026quot;foobar.txt\u0026quot;) # \u0026lt;span data-nopre class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span data-nopre class=\u0026quot;tooltiptext\u0026quot; \u0026gt;從這個指令開始,所有流向螢幕的輸出都輸出到檔案foobar.txt \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\rcat('\u0026quot;foo\u0026quot;\\n')\rcat('\u0026quot;bar\u0026quot;')\rsink() #\u0026lt;span data-nopre class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span data-nopre class=\u0026quot;tooltiptext\u0026quot; \u0026gt;結束 \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\r 檔案內容是:\n\u0026quot;foo\u0026quot;\r\u0026quot;bar\u0026quot;\r  一行指令完成上述程式碼  cat('\u0026quot;foo\u0026quot;', '\u0026quot;bar\u0026quot;', file=\u0026quot;foobar.txt\u0026quot;, sep=\u0026quot;\\n\u0026quot;)\r  如果檔案已經存在,還要添加,那麼就加上參數append=T  cat('\u0026quot;foo\u0026quot;', file=\u0026quot;foobar.txt\u0026quot;, append=TRUE)\rcat('\u0026quot;bar\u0026quot;', file=\u0026quot;foobar.txt\u0026quot;, append=TRUE)\r  僅僅查看檔案內容  測試中文檔案的指令  readLines(logf, encoding=\u0026quot;UTF-8\u0026quot;) writeLines(字串, 檔案名稱, useBytes=T)    \r展開\rreadLines()的範例\ndir(system.file())\r#\u0026gt; [1] \u0026quot;CITATION\u0026quot; \u0026quot;demo\u0026quot; \u0026quot;DESCRIPTION\u0026quot;⛳ \u0026quot;help\u0026quot; #\u0026gt; [5] \u0026quot;html\u0026quot; \u0026quot;INDEX\u0026quot; \u0026quot;Meta\u0026quot; \u0026quot;R\u0026quot; res \u0026lt;- readLines(system.file(\u0026quot;DESCRIPTION\u0026quot;, package=\u0026quot;MASS\u0026quot;)) \u0026lt;span data-nopre class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span data-nopre class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏甚麼是DESCRIPTION? 看上面的dir(system.file()) 輸出 \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\rlength(res)\r  \r可以用來練習的文字檔\r\rJournals.csv\r\rsample1.csv\r\rsample2.csv\r\rsample3.csv\r\rsimple.csv\r\rsmoker.csv\r\rtrees91.csv\r\rwh.csv\r\rwh_zh_950.csv\r\rwh_zh_utf8.csv\r\r 注意檔案內容第一行不是資料,而是欄位。\nfile.show(\u0026quot;resources/wh.csv\u0026quot;)會打開excel\n也可以利用殼層指令:\nsystem(\u0026quot;cat resources/wh.csv\u0026quot;)，但是如果內容是中文,顯示結果會變成亂碼。\n上面兩種方法,可能會覺得有點多餘,因為在視窗介面中,直接按兩下就可以打該檔案。但是，有時候檔案很大,一般的編輯器打不開但是又不知道是甚麼格式，這時可以使用可以指定讀入長度的指令readChar()\ncat(readChar(\u0026quot;resources/wh.csv\u0026quot;, 1e5))\r#\u0026gt; Warning in readChar(\u0026quot;resources/wh.csv\u0026quot;, 1e+05): 在非 UTF-8 MBCS 語區中只能以位元\r#\u0026gt; 組為單位讀取\r#\u0026gt; # this is a test file\r#\u0026gt; height,weight,sex\r#\u0026gt; 156,56, m\r#\u0026gt; 167,., f\r#\u0026gt; 189,70, m\r#\u0026gt; 180,, f\r 利用useBytes 不會出現警告\ncat(readChar(\u0026quot;resources/wh_zh_utf8.csv\u0026quot;, useBytes=TRUE,1e5)) #\u0026gt; Error in cat(readChar(\u0026quot;resources/wh_zh_utf8.csv\u0026quot;, useBytes = TRUE, 1e+05)): 無效的多位元組字串於 '\u0026lt;e9\u0026gt;\u0026lt;99\u0026gt;\u0026lt;e6\u0026gt;皜祈岫瑼\u0026lt;94\u0026gt;\r#\u0026gt; 頨恍\u0026lt;ab\u0026gt;\u0026lt;98\u0026gt;,擃\u0026lt;87\u0026gt;\u0026lt;8d\u0026gt;,\u0026lt;e6\u0026gt;批\r#\u0026gt; 156,56,\u0026lt;e7\u0026gt;\r#\u0026gt; 167,66,憟\u0026lt;b3\u0026gt;\r#\u0026gt; 189,70,\u0026lt;e7\u0026gt;\r#\u0026gt; 180,,憟\u0026lt;b3\u0026gt;\r#\u0026gt; '\r ❌參數有useBytes,但是不管TRUE/FALSE，都是中文亂碼\n✔正解:\nx\u0026lt;-readChar(\u0026quot;resources/wh_zh_utf8.csv\u0026quot;, useBytes=TRUE,1e5)\rEncoding(x)\u0026lt;-\u0026quot;UTF-8\u0026quot;\rcat(x)\r#\u0026gt; #這是測試檔\r#\u0026gt; 身高,體重,性別\r#\u0026gt; 156,56,男\r#\u0026gt; 167,66,女\r#\u0026gt; 189,70,男\r#\u0026gt; 180,,女\r 如果要轉碼: ❓iconv(x,\u0026quot;UTF-8\u0026quot;,\u0026quot;zh_TW\u0026quot;)\n\r\rcsv 範例 \rwh.csv的內容\r# this is a test file\rheight,weight,sex\r156,56, m\r167,., f\r189,70, m\r180,, f\r\r rst = read.csv('resources/wh.csv',comment.char=\u0026quot;#\u0026quot;,na.string='.')\rwrite.csv(rst, file = \u0026quot;MyData.csv\u0026quot;,row.names=FALSE, quote=F)\rcat(readLines('MyData.csv'), sep = '\\n') # 🏷內建 readLine() \r#\u0026gt; height,weight,sex\r#\u0026gt; 156,56, m\r#\u0026gt; 167,NA, f\r#\u0026gt; 189,70, m\r#\u0026gt; 180,NA, f\rcat(readr::read_file(\u0026quot;MyData.csv\u0026quot;)) # 🏷利用套件readr \r#\u0026gt; height,weight,sex\r#\u0026gt; 156,56, m\r#\u0026gt; 167,NA, f\r#\u0026gt; 189,70, m\r#\u0026gt; 180,NA, f\r 一般的開檔/關檔過程 低階 大體上每個語言的開檔和關檔案的過程，都會利用到作業系統，因此會有開檔動作，從作業系統得到一個數字，這裡稱為檔案指標，然後利用這個指標，讀入文字或寫入文字，然後有一個關閉檔案的動作告訴作業系統，處理檔案結束。\n在R語言中，開檔不是open(),而是file：\ncon = file(filepath, \u0026quot;r\u0026quot;)\r開始讀寫操作\rclose(con)\r 迴圈一行一行讀入並寫到螢幕上\nprocessFile = function(filepath) {\rcon = file(filepath, \u0026quot;r\u0026quot;)\rwhile ( TRUE ) {\rline = readLines(con, n = 1) # 🏷n=1 每次讀入一行 \rif ( length(line) == 0 ) {\rbreak\r}\rprint(line)\r}\rclose(con)\r}\r 利用套件讀取excel的csv read.csv(\u0026quot;filename.csv\u0026quot;, #name of file\rheader = TRUE, #are there column names in 1st row?\rsep = \u0026quot;,\u0026quot;, #what separates rows?\ras.is = !stringsAsFactors, #關掉字元轉factor\rcolClasses = NA # to convert everything to character data set to \u0026quot;character\u0026quot;\rna.string = \u0026quot;NA\u0026quot; # could be \u0026quot;.\u0026quot; for SAS files\rskip = 0, #要跳過的前幾行數目\u0026gt;0\rstrip.white = TRUE, #擠掉空白,例如 \u0026quot; 0.1\u0026quot; = \u0026quot;0.1\u0026quot;\rfill = TRUE, #fill in rows that have unequal numbers of columns\rcomment.char = \u0026quot;#\u0026quot;, #註解不讀入\rstringsAsFactors = FALSE #比as.is 常用,關掉字元轉factor\r)\r read.csv()最簡單的用法是直接給檔案名稱,例如\nrst = read.csv('resources/wh.csv')\r 但是wh.csv 前面有幾行是註解\nreadLines('resources/wh.csv',n=3)\r 因此加上skip 參數\nrst = read.csv('resources/wh.csv',skip=1)\rhead(rst)\r#\u0026gt; height weight sex\r#\u0026gt; 1 156 56 m\r#\u0026gt; 2 167 . f\r#\u0026gt; 3 189 70 m\r#\u0026gt; 4 180 f\r 也可以利用參數comment.char\nrst = read.csv('resources/wh.csv',comment.char=\u0026quot;#\u0026quot;)\rhead(rst)\r#\u0026gt; height weight sex\r#\u0026gt; 1 156 56 m\r#\u0026gt; 2 167 . f\r#\u0026gt; 3 189 70 m\r#\u0026gt; 4 180 f\r 但是注意到weight這個欄位被轉為字串,因為有一個 \u0026quot;.\u0026quot; 。有些套裝軟體的CSV輸出將NA轉為\u0026quot;.\u0026quot;,因此\nrst = read.csv('resources/wh.csv',comment.char=\u0026quot;#\u0026quot;,na.string='.')\rhead(rst)\r#\u0026gt; height weight sex\r#\u0026gt; 1 156 56 m\r#\u0026gt; 2 167 NA f\r#\u0026gt; 3 189 70 m\r#\u0026gt; 4 180 NA f\r data.frame to CSV rst = read.csv('resources/wh.csv',comment.char=\u0026quot;#\u0026quot;,na.string='.') # 讀進來的檔案類別是 class(rst) = data.frame\rwrite.csv(rst, file = \u0026quot;MyData.csv\u0026quot;)\rreadLines(\u0026quot;MyData.csv\u0026quot;,n=3) #\u0026gt; [1] \u0026quot;\\\u0026quot;\\\u0026quot;,\\\u0026quot;height\\\u0026quot;,\\\u0026quot;weight\\\u0026quot;,\\\u0026quot;sex\\\u0026quot;\u0026quot; \u0026quot;\\\u0026quot;1\\\u0026quot;,156,56,\\\u0026quot; m\\\u0026quot;\u0026quot; #\u0026gt; [3] \u0026quot;\\\u0026quot;2\\\u0026quot;,167,NA,\\\u0026quot; f\\\u0026quot;\u0026quot;\r 如果row names不要寫進csv,可以利用參數 row.names=FALSE。\nrst = read.csv('resources/wh.csv',comment.char=\u0026quot;#\u0026quot;,na.string='.')\rwrite.csv(rst, file = \u0026quot;MyData.csv\u0026quot;,row.names=FALSE)\rreadLines(\u0026quot;MyData.csv\u0026quot;,n=3) #\u0026gt; [1] \u0026quot;\\\u0026quot;height\\\u0026quot;,\\\u0026quot;weight\\\u0026quot;,\\\u0026quot;sex\\\u0026quot;\u0026quot; \u0026quot;156,56,\\\u0026quot; m\\\u0026quot;\u0026quot; #\u0026gt; [3] \u0026quot;167,NA,\\\u0026quot; f\\\u0026quot;\u0026quot;\r rst = read.csv('resources/wh.csv',comment.char=\u0026quot;#\u0026quot;,na.string='.')\rwrite.csv(rst, file = \u0026quot;MyData.csv\u0026quot;,row.names=FALSE)\rreadLines(\u0026quot;MyData.csv\u0026quot;,n=3)  輸出是:\n[1] \u0026quot;\\\u0026quot;height\\\u0026quot;,\\\u0026quot;weight\\\u0026quot;,\\\u0026quot;sex\\\u0026quot;\u0026quot; [2] \u0026quot;156,56,\\\u0026quot; m\\\u0026quot;\u0026quot; [3] \u0026quot;167,NA,\\\u0026quot; f\\\u0026quot;\u0026quot;  可以看出來每一行都有雙引號表示字串。\n對照原來的文字檔(mData.csv)\n\u0026quot;height\u0026quot;,\u0026quot;weight\u0026quot;,\u0026quot;sex\u0026quot; 156,56,\u0026quot; m\u0026quot; 167,NA,\u0026quot; f\u0026quot; 189,70,\u0026quot; m\u0026quot; 180,NA,\u0026quot; f\u0026quot;  \r\r 上面sidebar中,顯示的的sex欄位,可以看見\u0026quot; m\u0026quot; 也就是有空白,問利用read.csv 讀入時,會是甚麼情況?  \r\r 如果輸出時,字串不要雙引號,則可以用quote=FALSE (自行對照上面的sidebar)  rst = read.csv('resources/wh.csv',comment.char=\u0026quot;#\u0026quot;,na.string='.')\rwrite.csv(rst, file = \u0026quot;MyData.csv\u0026quot;,row.names=FALSE, quote=F) # 🏷開關quote=F \rcat(readLines('MyData.csv'), sep = '\\n')\r  如果要指定NA的值,可以利用欄位=\u0026quot;\u0026quot;,否則預定是NA  rst = read.csv('resources/wh.csv',comment.char=\u0026quot;#\u0026quot;,na.string='.')\rwrite.csv(rst, file = \u0026quot;MyData.csv\u0026quot;,row.names=FALSE, na=\u0026quot;\u0026quot;) # 🏷輸出的文件中,這欄是空的 \rcat(readLines(\u0026quot;MyData.csv\u0026quot;), sep = '\\n')\r more 如果要更多的輸出控制可以參考可以write.table(). write.csv()函數,實際上會再呼叫write.table()函數。例如,欄位名稱也不要輸出的話,可以利用write.table()，要設定的參數如下: sep=”,” 和 col.names=FALSE,前者是CSV的主要分隔字元,後者則是不要欄位名稱。\nwrite.table(rst, file = \u0026quot;MyData.csv\u0026quot;,row.names=FALSE, na=\u0026quot;\u0026quot;,col.names=FALSE, sep=\u0026quot;,\u0026quot;)\rcat(readLines('MyData.csv'), sep = '\\n')\r R語言的檔案格式  name.rdb: a concatenation of serialized objects. name.rdx: file contains an index. name.rds the serialized R objects written by saveRDS name.rda(RData): 二進位R資料檔。(用load(name)載入)  如果不考慮存檔格式，那麼可以利用\nsave(v1,v2,...file=\u0026quot;myfile.RData\u0026quot;)\r...\rload(file=\u0026quot;myfie.RData\u0026quot;)\r 範例\n\u0026gt; x=3 #🏷我要暫時把這個結果x=3存檔,進行其他資料處理 \r\u0026gt; #.....do task\r\u0026gt; save(x,file=\u0026quot;xx\u0026quot;) # 🏷❓問題:存到哪? \r\u0026gt; dir(getwd()) # 🏷包括目錄(list.dir())和檔案(list.files()) \r[1] \u0026quot;desktop.ini\u0026quot; \u0026quot;foobar.txt\u0026quot; \u0026quot;My Music\u0026quot; \u0026quot;My Pictures\u0026quot;\r[5] \u0026quot;My Videos\u0026quot; \u0026quot;R\u0026quot; \u0026quot;xx\u0026quot; \u0026gt; x=5 #🏷看看等下從檔案載入進來的時候,會不會是原來的3\r\u0026gt; load(\u0026quot;xx\u0026quot;)\r\u0026gt; x\r[1] 3\r  📝 解答\nuserfolder\u0026lt;-??\rallfolder\u0026lt;-list.dir()\rokfolder\u0026lt;-allfolder[dir.exists(userfolder)]\r"},
{"uri": "/blogR//rlang/3_02_regular%E7%B7%B4%E7%BF%92.html","title": "3.02.regular練習",
	"tags": [],
	"description": "3_02_regular練習",
	"content": "#source(\u0026quot;../../themes/variant/utils/r/hugoup.R\u0026quot;)\r#knitr::opts_chunk$set(hugomd=T)\r#knitr::opts_chunk$set(collapse=T)\r 參考 不相關hugodown  目的 分解鍵值配對,例如 class=.w-75.ms-5,display=none有兩個配對,分別是\n class=.w-75.ms-5 display=none  有問題的示範 x.source=\u0026quot;class=.w-75.ms-5,display=none\u0026quot;\rregexec(\u0026quot;(.*)=(.*)[ |,]?\u0026quot;, x.source) #🏷❌ \r #\u0026gt; [[1]]\r#\u0026gt; [1] 1 1 26\r#\u0026gt; attr(,\u0026quot;match.length\u0026quot;)\r#\u0026gt; [1] 29 24 4\r#\u0026gt; attr(,\u0026quot;index.type\u0026quot;)\r#\u0026gt; [1] \u0026quot;chars\u0026quot;\r#\u0026gt; attr(,\u0026quot;useBytes\u0026quot;)\r#\u0026gt; [1] TRUE\r 對照\nclass=.w-75.ms-5,display=none\r12345678901234567890123456789\r1 2\r  全部 第一組 第二組     1 1 26   29 24 4     x.source=\u0026quot;class=.w-75.ms-5,display=none\u0026quot;\rnchar(x.source) # 🏷不是length() \r #\u0026gt; [1] 29\r matches = regexec(\u0026quot;(.*)=(.*)[ |,]?\u0026quot;, x.source) #🏷❌ \rx.source=\u0026quot;class=.w-75.ms-5,display=none\u0026quot;\rmatches=regexec(\u0026quot;(.*)=(.*)[ |,]?\u0026quot;, x.source)\rfor( m in matches){\rstart\u0026lt;-m\rlen\u0026lt;-attr(m,\u0026quot;match.length\u0026quot;)\rfor (idx in 1:length(start)){\rprint(substr(x.source,start[idx],start[idx]+len[idx]-1))\r}\r}\r #\u0026gt; [1] \u0026quot;class=.w-75.ms-5,display=none\u0026quot;\r#\u0026gt; [1] \u0026quot;class=.w-75.ms-5,display\u0026quot;\r#\u0026gt; [1] \u0026quot;none\u0026quot;\r 這裡只找到一個 正確的樣式之一:([^=,]+)=([^=,]+)\nx.source=\u0026quot;class=.w-75.ms-5,display=none\u0026quot;\rmatches = regexec(\u0026quot;([^=,]+)=([^=,]+)\u0026quot;, x.source)\rhugocmd(\u0026quot;expand\u0026quot; ,'title=\u0026quot;matches的內容\u0026quot; incode=true')\r #\u0026gt; \rmatches的內容\r```\r```r\rmatches ```\r```\r#\u0026gt; [[1]]\r#\u0026gt; [1] 1 1 7\r#\u0026gt; attr(,\u0026#34;match.length\u0026#34;)\r#\u0026gt; [1] 16 5 10\r#\u0026gt; attr(,\u0026#34;index.type\u0026#34;)\r#\u0026gt; [1] \u0026#34;chars\u0026#34;\r#\u0026gt; attr(,\u0026#34;useBytes\u0026#34;)\r#\u0026gt; [1] TRUE\r```\r```r\rhugocmd(m=\u0026#34;expand\u0026#34; ,end=T)\r```\r```\r#\u0026gt; \r for( m in matches){\rstart\u0026lt;-m\rlen\u0026lt;-attr(m,\u0026quot;match.length\u0026quot;)\rfor (idx in 1:length(start)){\rprint(substr(x.source,start[idx],start[idx]+len[idx]-1))\r}\r}\r #\u0026gt; [1] \u0026quot;class=.w-75.ms-5\u0026quot;\r#\u0026gt; [1] \u0026quot;class\u0026quot;\r#\u0026gt; [1] \u0026quot;.w-75.ms-5\u0026quot;\r class=.w-75.ms-5,display=none\r12345678901234567890123456789\r1 2\r ❓只找到一個keypair, 但是知道應該有兩個Key pair\n太麻煩,利用regmatches x.source=\u0026quot;class=.w-75.ms-5,display=none\u0026quot;\rmatches = regexec(\u0026quot;([^=,]+)=([^=,]+)\u0026quot;, x.source)\rregmatches(x.source, matches)\r #\u0026gt; [[1]]\r#\u0026gt; [1] \u0026quot;class=.w-75.ms-5\u0026quot; \u0026quot;class\u0026quot; \u0026quot;.w-75.ms-5\u0026quot;\r 全部找出來 x.source=\u0026quot;class=.w-75.ms-5,display=none\u0026quot;\rmatches = gregexec(\u0026quot;([^=,]+)=([^=,]+)\u0026quot;, x.source)\rmatches  x.source=\u0026quot;class=.w-75.ms-5,display=none\u0026quot;\rnchar(x.source) # 🏷不是length() \r #\u0026gt; [1] 29\r matches = gregexec(\u0026quot;([^=,]+)=([^=,]+)\u0026quot;, x.source)\rregmatches(x.source, matches)\r #\u0026gt; [[1]]\r#\u0026gt; [,1] [,2] #\u0026gt; [1,] \u0026quot;class=.w-75.ms-5\u0026quot; \u0026quot;display=none\u0026quot;\r#\u0026gt; [2,] \u0026quot;class\u0026quot; \u0026quot;display\u0026quot; #\u0026gt; [3,] \u0026quot;.w-75.ms-5\u0026quot; \u0026quot;none\u0026quot;\r #\u0026gt; [[1]]\r#\u0026gt; [,1] [,2]\r#\u0026gt; [1,] 1 18 #🏷keypair 2個,分別在位置1,18 \r#\u0026gt; [2,] 1 18 #🏷每組的KEY位置在1,18 \r#\u0026gt; [3,] 7 26 #🏷每組的value位置在7 26 \r 問題: 只要KEYVALUE ?\ntoken\u0026lt;-regmatches(x.source, matches)\rtoken\u0026lt;-unlist(token)\rkeyvalue= token[c(F,T,T)]\r"},
{"uri": "/blogR//rlang/4_1_1_type_basic.html","title": "4.1.1 type basic",
	"tags": [],
	"description": "主要介紹基本語法",
	"content": "基本操作  操作通常和資料結構相關,可以參考 資料結構\n 在R語言中,型態不須經過宣告(declared)。 一個變數的型態經由assignment的過程決定,即\u0026lt;-右邊的R-Objects。也就是在指派變數值的時候,同時決定了型態。\n基本的 R-object有 −\n Vectors Lists Matrices Arrays Factors Data Frames  最簡單的是vector物件,atomic vector 有6種data types(有時也叫做 6 個classes)\n Data Type Example     Logical TRUE, FALSE   Numeric 1.3, 5, 99   Integer 3L, 24L, 0L   Complex 5 + 4i   Character 'b' , \u0026quot;good\u0026quot;, \u0026quot;TRUE\u0026quot;, '23.4'   Raw \u0026quot;Hello\u0026quot; is stored as 48 65 6c 6c 6f    💡: 字元H對應的48怎麼來的? 利用JS驗證 \u0026quot;H\u0026quot;.charCodeAt(0).toString(16) ，在Ｒ中可以利用charToRaw(範例中)\r 數字(3種,例如整數、浮點、複數）,邏輯,字元(2種，character, raw)\nv \u0026lt;- TRUE print(class(v))\r#\u0026gt; [1] \u0026quot;logical\u0026quot;\rv \u0026lt;- 23.5\rprint(class(v))\r#\u0026gt; [1] \u0026quot;numeric\u0026quot;\rv \u0026lt;- 2L\rprint(class(v))\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\rv \u0026lt;- 2+5i\rprint(class(v))\r#\u0026gt; [1] \u0026quot;complex\u0026quot;\rv \u0026lt;- \u0026quot;TRUE\u0026quot;\rprint(class(v))\r#\u0026gt; [1] \u0026quot;character\u0026quot;\rv \u0026lt;- charToRaw(\u0026quot;Hello\u0026quot;)　#🏷👏同樣的中文字利用charToRaw()找出來的１６進位，會因為編碼而不同 \rprint(class(v))\r#\u0026gt; [1] \u0026quot;raw\u0026quot;\r 💡 數字３不是真也不是假\nisTRUE(3)\r#\u0026gt; [1] FALSE\risFALSE(3)\r#\u0026gt; [1] FALSE\r class(3),class(3.1) 的類別是甚麼？提示\r numeric\r指派 雖然也可以用=但是，R的設計是使用\u0026lt;-。\na \u0026lt;- 3\r a\u0026lt;-3是一個指派的敘述句,不會回饋資訊到螢幕上。如果要知道a的內容是甚麼,就打入a 或者(a\u0026lt;-3)\na\r#\u0026gt; [1] 3\r(a\u0026lt;-3)\r#\u0026gt; [1] 3\r 一般的數學函數\nb \u0026lt;- sqrt(a * a + 5)\rb\r#\u0026gt; [1] 3.741657\r 在session中的如果要列出已經定義過的變數,可以利用ls（相關函數rm）\nls()\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;base_name\u0026quot; #\u0026gt; [4] \u0026quot;cachepath\u0026quot; \u0026quot;collectOutputClass\u0026quot; \u0026quot;collectSourceClass\u0026quot; #\u0026gt; [7] \u0026quot;debugp\u0026quot; \u0026quot;hugocmd\u0026quot; \u0026quot;indir\u0026quot; #\u0026gt; [10] \u0026quot;infile\u0026quot; \u0026quot;knit_print.data.frame\u0026quot; \u0026quot;ohook_chunk\u0026quot; #\u0026gt; [13] \u0026quot;ohook_output\u0026quot; \u0026quot;ohook_source\u0026quot; \u0026quot;one_string\u0026quot; #\u0026gt; [16] \u0026quot;outfile\u0026quot; \u0026quot;parseOutputHead\u0026quot; \u0026quot;parseSourceHead\u0026quot; #\u0026gt; [19] \u0026quot;relativePath\u0026quot; \u0026quot;splitLines\u0026quot; \u0026quot;wprint\u0026quot;\r a\u0026lt;-3 或 a=3 的簡化說明 按照R的說明,等號只能用在top level,或是函數參數的指定。參考\n‹function_name›(‹argname› = ‹value›, …)\r‹function_name›(‹args›, ‹argname› = ‹value›, …)\r 例如\nmean(x\u0026lt;-1:10) #\u0026gt; [1] 5.5\rls() # \u0026lt;span data-nopre class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span data-nopre class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏在工作區會出現x變數 \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\rrm(x)　# \u0026lt;span data-nopre class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span data-nopre class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏從工作區移除變數x \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\rmean(x=1:10) #\u0026gt; [1] 5.5\rls() # \u0026lt;span data-nopre class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span data-nopre class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏工作區沒有x變數，這裡只是參數指定，在主控台敲入？mean可以看到參數有x \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\r \r\r運算 四則運算 參考實際操作\nLogical 邏輯類只有兩個值 TRUE and FALSE或是簡寫Ｔ，Ｆ:\na = TRUE\rtypeof(a)\r#\u0026gt; [1] \u0026quot;logical\u0026quot;\rb = FALSE\rtypeof(b)\r#\u0026gt; [1] \u0026quot;logical\u0026quot;\r R語言常用邏輯運算子  operator 說明     \u0026lt; less than   \u0026gt; great than   \u0026lt;= less than or equal   \u0026gt;= greater than or equal   == equal to   != not equal to   | entry wise or   || or   ! not   \u0026amp; entry wise and   \u0026amp;\u0026amp; and   xor(a,b) exclusive or     範例：不同的運算子，在個別元素和整個向量的運算結果不一樣：\na = c(TRUE, FALSE)\rb = c(FALSE, F)\ra | b\r#\u0026gt; [1] TRUE FALSE\ra || b\r#\u0026gt; [1] TRUE\ra \u0026amp; b\r#\u0026gt; [1] FALSE FALSE\ra \u0026amp;\u0026amp; b\r#\u0026gt; [1] FALSE\rxor(a, b)\r#\u0026gt; [1] TRUE FALSE\r a||b, a\u0026amp;\u0026amp;b 只比對a,b中的第一個元素。因此長度只有1個。✔如果是流程控制,大體上用的這兩種。\n\u0026amp; 和 | 比對元素,傳回長度為大小最長的那個。\n0為FALSE,而1為TRUE。在R中,判斷一個變數是否TRUE,要檢查好幾個地方,因此有提供內定的檢查函數✔isTRUE()\nx \u0026lt;- c(TRUE,FALSE,0,6)\ry \u0026lt;- c(FALSE,TRUE,FALSE,TRUE)\r!x\rx\u0026amp;y\rx\u0026amp;\u0026amp;y\rx|y\rx||y #\u0026lt;span data-nopre class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span data-nopre class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏常用於邏輯判斷式 \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\r 提示\r \u0026gt; x \u0026lt;- c(TRUE,FALSE,0,6)\r#\u0026gt; [1] 1 0 0 6\r\u0026gt; y \u0026lt;- c(FALSE,TRUE,FALSE,TRUE)\r#\u0026gt; [1] FALSE TRUE FALSE TRUE\r\u0026gt; !x\r#\u0026gt; [1] FALSE TRUE TRUE FALSE\r\u0026gt; x\u0026amp;y\r#\u0026gt; [1] FALSE FALSE FALSE TRUE\r\u0026gt; x\u0026amp;\u0026amp;y\r#\u0026gt; [1] FALSE\r\u0026gt; x|y\r#\u0026gt; [1] TRUE TRUE FALSE TRUE\r\u0026gt; x||y\r#\u0026gt; [1] TRUE\r \rx \u0026lt;- c(TRUE,FALSE,0,6,0) # 個數有５個\ry \u0026lt;- c(T,TRUE,FALSE,TRUE)　#　個數有４個\rx| y\r 解釋上面的結果\n 長度為甚麼是５ 最後一個為甚麼是Ｔ 如果x \u0026lt;- c(TRUE,FALSE,0,6,3) 然後問 x \u0026amp; y  提示\r 循環補足\r \u0026lt;-, \u0026lt;\u0026lt;-, =\t向左指派值。 -\u0026gt;, -\u0026gt;\u0026gt;\t向右指派值。  大部分情況下\u0026lt;- 和 = 在相同的環境下等價。 而\u0026lt;\u0026lt;- 用來指派值給親代環境下的變數。\n邏輯函數 is.family 函數，可以用來判定變數是什麼型態，傳回真假值，例如\na = c(1, 2, 3)\ris.numeric(a)\r#\u0026gt; [1] TRUE\ris.factor(a)\r#\u0026gt; [1] FALSE\ris.character(a)\r#\u0026gt; [1] FALSE\r 函數which()哪些元素不一致\nwhich(A != C)\r#\u0026gt; Error in which(A != C): 找不到物件 'A'\r 函數all() 是不是向量內所有元素都是Ｔ\nall(A==B)\r#\u0026gt; Error in eval(expr, envir, enclos): 找不到物件 'A'\rall(A==C)\r#\u0026gt; Error in eval(expr, envir, enclos): 找不到物件 'A'\r which(),all()裡面的參數其實都是邏輯向量。\r\r\r註解：但是R語言的向量運算，涉及自動填充循環，因此注意下面的計算結果\nD \u0026lt;- c(\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;,\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;)\rE \u0026lt;- c(\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;)\rall(D==E)\r#\u0026gt; [1] TRUE\rall(length(D)==length(E)) \u0026amp;\u0026amp; all(D==E)\r#\u0026gt; [1] FALSE\r 函數identical(a,b) a,b 是否相等,比較的是除了a,b的內容以外,💡還有a b 的型態。例如，identical(1,as.integer(1)) 結果是F,因為 前者是double,後者是整數。\nidentical(1,as.integer(1)) #\u0026gt; [1] FALSE\rtypeof(1)\r#\u0026gt; [1] \u0026quot;double\u0026quot;\ridentical(1L,as.integer(1)) #\u0026gt; [1] TRUE\r 1.\n3==\u0026quot;3\u0026quot;\r#\u0026gt; [1] TRUE\ridentical(3,\u0026quot;3\u0026quot;)\r#\u0026gt; [1] FALSE\r 2.\nA \u0026lt;- c(\u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;C\u0026quot;, \u0026quot;D\u0026quot;)\rB \u0026lt;- A\rC \u0026lt;- c(\u0026quot;A\u0026quot;, \u0026quot;C\u0026quot;, \u0026quot;C\u0026quot;, \u0026quot;E\u0026quot;)\rA==B\r#\u0026gt; [1] TRUE TRUE TRUE TRUE\rA==C #\u0026gt; [1] TRUE FALSE TRUE FALSE\ridentical(A,B) # 🏷👏只有一個真假值 \r#\u0026gt; [1] TRUE\ridentical(A,C)\r#\u0026gt; [1] FALSE\r   0.1+0.2 == 0.3 #F\r#\u0026gt; [1] FALSE\ridentical(0.1+0.2 , 0.3) #F\r#\u0026gt; [1] FALSE\r identical 可以和後面的函數all.equal函數比較。\n函數練習：\n將上面可能造成誤判的情況，寫成函數先判斷是否長度相等，然後判斷元素相等，可以和identical()比較。提示\r hint: 利用length\na \u0026lt;- character(0)\ridentical(a, character(0)) # returns TRUE\ridentical(a, \u0026quot;\u0026quot;) # returns FALSE\ridentical(a, numeric(0)) # returns also FALSE\r \r實數的比較 函數all.equal()\nx \u0026lt;- seq(0, 1, by = 0.2)\ry \u0026lt;- seq(0, 1, by = 0.2)\ry[4]\r#\u0026gt; [1] 0.6\rx[3]\r#\u0026gt; [1] 0.4\r1 - x[3]\r#\u0026gt; [1] 0.6\ry[4] == 1 - x[3]\r#\u0026gt; [1] FALSE\ry[4] \u0026gt; 1 - x[3]\r#\u0026gt; [1] TRUE\r## note:\rall.equal(y[4], 1 - x[3])　#\u0026gt; [1] TRUE\r## Q: what is the result of : 1-0.4 ==0.6\r 0.1+0.2 == 0.3 #⛳註解 \r#\u0026gt; [1] FALSE\rall.equal(0.1+0.2,0.3)\r#\u0026gt; [1] TRUE\r nx1\u0026lt;-numeric(0)\rnx2\u0026lt;-3\ris.null(nx1) # F,因為nx1是空向量(長度為0的數字向量)\r#\u0026gt; [1] FALSE\ris.na(nx1) # logical(0),每個元素檢查是不是NA,但是現在是空向量,所以結果是logical(0)\r#\u0026gt; logical(0)\rtypeof(nx1) # double\r#\u0026gt; [1] \u0026quot;double\u0026quot;\rtypeof(nx2) # double\r#\u0026gt; [1] \u0026quot;double\u0026quot;\rlength(nx1) # 0 #\u0026gt; [1] 0\rlength(nx2) # 1\r#\u0026gt; [1] 1\r 甚麼時候用到is.null提示\r config \u0026lt;- list()\ris.null(config) # \u0026lt;span data-nopre class=\u0026quot;codenote nopre\u0026quot;\u0026gt;🏷\u0026lt;span data-nopre class=\u0026quot;tooltiptext\u0026quot; \u0026gt;👏是empty(空的)list物件,但不是null(虛的) \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\r#\u0026gt; [1] FALSE\ris.null(config$name)\r#\u0026gt; [1] TRUE\r 空的和虛的有甚麼差別? 一個是在記憶體有位置,一個是沒有。\r\r\r\rvector 利用c函數，可以使用vector存放一個以上的數字。\na = c(1, 2, 3, 4, 5)\ra1 = 1:5\r 有關vector的運算:加減乘除等等\na = c(1, 2, 3, 4, 5)\ra+1\r#\u0026gt; [1] 2 3 4 5 6\ra-1\r#\u0026gt; [1] 0 1 2 3 4\ra/2\r#\u0026gt; [1] 0.5 1.0 1.5 2.0 2.5\ra*3\r#\u0026gt; [1] 3 6 9 12 15\r mean(a)\r#\u0026gt; [1] 3\rvar(a)\r#\u0026gt; [1] 2.5\rsummary(a)\r#\u0026gt; Min. 1st Qu. Median Mean 3rd Qu. Max. #\u0026gt; 1 2 3 3 4 5\r note: 對比stata sum a 指令,summary(a) 返回的是一個table物件。可以指派給變數,因此計算結果可以經由變數(類別為table)存取。\nlist的元素,利用中括號\na = 2:6\ra[1]\r#\u0026gt; [1] 2\ra[2]\r#\u0026gt; [1] 3\ra[0]\r#\u0026gt; integer(0)\ra[6]\r#\u0026gt; [1] NA\r 在R中,的最小的索引值為1base.如果給索引為0,可以知道資料是否被排序。 超出索引範圍得到\u0026quot;NA。\na=2:6\rx = a[6]\r 如何判斷是否NA\nx == NA\r#\u0026gt; [1] NA\r 上面的比較沒有意義,和NA的任何運算都是NA\nr = x == NA\rr\r#\u0026gt; [1] NA\r 結論:任何變數和NA運算,結果還是NA\n另一種方法\nprint(x == NA)\r#\u0026gt; [1] NA\r 如何判斷NA ? is.na()\nis.na(a[6])\r#\u0026gt; [1] TRUE\r \r\r初始化向量,可以利用a\u0026lt;-10 或指定numeric(double)型態\na \u0026lt;- numeric(10) a\r#\u0026gt; [1] 0 0 0 0 0 0 0 0 0 0\r 如果想要知到變數的資料型別,利用函數typeof()\ntypeof()函數回傳的結果是\u0026quot;字串\u0026quot;\ntypeof(a) # 結果是\u0026quot;double\u0026quot;\r#\u0026gt; [1] \u0026quot;double\u0026quot;\rs = typeof(a)\rs\r#\u0026gt; [1] \u0026quot;double\u0026quot;\rtypeof(s) #結果是 \u0026quot;character\u0026quot;\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r 字串  參考\n 建立字串 可以是 雙引號中\u0026quot; 或 單引號中'。 字串中如果有雙引號,或單引號，則如下表示:\n\u0026quot;'這個'來自'那個'\u0026quot;\na \u0026lt;- \u0026quot;hello\u0026quot;\ra\r#\u0026gt; [1] \u0026quot;hello\u0026quot;\rtypeof(a) #[1] \u0026quot;character\u0026quot; #\u0026gt; [1] \u0026quot;character\u0026quot;\ris.vector(a) #[1] TRUE\r#\u0026gt; [1] TRUE\r 利用函數:character() 這個函數的參數為整數,建立一個vector(不是list),裡面的元素都是空字串,例如character(5)。\n# 變數ex初始化為character vector,參看後面的討論\r(ex \u0026lt;- character(0))\r#\u0026gt; character(0)\ris.null(ex) #🏷不是null,這是一個指標 \r#\u0026gt; [1] FALSE\rlength(ex)\r#\u0026gt; [1] 0\rclass(ex)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r# 如果剛剛沒有設定ex \u0026lt;- character(0),這裡會發生錯誤\r(ex[1] \u0026lt;- \u0026quot;first\u0026quot;)\r#\u0026gt; [1] \u0026quot;first\u0026quot;\r# check its length again\rlength(ex)\r#\u0026gt; [1] 1\r(ex[4] \u0026lt;- \u0026quot;fourth\u0026quot;) # 🏷索引可以用跳的: \r#\u0026gt; [1] \u0026quot;fourth\u0026quot;\rlength(ex)\r#\u0026gt; [1] 4\rtypeof(ex)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\rex\r#\u0026gt; [1] \u0026quot;first\u0026quot; NA NA \u0026quot;fourth\u0026quot;\r 跳過的索引,內容自動為NA.\n空字串 引號內連空白都沒有的字串: (比較上面利用character(5)可以建立5個元素為空字串的vector。)\n# empty string\rempty_str \u0026lt;- \u0026quot;\u0026quot;\rempty_str\r#\u0026gt; [1] \u0026quot;\u0026quot;\r# class\rclass(empty_str)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r 探討character(0) 前面說character(2),可以傳回長度2,每個元素都是空白字串\u0026quot;\u0026quot;的向量,那麼character(0)是甚麼? 除了前面提到的變數初始化為向量(也許可以說是向量宣告) 例如,整數也是這樣\nzz\u0026lt;-integer(0)\rzz[4]=6\rzz\r#\u0026gt; [1] NA NA NA 6\r 這裡利用分別使用typeof, str,class,is對character(0)做一些測試:\nex1\u0026lt;-character(0) ex2\u0026lt;-\u0026quot;\u0026quot;\rtypeof(ex1) # 🏷都是向量 \r#\u0026gt; [1] \u0026quot;character\u0026quot;\rtypeof(ex2)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r 函數str()用來顯示R物件的結構:\nstr(ex1) #\u0026gt; chr(0)\rstr(ex2) #🏷前面看起來都是向量,但是這裡有更多資訊 chr(0),\u0026#34;\u0026#34; \r#\u0026gt; chr \u0026quot;\u0026quot;\r class(ex1)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\rclass(ex2)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r is.list(ex1)\r#\u0026gt; [1] FALSE\ris.list(ex2)\r#\u0026gt; [1] FALSE\r 👹 0或１個字元也是向量。\nis.vector(ex1)　#T\r#\u0026gt; [1] TRUE\ris.vector(ex2) #T\r#\u0026gt; [1] TRUE\r length(ex1)\r#\u0026gt; [1] 0\rlength(ex2)\r#\u0026gt; [1] 1\r is.null(ex1) #F\r#\u0026gt; [1] FALSE\ris.null(ex2) #F\r#\u0026gt; [1] FALSE\ris.na(ex1) #\u0026gt; 🏷logical(0) 說這是邏輯向量,但是長度0 \r#\u0026gt; logical(0)\ris.na(ex2) #\u0026gt; FALSE\r#\u0026gt; [1] FALSE\r 最後,這兩個是不是相等\nex1==ex2\r#\u0026gt; logical(0)\r 字串和vector  vector 一般指的是只放元素為數字的陣列(array)，在EXCEL中利用陣列表示vector;而陣列是可以存數字和文字的區域。(EXCEL 的table是有欄位的陣列)。 但是在R語言中,vector 只是元素型態相同即可(後述)[#whatisvector]\n a \u0026lt;- \u0026quot;hello\u0026quot;\ra\r#\u0026gt; [1] \u0026quot;hello\u0026quot;\rtypeof(a)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r b \u0026lt;- c(\u0026quot;hello\u0026quot;, \u0026quot;there\u0026quot;)\rb\r#\u0026gt; [1] \u0026quot;hello\u0026quot; \u0026quot;there\u0026quot;\rb[1]\r#\u0026gt; [1] \u0026quot;hello\u0026quot;\rtypeof(b)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r (a = character(5)) # 產生5個空字串\r#\u0026gt; [1] \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot;\r(b = letters[1:4]) # 注意,letters不是函數\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot;\rletters\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; \u0026quot;e\u0026quot; \u0026quot;f\u0026quot; \u0026quot;g\u0026quot; \u0026quot;h\u0026quot; \u0026quot;i\u0026quot; \u0026quot;j\u0026quot; \u0026quot;k\u0026quot; \u0026quot;l\u0026quot; \u0026quot;m\u0026quot; \u0026quot;n\u0026quot; \u0026quot;o\u0026quot; \u0026quot;p\u0026quot; \u0026quot;q\u0026quot; \u0026quot;r\u0026quot; \u0026quot;s\u0026quot;\r#\u0026gt; [20] \u0026quot;t\u0026quot; \u0026quot;u\u0026quot; \u0026quot;v\u0026quot; \u0026quot;w\u0026quot; \u0026quot;x\u0026quot; \u0026quot;y\u0026quot; \u0026quot;z\u0026quot;\rtypeof(letters)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\rclass(letters)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r ⛳註解  因為c函數的運算結果為vector,因此下例中,其元素都是字串（前面講過在Ｒ中的vector必須是同類）\n(a\u0026lt;-c(\u0026quot;d\u0026quot;,4,TRUE))\r#\u0026gt; [1] \u0026quot;d\u0026quot; \u0026quot;4\u0026quot; \u0026quot;TRUE\u0026quot;\r 問題: 怎樣知道r是空集合?\ny \u0026lt;- letters[1:3] z \u0026lt;- letters[4:6] r\u0026lt;-intersect(y,z) r\r#\u0026gt; character(0)\ris.na(r)\r#\u0026gt; logical(0)\rlength(r)\r#\u0026gt; [1] 0\r 另外,當vector有多個字串,而使用索引0的時候,也會出現 character(0),例如:\nstring \u0026lt;- c('sun', 'sky', 'clouds')\rstring[0]\r#\u0026gt; character(0)\r 更多vector 相關的運算 連續數字可以利用操作元:,例如:\nx \u0026lt;- 1:7; x\ry \u0026lt;- 2:-2; y\r 比較複雜的序列可以利用函數 seq() ,例如\nseq(1, 3, by=0.2) # specify step size\r#\u0026gt; [1] 1.0 1.2 1.4 1.6 1.8 2.0 2.2 2.4 2.6 2.8 3.0\rseq(1, 5, length.out=4) # specify length of the vector\r#\u0026gt; [1] 1.000000 2.333333 3.666667 5.000000\r 練習範例 Q1. a,a1,a2 屬於甚麼型態\na = 1:4\ra1 = c(1, 2, 3, 4)\ra2 = numeric(4)\r 提示\r A1: 只是要記住函數typeof\rQ2:a3的長度是甚麼?2,或6\na1\u0026lt;-c(1,2,3)\ra2\u0026lt;-c(2,3,4)\ra3\u0026lt;-c(a1,a2)\r 提示\r HINT: 只是要記住函數length a1 a2 a3;length(a3)\ra = character(5)\rb\u0026lt;-\u0026quot;12345\u0026quot;\rc\u0026lt;-c(\u0026quot;1\u0026quot;,\u0026quot;2\u0026quot;,\u0026quot;3\u0026quot;,\u0026quot;4\u0026quot;,\u0026quot;5\u0026quot;)\r 問\n length(a),length(b),length(c)分別是多少？ nchar(a),nchar(b),nchar(c)?  提示\r 提示 length: 5,1,5 nzchar: 0,0,0,0,0, 5,0,0,0,0,0\r如何存取vector中的元素 元素索引可以利用 logical, integer or character vector.\n如果利用整數索引,則從1開始.但是,如果索引值給的是負數(例如-2),則除了2號元素以外,都會被傳回。但是不能同時有正負。同時,浮點數會被truncated。\n\u0026gt; x\r[1] 0 2 4 6 8 10\r\u0026gt; x[3] # access 3rd element\r[1] 4\r\u0026gt; x[c(2, 4)] # access 2nd and 4th element\r[1] 2 6\r\u0026gt; x[-1] # access all but 1st element\r[1] 2 4 6 8 10\r\u0026gt; x[c(2, -4)] # 不能混合正負\rError in x[c(2, -4)] : only 0's may be mixed with negative subscripts\r\u0026gt; x[c(2.4, 3.54)] # real numbers are truncated to integers\r[1] 2 4\r 篩選 篩選陣列中的元素🏷👏可以應用在抽樣 。例如\n\u0026gt; x[c(TRUE, FALSE, FALSE, TRUE)]\r[1] -3 3\r\u0026gt; x[x \u0026lt; 0] # filtering vectors based on conditions\r[1] -3 -1\r\u0026gt; x[x \u0026gt; 0]\r[1] 3\r 實際寫程式示範 kind\u0026lt;-c(\u0026quot;水壺\u0026quot;,\u0026quot;鐵網\u0026quot;)\rx\u0026lt;-rnorm(10)　#10 random number\rkind[x\u0026lt;0.5] # 預計小於５可以抽出來（因為我記得可以循環補）\r#\u0026gt; [1] \u0026quot;水壺\u0026quot; NA NA NA NA NA NA\r 這是甚麼？👺😒\n#\u0026gt; [1] \u0026quot;鐵網\u0026quot; NA NA NA NA NA NA NA\r 可是我記得數字可以，例如\nkind\u0026lt;-c(\u0026quot;水壺\u0026quot;,\u0026quot;鐵網\u0026quot;)\rx\u0026lt;-c(1,2,1,2,1,1)\rkind[x]  執行結果 💯\n[1] \u0026quot;水壺\u0026quot; \u0026quot;鐵網\u0026quot; \u0026quot;水壺\u0026quot; \u0026quot;鐵網\u0026quot; \u0026quot;水壺\u0026quot; \u0026quot;水壺\u0026quot;\r ❓❓❓❓❓ 那我記得，真假值可以轉０，１成位數字，所以\nkind[as.numeric(x\u0026lt;0.5)]\r 結果\n[1] \u0026quot;水壺\u0026quot; \u0026quot;水壺\u0026quot; \u0026quot;水壺\u0026quot; \u0026quot;水壺\u0026quot; \u0026quot;水壺\u0026quot; \u0026quot;水壺\u0026quot; \u0026quot;水壺\u0026quot;\r 為甚麼❓提示\r 因為Ｒ是１為基底\nkind[as.numeric(x\u0026lt;0.5)+1]\r#\u0026gt; [1] \u0026quot;鐵網\u0026quot; \u0026quot;水壺\u0026quot; \u0026quot;水壺\u0026quot; \u0026quot;鐵網\u0026quot; \u0026quot;鐵網\u0026quot; \u0026quot;鐵網\u0026quot; \u0026quot;鐵網\u0026quot; \u0026quot;鐵網\u0026quot; \u0026quot;鐵網\u0026quot; \u0026quot;水壺\u0026quot;\r \r利用字串( character vector) 作為索引 每個元素可以有名稱:\n\u0026gt; x \u0026lt;- c(\u0026quot;first\u0026quot;=3, \u0026quot;second\u0026quot;=0, \u0026quot;third\u0026quot;=9)\r\u0026gt; x\r#\u0026gt; first second third #\u0026gt; 3 0 9 \u0026gt; class(x) # 注意:不是list #\u0026gt; [1] \u0026quot;numeric\u0026quot;\r\u0026gt; names(x)\r#\u0026gt; [1] \u0026quot;first\u0026quot; \u0026quot;second\u0026quot; \u0026quot;third\u0026quot; \u0026gt; x[\u0026quot;second\u0026quot;]\r#\u0026gt; second #\u0026gt; 0 \u0026gt; x[c(\u0026quot;first\u0026quot;, \u0026quot;third\u0026quot;)]\r#\u0026gt; first third #\u0026gt; 3 9\r a\u0026lt;-c(x=1:2,y=3:4)\ra[\u0026quot;x1\u0026quot;] # 不是a[x1]\r#\u0026gt; x1 #\u0026gt; 1\r ❓ a[\u0026quot;x1\u0026quot;]哪裡來的x1?提示\r \u0026gt; a\r#\u0026gt; x1 x2 y1 y2 #\u0026gt; 1 2 3 4\r\u0026gt; names(a)\r\u0026gt; # [1] \u0026quot;x1\u0026quot; \u0026quot;x2\u0026quot; \u0026quot;y1\u0026quot; \u0026quot;y2\u0026quot;\r \r[] 和[[]]的差別:\n原來的type是甚麼(例如,list 或vector),[]只是返回子集合(仍然是list或vector),但是[[]]則是返回內容.\n\u0026gt; x \u0026lt;- c(a = 1, b = 2, c = 3)\r\u0026gt; x[\u0026quot;a\u0026quot;]\r#\u0026gt; a #\u0026gt; 1 \u0026gt; x[[\u0026quot;a\u0026quot;]]\r#\u0026gt; [1] 1\r\u0026gt; x[1]\r#\u0026gt; a #\u0026gt; 1 \u0026gt; x[[1]]\r#\u0026gt; [1] 1\r 💡例如,我只要陣列的值,則x[[1]]可以用來去掉names。 和list的區別是\n $ 不必有\u0026quot;\u0026quot;  a1\u0026lt;-list(x=1:2,y=3:4)\ra1$x\r#\u0026gt; [1] 1 2\r \r\r怎樣變動矩陣向量? We can modify a vector using the assignment operator.\nWe can use the techniques discussed above to access specific elements and modify them.\nIf we want to truncate the elements, we can use reassignments.\n\u0026gt; x\r#\u0026gt; [1] -3 -2 -1 0 1 2\r\u0026gt; x[2] \u0026lt;- 0; x # 只改變第二個元素\r#\u0026gt; [1] -3 0 -1 0 1 2\r\u0026gt; x[x\u0026lt;0] \u0026lt;- 5; x # 將小於0的值,都改成5\r#\u0026gt; [1] 5 0 5 0 1 2\r\u0026gt; x \u0026lt;- x[1:4]; x # 只要1到4\r#\u0026gt; [1] 5 0 5 0\r How to delete a Vector? We can delete a vector by simply assigning a NULL to it.\n\u0026gt; x\r#\u0026gt; [1] -3 -2 -1 0 1 2\r\u0026gt; x \u0026lt;- NULL\r\u0026gt; x\r#\u0026gt; NULL\r\u0026gt; x[4]\r#\u0026gt; NULL\r 練習 ❓怎樣產生下面的向量?\nx\ra b a b a \u0026lt;NA\u0026gt; 1 2 3 4 5 6  提示\r x\u0026lt;-seq(1,5)\rnames(x)\u0026lt;-rep(c(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;),2)\r \r型態操作  判定型態 is family  is.numeric(), is.integer(), and is.double()   型態轉換 as family  a\u0026lt;-c(TRUE,FALSE)\ras.numeric(a)\r#\u0026gt; [1] 1 0\ran\u0026lt;-as.logical(a)\ran\r#\u0026gt; [1] TRUE FALSE\r assignment 練習\nhw1\nstructure \u0026amp; attributes 函數structure(data, ...)\n使用方法 先看一下範例\ncode=\u0026quot;這是範例\u0026quot;\rx=structure(list(src = code), ddd = 'source') x\r#\u0026gt; $src\r#\u0026gt; [1] \u0026quot;這是範例\u0026quot;\r#\u0026gt; attr(,\u0026quot;ddd\u0026quot;) 🏷這是第二個參數添進來的 \r#\u0026gt; [1] \u0026quot;source\u0026quot;\r 再看另一個範例\ndata=\u0026quot;這是範例\u0026quot; 🏷只是字串 \rx=structure(data, ddd = 'source') 🏷添加屬性ddd \rx 🏷看內容 \r#\u0026gt; [1] \u0026quot;這是範例\u0026quot;\r#\u0026gt; attr(,\u0026quot;ddd\u0026quot;)\r#\u0026gt; [1] \u0026quot;source\u0026quot;\rattributes(data) 🏷看看屬性 \r#\u0026gt; NULL 🏷data仍然是data,沒有新增的屬性\rattributes(x) 🏷傳回來的不僅有原來的data,還多了一個屬性\r#\u0026gt; $ddd\r#\u0026gt; [1] \u0026quot;source\u0026quot;\r 白話文就是 假設data是一個物件,則structure(data,xxx=\u0026quot;dd\u0026quot;),會根據這個物件再添加一個屬性xxx,然後傳回這個物件。\n因此要注意的是class這個attribute。在Ｒ中，class有另一個意思，用來代表物件類別（例如要自訂類別，可以利用這個class)\ndata=\u0026quot;string\u0026quot;\rclass(data)\r#\u0026gt; character 🏷這是字串 \rx=structure(data,class=\u0026quot;risk\u0026quot;) #🏷👏現在物件x的類別不再是字串，而是類別risk \rclass(x)\r#\u0026gt; risk 🏷此時的類別被變更成risk \r "},
{"uri": "/blogR//rlang/4_1_2_type%E7%B7%B4%E7%BF%92.html","title": "4.1.2_type練習",
	"tags": [],
	"description": "4_1_1_type練習",
	"content": "在R中,options()經常用來設定總體變數,例如套件blogdown可以設定options(blogdown.method = 'custom')。\n如果想要知道目前的設定情況,可以下指令options()，例如\noptions() # 🏷註解這是在視窗下執行的結果 \r \r`options()`的執行結果\r$add.smooth\r[1] TRUE\r$blogdown.author\r[1] \u0026quot;\u0026quot;\r$blogdown.ext\r[1] \u0026quot;.md\u0026quot;\r$blogdown.filename.pre_processor\r[1] NA\r$blogdown.files_filter\r[1] NA\r$blogdown.generator\r[1] NA\r$blogdown.hugo.args\r[1] NA\r$blogdown.hugo.dir\r[1] NA\r$blogdown.hugo.server\r[1] NA\r$blogdown.hugo.version\r[1] \u0026quot;0.84.4\u0026quot;\r$blogdown.initial_files\r[1] NA\r$blogdown.knit.on_save\r[1] TRUE\r$blogdown.knit.serve_site\r[1] NA\r(...省略...)\r$warning.length\r[1] 1000\r$width\r[1] 80\r$windowsTimeouts\r[1] 100 500\r  如上可以知道有一大串列表,如果我只想知道套件blogdown的設定列表，要怎樣做? 也就是怎樣篩選出我要的設定?\n 解法1:利用grep(),grepl() 解法2:sapply , 也是用到grep() 不能用 %in%  可以參考這裡\n提示\r  解法1  olist\u0026lt;-options() # list\rokey\u0026lt;-names(olist) # vector # \u0026quot;blogdown\u0026quot; %in% okey\ridx\u0026lt;-grep(\u0026quot;blogdown\u0026quot;,okey)\rolist[idx]\r #\u0026gt; $blogdown.method\r#\u0026gt; [1] \u0026quot;markdown\u0026quot;\r#\u0026gt; #\u0026gt; $blogdown.serve_site.startup\r#\u0026gt; [1] FALSE\r  解法2:看一下為甚麼不能用 %in%  olist\u0026lt;-options() # list\rokey\u0026lt;-names(olist) # vector rst \u0026lt;- sapply(okey,function(item){\u0026quot;blogdown\u0026quot; %in% unlist(strsplit(item,\u0026quot;\\\\.\u0026quot;)) })\rolist[rst]\r #\u0026gt; $blogdown.method\r#\u0026gt; [1] \u0026quot;markdown\u0026quot;\r#\u0026gt; #\u0026gt; $blogdown.serve_site.startup\r#\u0026gt; [1] FALSE\r  解釋這行: rst \u0026lt;- sapply(okey,function(item){\u0026quot;blogdown\u0026quot; %in% unlist(strsplit(item,\u0026quot;\\\\.\u0026quot;)) })\n  \\\\.而不是只有. strsplit()執行的結果是一個list而分離的元素在第一個node所以,用unlist %in%的用法  v=c(\u0026quot;1.2\u0026quot;,\u0026quot;1.3\u0026quot;)\r\u0026quot;1\u0026quot; %in% v\r #\u0026gt; [1] FALSE\r \r⛳註解 ❓在主控台上的比較多,但是在rmarkdown chunk只有看到幾個,因為在rmarkdown中沒有載入blogdown套件。\n練習:找出目前的語系 利用l10n_info() 找出目前的語系,而不是一連串真假值。提示\r l10n_info()[2:3][(l10n_info()[2:3])==TRUE]\r \r"},
{"uri": "/blogR//rlang/4_1_3_type_list.html","title": "4.1.3 type list",
	"tags": [],
	"description": "基本語法",
	"content": "List Lists 是一個R物件。其元素內容可以是不同型態,例如 numbers, strings, vectors,matrix 或者是另一個 list，甚至是函數。\n建立 List 函數list() 可以建立list. list()中的參數用逗點隔開,幾個參數就幾個Node。\nlist_data \u0026lt;- list(\u0026quot;Red\u0026quot;, \u0026quot;Green\u0026quot;, c(21,32,11), TRUE, 51.23, 119.1)\rprint(list_data)\r#\u0026gt; [[1]]\r#\u0026gt; [1] \u0026quot;Red\u0026quot;\r#\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] \u0026quot;Green\u0026quot;\r#\u0026gt; #\u0026gt; [[3]]\r#\u0026gt; [1] 21 32 11\r#\u0026gt; #\u0026gt; [[4]]\r#\u0026gt; [1] TRUE\r#\u0026gt; #\u0026gt; [[5]]\r#\u0026gt; [1] 51.23\r#\u0026gt; #\u0026gt; [[6]]\r#\u0026gt; [1] 119.1\r 給串列中的每個元素命名 list中的元素可以命名,然後經由名稱存取。\n#建立串列,其中的原素有向量,矩陣,和一個串列\rlist_data \u0026lt;- list(c(\u0026quot;Jan\u0026quot;,\u0026quot;Feb\u0026quot;,\u0026quot;Mar\u0026quot;), matrix(c(3,9,5,1,-2,8), nrow = 2),\rlist(\u0026quot;green\u0026quot;,12.3))\r# 給每個NODE命名\rnames(list_data) \u0026lt;- c(\u0026quot;1st Quarter\u0026quot;, \u0026quot;A_Matrix\u0026quot;, \u0026quot;A Inner list\u0026quot;)\r#Show the list.\rprint(list_data)\r#\u0026gt; $`1st Quarter`\r#\u0026gt; [1] \u0026quot;Jan\u0026quot; \u0026quot;Feb\u0026quot; \u0026quot;Mar\u0026quot;\r#\u0026gt; #\u0026gt; $A_Matrix\r#\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 3 5 -2\r#\u0026gt; [2,] 9 1 8\r#\u0026gt; #\u0026gt; $`A Inner list`\r#\u0026gt; $`A Inner list`[[1]]\r#\u0026gt; [1] \u0026quot;green\u0026quot;\r#\u0026gt; #\u0026gt; $`A Inner list`[[2]]\r#\u0026gt; [1] 12.3\r 帶名的vector和list ,白話文意思就是將每個元素命名。\nx=c(1,2,3)\rnames(x)\u0026lt;-c('a','b','c')\rx\r#\u0026gt; a b c #\u0026gt; 1 2 3\r    這裡討論一下為甚麼在R語言堅持\u0026lt;-而不是=的一個原因\n一般的程式語言,不會用到這種文法,例如,在其他程式語言中,直覺上應該是有一個names(),然後用法如下:\nnames(x,c('a','b','c') )\r 👹因此\u0026lt;-不類似指派,而是類似流向某個物件的屬性。\n\r\rnames()的參數如果是matrix,被命名的就是欄位(直行)或是紀錄(橫行)?答案是以上皆非 .而是給每個元素命名。\nx\u0026lt;-matrix(runif(9),nrow=3)\rnames(x)\u0026lt;-c('a','b','c')\rx\r#\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 0.5272366 0.7559570 0.4475868\r#\u0026gt; [2,] 0.6230506 0.2389823 0.3489261\r#\u0026gt; [3,] 0.8714734 0.3764245 0.2046041\r#\u0026gt; attr(,\u0026quot;names\u0026quot;)\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; NA NA NA NA NA NA\r names \u0026amp; matrix\r\r\rrownames(x)\u0026lt;-c('x','y','z')\rprint(x,row.names=T)\r#\u0026gt; [,1] [,2] [,3]\r#\u0026gt; x 0.5272366 0.7559570 0.4475868\r#\u0026gt; y 0.6230506 0.2389823 0.3489261\r#\u0026gt; z 0.8714734 0.3764245 0.2046041\r#\u0026gt; attr(,\u0026quot;names\u0026quot;)\r#\u0026gt; [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; NA NA NA NA NA NA\r 圖\r\r\r❓問:在上面的例子中x是一個矩陣,x[\u0026quot;a\u0026quot;]會傳回甚麼?\n📝 必須是x[[\u0026quot;a\u0026quot;]]傳回的才是純量,否則仍然是一個list\n但是在data.frame的結構中,names()\u0026lt;- 給定的是欄位名稱\nxd\u0026lt;-data.frame(x)\rnames(xd)\u0026lt;-c('a','b','c')\rxd\r#\u0026gt; a b c\r#\u0026gt; x 0.5272366 0.7559570 0.4475868\r#\u0026gt; y 0.6230506 0.2389823 0.3489261\r#\u0026gt; z 0.8714734 0.3764245 0.2046041\r 存取 List 元素 # 3個元素,分別是list, matrix, list\rlist_data \u0026lt;- list(c(\u0026quot;Jan\u0026quot;,\u0026quot;Feb\u0026quot;,\u0026quot;Mar\u0026quot;), matrix(c(3,9,5,1,-2,8), nrow = 2),\rlist(\u0026quot;green\u0026quot;,12.3))\r# 給名稱\rnames(list_data) \u0026lt;- c(\u0026quot;1st Quarter\u0026quot;, \u0026quot;A_Matrix\u0026quot;, \u0026quot;A Inner list\u0026quot;)\r# Access the first element of the list.\rprint(list_data[1])\r#\u0026gt; $`1st Quarter`\r#\u0026gt; [1] \u0026quot;Jan\u0026quot; \u0026quot;Feb\u0026quot; \u0026quot;Mar\u0026quot;\r# Access the thrid element. As it is also a list, all its elements will be printed.\rprint(list_data[3])\r#\u0026gt; $`A Inner list`\r#\u0026gt; $`A Inner list`[[1]]\r#\u0026gt; [1] \u0026quot;green\u0026quot;\r#\u0026gt; #\u0026gt; $`A Inner list`[[2]]\r#\u0026gt; [1] 12.3\r# Access the list element using the name of the element.\rprint(list_data$A_Matrix)\r#\u0026gt; [,1] [,2] [,3]\r#\u0026gt; [1,] 3 5 -2\r#\u0026gt; [2,] 9 1 8\r list 元素的存取可以是[[]] 或 $ 例如x[[\u0026quot;a\u0026quot;]], x$a。\n一個主要分別是,list中的號碼索引,也是名稱,例如,向量矩陣都可以是x[1]拿到純量,但是list x[1]拿到的仍然是list。\r\r\r處理list 元素 list的加入和刪除,只能在尾端，但是更改資料不受限制。\n# Create a list containing a vector, a matrix and a list.\rlist_data \u0026lt;- list(c(\u0026quot;Jan\u0026quot;,\u0026quot;Feb\u0026quot;,\u0026quot;Mar\u0026quot;), matrix(c(3,9,5,1,-2,8), nrow = 2),\rlist(\u0026quot;green\u0026quot;,12.3))\r# Give names to the elements in the list.\rnames(list_data) \u0026lt;- c(\u0026quot;1st Quarter\u0026quot;, \u0026quot;A_Matrix\u0026quot;, \u0026quot;A Inner list\u0026quot;)\r# 加入元素\rlist_data[4] \u0026lt;- \u0026quot;New element\u0026quot;\rprint(list_data[4])\r#\u0026gt; [[1]]\r#\u0026gt; [1] \u0026quot;New element\u0026quot;\r# 🔑移除最後一個元素\rlist_data[4] \u0026lt;- NULL\r# Print the 4th Element.\rprint(list_data[4])\r#\u0026gt; $\u0026lt;NA\u0026gt;\r#\u0026gt; NULL\r# Update the 3rd Element.\rlist_data[3] \u0026lt;- \u0026quot;updated element\u0026quot;\rprint(list_data[3])\r#\u0026gt; $`A Inner list`\r#\u0026gt; [1] \u0026quot;updated element\u0026quot;\r Merging Lists You can merge many lists into one list by placing all the lists inside one list() function.\n# Create two lists.\rlist1 \u0026lt;- list(1,2,3)\rlist2 \u0026lt;- list(\u0026quot;Sun\u0026quot;,\u0026quot;Mon\u0026quot;,\u0026quot;Tue\u0026quot;)\r# Merge the two lists.\rmerged.list \u0026lt;- c(list1,list2)\r# Print the merged list.\rprint(merged.list)\r#\u0026gt; [[1]]\r#\u0026gt; [1] 1\r#\u0026gt; #\u0026gt; [[2]]\r#\u0026gt; [1] 2\r#\u0026gt; #\u0026gt; [[3]]\r#\u0026gt; [1] 3\r#\u0026gt; #\u0026gt; [[4]]\r#\u0026gt; [1] \u0026quot;Sun\u0026quot;\r#\u0026gt; #\u0026gt; [[5]]\r#\u0026gt; [1] \u0026quot;Mon\u0026quot;\r#\u0026gt; #\u0026gt; [[6]]\r#\u0026gt; [1] \u0026quot;Tue\u0026quot;\r ❓ 在大部分程式語言中,向量的意思,只要元素同型態就行。又，我們已經知道,函數c可以產生向量。上面的程式碼中,利用c將兩個list 合併,我們按照大部分程式語言的觀念知道,既然元素都是相同型態(都是list),那就是2個元素，但是現在是6個,為甚麼?\n👍 函數c()是一個多型函數(物件語言中的講法就是根據參數的不同,而有不同的結果)。這裡的結果是6個元素。每個元素都是list(證明:list)。\n\r\r ❓如果要2個?  📝 那就是merged.list2\u0026lt;-list(list1,list2)。   ❓ merge.list\u0026lt;-c(x,y) 中的merge是不是物件的意思?  👍 不是。只是個合法的變數。    \r\r❓ 寫一個函數,合併兩個list,但是要求兩個list中有同名的元素必須是第2個中的名稱。例如 list(a=1,b=2,c=3), list(b=4) 合併後變成 a=1,b=4,c=3。\n📝\nmerge_list = function(x, y) {\rx[names(y)] = y\rx\r}\r \r\rList 轉 Vector 函數 unlist()\n# Create lists.\rlist1 \u0026lt;- list(1:5) # 🏷不是產生5個NODEL的串列,而是先產生5個元素的向量,然後放到第一個節點 \rprint(list1)\r#\u0026gt; [[1]]\r#\u0026gt; [1] 1 2 3 4 5\rlist2 \u0026lt;-list(10:14)\rprint(list2)\r#\u0026gt; [[1]]\r#\u0026gt; [1] 10 11 12 13 14\r# Convert the lists to vectors.\rv1 \u0026lt;- unlist(list1)\rv2 \u0026lt;- unlist(list2)\rprint(v1)\r#\u0026gt; [1] 1 2 3 4 5\rprint(v2)\r#\u0026gt; [1] 10 11 12 13 14\r# Now add the vectors\rresult \u0026lt;- v1+v2\rprint(result)\r#\u0026gt; [1] 11 13 15 17 19\r ❓ 如果是list中的內容有不一樣的型態呢?例如\nx\u0026lt;-list(\u0026quot;a\u0026quot;,1)\ry\u0026lt;-unlist(x)\rtypeof (y)\r#\u0026gt; [1] \u0026quot;character\u0026quot;\r \r\r比較vector, list中,字串的問題  Q length()函數可以知道vector,list 的長度,但是為甚麼length(\u0026quot;hello\u0026quot;)的長度是1?  a\u0026lt;-c(\u0026quot;hello\u0026quot;,\u0026quot;r\u0026quot;)\rlength(a) #💡\r#\u0026gt; [1] 2\rlength(a[1]) #💡\r#\u0026gt; [1] 1\rlength(a[[1]]) #💡\r#\u0026gt; [1] 1\rnchar(a[1]) #🔑\r#\u0026gt; [1] 5\rlength(\u0026quot;hello\u0026quot;) #❓\r#\u0026gt; [1] 1\r 圖\r\r\r Q  a\u0026lt;-list(\u0026quot;hello\u0026quot;,\u0026quot;r\u0026quot;)\rlength(a)\r#\u0026gt; [1] 2\rlength(a[1])\r#\u0026gt; [1] 1\rlength(a[[1]])\r#\u0026gt; [1] 1\rtypeof(\u0026quot;xxx\u0026quot;) #💡\r#\u0026gt; [1] \u0026quot;character\u0026quot;\rtypeof(1) #💡\r#\u0026gt; [1] \u0026quot;double\u0026quot;\rtypeof(1L) #💡\r#\u0026gt; [1] \u0026quot;integer\u0026quot;\r 上面兩個答案的問題,和R怎樣建立字串有關 📝總之,字串長度函數🔑nchar()。\ndata set build in List of pre-loaded data data()\r Loading a built-in R data\ndata(mtcars)  nrow(mtcars)\r#\u0026gt; [1] 32\rncol(mtcars)\r#\u0026gt; [1] 11\r 練習 拿元素 [ 大概涵蓋了所有存取元素的方法參考\n❓如果資料如下,\n\u0026gt; data\rV1 V2\r1 12.448 13.919\r2 22.242 4.606\r3 24.509 0.176\r 則下面指令分別拿到甚麼?\ndata[1,1]\rdata[1,\u0026quot;V1\u0026quot;]\rdata$V1[1]\rdata[[1]][1]\rdata[[\u0026quot;V1\u0026quot;]][1]\r"},
{"uri": "/blogR//rlang/4_4_1_json.html","title": "4.4.1 json",
	"tags": [],
	"description": "4.4.1 json",
	"content": "if(!require(\u0026quot;rjson\u0026quot;)){\rinstall.packages(\u0026quot;rjson\u0026quot;)\r}\r#\u0026gt; 載入需要的套件：rjson\rx \u0026lt;- list( alpha = 1:5, beta = \u0026quot;Bravo for nonthing\u0026quot;, gamma = list(a=1:3, b=NULL), delta = c(TRUE, FALSE) )\rjson \u0026lt;- toJSON( x )\rhugocmd(\u0026quot;expand\u0026quot; ,'title=\u0026quot;\u0026quot; incode=true')\r#\u0026gt; \r展開\rjson# \u0026lt;span data-nopre class=\u0026#34;codenote nopre\u0026#34;\u0026gt;🏷\u0026lt;span data-nopre class=\u0026#34;tooltiptext\u0026#34; \u0026gt; 你好 \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\r#\u0026gt; [1] \u0026#34;{\\\u0026#34;alpha\\\u0026#34;:[1,2,3,4,5],\\\u0026#34;beta\\\u0026#34;:\\\u0026#34;Bravo for nonthing\\\u0026#34;,\\\u0026#34;gamma\\\u0026#34;:{\\\u0026#34;a\\\u0026#34;:[1,2,3],\\\u0026#34;b\\\u0026#34;:null},\\\u0026#34;delta\\\u0026#34;:[true,false]}\u0026#34;\rhugocmd(m=\u0026#34;expand\u0026#34; ,end=T)\r#\u0026gt; \rfromJSON( json )\r#\u0026gt; $alpha\r#\u0026gt; [1] 1 2 3 4 5\r#\u0026gt; #\u0026gt; $beta\r#\u0026gt; [1] \u0026quot;Bravo for nonthing\u0026quot;\r#\u0026gt; #\u0026gt; $gamma\r#\u0026gt; $gamma$a\r#\u0026gt; [1] 1 2 3\r#\u0026gt; #\u0026gt; $gamma$b\r#\u0026gt; NULL\r#\u0026gt; #\u0026gt; #\u0026gt; $delta\r#\u0026gt; [1] TRUE FALSE\r"},
{"uri": "/blogR//rlang/8_1_%E8%87%AA%E8%A3%BD%E5%A5%97%E4%BB%B6.html","title": "8.1. 自製套件",
	"tags": [],
	"description": "8_1_自製套件",
	"content": "相關 自製 package  R 包製作 package example R packages book on documentation\n(Hilary Parker's is the classic), and if you're in the second camp you probably already know what you're doing (and if not, Hadley Wickham's R packages book is an excellent and thorough guide).  測試debug  RTVS debug 互動R document  自製 package 範例  本範例中package 只有一個data.frame,一個函數. 執行完package.seleton()以後,必須在man子目錄中修改每個RD檔案,title裡面必須有內容。 然後才執行build()  範例需要的檔案： trees91.csv\nrm(list = ls())\rufc \u0026lt;- read.csv('./resource/trees91.csv')\rvol.m3 \u0026lt;- function(dbh.cm, height.m, multiplier = 0.5) {\rvol.m3 \u0026lt;- pi * (dbh.cm / 200) ^ 2 * height.m * multiplier\rreturn(vol.m3)\r}\rpackage.skeleton(name = \u0026quot;xxx\u0026quot;, path = \u0026quot;./packages\u0026quot;, force = TRUE)\rlibrary(devtools)\rbuild(\u0026quot;./packages/xxx\u0026quot;)\rbuild(\u0026quot;./packages/xxx\u0026quot;, binary = TRUE)\r 套件的目錄結構 Rstudio, package devtools , RMD 常識。\n 最少須需要兩個子目錄 最小的套件一般包括一個根目錄，下有一個子目錄R\\，一個檔案 DESCRIPTION(package叫什麼名子，依賴於哪些其他套件). 當載入套件的時候，會執行套件中位於子目錄R/中的.R。 也可以包含資料  資料一般位於子目錄 data/ 中。副檔名一般是.RData, .csv, .R。但是不受限制。    note: 2,3 的不同是，後者直接導入global空間。\n上面的做法，可以藉由套件的幫助達成達成，例如利用devtools 建立骨架(package skeleton)\n 建立套件骨架 devtools::create('~/mypackage'). 編輯 DESCRIPTION. 程式碼放入子目錄 R/.  工作流程 測試 如果目前的工作目錄就是套件根目錄，那麼加入資料和寫完程式碼以後，就可以使用指令devtools::load_all()，如果是在Rstudio中,直接利用install and restart 就可以載入修改完以後的惡驗。。可以參考這裡。\nInstalled package workflow 如果套件已經安裝，並且被其他的專案中使用，那麼程式碼變動的話，就必須3個步驟\n Edit code (or add data). Re-generate documentation and namespace: devtools::document('/path/to/pkg') Install: devtools::install('/path/to/pkg'). Reload: devtools::reload(inst('pkg')).  Documentation and exports 當套建立用指令library()載入時，預設上，所有的變數和函數都是 private 並不會被加入到 global環境。 而檔案NAMESPACE 則是用來指定要__public__的函數。 如果不想要手動編輯檔案NAMESPACE，則可以使用特殊指令，產生如下的格式：\n#' Short description of what this does\r#'\r#' Longer description of what this does. Approximately a paragraph.\r#'\r#' @param x The first thing\r#' @param y The second thing.\r#' @return The thing that comes out of this function\r#'\r#' @export (do export this in NAMESPACE)\ra_function \u0026lt;- function(x,y) {\rreturn x+y\r}\r 然後利用指令， devtools::document(), 會自動更新 NAMESPACE 並建立函數相關的說明檔。例如， man/a_function.Rd. 這樣這個函數，就像其他一般的函數一樣，可以求助，也可以在指令library()之後呼叫調用。\n如果只是自行測試，指令 devtools::load_all()就可以了。 但是通常要散發，也就是利用 devtools::install() 安裝套件。\n資料放入套件 最簡單的方法，直接將資料檔 (.RData, .csv, etc.)置於 data/子目錄。\n比較不會出錯的方式是利用usethis套件（取代舊版 devtools )。 基本上用到兩個函數\nuserthis::use_data_raw()\ruserthis::use_data()\r  usethis::use_data_raw()，會建立子目錄data-raw/: 在data-raw/子目錄中，放進非R格式的資料，例如，csv檔案。 處理資料的程式碼，任意Rscript 名稱，然後手動執行，（不會被自動執行）置於 data-raw/ ，如下：  experiment1 \u0026lt;-\rread.csv('expt1.csv') usethis::use_data(experiment1)\r This saves data/experiment1.RData in your package directory (make sure you've setwd() to the package directory...)\n測試:  #library(dplyr)\r#library(devtools)\rdevtools::load_all()\rexperiment1 %\u0026gt;% head()\r## or use data() to put it in the global environment\rdata(\u0026quot;experiment1\u0026quot;)\r"},
{"uri": "/blogR//rlang/9_1_plot02.html","title": "9.1 Plot more",
	"tags": [],
	"description": "基本語法",
	"content": "更多繪圖 繪圖區中的字串 函數 text() 在繪圖區填入字串,簡化的指令如下:\ntext(x, y, labels)\nx and y: 文字座標;\nlabels: 例如 \u0026quot;a label\u0026quot;\npos: 下左上右，1234\ncex: 放大倍數，例如，0.65。\n範例 :\nd\u0026lt;-head(mtcars)\rplot(d[,'wt'], d[,'mpg'], main=\u0026quot;Milage vs. Car Weight\\n~~~~~~~~~~~~~~~~~~~\u0026quot;,\rxlab=\u0026quot;Weight\u0026quot;, ylab=\u0026quot;Miles/(US) gallon\u0026quot;,\rpch=19, col=\u0026quot;darkgreen\u0026quot;)\rtext(d[,'wt'], d[,'mpg'], row.names(d), cex=1,pos=3,col=\u0026quot;red\u0026quot;)  在圖形margin中填入文字 mtext(text, side=3) text : 例如\u0026quot;a label\u0026quot; side : 哪一側 :\n順時針 1: 下 2: 左 3: 上 4: 又\n範例 :\nplot(1:10, 1:10, main=\u0026quot;mtext(...) examples\\n~~~~~~~~~~~\u0026quot;)\rmtext(\u0026quot;Magic function\u0026quot;, side=3)\r Add mathematical annotation to a plot plot(1:10, 1:10, main=\u0026quot;text(...) examples\\n~~~~~~~~~~~\u0026quot;)\rtext(4, 9, expression(hat(beta) == (X^t * X)^{-1} * X^t * y))\rtext(7, 4, expression(bar(x) == sum(frac(x[i], n), i==1, n)))\r 函數畫圖 eq = function(x){x*x}\rplot(eq(1:1000), type='l')\r 問題是如果x座標的增加不是1單位?\nx\u0026lt;-seq(1,10,0.1)\ry\u0026lt;-exp(x)\rx\u0026lt;-y\req = function(x){x*x}\rplot(x,eq(x), type='l')\r plot()的參數可以是y 或兩個參數(x,y),但是函數curv()的第一個參數是expr,不是y。\n㊙️ 如果不指定from,to,或者add=T,內定是從0到1。\neq = function(x){x*x}\rcurve(eq, from=1, to=50, xlab=\u0026quot;x\u0026quot;, ylab=\u0026quot;y\u0026quot;)\r  ❓1 解釋下面兩個程式區塊為何錯誤?如何修正?  eq = function(x){x*x}\ry\u0026lt;-eq(1:50)\rcurve(y, xlab=\u0026quot;x\u0026quot;, ylab=\u0026quot;y\u0026quot;)\r#\u0026gt; Error in y(x): 沒有這個函式 \u0026quot;y\u0026quot;\r  ❓2下面的錯誤?  eq = function(x){x*x}\rz\u0026lt;-1:50\rcurve(eq(z), xlab=\u0026quot;x\u0026quot;, ylab=\u0026quot;y\u0026quot;)\r Error in curve(eq(z), xlab = \"x\", ylab = \"y\") : 'expr' must be a function, or a call or an expression containing 'x'\n💯上面的eq() (㊙️ 這個參數會被轉成expression 而這個表達式需要symbol x),而函數中的變數如果是z就找不到然後發生錯誤。\nsolution:\ncurve(eq(z),xname=\u0026quot;z\u0026quot;, xlab=\u0026quot;x\u0026quot;, ylab=\u0026quot;y\u0026quot;)\r plot example 正常\npolyred = curve(dnorm(x), xlim = c(-4,4)) polygon(polyred$x, polyred$y, col = \u0026quot;red\u0026quot;)\r ❓ 解釋下面兩個,第一個是錯的\n❌ 這不是我們要的圖\neq = function(x){x*x}\ry\u0026lt;-eq(1:50)\rcurve(eq, 1,50,xlab=\u0026quot;x\u0026quot;, ylab=\u0026quot;y\u0026quot;,lwd=5,col=\u0026quot;yellow\u0026quot;)\rpolygon(1:50,y,lty=2,col=\u0026quot;red\u0026quot;)\r ⭕\neq = function(x){x*x}\ry\u0026lt;-eq(1:50)\rcurve(eq, 1,50,xlab=\u0026quot;x\u0026quot;, ylab=\u0026quot;y\u0026quot;,lwd=5,col=\u0026quot;yellow\u0026quot;)\rpolygon(c(1:50,50),c(y,0),lty=2,col=\u0026quot;red\u0026quot;)\r 💯 第一個點和最後一個點會連在一起。然後填色。\nrug set.seed(3)\rx \u0026lt;- rbeta(150, 3, 25)\r#png(\u0026quot;rug.png\u0026quot;)\rhist(x)\rrug(quantile(x)[2:4], col=2, lwd=2.5) # 預設是 \u0026quot;0%\u0026quot; \u0026quot;25%\u0026quot; \u0026quot;50%\u0026quot; \u0026quot;75%\u0026quot; \u0026quot;100%\u0026quot;\r set.seed(3)\rx \u0026lt;- rbeta(150, 3, 25)\r#png(\u0026quot;rug.png\u0026quot;)\rhist(x)\rabline(v= quantile(x)[2:4],lty=\u0026quot;dotted\u0026quot;,col=\u0026quot;red\u0026quot; )\rxpos= quantile(x)[2:4]\rtext(xpos[1],0, \u0026quot;25%\u0026quot;)\rtext(xpos[2],0, \u0026quot;50%\u0026quot;)\rtext(xpos[3],0, \u0026quot;75%\u0026quot;)\r 練習 par(mfrow=c(2,2))\rplot(dnorm(x),xlim=c(-4,4))\rplot(pnorm(x),xlim=c(-4,4))\rplot(qnorm(x),xlim=c(-4,4))\rplot(rnorm(x),xlim=c(-4,4))\r 圖形存檔 可以利用menu存檔，例如File -\u0026gt; Save As. 也可以利用函數：  Function Output to     pdf(\u0026quot;mygraph.pdf\u0026quot;) pdf file   win.metafile(\u0026quot;mygraph.wmf\u0026quot;) windows metafile   png(\u0026quot;mygraph.png\u0026quot;) png file   jpeg(\u0026quot;mygraph.jpg\u0026quot;) jpeg file   bmp(\u0026quot;mygraph.bmp\u0026quot;) bmp file   postscript(\u0026quot;mygraph.ps\u0026quot;) postscript file    \n# Give the chart file a name.\rpng(file = \u0026quot;scatterplot_matrices.png\u0026quot;)\r# Plot the matrices between 4 variables giving 12 plots.\r# One variable with 3 others and total 4 variables.\rpairs(~wt+mpg+disp+cyl,data = mtcars,\rmain = \u0026quot;Scatterplot Matrix\u0026quot;)\r# Save the file.\rdev.off()\r "},
{"uri": "/blogR//economics/mc_%E5%9F%BA%E6%9C%AC.html","title": "MC_基本",
	"tags": [],
	"description": "MC_基本",
	"content": "亂數 # Sample from a standard normal RV with sample size n=5:\rrnorm(5)\r# A different sample from the same distribution:\rrnorm(5)\r# Set the seed of the random number generator and take two samples:\rset.seed(6254137)\rrnorm(5)\rrnorm(5)\r# Reset the seed to the same value to get the same samples again:\rset.seed(6254137)\rrnorm(5)\rrnorm(5)\r 抽樣 rbinom(10,1,0.5) # Bernouli rnorm(10) # normal\r 重複抽樣\n# Set the random seed\rset.seed(123456)\r# initialize ybar to a vector of length r=10000 to later store results:\rr \u0026lt;- 10000\rybar \u0026lt;- numeric(r)\r# repeat r times:\rfor(j in 1:r) {\r# Draw a sample and store the sample mean in pos. j=1,2,... of ybar: sample \u0026lt;- rnorm(100,10,2)\rybar[j] \u0026lt;- mean(sample)\r}\r 結果分析\n# The first 20 of 10000 estimates:\rybar[1:20]\r# Simulated mean:\rmean(ybar)\r# Simulated variance:\rvar(ybar)\r# Simulated density:\rplot(density(ybar))\rcurve( dnorm(x,10,sqrt(.04)), add=TRUE,lty=2)\r 模擬估計 # Set the random seed\rset.seed(123456)\r# Draw a sample given the population parameters\rsample \u0026lt;- rnorm(100,10,2)\r# Estimate the population mean with the sample average\rmean(sample)\r#\u0026gt; [1] 10.03364\r# Draw a different sample and estimate again:\rsample \u0026lt;- rnorm(100,10,2)\rmean(sample)\r#\u0026gt; [1] 9.913197\r# Draw a third sample and estimate again:\rsample \u0026lt;- rnorm(100,10,2)\rmean(sample)\r#\u0026gt; [1] 10.21746\r 模擬推論 # Set the random seed\rset.seed(123456)\r# initialize vectors to later store results:\rr \u0026lt;- 10000\rCIlower \u0026lt;- numeric(r); CIupper \u0026lt;- numeric(r)\rpvalue1 \u0026lt;- numeric(r); pvalue2 \u0026lt;- numeric(r)\r# repeat r times:\rfor(j in 1:r) {\r# Draw a sample\rsample \u0026lt;- rnorm(100,10,2)\r# test the (correct) null hypothesis mu=10:\rtestres1 \u0026lt;- t.test(sample,mu=10)\r# store CI \u0026amp; p value:\rCIlower[j] \u0026lt;- testres1$conf.int[1]\rCIupper[j] \u0026lt;- testres1$conf.int[2]\rpvalue1[j] \u0026lt;- testres1$p.value\r# test the (incorrect) null hypothesis mu=9.5 \u0026amp; store the p value:\rpvalue2[j] \u0026lt;- t.test(sample,mu=9.5)$p.value\r}\r# Test results as logical value\rreject1\u0026lt;-pvalue1\u0026lt;=0.05; reject2\u0026lt;-pvalue2\u0026lt;=0.05\rtable(reject1)\r#\u0026gt; reject1\r#\u0026gt; FALSE TRUE #\u0026gt; 9492 508\rtable(reject2)\r#\u0026gt; reject2\r#\u0026gt; FALSE TRUE #\u0026gt; 3043 6957\r"},
{"uri": "/blogR//economics/mpg.html","title": "mpg",
	"tags": [],
	"description": "mpg",
	"content": "ggplot ex  參考   library(ggplot2)\rggplot(midwest, aes(x=area, y=poptotal)) + geom_point()\r ex library(ggplot2)\rex1 \u0026lt;- ggplot(mtcars)\rex1 \u0026lt;- ex1 + aes(x = mpg, y = wt)\rex1 \u0026lt;- ex1 + geom_point()\rsummary(ex1) #\u0026gt; data: mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb [32x11]\r#\u0026gt; mapping: x = ~mpg, y = ~wt\r#\u0026gt; faceting: \u0026lt;ggproto object: Class FacetNull, Facet, gg\u0026gt;\r#\u0026gt; compute_layout: function\r#\u0026gt; draw_back: function\r#\u0026gt; draw_front: function\r#\u0026gt; draw_labels: function\r#\u0026gt; draw_panels: function\r#\u0026gt; finish_data: function\r#\u0026gt; init_scales: function\r#\u0026gt; map_data: function\r#\u0026gt; params: list\r#\u0026gt; setup_data: function\r#\u0026gt; setup_params: function\r#\u0026gt; shrink: TRUE\r#\u0026gt; train_scales: function\r#\u0026gt; vars: function\r#\u0026gt; super: \u0026lt;ggproto object: Class FacetNull, Facet, gg\u0026gt;\r#\u0026gt; -----------------------------------\r#\u0026gt; geom_point: na.rm = FALSE\r#\u0026gt; stat_identity: na.rm = FALSE\r#\u0026gt; position_identity\rex1 # 🏷這裡才有圖出來 \r 部分修改: 只改變顏色\nex1 + geom_point(aes(colour = factor(cyl))) #🏷用汽缸倒顏色 \r 部分修改: 只改變Y軸\nex1 + geom_point(aes(y = disp))\r 刪除\naes(y = NULL)\r#\u0026gt; Aesthetic mapping: #\u0026gt; * `y` -\u0026gt; NULL\rex1\r mpg library(ggplot2)\r# First rows of data of data set mpg:\rhead(mpg)\r#\u0026gt; # A tibble: 6 x 11\r#\u0026gt; manufacturer model displ year cyl trans drv cty hwy fl class #\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; #\u0026gt; 1 audi a4 1.8 1999 4 auto(l5) f 18 29 p compa~\r#\u0026gt; 2 audi a4 1.8 1999 4 manual(m5) f 21 29 p compa~\r#\u0026gt; 3 audi a4 2 2008 4 manual(m6) f 20 31 p compa~\r#\u0026gt; 4 audi a4 2 2008 4 auto(av) f 21 30 p compa~\r#\u0026gt; 5 audi a4 2.8 1999 6 auto(l5) f 16 26 p compa~\r#\u0026gt; 6 audi a4 2.8 1999 6 manual(m5) f 18 26 p compa~\rggplot() + geom_point( data=mpg, mapping=aes(x=displ, y=hwy) )\rggplot(mpg, aes(displ, hwy)) + geom_point() +\rgeom_smooth()\r#\u0026gt; `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r ggplot(mpg, aes(displ, hwy)) + geom_point(color=gray(0.5)) +\rgeom_smooth(color=\u0026quot;black\u0026quot;)\r#\u0026gt; `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r ggplot(mpg, aes(displ, hwy)) + geom_point( aes(color=class) ) +\rgeom_smooth(color=\u0026quot;black\u0026quot;) +\rscale_color_grey()\r#\u0026gt; `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r ggplot(mpg, aes(displ, hwy)) + geom_point( aes(color=class, shape=class) ) +\rgeom_smooth(color=\u0026quot;black\u0026quot;) +\rscale_color_grey() +\rscale_shape_manual(values=1:7)\r#\u0026gt; `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r ggplot(mpg, aes(displ, hwy, color=class, shape=class)) + geom_point() +\rgeom_smooth(se=FALSE) +\rscale_color_grey() +\rscale_shape_manual(values=1:7)\r#\u0026gt; `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r#\u0026gt; Warning in simpleLoess(y, x, w, span, degree = degree, parametric =\r#\u0026gt; parametric, : span too small. fewer data values than degrees of freedom.\r#\u0026gt; Warning in simpleLoess(y, x, w, span, degree = degree, parametric =\r#\u0026gt; parametric, : pseudoinverse used at 5.6935\r#\u0026gt; Warning in simpleLoess(y, x, w, span, degree = degree, parametric =\r#\u0026gt; parametric, : neighborhood radius 0.5065\r#\u0026gt; Warning in simpleLoess(y, x, w, span, degree = degree, parametric =\r#\u0026gt; parametric, : reciprocal condition number 0\r#\u0026gt; Warning in simpleLoess(y, x, w, span, degree = degree, parametric =\r#\u0026gt; parametric, : There are other near singularities as well. 0.65044\r#\u0026gt; Warning in simpleLoess(y, x, w, span, degree = degree, parametric =\r#\u0026gt; parametric, : pseudoinverse used at 4.008\r#\u0026gt; Warning in simpleLoess(y, x, w, span, degree = degree, parametric =\r#\u0026gt; parametric, : neighborhood radius 0.708\r#\u0026gt; Warning in simpleLoess(y, x, w, span, degree = degree, parametric =\r#\u0026gt; parametric, : reciprocal condition number 0\r#\u0026gt; Warning in simpleLoess(y, x, w, span, degree = degree, parametric =\r#\u0026gt; parametric, : There are other near singularities as well. 0.25\r "},
{"uri": "/blogR//economics/%E5%89%8D%E7%BD%AE.html","title": "前置準備",
	"tags": [],
	"description": "data",
	"content": "install.packages(\u0026quot;wooldridge\u0026quot;)\rinstall.packages(\u0026quot;rio\u0026quot;)\r# more\rinstall.packages(\u0026quot;WDI\u0026quot;)\rinstall.packages(\u0026quot;dplyr\u0026quot;)\rinstall.packages(\u0026quot;ggplot\u0026quot;)\r 練習資料的幾種載入資料的方法\ndata(affairs, package='wooldridge')\r# Version 2: Adjust path\raffairs2 \u0026lt;- rio::import(\u0026quot;~/data/wooldridge/affairs.dta\u0026quot;)\r# Version 3: Change working directory\rsetwd(\u0026quot;~/data/wooldridge\u0026quot;)\raffairs3 \u0026lt;- rio::import(\u0026quot;affairs.dta\u0026quot;)\r# Version 4: directly load from internet\raffairs4 \u0026lt;- rio::import(\u0026quot;http://fmwww.bc.edu/ec-p/data/wooldridge/affairs.dta\u0026quot;)\r 以套件載入為例\ndata(affairs, package='wooldridge')\r# 計算平均\rmean(affairs$naffairs)\r#\u0026gt; [1] 1.455907\r 一般資料處理 - 讀、轉、算、寫 # Define one x vector for all:\ryear \u0026lt;- c(2008,2009,2010,2011,2012,2013)\r# Define a matrix of y values:\rproduct1\u0026lt;-c(0,3,6,9,7,8); product2\u0026lt;-c(1,2,3,5,9,6); product3\u0026lt;-c(2,4,4,2,3,2)\rsales_mat \u0026lt;- cbind(product1,product2,product3)\rrownames(sales_mat) \u0026lt;- year\r# The matrix looks like this:\rsales_mat\r#\u0026gt; product1 product2 product3\r#\u0026gt; 2008 0 1 2\r#\u0026gt; 2009 3 2 4\r#\u0026gt; 2010 6 3 4\r#\u0026gt; 2011 9 5 2\r#\u0026gt; 2012 7 9 3\r#\u0026gt; 2013 8 6 2\r# Create a data frame and display it:\rsales \u0026lt;- as.data.frame(sales_mat)\rsales\r#\u0026gt; product1 product2 product3\r#\u0026gt; 2008 0 1 2\r#\u0026gt; 2009 3 2 4\r#\u0026gt; 2010 6 3 4\r#\u0026gt; 2011 9 5 2\r#\u0026gt; 2012 7 9 3\r#\u0026gt; 2013 8 6 2\r# save data frame as RData file (in the current working directory)\rsave(sales, file = \u0026quot;oursalesdata.RData\u0026quot;)\r# remove data frame \u0026quot;sales\u0026quot; from memory\rrm(sales)\r# Does variable \u0026quot;sales\u0026quot; exist?\rexists(\u0026quot;sales\u0026quot;)\r#\u0026gt; [1] FALSE\r# Load data set (in the current working directory):\rload(\u0026quot;oursalesdata.RData\u0026quot;)\r# Does variable \u0026quot;sales\u0026quot; exist?\rexists(\u0026quot;sales\u0026quot;)\r#\u0026gt; [1] TRUE\rsales\r#\u0026gt; product1 product2 product3\r#\u0026gt; 2008 0 1 2\r#\u0026gt; 2009 3 2 4\r#\u0026gt; 2010 6 3 4\r#\u0026gt; 2011 9 5 2\r#\u0026gt; 2012 7 9 3\r#\u0026gt; 2013 8 6 2\r# averages of the variables:\rcolMeans(sales)\r#\u0026gt; product1 product2 product3 #\u0026gt; 5.500000 4.333333 2.833333\r basic statistic 1 - pnorm(2,4,3) + pnorm(-2,4,3)\r#\u0026gt; [1] 0.7702576\r# Using the transformation:\rpnorm(2/3) - pnorm(-2/3)\r#\u0026gt; [1] 0.4950149\r# Working directly with the distribution of X:\rpnorm(6,4,3) - pnorm(2,4,3)\r#\u0026gt; [1] 0.4950149\r table # load data set\rdata(affairs, package='wooldridge')\r# Generate \u0026quot;Factors\u0026quot; to attach labels\rhaskids \u0026lt;- factor(affairs$kids,labels=c(\u0026quot;no\u0026quot;,\u0026quot;yes\u0026quot;))\rmlab \u0026lt;- c(\u0026quot;very unhappy\u0026quot;,\u0026quot;unhappy\u0026quot;,\u0026quot;average\u0026quot;,\u0026quot;happy\u0026quot;, \u0026quot;very happy\u0026quot;)\rmarriage \u0026lt;- factor(affairs$ratemarr, labels=mlab)\r# Frequencies for having kids:\rtable(haskids)\r#\u0026gt; haskids\r#\u0026gt; no yes #\u0026gt; 171 430\r# Marriage ratings (share):\rprop.table(table(marriage))\r#\u0026gt; marriage\r#\u0026gt; very unhappy unhappy average happy very happy #\u0026gt; 0.0266223 0.1098170 0.1547421 0.3227953 0.3860233\r# Contigency table: counts (display \u0026amp; store in var.)\r(countstab \u0026lt;- table(marriage,haskids))\r#\u0026gt; haskids\r#\u0026gt; marriage no yes\r#\u0026gt; very unhappy 3 13\r#\u0026gt; unhappy 8 58\r#\u0026gt; average 24 69\r#\u0026gt; happy 40 154\r#\u0026gt; very happy 96 136\r# Share within \u0026quot;marriage\u0026quot; (i.e. within a row):\rprop.table(countstab, margin=1)\r#\u0026gt; haskids\r#\u0026gt; marriage no yes\r#\u0026gt; very unhappy 0.1875000 0.8125000\r#\u0026gt; unhappy 0.1212121 0.8787879\r#\u0026gt; average 0.2580645 0.7419355\r#\u0026gt; happy 0.2061856 0.7938144\r#\u0026gt; very happy 0.4137931 0.5862069\r# Share within \u0026quot;haskids\u0026quot; (i.e. within a column):\rprop.table(countstab, margin=2)\r#\u0026gt; haskids\r#\u0026gt; marriage no yes\r#\u0026gt; very unhappy 0.01754386 0.03023256\r#\u0026gt; unhappy 0.04678363 0.13488372\r#\u0026gt; average 0.14035088 0.16046512\r#\u0026gt; happy 0.23391813 0.35813953\r#\u0026gt; very happy 0.56140351 0.31627907\r data frame # Define one x vector for all:\ryear \u0026lt;- c(2008,2009,2010,2011,2012,2013)\r# Define a matrix of y values:\rproduct1\u0026lt;-c(0,3,6,9,7,8); product2\u0026lt;-c(1,2,3,5,9,6); product3\u0026lt;-c(2,4,4,2,3,2)\rsales_mat \u0026lt;- cbind(product1,product2,product3)\rrownames(sales_mat) \u0026lt;- year\r# The matrix looks like this:\rsales_mat\r#\u0026gt; product1 product2 product3\r#\u0026gt; 2008 0 1 2\r#\u0026gt; 2009 3 2 4\r#\u0026gt; 2010 6 3 4\r#\u0026gt; 2011 9 5 2\r#\u0026gt; 2012 7 9 3\r#\u0026gt; 2013 8 6 2\r# Create a data frame and display it:\rsales \u0026lt;- as.data.frame(sales_mat)\rsales\r#\u0026gt; product1 product2 product3\r#\u0026gt; 2008 0 1 2\r#\u0026gt; 2009 3 2 4\r#\u0026gt; 2010 6 3 4\r#\u0026gt; 2011 9 5 2\r#\u0026gt; 2012 7 9 3\r#\u0026gt; 2013 8 6 2\r 練習 Wdi library(WDI)\rwdi_raw \u0026lt;- WDI(indicator=c(\u0026quot;SP.DYN.LE00.FE.IN\u0026quot;),\rstart = 1960, end = 2014) # 🏷WDI 是一個函數,wdi_raw是一個data.frame \r# 不要直接顯示所有資料,太長\rhead(wdi_raw,n=10)\r#\u0026gt; iso2c country SP.DYN.LE00.FE.IN year\r#\u0026gt; 1 ZH Africa Eastern and Southern 63.74479 2014\r#\u0026gt; 2 ZH Africa Eastern and Southern 63.01116 2013\r#\u0026gt; 3 ZH Africa Eastern and Southern 62.19697 2012\r#\u0026gt; 4 ZH Africa Eastern and Southern 61.31294 2011\r#\u0026gt; 5 ZH Africa Eastern and Southern 60.37721 2010\r#\u0026gt; 6 ZH Africa Eastern and Southern 59.40726 2009\r#\u0026gt; 7 ZH Africa Eastern and Southern 58.42882 2008\r#\u0026gt; 8 ZH Africa Eastern and Southern 57.47517 2007\r#\u0026gt; 9 ZH Africa Eastern and Southern 56.57331 2006\r#\u0026gt; 10 ZH Africa Eastern and Southern 55.75485 2005\r#tail(wdi_raw)\r descriptive statistics data(ceosal1, package='wooldridge') # class(ceosal1) = data.frame\r# sample average:\rmean(ceosal1$salary)\r#\u0026gt; [1] 1281.12\r# sample median:\rmedian(ceosal1$salary)\r#\u0026gt; [1] 1039\r#standard deviation:\rsd(ceosal1$salary)\r#\u0026gt; [1] 1372.345\r# summary information:\rsummary(ceosal1$salary)\r#\u0026gt; Min. 1st Qu. Median Mean 3rd Qu. Max. #\u0026gt; 223 736 1039 1281 1407 14822\r# correlation with ROE:\rcor(ceosal1$salary, ceosal1$roe)\r#\u0026gt; [1] 0.1148417\r t檢定 # data for the scrap rates examples:\rSR87\u0026lt;-c(10,1,6,.45,1.25,1.3,1.06,3,8.18,1.67,.98,1,.45,5.03,8,9,18,.28, 7,3.97)\rSR88\u0026lt;-c(3,1,5,.5,1.54,1.5,.8,2,.67,1.17,.51,.5,.61,6.7,4,7,19,.2,5,3.83)\rChange \u0026lt;- SR88 - SR87\r# Ingredients to CI formula\r(avgCh\u0026lt;- mean(Change)) # Change的平均\r#\u0026gt; [1] -1.1545\r(n \u0026lt;- length(Change))\r#\u0026gt; [1] 20\r(sdCh \u0026lt;- sd(Change)) # Change的標準差\r#\u0026gt; [1] 2.400639\r(se \u0026lt;- sdCh/sqrt(n)) # 標準誤\r#\u0026gt; [1] 0.5367992\r(c \u0026lt;- qt(.975, n-1)) #quantile of t dist\r#\u0026gt; [1] 2.093024\r# avgCh的95%信賴區間\rc( avgCh - c*se, avgCh + c*se )\r#\u0026gt; [1] -2.27803369 -0.03096631\r# t statistic for H0: mu=0:\r(t \u0026lt;- avgCh/se)\r#\u0026gt; [1] -2.150711\r# p value\r(p \u0026lt;- pt(t,n-1)) # 🏷p(probability機率) ➕ t分配 = pt \r#\u0026gt; [1] 0.02229063\r 或是直接使用函數,對照如下\n# two-sided CI\rt.test(Change)\r#\u0026gt; #\u0026gt; One Sample t-test\r#\u0026gt; #\u0026gt; data: Change\r#\u0026gt; t = -2.1507, df = 19, p-value = 0.04458\r#\u0026gt; alternative hypothesis: true mean is not equal to 0\r#\u0026gt; 95 percent confidence interval:\r#\u0026gt; -2.27803369 -0.03096631\r#\u0026gt; sample estimates:\r#\u0026gt; mean of x #\u0026gt; -1.1545\r# 1-sided test:\rt.test(Change, alternative=\u0026quot;less\u0026quot;)\r#\u0026gt; #\u0026gt; One Sample t-test\r#\u0026gt; #\u0026gt; data: Change\r#\u0026gt; t = -2.1507, df = 19, p-value = 0.02229\r#\u0026gt; alternative hypothesis: true mean is less than 0\r#\u0026gt; 95 percent confidence interval:\r#\u0026gt; -Inf -0.2263028\r#\u0026gt; sample estimates:\r#\u0026gt; mean of x #\u0026gt; -1.1545\r 練習範例 data(audit, package='wooldridge')\r# two-sided CI\rt.test(audit$y)\r# 1-sided test:\rt.test(audit$y, alternative=\u0026quot;less\u0026quot;)\r 信賴區間 data(audit, package='wooldridge')\r# Ingredients to CI formula\r(avgy\u0026lt;- mean(audit$y))\r#\u0026gt; [1] -0.1327801\r(n \u0026lt;- length(audit$y))\r#\u0026gt; [1] 241\r(sdy \u0026lt;- sd(audit$y))\r#\u0026gt; [1] 0.4819709\r(se \u0026lt;- sdy/sqrt(n))\r#\u0026gt; [1] 0.03104648\r(c \u0026lt;- qnorm(.975)) # 🏷q ➕ 常態(norm) = qnorm \r#\u0026gt; [1] 1.959964\r# 95% Confidence intervall:\ravgy + c * c(-se,+se)\r#\u0026gt; [1] -0.19363006 -0.07193011\r# 99% Confidence intervall:\ravgy + qnorm(.995) * c(-se,+se)\r#\u0026gt; [1] -0.21275051 -0.05280966\r # t statistic for H0: mu=0:\r(t \u0026lt;- avgy/se) #-4.276816 #\u0026gt; [1] -4.276816\r# p value\r(p \u0026lt;- pt(t,240))\r#\u0026gt; [1] 1.369271e-05\r# Critical values for t distribution with n-1=240 d.f.:\ralpha.one.tailed = c(0.1, 0.05, 0.025, 0.01, 0.005, .001)\rCV \u0026lt;- qt(1 - alpha.one.tailed, n-1) # 🏷q ➕ t分配 = qt \rcbind(alpha.one.tailed, CV)\r#\u0026gt; alpha.one.tailed CV\r#\u0026gt; [1,] 0.100 1.285089\r#\u0026gt; [2,] 0.050 1.651227\r#\u0026gt; [3,] 0.025 1.969898\r#\u0026gt; [4,] 0.010 2.341985\r#\u0026gt; [5,] 0.005 2.596469\r#\u0026gt; [6,] 0.001 3.124536\r plot basic plot curve(dnorm(x,0,1),-10,10,lwd=1,lty=1)\rcurve(dnorm(x,0,2),-10,10,add=TRUE,lwd=1,lty=1) #🏷疊圖 \rcurve(dnorm(x,0,3),-10,10,add=TRUE,lwd=1,lty=1)\r histogram data(ceosal1, package='wooldridge')\r# Extract ROE to single vector\rROE \u0026lt;- ceosal1$roe\r# Subfigure (a): histogram (counts)\rhist(ROE)\r# Subfigure (b): histogram (densities, explicit breaks)\rhist(ROE, breaks=c(0,5,10,20,30,60) )\r ggplot2 library(ggplot2)\rhead(mpg)\r#\u0026gt; # A tibble: 6 x 11\r#\u0026gt; manufacturer model displ year cyl trans drv cty hwy fl class #\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; #\u0026gt; 1 audi a4 1.8 1999 4 auto(l5) f 18 29 p compa~\r#\u0026gt; 2 audi a4 1.8 1999 4 manual(m5) f 21 29 p compa~\r#\u0026gt; 3 audi a4 2 2008 4 manual(m6) f 20 31 p compa~\r#\u0026gt; 4 audi a4 2 2008 4 auto(av) f 21 30 p compa~\r#\u0026gt; 5 audi a4 2.8 1999 6 auto(l5) f 16 26 p compa~\r#\u0026gt; 6 audi a4 2.8 1999 6 manual(m5) f 18 26 p compa~\rggplot(mpg, aes(displ, hwy)) + geom_point() +\rgeom_smooth()\r#\u0026gt; `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r "},
{"uri": "/blogR//topic/experiment/central.html","title": "中央",
	"tags": [],
	"description": "包括中央極限",
	"content": "R Markdown 員工的薪水分配，嚴重懷疑不是常態分配\n100: -\u0026gt;\n mu\u0026lt;-100 sd\u0026lt;-100 se(stander error) \u0026lt;- /sd/sqrt(100)  1.96\n-1.96*/se , /mu , 1.96* /se\nboot strapping 把我們得到的100個樣本，重複抽1000，(每次必須抽100個)然後得到1000個平均 mu,sd percentile(2.5) , mu, percentile(97.5)\nN\u0026lt;-10\rmetasample\u0026lt;-rnorm(N,5,2)\rbmu\u0026lt;-numeric(1000)\rfor(i in 1:1000){\rrndno\u0026lt;-as.integer(runif(N)*N)+1 smp\u0026lt;-metasample[rndno]\rbmu[i]\u0026lt;-mean(smp)\r}\rp\u0026lt;-density(bmu)\rplot(p)\rqq\u0026lt;-quantile(bmu)\rrug(qq,col=\u0026quot;red\u0026quot;)\rqq\r#\u0026gt; 0% 25% 50% 75% 100% #\u0026gt; 3.810875 5.332504 5.745269 6.147151 7.410791\r N\u0026lt;-100\rmetasample\u0026lt;-rnorm(N,5,2)\rbmu\u0026lt;-numeric(1000)\rfor(i in 1:1000){\rrndno\u0026lt;-as.integer(runif(N)*N)+1 smp\u0026lt;-metasample[rndno]\rbmu[i]\u0026lt;-mean(smp)\r}\rp\u0026lt;-density(bmu)\rplot(p)\rqq\u0026lt;-quantile(bmu)\rrug(qq,col=\u0026quot;red\u0026quot;)\rqq\r#\u0026gt; 0% 25% 50% 75% 100% #\u0026gt; 4.129242 4.771216 4.906050 5.033250 5.510479\r N\u0026lt;-100\rmetasample\u0026lt;-rnorm(N,5,2)\rhinfo\u0026lt;-hist(metasample)\rlx\u0026lt;-seq(min(metasample),max(metasample),length=100)\rly\u0026lt;-dnorm(lx,mean(metasample),sd(metasample))\rsy\u0026lt;-ly*(diff(lx)[1])*N lines(lx,sy,col=\u0026quot;blue\u0026quot;)\r N\u0026lt;-100\rmetasample\u0026lt;-rnorm(N,5,2)\rhinfo\u0026lt;-hist(metasample)\rly\u0026lt;-dnorm(hinfo$mids,mean(metasample),sd(metasample))\rsy\u0026lt;-ly*(diff(hinfo$mids)[1])*N lines(hinfo$mids,sy,col=\u0026quot;blue\u0026quot;)\r "},
{"uri": "/blogR//topic/interesting.html","title": "interesting",
	"tags": [],
	"description": "",
	"content": "seems interesting   自動化  "}]
