[
{
	"uri": "/rlang/requirement.html",
	"title": "Requirement",
	"tags": [],
	"description": "軟體環境",
	"content": "\r\r\r安裝軟體\r部份軟體列表\r另外於linux 安裝 tidyverse時需要:\nsudo apt-get install -y libxml2-dev libcurl4-openssl-dev libssl-dev\rinstall.packages()\n# sudo visudo\r# 然後加入\r# username ALL = NOPASSWD: /fullpath/to/command, /fullpath/to/othercommand\r# 下面這個system 需要上面兩行\rsystem(\u0026#39;sudo apt update;sudo apt upgrade;sudo apt-get install curl\u0026#39;)\rsystem(\u0026#39;sudo apt-get install -y libxml2-dev libcurl4-openssl-dev libssl-dev\u0026#39;)\rinstall.packages(\u0026#39;devtools\u0026#39;)\rinstall.packages(\u0026#39;bookdown\u0026#39;)\rinstall.packages(\u0026#39;rlang\u0026#39;)\rinstall.packages(\u0026#39;tidyr\u0026#39;)\rinstall.packages(\u0026#39;babynames\u0026#39;)\rinstall.packages(\u0026#39;ggplot2\u0026#39;)\rinstall.packages(\u0026#39;sm\u0026#39;)\rinstall.packages(\u0026#39;bindrcpp\u0026#39;)\rinstall.packages(\u0026#39;tidyverse\u0026#39;)\rinstall.packages(\u0026#39;codetools\u0026#39;)\rinstall.packages(\u0026#39;moments\u0026#39;)\rlibrary(\u0026#39;devtools\u0026#39;)\rinstall_github(\u0026quot;Hadley/emo\u0026quot;)\r##\roptions(repos = c(CRAN = \u0026quot;https://cran.revolutionanalytics.com\u0026quot;))\r自動update package\rupdate.packages(ask=FALSE) 也可以？\nall.packages \u0026lt;- installed.packages()\rr.version \u0026lt;- paste(version[[\u0026#39;major\u0026#39;]], \u0026#39;.\u0026#39;, version[[\u0026#39;minor\u0026#39;]], sep = \u0026#39;\u0026#39;)\rfor (i in 1:nrow(all.packages))\r{\rpackage.name \u0026lt;- all.packages[i, 1]\rpackage.version \u0026lt;- all.packages[i, 3]\rif (package.version != r.version)\r{\rprint(paste(\u0026#39;Installing\u0026#39;, package.name))\rinstall.packages(package.name)\r}\r}\r** update all available packages **\rupdate.packages()\n** update, without prompts for permission/clarification\rupdate.packages(ask = FALSE)\n\r反安裝\r在R console中，利用指令 .libPaths()，或者在shell(terminal)中利用\rR -e ‘.libPaths()’ 知道套裝被安裝在哪裡，然後可以移除所有的相關套件\nRtools\r在windows中安裝完以後，執行\nwriteLines(\u0026#39;PATH=\u0026quot;${RTOOLS40_HOME}\\\\usr\\\\bin;${PATH}\u0026quot;\u0026#39;, con = \u0026quot;~/.Renviron\u0026quot;)\r重啟動，然後測試下面指令\nSys.which(\u0026quot;make\u0026quot;)\r\r\r"
},
{
	"uri": "/topic/rmd/rmd_basic.html",
	"title": "Rmd basic",
	"tags": [],
	"description": "基本語法",
	"content": "\r\r\rrbook 提要\rmarkdown 可以使用用一般的文字編輯器,在文字中插入MD指令,用來翻譯成HTML,PDF,WORD等文件格式。\n在RSTUDIO中,可以建立web book. 或僅僅是一個web網站(static)。\n相關指令和流程可以參考這裡\n如果有共用的yaml ,可以參考這裡\n\r程式員會比較想知道相關的的流程:\nThe script is converted to Rmd through knitr::spin(); then rmarkdown::render() will render the Rmd。\r也就是說,knitr會先判斷CHUNK需要的引擎是誰,如果是R,就傳給rmakrown::render()。\n\r\rConvert Rmd to R script\r`knitr::purl(“03-purl.Rmd”)’ # output: 03-purl.R\n\r資料探索和RMD\r範例:\n\rmtcars 中的資料筆數有 32。\n\r我比較常用的格式\r這裡稍微解釋一下RMD文件表頭中的yaml:\n---\rtitle: \u0026quot;處理2003(92R)變數AB v1\u0026quot;\rauthor: \u0026quot;lin\u0026quot;\rdate: \u0026quot;05 十一月, 2020, 10:01\u0026quot;\rheader-includes:\r- \\usepackage{xeCJK}\r- \\setCJKmainfont{標楷體}\routput:\rhtml_document: toc: yes\rtoc_float:\rcollapsed: false\r# smooth_scroll: true # df_print: paged\rhighlight: tango css: [\u0026quot;adv-r.css\u0026quot;,\u0026quot;mystyle.css\u0026quot;] word_document:\rtoc: yes\rpdf_document: latex_engine: xelatex toc: yes\rknit: myknit ---\r\r上面的word_document,其實對應 rmarkdown::word_document()\r而下面的 toc: yes 是要傳入上面函數的參數.可以對照?rmarkdown::word_document()\r\r\r例如,如果我想要把我比較常用的word 模板,當成RMD 產生WORD文件的模板,可以\r步驟1:先利用RMarkdown產生word 文件,然後在yml的參數中指定:\n---\r...\rword_document:\rreference_docx: myword.docx\r---\r\r提取程式碼\r參考\n\r比較詳細的介紹:\rtopic:\n如何內含其他外部HTML文件(👍r markdown cookbook)\n````{=html}\r```{r, echo=FALSE, results=\u0026#39;asis\u0026#39;}\rxfun::file_string(\u0026#39;file.html\u0026#39;)\r```\r````\r👍R Markdown: The Definitive Guide\n指令 rmarkdown::render_site() 用來建立網站。這個指令需要,一個檔案 _site.yml,內容如下:\nname: \u0026quot;my-website\u0026quot;\rnavbar:\rtitle: \u0026quot;My Website\u0026quot;\rleft:\r- text: \u0026quot;Home\u0026quot;\rhref: index.html\r- text: \u0026quot;About\u0026quot;\rhref: about.html\r同時檔案index.html 是第一個網站的入門網頁。\n\r\rbook\r指令 bookdown::render_book() 需要的檔案有_bookdown.yml'_output.yml’。\n_bookdown.yml\rThe _bookdown.yml 那些檔案要被包含進來。\nrmd_files: [\u0026quot;index.Rmd\u0026quot;, \u0026quot;02-literature.Rmd\u0026quot;, \u0026quot;01-intro.Rmd\u0026quot;]\r\r_output.yml\rThe _output.yml 用來指定如何輸出,例如HTML和PDF的格式。範例:\nbookdown::gitbook:\rlib_dir: assets\rsplit_by: section\rconfig:\rtoolbar:\rposition: static\rbookdown::pdf_book:\rkeep_tex: yes\rbookdown::html_book:\rcss: toc.css\rsplitby: 後面可以是RMD,每個RMD一個HTML檔案。\n\rindex.Rmd\r通常是一系列文章裡面的第一個文件。其他rmd文件的yml 頭部都可以統一放在這裡。\n下面是一些選項,可以自行添加到上面:\nbibliography: [book.bib, packages.bib]\rbiblio-style: apalike\rlink-citations: yes\rgithub-repo: rstudio/bookdown-demo\rbibliography 暫時沒有參考文件檔,所以我沒有放.\n參考位置:\n* HTML Format 來自rmarkdown from rstudio\r* pandox\n\r\r更多_output.yml 範例\r簡單講,_output.yml放的是輸出到哪裡?gitbook? pdf? 或者是簡單html格式。\n_output.yml 範例\rbookdown::gitbook:\rcss: style.css\rconfig:\rtoc:\rbefore: |\r\u0026lt;li\u0026gt;\u0026lt;a href=\u0026quot;./\u0026quot;\u0026gt;A Minimal Book Example\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\rafter: |\r\u0026lt;li\u0026gt;\u0026lt;a href=\u0026quot;https://github.com/rstudio/bookdown\u0026quot; target=\u0026quot;blank\u0026quot;\u0026gt;Published with bookdown\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\redit: https://github.com/rstudio/bookdown-demo/edit/master/%s\rdownload: [\u0026quot;pdf\u0026quot;, \u0026quot;epub\u0026quot;]\r# bookdown::pdf_book:\r# latex_engine: \u0026quot;xelatex\u0026quot;\r# keep_tex: true\r# includes:\r# in_header: header.tex\rbookdown::pdf_book:\rincludes:\rin_header: latex/preamble.tex\rbefore_body: latex/before_body.tex\rafter_body: latex/after_body.tex\rkeep_tex: true\rdev: \u0026quot;cairo_pdf\u0026quot;\rlatex_engine: xelatex\rcitation_package: natbib\rpandoc_args: [\u0026quot;--top-level-division=chapter\u0026quot;, \u0026quot;--lua-filter=latex/sidebar.lua\u0026quot;]\rtemplate: null\rquote_footer: null\rtoc_unnumbered: false\rnumber_sections: true \r---\routput: html_document: highlight: tango\rnumber_sections: yes\rtoc: yes\r---\r上面這段YML會被解譯到下面的R程式碼。\r猜測:html_document對應rmarkdown::html_document\n例如,\rnumber_sections: yes 會被當成html_document()的參數轉譯:\nhighlight: tango 對應到參數(沒有在下面)\nrmarkdown::html_document( theme= \u0026quot;lumen\u0026quot;,\rtemplate= template,\rcss= css,\rtoc= toc,\rtoc_float= TRUE,\rtoc_depth= 2,\rnumber_sections= number_sections,\rdf_print = \u0026quot;paged\u0026quot;,\rcode_folding = code_folding,\rincludes = includes(before_body = header)\r)\r}\r\r\r\r.travis.yml\r\rrmarkdown and travis\n\r應該是用來指導怎麼建立專案的一個yml。\r已知的部分有:\rdirectories : 可以指定子目錄,用來放暫存檔案(一些翻譯過程產生的中間黨),否則每個RMD都會產生一個組目錄。\nlanguage: R\rsudo: false\rcache:\rpackages: true\rdirectories:\r- _bookdown_files\r- $HOME/.npm\rpandoc_version: 2.1.1\r\r紀錄\rbefore_chapter_script: “common.R”\r前面要有兩個空白\nif(FALSE) {\r’\r兩個地方可以放,\r1) 一個是在_bookdown.yml中的最後一行:\rbefore_chapter_script: “common.R”\r2)一個是在每個RMD的第一個chunk執行\rsource(“common.R”)\n’\r}\nknitr hook\r顏色\r設定警告訊息為紅色\nknitr::knit_hooks$set(error = function(x, options) {\rpaste0(\u0026quot;\u0026lt;pre style=\\\u0026quot;color: red;\\\u0026quot;\u0026gt;\u0026lt;code\u0026gt;\u0026quot;, x, \u0026quot;\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026quot;)\r})\r其他範例\n#Color Format\rcolFmt = function(x,color){\routputFormat = opts_knit$get(\u0026quot;rmarkdown.pandoc.to\u0026quot;)\rif(outputFormat == \u0026#39;latex\u0026#39;)\rpaste(\u0026quot;\\\\textcolor{\u0026quot;,color,\u0026quot;}{\u0026quot;,x,\u0026quot;}\u0026quot;,sep=\u0026quot;\u0026quot;)\relse if(outputFormat == \u0026#39;html\u0026#39;)\rpaste(\u0026quot;\u0026lt;font color=\u0026#39;\u0026quot;,color,\u0026quot;\u0026#39;\u0026gt;\u0026quot;,x,\u0026quot;\u0026lt;/font\u0026gt;\u0026quot;,sep=\u0026quot;\u0026quot;)\relse\rx\r}\r有關hook 的設定,參考 knitr hook\n\r\rterminal output\r問題:如果以要看檔案內容,而不想被無關的輸出符號干擾,例如[1],那麼如果再R SCRIPT中可以使用 system(\"cat 檔案名稱\") ,但是在R Markdown中(如下)不會顯示出結果:\n🔖 wh.csv\nrst = read.csv(\u0026#39;resources/wh.csv\u0026#39;,comment.char=\u0026quot;#\u0026quot;,na.string=\u0026#39;.\u0026#39;)\rwrite.csv(rst, file = \u0026quot;MyData.csv\u0026quot;,row.names=FALSE, na=\u0026quot;\u0026quot;)\rsystem(\u0026quot;cat MyData.csv\u0026quot;)\rYou can use either\n{r, engine=‘bash’, comment=’‘}\rcat ’resources/hw.csv’\nor\n```{r comment=\u0026#39;\u0026#39;}\rcat(readLines(\u0026#39;resources/wh.csv\u0026#39;), sep = \u0026#39;\\n\u0026#39;)\r```\r\r\r\r"
},
{
	"uri": "/topic/rmd/rmd_topic_1.html",
	"title": "rmd topic 1",
	"tags": [],
	"description": "基本語法",
	"content": "\r\r\r討論\r\rhook\n\rVerbatim Chunks in R Markdow\n\rHTML widgets\n\rR Notebook HTML FOrmat\n\rRender option\rhook example\n\rmore\ndynamic book\n\rTOC 問題\n\r\rpublish to github\rtutorial\n\r在chunk中，顯示RMD語法\r讓inline code 不作用\rinline 讓內籤R程式碼不作用:方法是兩邊打上“``空白”。例如:\r\ninline(\u0026quot;dd\u0026quot;) ===\u0026gt; `r dd` \n\r測試\r執行下面的程式,無法阻止hugo shortcode,但是仍然會列表\n```{r, comment = \u0026quot;\u0026quot;,result=\u0026quot;asis\u0026quot;}\rcat(readr::read_file(\u0026quot;rmd_topic_1.Rmd\u0026quot;))\r# 我想要前後加上```,但是顯示的結果不換行\r# txt\u0026lt;-readr::read_file(\u0026quot;rmd_topic_1.Rmd\u0026quot;)\r# cat(paste0(c(\u0026quot;```rmd\u0026quot;,txt,\u0026quot;```\u0026quot;,collapse=\u0026quot;\\n\u0026quot;)))\r```\r留著測試\n\r\r有意思的程式片段\r只編譯一個RMD文件\r使用套件中的內部函數,為:::,例如 blogdown:::build_rmds()。\r所以如果要編譯單一的RMD文件,可以\rblogdown:::build_rmds('content/foo.Rmd')\r產生 content/foo.html 以後,如果我們已經啟動 blogdown::serve_site(),則會自動更新網站，否則可以手動 blogdown::hugo_build()。\n\r😄兩個RMD變成一個\r\rRmd_bind \u0026lt;- function(dir = \u0026quot;.\u0026quot;,\rbook_header = readLines(textConnection(\u0026quot;---\\ntitle: \u0026#39;Title\u0026#39;\\n---\u0026quot;)))\r{\rold \u0026lt;- setwd(dir)\rif(length(grep(\u0026quot;book.Rmd\u0026quot;, list.files())) \u0026gt; 0){\rwarning(\u0026quot;book.Rmd already exists\u0026quot;)\r}\rwrite(book_header, file = \u0026quot;book.Rmd\u0026quot;, )\rcfiles \u0026lt;- list.files(pattern = \u0026quot;*.Rmd\u0026quot;, )\rttext \u0026lt;- NULL\rfor(i in 1:length(cfiles)){\rtext \u0026lt;- readLines(cfiles[i])\rhspan \u0026lt;- grep(\u0026quot;---\u0026quot;, text)\rtext \u0026lt;- text[-c(hspan[1]:hspan[2])]\rwrite(text, sep = \u0026quot;\\n\u0026quot;, file = \u0026quot;book.Rmd\u0026quot;, append = T)\r}\rrender(\u0026quot;book.Rmd\u0026quot;, output_format = \u0026quot;pdf_document\u0026quot;)\rsetwd(old)\r}\r\r\r有助了解rmd 的相關函數\r\rknit_print\r\r\r\r\remoji\r檔案config.toml 中:\nenableEmoji = true\n\r😄\n🔑 google emoji cheat sheet\n\rhtml\rref\n```{=html}\r\u0026lt;p\u0026gt;Any \u0026lt;strong\u0026gt;raw\u0026lt;/strong\u0026gt; HTML content works here.\rFor example, here is a Youtube video:\u0026lt;/p\u0026gt;\r\u0026lt;iframe width=\u0026quot;100%\u0026quot; height=\u0026quot;400\u0026quot;\rsrc=\u0026quot;https://www.youtube.com/embed/s3JldKoA0zw?rel=0\u0026quot;\rframeborder=\u0026quot;0\u0026quot; allow=\u0026quot;autoplay; encrypted-media\u0026quot;\rallowfullscreen\u0026gt;\u0026lt;/iframe\u0026gt;\r``` \r\\[\r\\Sigma\r\\]\njavascript\r\rMaking a javascript chunk\rref\r\r$(\u0026#39;.title\u0026#39;).css(\u0026#39;color\u0026#39;, \u0026#39;red\u0026#39;)\r$('.title').css('color', 'red')\r\rMath.PI\rMath.PI\r\r\rcss 範例\rbody {\rcolor: red;\r}\r\r\r\r"
},
{
	"uri": "/rlang/data_explorer_1.html",
	"title": "data explorer 1",
	"tags": [],
	"description": "資料探索",
	"content": "\r\r\r資料探索\r常用函數\r\rMean\rMedian\rQuartile\rPercentile\rRange\rInterquartile Range\rBox Plot\rVariance\rStandard Deviation\rCovariance\rCorrelation Coefficient\rCentral Moment\rSkewness\rKurtosis\r\rmean(mtcars$mpg)\r[1] 20.1\rmedian(mtcars$mpg)\r[1] 19.2\rmin(mtcars$mpg)\r[1] 10.4\rmax(mtcars$mpg)\r[1] 33.9\rquantile(mtcars$mpg)\r 0% 25% 50% 75% 100% 10.4 15.4 19.2 22.8 33.9 \rquantile(mtcars$mpg,c(0.2))\r 20% 15.2 \rrequire(moments)\rLoading required package: moments\rskewness(mtcars$mpg)\r[1] 0.64\rkurtosis(mtcars$mpg)\r[1] 2.8\rx \u0026lt;- rnorm(100)\rquantile(x, probs = c(0, 0.25, 0.5, 0.75, 1)) # quartile\rquantile(x, probs = seq(0, 1, by= 0.01)) # decile\recdf(x)\r問題：ecdf()的結果和quantile()的結果是否一樣？\n##匯入其他格式的資料\r安裝package : foreign，以stata 為例(利用其中的函數read.dta())：\nif (!file.exists(\u0026#39;resources/ceosal1.RData\u0026#39;)){\rceosal1\u0026lt;-read.dta(\u0026quot;http://fmwww.bc.edu/ec-p/data/wooldridge/ceosal1.dta\u0026quot;)\rsave(ceosal1, file=\u0026#39;resources/ceosal1.RData\u0026#39;)\r}\r\r來自wooldridge 的資料集\rbase cheat sheet\n資料 affairs\nload(\u0026#39;resources/affairs.RData\u0026#39;)\r# 原始資料kid是整數，加入標籤成為factor haskids \u0026lt;- factor(affairs$kids,labels=c(\u0026quot;no\u0026quot;,\u0026quot;yes\u0026quot;))\rmlab \u0026lt;- c(\u0026quot;very unhappy\u0026quot;,\u0026quot;unhappy\u0026quot;,\u0026quot;average\u0026quot;,\u0026quot;happy\u0026quot;, \u0026quot;very happy\u0026quot;)\rmarriage \u0026lt;- factor(affairs$ratemarr, labels=mlab)\r# Frequencies for having kids:\rtable(haskids)\rhaskids\rno yes 171 430 \r# Marriage ratings (share):\rprop.table(table(marriage))\rmarriage\rvery unhappy unhappy average happy very happy 0.0266 0.1098 0.1547 0.3228 0.3860 \r# Contigency table: counts (display \u0026amp; store in var.)\r(countstab \u0026lt;- table(marriage,haskids))\r haskids\rmarriage no yes\rvery unhappy 3 13\runhappy 8 58\raverage 24 69\rhappy 40 154\rvery happy 96 136\r# Share within \u0026quot;marriage\u0026quot; (i.e. within a row):\rprop.table(countstab, margin=1)\r haskids\rmarriage no yes\rvery unhappy 0.188 0.812\runhappy 0.121 0.879\raverage 0.258 0.742\rhappy 0.206 0.794\rvery happy 0.414 0.586\r# Share within \u0026quot;haskids\u0026quot; (i.e. within a column):\rprop.table(countstab, margin=2)\r haskids\rmarriage no yes\rvery unhappy 0.0175 0.0302\runhappy 0.0468 0.1349\raverage 0.1404 0.1605\rhappy 0.2339 0.3581\rvery happy 0.5614 0.3163\r如果不知道函數prop.table()\n看一下資料結構\nstr(x\u0026lt;-table(haskids))\r \u0026#39;table\u0026#39; int [1:2(1d)] 171 430\r- attr(*, \u0026quot;dimnames\u0026quot;)=List of 1\r..$ haskids: chr [1:2] \u0026quot;no\u0026quot; \u0026quot;yes\u0026quot;\r上面的結構顯示，\n\rint [1:2(1d)] 171 430 : 整數向量，長度由1到2，是個1維向量。元素1到2的內容分別是171,430。\n\r可以由dimnames(x)得到一個list,裡面只有一個元素，這個元素又是一個char list(長度為2)。\n因此可以試試看\r\rx/sum(x)\rhaskids\rno yes 0.285 0.715 \r結果應該和prop.table()一樣。\n那麼2 way 呢？\r也是先看結構：\nstr(countstab \u0026lt;- table(marriage,haskids))\r \u0026#39;table\u0026#39; int [1:5, 1:2] 3 8 24 40 96 13 58 69 154 136\r- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r..$ marriage: chr [1:5] \u0026quot;very unhappy\u0026quot; \u0026quot;unhappy\u0026quot; \u0026quot;average\u0026quot; \u0026quot;happy\u0026quot; ...\r..$ haskids : chr [1:2] \u0026quot;no\u0026quot; \u0026quot;yes\u0026quot;\r countstab/rowSums(countstab)\r haskids\rmarriage no yes\rvery unhappy 0.188 0.812\runhappy 0.121 0.879\raverage 0.258 0.742\rhappy 0.206 0.794\rvery happy 0.414 0.586\r countstab/colSums(countstab)\r haskids\rmarriage no yes\rvery unhappy 0.0175 0.0302\runhappy 0.0186 0.3392\raverage 0.1404 0.1605\rhappy 0.0930 0.9006\rvery happy 0.5614 0.3163\r#??countstab/colsum(countstab)\rceosal1\nload(\u0026#39;resources/ceosal1.RData\u0026#39;)\r# sample average:\rmean(ceosal1$salary)\r[1] 1281\r# sample median:\rmedian(ceosal1$salary)\r[1] 1039\r#standard deviation:\rsd(ceosal1$salary)\r[1] 1372\r# summary information:\rsummary(ceosal1$salary)\r Min. 1st Qu. Median Mean 3rd Qu. Max. 223 736 1039 1281 1407 14822 \r# correlation with ROE:\rcor(ceosal1$salary, ceosal1$roe)\r[1] 0.115\rboxplot(ceosal1$roe,horizontal = T)\rboxplot(ceosal1$roe~ceosal1$consprod)\r\rt-test\rManually enter raw data from Wooldridge, Table C.3:\rSR87\u0026lt;-c(10,1,6,.45,1.25,1.3,1.06,3,8.18,1.67,.98,1,.45,\r5.03,8,9,18,.28,7,3.97)\rSR88\u0026lt;-c(3,1,5,.5,1.54,1.5,.8,2,.67,1.17,.51,.5,.61,6.7,\r4,7,19,.2,5,3.83)\r\rCalculate Change (the parentheses just display the results):\r(Change \u0026lt;- SR88 - SR87)\r [1] -7.00 0.00 -1.00 0.05 0.29 0.20 -0.26 -1.00 -7.51 -0.50 -0.47 -0.50\r[13] 0.16 1.67 -4.00 -2.00 1.00 -0.08 -2.00 -0.14\r\rIngredients to CI formula\r(avgCh\u0026lt;- mean(Change))\r[1] -1.15\r(n \u0026lt;- length(Change))\r[1] 20\r(sdCh \u0026lt;- sd(Change))\r[1] 2.4\r(se \u0026lt;- sdCh/sqrt(n))\r[1] 0.537\r(c \u0026lt;- qt(.975, n-1))\r[1] 2.09\r\rConfidence intervall:\rc( avgCh - c*se, avgCh + c*se )\r[1] -2.278 -0.031\r驗證\nv.n \u0026lt;- length(Change)\rv.mean \u0026lt;- sum(Change)/v.n\rv.std \u0026lt;-sqrt(sum((Change-v.mean)^2)/(v.n-1))\rv.se \u0026lt;- v.std/sqrt(v.n)\rrst\u0026lt;-list(v.n,v.mean,v.std,v.se)\rrst\r[[1]]\r[1] 20\r[[2]]\r[1] -1.15\r[[3]]\r[1] 2.4\r[[4]]\r[1] 0.537\r練習：黑白種，用同一個CV找工作。\naudit\nload(\u0026#39;resources/audit.dta\u0026#39;)\rhead(audit)\r w b y\r1 1 1 0\r2 1 1 0\r3 1 1 0\r4 1 1 0\r5 1 1 0\r6 0 0 0\ry是前兩個欄位相減。以第1筆資料為例，兩個都是1，沒差別(y=0)。\n\rby hand\rt statistic for H0: mu=0:\n自由度(d.f.)為 n-1 =240 的t分配，其臨界值Critical values(如下):\nalpha.one.tailed = c(0.1, 0.05, 0.025, 0.01, 0.005, .001)\rCV \u0026lt;- qt(1 - alpha.one.tailed, n-1)\rcbind(alpha.one.tailed, CV)\r alpha.one.tailed CV\r[1,] 0.100 1.29\r[2,] 0.050 1.65\r[3,] 0.025 1.97\r[4,] 0.010 2.34\r[5,] 0.005 2.60\r[6,] 0.001 3.12\r\r\rby 函數t.test()\rH0: y=5, H1:y\u0026gt;5, 信賴區間0.99\rt.test(y, mu=5, alternative=“greater”, conf.level=0.99)\r利用函數算：\n# ex.C.3: two-sided CI\rt.test(audit$y)\r# ex.C.5 \u0026amp; C.7: 1-sided test:\rt.test(audit$y, alternative=\u0026quot;less\u0026quot;)\rOne Sample t-test\rdata: audit$y\rt = -4.2768, df = 240, p-value = 2.739e-05\ralternative hypothesis: true mean is not equal to 0\r95 percent confidence interval:\r-0.1939385 -0.0716217 **說明：mu +/- c.level*(se) 見手算例 **\rsample estimates:\rmean of x -0.1327801 One Sample t-test\rdata: audit$y\rt = -4.2768, df = 240, p-value = 1.369e-05\ralternative hypothesis: true mean is less than 0\r95 percent confidence interval:\r-Inf -0.08151529\rsample estimates:\rmean of x -0.1327801\r\r\r分組\r目的：分組求統計量\r大綱是：先探索一下我們可能用到的R語言技巧，然後是寫成函數。\n方法1: 利用 for迴圈\r如果不分組\nage = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372,\r34.935, 35.2115, 35.2115, 5.2115, 36.7803)\rgroup = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1)\rdframe = data.frame(age=age, group=group)\rsummary(dframe)\r age group Min. : 5.2 Min. :1.0 1st Qu.:26.7 1st Qu.:1.0 Median :33.2 Median :1.0 Mean :29.2 Mean :1.4 3rd Qu.:35.1 3rd Qu.:2.0 Max. :36.8 Max. :2.0 \rdata.frame 的record篩選，可以利用邏輯值索引來篩選分組，這裡的範例都是求得一組(以第一分類為例)：\nft\u0026lt;-factor(dframe$group)\rgn\u0026lt;-length(levels(ft)) # nlevels(ft)\rgf\u0026lt;-ft==levels(ft)[1] # 第一組\rg1\u0026lt;-dframe[gf,]\rg1\r age group\r1 23.1 1\r2 25.8 1\r3 29.5 1\r5 33.6 1\r6 34.9 1\r10 36.8 1\r除了上面的篩選方式以外，也可以利用%in%\nft\u0026lt;-factor(dframe$group)\rgn\u0026lt;-length(levels(ft)) # nlevels(ft)\rgf\u0026lt;-as.numeric(levels(ft)[1]) # 第一組\rg1\u0026lt;-dframe[group %in% gf,] # 不是 gf %in% group\rrst\u0026lt;-summary(g1)\rrst[4,1]\r[1] \u0026quot;Mean :30.6 \u0026quot;\rrst[4,2]\r[1] \u0026quot;Mean :1 \u0026quot;\r最後的程式碼：\nft\u0026lt;-factor(dframe$group)\rrst \u0026lt;- as.list(numeric(nlevels(ft)))\rnames(rst)\u0026lt;-levels(ft)\rfor (gi in levels(ft) ){\rgf\u0026lt;-as.numeric(gi)\rg1\u0026lt;-dframe[group %in% gf,] t\u0026lt;-summary(g1)\rrst[gi]=t[4,1]\r}\rprint(rst)\r$`1`\r[1] \u0026quot;Mean :30.6 \u0026quot;\r$`2`\r[1] \u0026quot;Mean :27.1 \u0026quot;\r函數summary()的結果是一個table，但是而且裡面的元素是「字串」，例如\n age group Min. : 5.212 Min. :1.0 1st Qu.:26.742 1st Qu.:1.0 Median :33.212 Median :1.0 Mean :29.216 Mean :1.4 3rd Qu.:35.142 3rd Qu.:2.0 Max. :36.780 Max. :2.0 \r但是在很多情況下，我們希望可以自己可以控制的格式便於進步分析。例如，要一個矩陣，此時可以利用sub()：\ras.numeric(sub(’.*:‘,’’, summary(dframe)[4,1]))\n\r\r方法2:　函數aggregate()\raggregate(dframe$age, by=list(dframe$group), FUN=mean)\r Group.1 x\r1 1 30.6\r2 2 27.1\raggregate(dframe$age, by=list(dframe$group), FUN=mean)[2]\r x\r1 30.6\r2 27.1\raggregate()傳回data.frame，轉矩陣利用as.matrix()\n練習：\r上面的範例是每組求得一個值，如果是多個呢？例如利用aggregate()求得每組min,max,median,q25,q75 ?\n\r方法3: 函數　tapply\rf1\u0026lt;-function(im)\r{\rc(min(im),median(im),mean(im),max(im))\r}\rrst\u0026lt;-tapply(dframe$age,dframe$group,FUN = f1)#結果是list兩個元素，分別對應f1的計算結果\rrstm\u0026lt;-unlist(rst) # unlist 會把rst 變成1維向量\rrstm\u0026lt;-matrix(rstm,ncol=2) # hard code2 , try `length(levels(factor(dframe$group)))`\rrownames(rstm)\u0026lt;-c(\u0026quot;min\u0026quot;,\u0026quot;median\u0026quot;,\u0026quot;mean\u0026quot;,\u0026quot;max\u0026quot;)\rcolnames(rstm)\u0026lt;-paste(\u0026quot;組別:\u0026quot;,levels(factor(dframe$group)))\rrstm\r 組別: 1 組別: 2\rmin 23.1 5.21\rmedian 31.6 34.00\rmean 30.6 27.11\rmax 36.8 35.21\r方法3 利用其他套件\rlibrary(dplyr)\rdt \u0026lt;- data.frame(age=rchisq(20,10), group=sample(1:2,20, rep=T))\rgrp \u0026lt;- group_by(dt, group)\rsummarise(grp, mean=mean(age), sd=sd(age))\rdetach(\u0026quot;package:dplyr\u0026quot;, unload=TRUE)\r\r\r\rplot\r這裡的分組不能用之前的hard code 中提到的方法，因為各組可能數量不同。\nv1\u0026lt;-c(1,2,3)\rv2\u0026lt;-c(4,4)\rcbind(v1,v2)\rWarning in cbind(v1, v2): number of rows of result is not a multiple of vector\rlength (arg 2)\r v1 v2\r[1,] 1 4\r[2,] 2 4\r[3,] 3 4\rrbind(v1,v2) 發生錯誤，是否只能用於data.frame\n問題：\r如果想要合併兩個向量，同時如果長度不一樣，就短的向量就補NA要怎麼做？練習寫成函數。\n v1 v2\r[1,] 1 4\r[2,] 2 4\r[3,] 3 NA\r練習:\n已經知道boxplot()的參數如果傳進矩陣或資料集，將對每一個欄位作圖\nnote:boxplot吃 y~x回歸式,例如\nboxplot(formula = Ozone ~ Month, # Y ~ X data = airquality, # 資料\rxlab = \u0026quot;Month\u0026quot;, ylab = \u0026quot;Ozone (ppb)\u0026quot;, col =\u0026quot;red\u0026quot;)\rboxplot(matrix(rnorm(100),ncol=2))\r現在要分組對年齡boxplot,請寫出程式碼，資料如下：\nage = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372,\r34.935, 35.2115, 35.2115, 5.2115, 36.7803)\rgroup = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1)\rdframe = data.frame(age=age, group=group)\rhint: 每組長度可能不一樣，需要補NA\nhint: 最簡單的寫法 boxplot(age~group)\n\u0026lt;1\u0026gt; FUN.Name 會跑到mathch.fun() 這個函數，而這個函數是用字串搜尋\nm2:\r現在想要把rst轉成data.frame。\n先看一下示範，如何把list 轉成 data.frame\n# 解釋結果,問stringsAsFactors=F 有什麼效果？\rtest1 \u0026lt;- list( c(a=\u0026#39;a\u0026#39;,b=\u0026#39;b\u0026#39;,c=\u0026#39;c\u0026#39;), c(a=\u0026#39;d\u0026#39;,b=\u0026#39;e\u0026#39;,c=\u0026#39;f\u0026#39;))\rd1\u0026lt;-as.data.frame(test1)\rd1\r c.a....a...b....b...c....c.. c.a....d...b....e...c....f..\ra a d\rb b e\rc c f\r# ok\rtest2 \u0026lt;- list(a = c(1, 2, 3), b = c(4, 5, 6))\rd2\u0026lt;-as.data.frame(test2)\rd2\r a b\r1 1 4\r2 2 5\r3 3 6\r\r\r"
},
{
	"uri": "/rlang/data_explorer_2.html",
	"title": "data explorer 2",
	"tags": [],
	"description": "資料探索",
	"content": "\r\r\r\rage = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372,\r34.935, 35.2115, 35.2115, 5.2115, 36.7803)\rgroup = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1)\rdframe = data.frame(age=age, group=group)\r分組列出summary:利用函數\rage = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372,\r34.935, 35.2115, 35.2115, 5.2115, 36.7803)\rgroup = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1)\rdframe = data.frame(age=age, group=group)\rmygroup\u0026lt;-function(df,g,idx)\r{\rft\u0026lt;-factor(df$g)\rgf\u0026lt;-ft==levels(ft)[idx] # 第一組\rg1\u0026lt;-df[gf,]\rreturn(g1) }\rx\u0026lt;-mygroup(dframe,\u0026quot;group\u0026quot;,1)\r\r問題：\r現在把某個欄位依據分組畫出boxplot\rA:age\rB:group(1,2)\r不足的補NA,每一欄成為矩陣，例如共兩組，那麼矩陣欄位就是2，比數為各組資料，長度不夠補na，\r最後\rboxplot(mtx)\nage = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372,\r34.935, 35.2115, 35.2115, 5.2115, 36.7803)\rgroup = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1)\rdframe = data.frame(age=age, group=group)\rgf\u0026lt;-group==1\rg1\u0026lt;-dframe[gf,1]\rgf\u0026lt;-group==2\rg2\u0026lt;-dframe[gf,1]\rmlen\u0026lt;-max(length(g1),length(g2))\rlength(g1)\u0026lt;-mlen\rlength(g2)\u0026lt;-mlen\rmtx\u0026lt;-cbind(g1,g2)\rboxplot(mtx)\rage = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372,\r34.935, 35.2115, 35.2115, 5.2115, 36.7803)\rgroup = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1)\rdframe = data.frame(age=age, group=group)\rvl\u0026lt;-list()\rfor (i in 1:2){\rgf\u0026lt;-group==i\rg1\u0026lt;-dframe[gf,1]\rvl[[i]]\u0026lt;-g1\r}\rgn\u0026lt;-sapply(vl,length)\rgn\u0026lt;-max(gn)\rvl\u0026lt;-lapply(vl,`length\u0026lt;-`,gn) # 補NA\rmtx\u0026lt;-matrix(unlist(vl),nrow=gn)\rboxplot(mtx)\rsummary(dframe)\nft\u0026lt;-factor(dframe$group)\rgn\u0026lt;-length(levels(ft)) # nlevels(ft)\ngf\u0026lt;-ft==levels(ft)[1] # 第一組\rg1\u0026lt;-dframe[gf,]\rsummary(g1)\ngf\u0026lt;-ft==levels(ft)[2] # 第一組\rg2\u0026lt;-dframe[gf,]\rsummary(g2)\nmygroup\u0026lt;-function(df,g,idx)\r{\rft\u0026lt;-factor(df$g)\ngf\u0026lt;-ft==levels(ft)[idx] # 第一組\rg1\u0026lt;-df[gf,]\rreturn(g1)\n}\rfor (i in 1:2){\rx\u0026lt;-mygroup(dframe,“group”,i)\nprint(summary(x))\r}\n\r"
},
{
	"uri": "/rlang/quickview1.html",
	"title": "Quick view 1",
	"tags": [],
	"description": "操作",
	"content": "\r\r\rquick view\r快速指令\n目前有哪些資料集可以測試\rdata()\rattach()\r一般是\nlibrary(sample)\rdata(\u0026quot;mydata\u0026quot;)\rattach(\"mydata\") 就不用打入mydata$欄位名稱\n\r\r幾個常用的統計量:\rx\u0026lt;-c(1,2,3)\rmedian(x)\rmean(x)\rmin(x)\rsd(x)\rrange(x)\rdiff(x)\r\r資料型態和內容\r可以先看看資料描述 ?mtcars\nmtcars\r mpg cyl disp hp drat wt qsec vs am gear carb\rMazda RX4 21.0 6 160.0 110 3.90 2.62 16.5 0 1 4 4\rMazda RX4 Wag 21.0 6 160.0 110 3.90 2.88 17.0 0 1 4 4\rDatsun 710 22.8 4 108.0 93 3.85 2.32 18.6 1 1 4 1\rHornet 4 Drive 21.4 6 258.0 110 3.08 3.21 19.4 1 0 3 1\rHornet Sportabout 18.7 8 360.0 175 3.15 3.44 17.0 0 0 3 2\rValiant 18.1 6 225.0 105 2.76 3.46 20.2 1 0 3 1\rDuster 360 14.3 8 360.0 245 3.21 3.57 15.8 0 0 3 4\rMerc 240D 24.4 4 146.7 62 3.69 3.19 20.0 1 0 4 2\rMerc 230 22.8 4 140.8 95 3.92 3.15 22.9 1 0 4 2\rMerc 280 19.2 6 167.6 123 3.92 3.44 18.3 1 0 4 4\rMerc 280C 17.8 6 167.6 123 3.92 3.44 18.9 1 0 4 4\rMerc 450SE 16.4 8 275.8 180 3.07 4.07 17.4 0 0 3 3\rMerc 450SL 17.3 8 275.8 180 3.07 3.73 17.6 0 0 3 3\rMerc 450SLC 15.2 8 275.8 180 3.07 3.78 18.0 0 0 3 3\rCadillac Fleetwood 10.4 8 472.0 205 2.93 5.25 18.0 0 0 3 4\rLincoln Continental 10.4 8 460.0 215 3.00 5.42 17.8 0 0 3 4\rChrysler Imperial 14.7 8 440.0 230 3.23 5.34 17.4 0 0 3 4\rFiat 128 32.4 4 78.7 66 4.08 2.20 19.5 1 1 4 1\rHonda Civic 30.4 4 75.7 52 4.93 1.61 18.5 1 1 4 2\rToyota Corolla 33.9 4 71.1 65 4.22 1.83 19.9 1 1 4 1\rToyota Corona 21.5 4 120.1 97 3.70 2.46 20.0 1 0 3 1\rDodge Challenger 15.5 8 318.0 150 2.76 3.52 16.9 0 0 3 2\rAMC Javelin 15.2 8 304.0 150 3.15 3.44 17.3 0 0 3 2\rCamaro Z28 13.3 8 350.0 245 3.73 3.84 15.4 0 0 3 4\rPontiac Firebird 19.2 8 400.0 175 3.08 3.85 17.1 0 0 3 2\rFiat X1-9 27.3 4 79.0 66 4.08 1.94 18.9 1 1 4 1\rPorsche 914-2 26.0 4 120.3 91 4.43 2.14 16.7 0 1 5 2\rLotus Europa 30.4 4 95.1 113 3.77 1.51 16.9 1 1 5 2\rFord Pantera L 15.8 8 351.0 264 4.22 3.17 14.5 0 1 5 4\rFerrari Dino 19.7 6 145.0 175 3.62 2.77 15.5 0 1 5 6\rMaserati Bora 15.0 8 301.0 335 3.54 3.57 14.6 0 1 5 8\rVolvo 142E 21.4 4 121.0 109 4.11 2.78 18.6 1 1 4 2\rhead(mtcars)\r mpg cyl disp hp drat wt qsec vs am gear carb\rMazda RX4 21.0 6 160 110 3.90 2.62 16.5 0 1 4 4\rMazda RX4 Wag 21.0 6 160 110 3.90 2.88 17.0 0 1 4 4\rDatsun 710 22.8 4 108 93 3.85 2.32 18.6 1 1 4 1\rHornet 4 Drive 21.4 6 258 110 3.08 3.21 19.4 1 0 3 1\rHornet Sportabout 18.7 8 360 175 3.15 3.44 17.0 0 0 3 2\rValiant 18.1 6 225 105 2.76 3.46 20.2 1 0 3 1\rtail(mtcars)\r mpg cyl disp hp drat wt qsec vs am gear carb\rPorsche 914-2 26.0 4 120.3 91 4.43 2.14 16.7 0 1 5 2\rLotus Europa 30.4 4 95.1 113 3.77 1.51 16.9 1 1 5 2\rFord Pantera L 15.8 8 351.0 264 4.22 3.17 14.5 0 1 5 4\rFerrari Dino 19.7 6 145.0 175 3.62 2.77 15.5 0 1 5 6\rMaserati Bora 15.0 8 301.0 335 3.54 3.57 14.6 0 1 5 8\rVolvo 142E 21.4 4 121.0 109 4.11 2.78 18.6 1 1 4 2\rhead 前幾筆資料\rtail 後幾筆資料\n編輯/瀏覽資料\redit(mtcars)\rdata.entry(mtcars)\rView(mtcars)\r\r個別欄位\r如果要顯示個別欄位,一般可以是mtcars$mpg,但是如果要直接使用mpg欄位,可以利用attach()\nattach(mtcars)\rmpg\r [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 17.3 15.2 10.4\r[16] 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 19.2 27.3 26.0 30.4 15.8 19.7\r[31] 15.0 21.4\r\r質性數據的分析\r欄位cyl為質性變數,可以利用table分析\ntable(mtcars$cyl)\r\r4 6 8 11 7 14 \r頻率圖\nbarplot(table(mtcars$cyl))\r解釋下面兩個圖為甚麼不一樣?\nv\u0026lt;-as.vector(table(mtcars$cyl))\rbarplot(v)\rm\u0026lt;-as.matrix(table(mtcars$cyl))\rbarplot(m)\r上面兩個圖不一樣,因為table()的定義,所以轉成矩陣以後是3x1。\nx\u0026lt;-c(1,1,1)\rx1\u0026lt;-as.matrix(x)\rx2\u0026lt;-as.table(x)\rx3\u0026lt;-table(x)\rx1\rx2\rx3\r [,1]\r[1,] 1\r[2,] 1\r[3,] 1\r# x2 原地轉\rA B C 1 1 1 # x3 : 計算1有幾個\rx\r1 3 \r\rbarplot(c(11,7,4))\rbarplot(mtcars$mpg)\rbarplot(mtcars$cyl)\r\r\rassignment\r\r\u0026lt;-和 -\u0026gt; 是一對 ，可以向左和向右賦值\n\r= 是單向的 ，作用和\u0026lt;-基本相同，但對函數中的變數通常使用=\n\r\u0026lt;\u0026lt;- 這個是全域賦值 ，跟變數的作用域有關，開發自己的套件(package)的時候,常用。\r\r##Delete x (if it exists)\rrm(x)\rWarning in rm(x): 找不到物件 \u0026#39;x\u0026#39;\rmean(x = 1:10) #[1] 5.5\r[1] 5.5\rx #Error: object \u0026#39;x\u0026#39; not found\rError in eval(expr, envir, enclos):\r找不到物件 \u0026#39;x\u0026#39;\r觀察上面的x,第一行指令從環境中去掉變數x的定義。\r第2行中的x是在block 中定義，因此執行完以後,會被殺掉。因此第三行指令,出現找不到x的提示。\n後面測試\u0026lt;- operator:\nmean(x \u0026lt;- 1:10) # [1] 5.5\r[1] 5.5\rx\r [1] 1 2 3 4 5 6 7 8 9 10\r\rx # [1] 1 2 3 4 5 6 7 8 9 10\n\rThis time the x variable is declared within the user workspace.\rWhen does the assignment take place ?\rIn the code above, you may be tempted to thin that we “assign 1:10 to x, then calculate the mean.” This would be true for\r#languages such as C, but it isn ’t true in R. Consider the following function:\na \u0026lt;- 1\rf \u0026lt;- function(a) return(TRUE)\rf \u0026lt;- f(a \u0026lt;- a + 1);\r# 輸出:TRUE\ra # 結果=1 \r[1] 1\r注意上面a的值,仍然是1。原因是因為R的編譯器,在最佳化的時候,知道函數中沒用到參數,因此根本沒有存取到變數a,因此，原來的a是甚麼,a仍然是甚麼。\n簡單講就是f(a\u0026lt;-a+1)中的a\u0026lt;-a+1 被去掉不會被執行\nf(a\u0026lt;-a+1) =\u0026gt; f()\nrewrite\nf \u0026lt;- function(a) {\rif (runif(1) \u0026gt; 0.5) TRUE else a\r} f(a \u0026lt;- a + 1);\ra # result 2\r[1] 2\r這個函數f用到了參數a,但是編譯器這次沒那麼聰明,知道使用者用a來做甚麼,雖然這個函數的body仍然沒有動到a,但是這次f(a\u0026lt;-a+1)中的a\u0026lt;-a+1 會被執行。\n練習\n先去掉環境中的變數a,然後在執行上面的chunk.\r\r\rhint: rm(a)\r\r\rf(a \u0026lt;- a + 1);\r[1] TRUE\r# TRUE\ra # 2\r[1] 2\rf(a \u0026lt;- a + 1);\r[1] TRUE\ra #3\r[1] 2\ra\u0026lt;-1;\rf \u0026lt;- function(a) return(a);\rinvisible(f(a=a+1)) a\r[1] 1\rinvisible(f(a\u0026lt;-a+1))\ra\r[1] 2\r上面程式中,invisible函數在這裡的說明不重要,只是用來隱藏計算結果。\na\u0026lt;-1;\rf \u0026lt;- function(a) return(3);\rinvisible(f(a=a+1))\ra\r[1] 1\rinvisible(f(a\u0026lt;-a+1))\ra\r[1] 1\r=用在參數指派\r例如\nmatrix(1:20, ncol = 4)\r [,1] [,2] [,3] [,4]\r[1,] 1 6 11 16\r[2,] 2 7 12 17\r[3,] 3 8 13 18\r[4,] 4 9 14 19\r[5,] 5 10 15 20\rncol\rfunction (x) dim(x)[2L]\r\u0026lt;bytecode: 0x00000000146a8170\u0026gt;\r\u0026lt;environment: namespace:base\u0026gt;\r產生5X4矩陣。如果\nmatrix(1:20, ncol \u0026lt;- 4)\r [,1] [,2] [,3] [,4] [,5]\r[1,] 1 5 9 13 17\r[2,] 2 6 10 14 18\r[3,] 3 7 11 15 19\r[4,] 4 8 12 16 20\rncol\r[1] 4\r會產生一個變數 ncol，這裡產生的為4x5的矩陣。為甚麼?因為這裡的第2個參數ncol\u0026lt;-4,指派給變數ncol,然後這個expression會return 4,而4就被當成第2個參數,也就是matrix(1:20, ncol \u0026lt;- 4)等同於matrix(1:20, 4),也就是指定ROW的維度。\n結論:x\u0026lt;-3 \u0026lt;-會在全局產生變數x然後指派3\n(x \u0026lt;- 3)\r[1] 3\r#rm(list = ls())\rrm(x)\rls()\r[1] \u0026quot;a\u0026quot; \u0026quot;f\u0026quot; \u0026quot;m\u0026quot; \u0026quot;ncol\u0026quot; \u0026quot;v\u0026quot; \r(x = 3)\r[1] 3\rls()\r[1] \u0026quot;a\u0026quot; \u0026quot;f\u0026quot; \u0026quot;m\u0026quot; \u0026quot;ncol\u0026quot; \u0026quot;v\u0026quot; \u0026quot;x\u0026quot; \r因為x是參數名稱不是變數,看mean help\n\r"
},
{
	"uri": "/rlang/regular_expression.html",
	"title": "Regular expression syntax",
	"tags": [],
	"description": "基本語法",
	"content": "\r\r\rRegular expression syntax\r利用一些特殊字元，例如 $ * + . ? [ ] ^ { } | ( ) \\構成Regular expressions，用來在文字中表達某些搜尋樣式的語法。 這裡只是簡短的介紹\nFunctions which work with regular expression patterns\r\rstrsplit: split string into substrings at occurances of regexp\rgrep: search for a regular expression within a string\rsub: search and then replace an occurance of a regular expression in a strng\rgsub: global search and replace all occurances of a regular expression in a string\r\r\rEscape sequences\r正規表達式中.代表任意字元,但是如果我們要在字串中查找“.”(例如,檔案名稱中的點) 的時候要怎樣表示?答案是使用逃逸字元\\。但是在R語言中,正規表達式，也是使用字串，可是在字串中,\\本身就逃逸字元，因此需要\\\\.。\ndot \u0026lt;- \u0026quot;\\\\.\u0026quot;\rwriteLines(dot)\r\\.\rx \u0026lt;- \u0026quot;a\\\\b\u0026quot;\rwriteLines(x)\ra\\b\rgrep, grepl\rgrep,grepl的差別是後者不支援參數value，且比對的結果和搜尋內容的個數相同。\ngrep(\u0026quot;a\\\\.c\u0026quot;, c(\u0026quot;abc\u0026quot;, \u0026quot;a.c\u0026quot;, \u0026quot;bef\u0026quot;))\r[1] 2\rgrep(\u0026quot;a\\\\.c\u0026quot;, c(\u0026quot;abc\u0026quot;, \u0026quot;a.c\u0026quot;, \u0026quot;bef\u0026quot;),value=TRUE)\r[1] \u0026quot;a.c\u0026quot;\rgrepl(\u0026quot;a\\\\.c\u0026quot;, c(\u0026quot;abc\u0026quot;, \u0026quot;a.c\u0026quot;, \u0026quot;bef\u0026quot;))\r[1] FALSE TRUE FALSE\r又另一個例子,是在字串中尋找單引號,假定要在國家中找尋是否有名稱包含單引號的名字,可以使用'\\''\r問題:為甚麼不是'\\\\''\rhint:\r這裡的逃逸字元只是字串的標準用法,'不是正規表達式的特殊字元。\ncountry\u0026lt;-read.delim(\u0026#39;resources/country.txt\u0026#39;,header=FALSE)\rnames(country)\u0026lt;-\u0026quot;Name\u0026quot; cname \u0026lt;-levels(country$Name)\rgrep(\u0026#39;\\\u0026#39;\u0026#39;, cname, value = TRUE)\rcharacter(0)\rnote:\r* 不是country.names\u0026lt;-“Name”\n問題:下面兩行有甚麼差別?\ngrep(\u0026#39;\\\u0026#39;\u0026#39;, country$Name, value = TRUE)\rgrep(\u0026#39;\\\u0026#39;\u0026#39;, levels(country$Name), value = TRUE)\r\rHint: levels 傳回唯一值\nlevels(factor(c(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;a\u0026quot;)))\r[1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot;\rfactor(c(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;a\u0026quot;))\r[1] a b a\rLevels: a b\r\rregexpr, gregexpr\rregexpr 函數的使用方式類似grepl。傳回整數向量(表示符合位置，如果找不到,則傳回-1),個數和比對字串串列相同。這個向量同時有屬性match.length(參考範例) .\ns\u0026lt;-\u0026quot;a.b.c.9\u0026quot;\rregexpr(\u0026#39;b\u0026#39;,s )\r[1] 3\rattr(,\u0026quot;match.length\u0026quot;)\r[1] 1\rattr(,\u0026quot;index.type\u0026quot;)\r[1] \u0026quot;chars\u0026quot;\rattr(,\u0026quot;useBytes\u0026quot;)\r[1] TRUE\rregexpr(\u0026#39;.\u0026#39;,s ) # 要定位符號「.」,這是錯的,\\.也錯\r[1] 1\rattr(,\u0026quot;match.length\u0026quot;)\r[1] 1\rattr(,\u0026quot;index.type\u0026quot;)\r[1] \u0026quot;chars\u0026quot;\rattr(,\u0026quot;useBytes\u0026quot;)\r[1] TRUE\rregexpr(\u0026#39;\\\\.\u0026#39;,s ) # 正確\r[1] 2\rattr(,\u0026quot;match.length\u0026quot;)\r[1] 1\rattr(,\u0026quot;index.type\u0026quot;)\r[1] \u0026quot;chars\u0026quot;\rattr(,\u0026quot;useBytes\u0026quot;)\r[1] TRUE\rregexpr(\u0026#39;[.]\u0026#39;,s ) # 正確 ,不需要regexpr(\u0026#39;[\\\\.]\u0026#39;,s )\r[1] 2\rattr(,\u0026quot;match.length\u0026quot;)\r[1] 1\rattr(,\u0026quot;index.type\u0026quot;)\r[1] \u0026quot;chars\u0026quot;\rattr(,\u0026quot;useBytes\u0026quot;)\r[1] TRUE\rregexpr(\u0026#39;\\\\d\u0026#39;,s ) # 正確\r[1] 7\rattr(,\u0026quot;match.length\u0026quot;)\r[1] 1\rattr(,\u0026quot;index.type\u0026quot;)\r[1] \u0026quot;chars\u0026quot;\rattr(,\u0026quot;useBytes\u0026quot;)\r[1] TRUE\rx\u0026lt;-regexpr(\u0026#39;[0-9]\u0026#39;,s ) # 正確\rattr(x,\u0026quot;match.length\u0026quot;)\r[1] 1\rs\u0026lt;-\u0026quot;a.b.c.9 6 8\u0026quot;\rx\u0026lt;-regexpr(\u0026#39;[0-9]\u0026#39;,s ) x\r[1] 7\rattr(,\u0026quot;match.length\u0026quot;)\r[1] 1\rattr(,\u0026quot;index.type\u0026quot;)\r[1] \u0026quot;chars\u0026quot;\rattr(,\u0026quot;useBytes\u0026quot;)\r[1] TRUE\rattr(x,\u0026quot;match.length\u0026quot;)\r[1] 1\rgregexpr() 和 regexpr()一樣,不同的是會在目標字串中搜尋所有符合的位置而不是只找第一個(g:全局)。 因此傳回的結果個數雖然和查找的串列元素個數一樣,但是每個元素都是一個向量。如果都沒找到,只有一個-1。\ns\u0026lt;-\u0026quot;a.b.c.9 6 8\u0026quot;\rgregexpr(\u0026#39;[0-9]\u0026#39;,s ) \r[[1]]\r[1] 7 9 11\rattr(,\u0026quot;match.length\u0026quot;)\r[1] 1 1 1\rattr(,\u0026quot;index.type\u0026quot;)\r[1] \u0026quot;chars\u0026quot;\rattr(,\u0026quot;useBytes\u0026quot;)\r[1] TRUE\r\r\r應用\r產生3個檔案,檔案名稱含有cat\nfile.create(c(\u0026quot;xcat1.rmd\u0026quot;, \u0026quot;ycat2.txt\u0026quot;, \u0026quot;zcat3.rmd\u0026quot;))\rfiles\u0026lt;-list.files(\u0026quot;.\u0026quot;)\rgrep(\u0026quot;cat\u0026quot;, files, value = TRUE)\rgrep(\u0026quot;cat\u0026quot;, files, value = FALSE)\rgrepl(\u0026quot;cat\u0026quot;, files)\r\r數量修飾詞Quantifiers\r指定重複次數.\n\r*: 至少0個。\n\r+: 至少一個.\n\r?: 最多一個.\n\r{n}: 剛好n個.\n\r{n,}: 至少n個.\n\r{n,m}: 次數在 n 到 m 之間(包括n,m).\r\r(strings \u0026lt;- c(\u0026quot;a\u0026quot;, \u0026quot;ab\u0026quot;, \u0026quot;acb\u0026quot;, \u0026quot;accb\u0026quot;, \u0026quot;acccb\u0026quot;, \u0026quot;accccb\u0026quot;))\r[1] \u0026quot;a\u0026quot; \u0026quot;ab\u0026quot; \u0026quot;acb\u0026quot; \u0026quot;accb\u0026quot; \u0026quot;acccb\u0026quot; \u0026quot;accccb\u0026quot;\rgrep(\u0026quot;ac*b\u0026quot;, strings, value = TRUE)\r[1] \u0026quot;ab\u0026quot; \u0026quot;acb\u0026quot; \u0026quot;accb\u0026quot; \u0026quot;acccb\u0026quot; \u0026quot;accccb\u0026quot;\rgrep(\u0026quot;ac+b\u0026quot;, strings, value = TRUE)\r[1] \u0026quot;acb\u0026quot; \u0026quot;accb\u0026quot; \u0026quot;acccb\u0026quot; \u0026quot;accccb\u0026quot;\rgrep(\u0026quot;ac?b\u0026quot;, strings, value = TRUE)\r[1] \u0026quot;ab\u0026quot; \u0026quot;acb\u0026quot;\rgrep(\u0026quot;ac{2}b\u0026quot;, strings, value = TRUE)\r[1] \u0026quot;accb\u0026quot;\rgrep(\u0026quot;ac{2,}b\u0026quot;, strings, value = TRUE)\r[1] \u0026quot;accb\u0026quot; \u0026quot;acccb\u0026quot; \u0026quot;accccb\u0026quot;\rgrep(\u0026quot;ac{2,3}b\u0026quot;, strings, value = TRUE)\r[1] \u0026quot;accb\u0026quot; \u0026quot;acccb\u0026quot;\rExercise\rFind all countries with ee in Gapminder using quantifiers.\ncharacter(0)\r\r\rPosition of pattern within the string\r\r^: 字串開頭.\n\r$: 字串結尾.\n\r\\b: 左右都空白的 word.\n\r\\B: 左右不是空白 word.\r\r(strings \u0026lt;- c(\u0026quot;abcd\u0026quot;, \u0026quot;cdab\u0026quot;, \u0026quot;cabd\u0026quot;, \u0026quot;c abd\u0026quot;))\r[1] \u0026quot;abcd\u0026quot; \u0026quot;cdab\u0026quot; \u0026quot;cabd\u0026quot; \u0026quot;c abd\u0026quot;\rgrep(\u0026quot;ab\u0026quot;, strings, value = TRUE)\r[1] \u0026quot;abcd\u0026quot; \u0026quot;cdab\u0026quot; \u0026quot;cabd\u0026quot; \u0026quot;c abd\u0026quot;\rgrep(\u0026quot;^ab\u0026quot;, strings, value = TRUE)\r[1] \u0026quot;abcd\u0026quot;\rgrep(\u0026quot;ab$\u0026quot;, strings, value = TRUE)\r[1] \u0026quot;cdab\u0026quot;\rgrep(\u0026quot;\\\\bab\u0026quot;, strings, value = TRUE)\r[1] \u0026quot;abcd\u0026quot; \u0026quot;c abd\u0026quot;\rregexpr(\u0026quot;\\\\bab\u0026quot;, strings)\r[1] 1 -1 -1 3\rattr(,\u0026quot;match.length\u0026quot;)\r[1] 2 -1 -1 2\rattr(,\u0026quot;index.type\u0026quot;)\r[1] \u0026quot;chars\u0026quot;\rattr(,\u0026quot;useBytes\u0026quot;)\r[1] TRUE\rregexpr(\u0026quot;\\\\Bab\u0026quot;, strings)\r[1] -1 3 2 -1\rattr(,\u0026quot;match.length\u0026quot;)\r[1] -1 2 2 -1\rattr(,\u0026quot;index.type\u0026quot;)\r[1] \u0026quot;chars\u0026quot;\rattr(,\u0026quot;useBytes\u0026quot;)\r[1] TRUE\rExercise\rFind all .txt files in the repository.\n```{r ex_pos, echo = FALSE}\rgrep(\u0026quot;\\\\.txt$\u0026quot;, files, value = TRUE)\rgrep(\u0026quot;[.]txt$\u0026quot;, files, value = TRUE)\r```\r\r\rOperators\r\r.: 任意字元。\n\r[...]: 例如,[ade] 3個字元其中一個。[a-e],a到e.\n\r[^...]: 除了[]指定的字元，非[…]的意思。.\n\r\\: 抑制下列字元在字串,\"\",中的特殊意思 $ * + . ? [ ] ^ { } | ( ) \\, 只是在R中,因為\\又有特殊意義 ,因此必須雙\\例如 \\\\$。\n\r|: 或.\n\r(...): 字元組,根據出現的順序,可以用 \\\\N識別( backreference).\r\r(strings \u0026lt;- c(\u0026quot;^ab\u0026quot;, \u0026quot;ab\u0026quot;, \u0026quot;abc\u0026quot;, \u0026quot;abd\u0026quot;, \u0026quot;abe\u0026quot;, \u0026quot;ab 12\u0026quot;))\r[1] \u0026quot;^ab\u0026quot; \u0026quot;ab\u0026quot; \u0026quot;abc\u0026quot; \u0026quot;abd\u0026quot; \u0026quot;abe\u0026quot; \u0026quot;ab 12\u0026quot;\rgrep(\u0026quot;ab.\u0026quot;, strings, value = TRUE) \r[1] \u0026quot;abc\u0026quot; \u0026quot;abd\u0026quot; \u0026quot;abe\u0026quot; \u0026quot;ab 12\u0026quot;\rgrep(\u0026quot;ab[c-e]\u0026quot;, strings, value = TRUE)\r[1] \u0026quot;abc\u0026quot; \u0026quot;abd\u0026quot; \u0026quot;abe\u0026quot;\rgrep(\u0026quot;ab[^c]\u0026quot;, strings, value = TRUE)\r[1] \u0026quot;abd\u0026quot; \u0026quot;abe\u0026quot; \u0026quot;ab 12\u0026quot;\rgrep(\u0026quot;^ab\u0026quot;, strings, value = TRUE) \r[1] \u0026quot;ab\u0026quot; \u0026quot;abc\u0026quot; \u0026quot;abd\u0026quot; \u0026quot;abe\u0026quot; \u0026quot;ab 12\u0026quot;\rgrep(\u0026quot;\\\\^ab\u0026quot;, strings, value = TRUE) \r[1] \u0026quot;^ab\u0026quot;\rgrep(\u0026quot;abc|abd\u0026quot;, strings, value = TRUE) \r[1] \u0026quot;abc\u0026quot; \u0026quot;abd\u0026quot;\rgsub(\u0026quot;(ab) 12\u0026quot;, \u0026quot;\\\\1 34\u0026quot;, strings) \r[1] \u0026quot;^ab\u0026quot; \u0026quot;ab\u0026quot; \u0026quot;abc\u0026quot; \u0026quot;abd\u0026quot; \u0026quot;abe\u0026quot; \u0026quot;ab 34\u0026quot;\rnote:\r要讓.失效，可以[.]或 \\\\. 表示。\nExcercise\r找出國名中間有字元i t 並且將land結尾的字串改為大寫。例如,Finland-\u0026gt;FinLAND\ncharacter(0)\r\r\rCharacter classes\r預設字元分類例如 numbers, letters, 分類。\r開頭[: 結尾 :] ，另一種簡寫方式為利用 \\ 。\n\r[:digit:] or \\d: 數字,等同 [0-9].\n\r\\D: 非數字,等同 [^0-9].\n\r[:lower:]: 小寫,等同 [a-z].\n\r[:upper:]: 大寫,等同 [A-Z].\n\r[:alpha:]: 字母,等同 [[:lower:][:upper:]] or [A-z].\n\r[:alnum:]: 等同 [[:alpha:][:digit:]] 或 [A-z0-9].\n\r\\w: word characters, equivalent to [[:alnum:]_] or [A-z0-9_].\n\r\\W: not word, equivalent to [^A-z0-9_].\n\r[:xdigit:]: hexadecimal digits (base 16), 0 1 2 3 4 5 6 7 8 9 A B C D E F a b c d e f, equivalent to [0-9A-Fa-f].\r[:blank:]: blank characters, i.e. space and tab.\n\r[:space:]: space characters: tab, newline, vertical tab, form feed, carriage return, space.\r\\s: space, .\n\r\\S: not space.\n\r[:punct:]: punctuation characters, ! \" # $ % \u0026amp; ’ ( ) * + , - . / : ; \u0026lt; = \u0026gt; ? @ [ ] ^ _ ` { | } ~.\r[:graph:]: graphical (human readable) characters: equivalent to [[:alnum:][:punct:]].\r[:print:]: printable characters, equivalent to [[:alnum:][:punct:]\\\\s].\r[:cntrl:]: control characters, like \\n or \\r, [\\x00-\\x1F\\x7F].\r\rNote:\n\r[:...:] 必須寫在中括號中, 例如 [[:digit:]].\n\r\\ 注意 \\\\d. 和 \\t的區別。\r\r\r\r"
},
{
	"uri": "/rlang/topic_dataframe.html",
	"title": "topic data frame",
	"tags": [],
	"description": "基本語法",
	"content": "\r\r\rBootstrap method for mixed-model\r\nb.coef \u0026lt;- list()\rfor (i in 1:1000){ # 1:1000 = 執行1000次\r# 隨機取樣\rboot.data \u0026lt;-\rdataset[, .SD[sample(.N, min(.N,200), replace = FALSE)],\rby = list(ZONE8, Year)]\r# 用boot.data來跑GLMM\rboot.logit \u0026lt;-\rglmer(Count.F ~ Year.s + (0 + Year.s|ZONE8),\rdata = boot.data,\rfamily = poisson)\r# 輸出斜率與截距，輸出到 b.coef 裡面\rb.coef[[i]] \u0026lt;- fixef(boot.logit)\r}\rb.coef \u0026lt;- do.call(rbind, b.coef) %\u0026gt;% data.table\rL3 \u0026lt;- LETTERS[1:3]\rfac \u0026lt;- sample(L3, 10, replace = TRUE)\r(d \u0026lt;- data.frame(x = 1, y = 1:10, fac = fac))\r x y fac\r1 1 1 A\r2 1 2 C\r3 1 3 C\r4 1 4 A\r5 1 5 B\r6 1 6 C\r7 1 7 C\r8 1 8 C\r9 1 9 B\r10 1 10 A\r## The \u0026quot;same\u0026quot; with automatic column names:\rdata.frame(1, 1:10, sample(L3, 10, replace = TRUE))\r X1 X1.10 sample.L3..10..replace...TRUE.\r1 1 1 A\r2 1 2 A\r3 1 3 C\r4 1 4 C\r5 1 5 A\r6 1 6 B\r7 1 7 B\r8 1 8 C\r9 1 9 C\r10 1 10 B\ris.data.frame(d)\r[1] TRUE\r## do not convert to factor, using I() :\r(dd \u0026lt;- cbind(d, char = I(letters[1:10])))\r x y fac char\r1 1 1 A a\r2 1 2 C b\r3 1 3 C c\r4 1 4 A d\r5 1 5 B e\r6 1 6 C f\r7 1 7 C g\r8 1 8 C h\r9 1 9 B i\r10 1 10 A j\rrbind(class = sapply(dd, class), mode = sapply(dd, mode))\r x y fac char class \u0026quot;numeric\u0026quot; \u0026quot;integer\u0026quot; \u0026quot;character\u0026quot; \u0026quot;AsIs\u0026quot; mode \u0026quot;numeric\u0026quot; \u0026quot;numeric\u0026quot; \u0026quot;character\u0026quot; \u0026quot;character\u0026quot;\rstopifnot(1:10 == row.names(d)) # {coercion}\r(d0 \u0026lt;- d[, FALSE]) # data frame with 0 columns and 10 rows\rdata frame with 0 columns and 10 rows\r(d.0 \u0026lt;- d[FALSE, ]) # \u0026lt;0 rows\u0026gt; data frame (3 named cols)\r[1] x y fac\r\u0026lt;0 rows\u0026gt; (or 0-length row.names)\r(d00 \u0026lt;- d0[FALSE, ]) # data frame with 0 columns and 0 rows\rdata frame with 0 columns and 0 rows\r\r"
},
{
	"uri": "/rlang/type_basic.html",
	"title": "type basic",
	"tags": [],
	"description": "基本語法",
	"content": "\r\r\rdata type\r基本操作\r指派\r雖然也可以用=但是，R的設計是使用\u0026lt;-。\na \u0026lt;- 3\ra\u0026lt;-3是一個指派的敘述句,不會回饋資訊到螢幕上。如果要知道a的內容是甚麼,就打入a 或者(a\u0026lt;-3)\n a\r[1] 3\r(a\u0026lt;-3)\r[1] 3\rb \u0026lt;- sqrt(a * a + 5)\rb\r[1] 3.74\r在session中的如果要列出已經定義過的變數,可以利用ls\nls()\r[1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot;\r按照R的說明,等號只能用在top level,或是函數參數的指定。\r參考\n‹function_name›(‹argname› = ‹value›, …)\r‹function_name›(‹args›, ‹argname› = ‹value›, …)\r\r\r運算\r四則運算\r\rLogical\rAnother important data type is the logical type. There are two predefined variables, TRUE and FALSE:\na = TRUE\rtypeof(a)\r[1] \u0026quot;logical\u0026quot;\rb = FALSE\rtypeof(b)\r[1] \u0026quot;logical\u0026quot;\r\rR語言常用邏輯運算子\r\r\roperator\r說明\r\r\r\r\u0026lt;\rless than\r\r\u0026gt;\rgreat than\r\r\u0026lt;=\rless than or equal\r\r\u0026gt;=\rgreater than or equal\r\r==\requal to\r\r!=\rnot equal to\r\r|\rentry wise or\r\r||\ror\r\r!\rnot\r\r\u0026amp;\rentry wise and\r\r\u0026amp;\u0026amp;\rand\r\rxor(a,b)\rexclusive or\r\r\r\r範例：不同的運算子，在個別元素和整個向量的運算結果不一樣：\na = c(TRUE, FALSE)\rb = c(FALSE, FALSE)\ra | b\r[1] TRUE FALSE\ra || b\r[1] TRUE\rxor(a, b)\r[1] TRUE FALSE\ra||b 只比對a,b中的第一個元素。因此只有個長度。\n\u0026amp; 和 | 比對元素,傳回長度為大小最長的那個。\n0為FALSE,而其他數字為TRUE。\nx \u0026lt;- c(TRUE,FALSE,0,6)\ry \u0026lt;- c(FALSE,TRUE,FALSE,TRUE)\r!x\rx\u0026amp;y\rx\u0026amp;\u0026amp;y\rx|y\rx||y\r\r\u0026lt;-, \u0026lt;\u0026lt;-, = Leftwards assignment\n-\u0026gt;, -\u0026gt;\u0026gt; Rightwards assignment\rThe operators \u0026lt;- and = can be used, almost interchangeably, to assign to variable in the same environment.\nThe \u0026lt;\u0026lt;- operator is used for assigning to variables in the parent environments (more like global assignments). The rightward assignments, although available are rarely used.\n\r邏輯函數\ris.family 函數，可以用來判定變數是什麼型態，傳回真假值，例如\na = c(1, 2, 3)\ris.numeric(a)\r[1] TRUE\ris.factor(a)\r[1] FALSE\r函數identical(a,b)\ra,b 是否相等\nA \u0026lt;- c(\u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;C\u0026quot;, \u0026quot;D\u0026quot;)\rB \u0026lt;- A\rC \u0026lt;- c(\u0026quot;A\u0026quot;, \u0026quot;C\u0026quot;, \u0026quot;C\u0026quot;, \u0026quot;E\u0026quot;)\ridentical(A,C)\r[1] FALSE\ridentical 允許只比較有效位數。\n函數which()哪些元素不一致\nwhich(A != C)\r[1] 2 4\r函數all()\nall(A==B)\r[1] TRUE\rall(A==C)\r[1] FALSE\rwhich(),all()裡面的參數其實都是邏輯向量。\n\r註解：但是R語言的向量運算，涉及自動填充循環，因此注意下面的計算結果\nD \u0026lt;- c(\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;,\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;)\rE \u0026lt;- c(\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;)\rall(D==E)\r[1] TRUE\rall(length(D)==length(E)) \u0026amp;\u0026amp; all(D==E)\r[1] FALSE\r練習：\n將上面可能造成誤判的情況，寫成函數先判斷是否長度相等，然後判斷元素相等，可以和identical()比較。\n\r資源\r\r資料結構\r\r\r\r介紹\r在R語言中,型態不須經過宣告(declared)。 一個變數的型態經由assignment的過程決定,即\u0026lt;-右邊的R-Objects。也就是在指派變數值的時候,同時決定了型態。基本的 R-object有 −\n\rVectors\n\rLists\n\rMatrices\rArrays\rFactors\rData Frames\r\r最簡單的是vector物件,atomic vector 有6種data types(有時也叫做 6 個classes)\n\r\rData Type\rExample\r\r\r\rLogical\rTRUE, FALSE\r\rNumeric\r1.3, 5, 99\r\rInteger\r3L, 24L, 0L\r\rComplex\r5 + 4i\r\rCharacter\r‘b’ , “good”, “TRUE”, ‘23.4’\r\rRaw\r“Hello” is stored as 48 65 6c 6c 6f\r\r\r\r數字(3種),邏輯,字元(2種)\nv \u0026lt;- TRUE print(class(v))\r[1] \u0026quot;logical\u0026quot;\rv \u0026lt;- 23.5\rprint(class(v))\r[1] \u0026quot;numeric\u0026quot;\rv \u0026lt;- 2L\rprint(class(v))\r[1] \u0026quot;integer\u0026quot;\rv \u0026lt;- 2+5i\rprint(class(v))\r[1] \u0026quot;complex\u0026quot;\rv \u0026lt;- \u0026quot;TRUE\u0026quot;\rprint(class(v))\r[1] \u0026quot;character\u0026quot;\rv \u0026lt;- charToRaw(\u0026quot;Hello\u0026quot;)\rprint(class(v))\r[1] \u0026quot;raw\u0026quot;\r\r實數的比較\rx \u0026lt;- seq(0, 1, by = 0.2)\ry \u0026lt;- seq(0, 1, by = 0.2)\ry[4]\r[1] 0.6\rx[3]\r[1] 0.4\r1 - x[3]\r[1] 0.6\ry[4] == 1 - x[3]\r[1] FALSE\ry[4] \u0026gt; 1 - x[3]\r[1] TRUE\r## note:\rall.equal(y[4], 1 - x[3])\r[1] TRUE\r## Q: what is the result of : 1-0.4 ==0.6\r0.1+0.2 == 0.3\r[1] FALSE\rall.equal(0.1+0.2,0.3)\r[1] TRUE\rnx1\u0026lt;-numeric(0)\rnx2\u0026lt;-3\ris.null(nx1) # F,因為nx1是空向量(長度為0的數字向量)\r[1] FALSE\ris.na(nx1) # logical(0),每個元素檢查是不是NA,但是現在是空向量,所以結果是logical(0)\rlogical(0)\rtypeof(nx1) # double\r[1] \u0026quot;double\u0026quot;\rtypeof(nx2) # double\r[1] \u0026quot;double\u0026quot;\rlength(nx1) # 0 \r[1] 0\rlength(nx2) # 1\r[1] 1\r甚麼時候用到is.null\nconfig \u0026lt;- list()\ris.null(config$name)\r[1] TRUE\r\r\r字串\r參考\n建立字串\r可以是 雙引號中\"\" 或 單引號中’’。\r字串中如果有雙引號,或單引號，則如下表示:\n“‘這個’來自’那個’”\na \u0026lt;- \u0026quot;hello\u0026quot;\ra\r[1] \u0026quot;hello\u0026quot;\rtypeof(a) #[1] \u0026quot;character\u0026quot; \r[1] \u0026quot;character\u0026quot;\ris.vector(a) #[1] TRUE\r[1] TRUE\r利用函數:character() 這個函數的參數,為整數,建立一個vector(不是list),裡面的元素都是空字串\n# 變數ex初始化為character vector,參看後面的討論\r(ex \u0026lt;- character(0))\rcharacter(0)\rlength(ex)\r[1] 0\rclass(ex)\r[1] \u0026quot;character\u0026quot;\r# 如果剛剛沒有設定ex \u0026lt;- character(0),這裡會發生錯誤\r(ex[1] \u0026lt;- \u0026quot;first\u0026quot;)\r[1] \u0026quot;first\u0026quot;\r# check its length again\rlength(ex)\r[1] 1\r索引可以用跳的:\n(ex[4] \u0026lt;- \u0026quot;fourth\u0026quot;)\r[1] \u0026quot;fourth\u0026quot;\rlength(ex)\r[1] 4\rtypeof(ex)\r[1] \u0026quot;character\u0026quot;\rex\r[1] \u0026quot;first\u0026quot; NA NA \u0026quot;fourth\u0026quot;\r跳過的索引,內容自動為NA.\n\r空字串\r引號內連空白都沒有的字串:\r(比較上面利用character(5)可以建立5個元素為空字串的vector。)\n# empty string\rempty_str \u0026lt;- \u0026quot;\u0026quot;\rempty_str\r[1] \u0026quot;\u0026quot;\r# class\rclass(empty_str)\r[1] \u0026quot;character\u0026quot;\r討論character(0)\r前面說character(2),可以傳回長度2,每個元素都是空白字串\"\"的向量,那麼character(0)是甚麼?\r除了前面提到的變數初始化為向量(也許可以說是向量宣告)\r例如,整數也是這樣\nzz\u0026lt;-integer(0)\rzz[4]=6\rzz\r[1] NA NA NA 6\r這裡對character(0)做一些測試:\nex1\u0026lt;-character(0) ex2\u0026lt;-\u0026quot;\u0026quot;\rtypeof(ex1)\r[1] \u0026quot;character\u0026quot;\rtypeof(ex2)\r[1] \u0026quot;character\u0026quot;\r函數str()用來顯示R物件的結構:\nstr(ex1)\r chr(0) \rstr(ex2)\r chr \u0026quot;\u0026quot;\rclass(ex1)\r[1] \u0026quot;character\u0026quot;\rclass(ex2)\r[1] \u0026quot;character\u0026quot;\ris.list(ex1)\r[1] FALSE\ris.list(ex2)\r[1] FALSE\rsurprise: 一個字元也是向量。\nis.vector(ex1)\r[1] TRUE\ris.vector(ex2)\r[1] TRUE\rlength(ex1)\r[1] 0\rlength(ex2)\r[1] 1\ris.null(ex1)\r[1] FALSE\ris.null(ex2)\r[1] FALSE\ris.na(ex1)\rlogical(0)\ris.na(ex2)\r[1] FALSE\r最後,這兩個是不是相等\nex1==ex2\rlogical(0)\r\r\r\r型態操作is family\ris.numeric(), is.integer(), and is.double()\r## 型態轉換 as family\na\u0026lt;-c(TRUE,FALSE)\ras.numeric(a)\r[1] 1 0\ran\u0026lt;-as.logical(a)\ran\r[1] TRUE FALSE\r\rvector\r利用c函數，可以使用vector存放一個以上的數字。\na = c(1, 2, 3, 4, 5)\ra1 = 1:5\r有關list的運算:加減乘除等等\na = c(1, 2, 3, 4, 5)\ra+1\r[1] 2 3 4 5 6\rmean(a)\r[1] 3\rvar(a)\r[1] 2.5\rsummary(a)\r Min. 1st Qu. Median Mean 3rd Qu. Max. 1 2 3 3 4 5 \rnote:\r對比stata sum a 指令,summary(a) 返回的是一個table物件。可以指派給變數,因此計算結果可以經由變數(類別為table)存取。\nlist的元素,利用中括號\na = 2:6\ra[1]\r[1] 2\ra[2]\r[1] 3\ra[0]\rinteger(0)\ra[6]\r[1] NA\r在R中,的最小的索引值為1base.如果給索引為0,可以知道資料是否被排序。 超出索引範圍得到\"NA。\na=2:6\rx = a[6]\r如何判斷是否NA\nx == NA\r[1] NA\r上面的比較沒有意義,和NA的任何運算都是NA\nr = x == NA\rr\r[1] NA\r結論:任何變數和NA運算,結果還是NA\n另一種方法\nprint(x == NA)\r[1] NA\r如何判斷NA ? is.na()\n is.na(a[6])\r[1] TRUE\r\r初始化向量,可以利用a\u0026lt;-10 或指定numeric(double)型態\na \u0026lt;- numeric(10) a\r [1] 0 0 0 0 0 0 0 0 0 0\r如果想要知到變數的資料型別,利用函數typeof()\ntypeof()函數回傳的結果是“字串”\ntypeof(a) # 結果是\u0026quot;double\u0026quot;\r[1] \u0026quot;double\u0026quot;\rs = typeof(a)\rs\r[1] \u0026quot;double\u0026quot;\rtypeof(s) #結果是 \u0026quot;character\u0026quot;\r[1] \u0026quot;character\u0026quot;\r練習範例\rQ1. a,a1,a2 屬於甚麼型態\na = 1:4\ra1 = c(1, 2, 3, 4)\ra2 = numeric(4)\rA1\nQ2:a3的長度是甚麼?2,或6\na1\u0026lt;-c(1,2,3)\ra2\u0026lt;-c(2,3,4)\ra3\u0026lt;-c(a1,a2)\rHINT:\ra1\ra2\ra3;length(a3)\n\r\r字串和vector\r在EXCEL中，vector 一般指的是只放元素為數字的陣列(array);而陣列是可以存數字和文字的區域。table是有欄位的陣列。\r但是在R語言中,vector 只是元素型態相同即可。\n\ra \u0026lt;- \u0026quot;hello\u0026quot;\ra\r[1] \u0026quot;hello\u0026quot;\rtypeof(a)\r[1] \u0026quot;character\u0026quot;\rb \u0026lt;- c(\u0026quot;hello\u0026quot;, \u0026quot;there\u0026quot;)\rb\r[1] \u0026quot;hello\u0026quot; \u0026quot;there\u0026quot;\rb[1]\r[1] \u0026quot;hello\u0026quot;\rtypeof(b)\r[1] \u0026quot;character\u0026quot;\r(a = character(5)) # 產生5個空字串\r[1] \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot;\r(b = letters[1:4]) # 注意,letters不是函數\r[1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot;\rletters\r [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; \u0026quot;e\u0026quot; \u0026quot;f\u0026quot; \u0026quot;g\u0026quot; \u0026quot;h\u0026quot; \u0026quot;i\u0026quot; \u0026quot;j\u0026quot; \u0026quot;k\u0026quot; \u0026quot;l\u0026quot; \u0026quot;m\u0026quot; \u0026quot;n\u0026quot; \u0026quot;o\u0026quot; \u0026quot;p\u0026quot; \u0026quot;q\u0026quot; \u0026quot;r\u0026quot; \u0026quot;s\u0026quot;\r[20] \u0026quot;t\u0026quot; \u0026quot;u\u0026quot; \u0026quot;v\u0026quot; \u0026quot;w\u0026quot; \u0026quot;x\u0026quot; \u0026quot;y\u0026quot; \u0026quot;z\u0026quot;\rtypeof(letters)\r[1] \u0026quot;character\u0026quot;\rclass(letters)\r[1] \u0026quot;character\u0026quot;\r因為c函數的運算結果為vector,因此下例中,其元素都是字串\n (a\u0026lt;-c(\u0026quot;d\u0026quot;,4,TRUE))\r[1] \u0026quot;d\u0026quot; \u0026quot;4\u0026quot; \u0026quot;TRUE\u0026quot;\r問題:\r怎樣知道r是空集合?\ny \u0026lt;- letters[1:3] z \u0026lt;- letters[4:6] r\u0026lt;-intersect(y,z) r\rcharacter(0)\ris.na(r)\rlogical(0)\rlength(r)\r[1] 0\r另外,當vector有多個字串,而使用索引0的時候,也會出現 character(0),例如:\nstring \u0026lt;- c(\u0026#39;sun\u0026#39;, \u0026#39;sky\u0026#39;, \u0026#39;clouds\u0026#39;)\rstring[0]\rcharacter(0)\rvector 相關的運算\r連續數字可以利用操作元:,例如:\nx \u0026lt;- 1:7; x\ry \u0026lt;- 2:-2; y\n比較複雜的序列可以利用函數 seq() ,例如\nseq(1, 3, by=0.2) # specify step size\r [1] 1.0 1.2 1.4 1.6 1.8 2.0 2.2 2.4 2.6 2.8 3.0\r seq(1, 5, length.out=4) # specify length of the vector\r[1] 1.00 2.33 3.67 5.00\r\r如何存取vector中的元素\r元素索引可以利用 logical, integer or character vector.\n如果利用整數索引,則從1開始.但是,如果索引值給的是負數(例如-2),則除了2號元素以外,都會被傳回。但是不能同時有正負。同時,浮點數會被truncated。\n\u0026gt; x\r[1] 0 2 4 6 8 10\r\u0026gt; x[3] # access 3rd element\r[1] 4\r\u0026gt; x[c(2, 4)] # access 2nd and 4th element\r[1] 2 6\r\u0026gt; x[-1] # access all but 1st element\r[1] 2 4 6 8 10\r\u0026gt; x[c(2, -4)] # 不能混合正負\rError in x[c(2, -4)] : only 0\u0026#39;s may be mixed with negative subscripts\r\u0026gt; x[c(2.4, 3.54)] # real numbers are truncated to integers\r[1] 2 4\r\r邏輯做為索引\r說是索引有點誤導,可以認為是元素篩選。例如\n\u0026gt; x[c(TRUE, FALSE, FALSE, TRUE)]\r[1] -3 3\r\u0026gt; x[x \u0026lt; 0] # filtering vectors based on conditions\r[1] -3 -1\r\u0026gt; x[x \u0026gt; 0]\r[1] 3\rIn the above example, the expression x\u0026gt;0 will yield a logical vector (FALSE, FALSE, FALSE, TRUE) which is then used for indexing.\n\r利用字串( character vector) 作為索引\r每個元素可以有名稱:\n\u0026gt; x \u0026lt;- c(\u0026quot;first\u0026quot;=3, \u0026quot;second\u0026quot;=0, \u0026quot;third\u0026quot;=9)\r\u0026gt; x\rfirst second third 3 0 9 \u0026gt; class(x) # 注意:不是list [1] \u0026quot;numeric\u0026quot;\r\u0026gt; names(x)\r[1] \u0026quot;first\u0026quot; \u0026quot;second\u0026quot; \u0026quot;third\u0026quot; \u0026gt; x[\u0026quot;second\u0026quot;]\rsecond 0 \u0026gt; x[c(\u0026quot;first\u0026quot;, \u0026quot;third\u0026quot;)]\rfirst third 3 9\ra\u0026lt;-c(x=1:2,y=3:4)\ra[\u0026quot;x1\u0026quot;] # 不是a[x1]\rx1 1 \r? a[“x1”]哪裡來的x1?\n\rhint\r\rnames(a)\r\r\r\r[] 和[[]]的差別:\n原來的type是甚麼(例如,list 或vector),[]只是返回子集合(仍然是list或vector),但是[[]]則是返回內容.\n\r\u0026gt; x \u0026lt;- c(a = 1, b = 2, c = 3)\r\u0026gt; x[\u0026quot;a\u0026quot;]\ra 1 \u0026gt; x[[\u0026quot;a\u0026quot;]]\r[1] 1\r\u0026gt; x[1]\ra 1 \u0026gt; x[[1]]\r[1] 1\r\r和list的區別是\r1. $\r1. 不必有\"\"\na1\u0026lt;-list(x=1:2,y=3:4)\ra1$x\r[1] 1 2\r\rHow to modify a vector in R?\rWe can modify a vector using the assignment operator.\nWe can use the techniques discussed above to access specific elements and modify them.\nIf we want to truncate the elements, we can use reassignments.\n\u0026gt; x\r[1] -3 -2 -1 0 1 2\r\u0026gt; x[2] \u0026lt;- 0; x # modify 2nd element\r[1] -3 0 -1 0 1 2\r\u0026gt; x[x\u0026lt;0] \u0026lt;- 5; x # modify elements less than 0\r[1] 5 0 5 0 1 2\r\u0026gt; x \u0026lt;- x[1:4]; x # truncate x to first 4 elements\r[1] 5 0 5 0\r\rHow to delete a Vector?\rWe can delete a vector by simply assigning a NULL to it.\n\u0026gt; x\r[1] -3 -2 -1 0 1 2\r\u0026gt; x \u0026lt;- NULL\r\u0026gt; x\rNULL\r\u0026gt; x[4]\rNULL\r\rassignment\rhw1\n\r\r"
},
{
	"uri": "/rlang/type_list.html",
	"title": "type list",
	"tags": [],
	"description": "基本語法",
	"content": "\r\r\rList\rLists 是一個R物件。其元素內容可以是不同型態,例如 numbers, strings, vectors,matrix 或者是另一個 list，甚至是函數。。\n建立 List\r函數list() 可以建立list.\n包含多種type的List: strings, numbers, vectors and a logical values.\nlist_data \u0026lt;- list(\u0026quot;Red\u0026quot;, \u0026quot;Green\u0026quot;, c(21,32,11), TRUE, 51.23, 119.1)\rprint(list_data)\r[[1]]\r[1] \u0026quot;Red\u0026quot;\r[[2]]\r[1] \u0026quot;Green\u0026quot;\r[[3]]\r[1] 21 32 11\r[[4]]\r[1] TRUE\r[[5]]\r[1] 51.2\r[[6]]\r[1] 119\r　### Naming List Elements\nThe list elements can be given names and they can be accessed using these names.\n#Create a list containing a vector, a matrix and a list.\rlist_data \u0026lt;- list(c(\u0026quot;Jan\u0026quot;,\u0026quot;Feb\u0026quot;,\u0026quot;Mar\u0026quot;), matrix(c(3,9,5,1,-2,8), nrow = 2),\rlist(\u0026quot;green\u0026quot;,12.3))\r#Give names to the elements in the list.\rnames(list_data) \u0026lt;- c(\u0026quot;1st Quarter\u0026quot;, \u0026quot;A_Matrix\u0026quot;, \u0026quot;A Inner list\u0026quot;)\r#Show the list.\rprint(list_data)\r$`1st Quarter`\r[1] \u0026quot;Jan\u0026quot; \u0026quot;Feb\u0026quot; \u0026quot;Mar\u0026quot;\r$A_Matrix\r[,1] [,2] [,3]\r[1,] 3 5 -2\r[2,] 9 1 8\r$`A Inner list`\r$`A Inner list`[[1]]\r[1] \u0026quot;green\u0026quot;\r$`A Inner list`[[2]]\r[1] 12.3\r帶名的vector和list ,白話文意思就是將每個元素命名。\nx=c(1,2,3)\rnames(x)\u0026lt;-c(\u0026#39;a\u0026#39;,\u0026#39;b\u0026#39;,\u0026#39;c\u0026#39;)\rx\ra b c 1 2 3 \r這裡討論一下為甚麼在R語言堅持\u0026lt;-而不是=的一個原因\n一般的程式語言,不會用到這種文法,例如,在其他程式語言中,直覺上應該是有一個names(),然後用法如下:\nnames(x,c(\u0026#39;a\u0026#39;,\u0026#39;b\u0026#39;,\u0026#39;c\u0026#39;) )\r😈 因此\u0026lt;-不類似指派,而是類似流向某個物件的屬性。\n但如果是matrix,被命名的就是欄位?答案是:NO。而是紀錄名稱?答案也是NO.而是給每個元素命名。\nx\u0026lt;-matrix(runif(9),nrow=3)\rnames(x)\u0026lt;-c(\u0026#39;a\u0026#39;,\u0026#39;b\u0026#39;,\u0026#39;c\u0026#39;)\rx\r [,1] [,2] [,3]\r[1,] 0.834 0.0074 0.290\r[2,] 0.601 0.4664 0.733\r[3,] 0.157 0.4978 0.773\rattr(,\u0026quot;names\u0026quot;)\r[1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; NA NA NA NA NA NA \rrownames(x)\u0026lt;-c(\u0026#39;x\u0026#39;,\u0026#39;y\u0026#39;,\u0026#39;z\u0026#39;)\rprint(x,row.names=T)\r [,1] [,2] [,3]\rx 0.834 0.0074 0.290\ry 0.601 0.4664 0.733\rz 0.157 0.4978 0.773\rattr(,\u0026quot;names\u0026quot;)\r[1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; NA NA NA NA NA NA \r問:在上面的例子中x是一個矩陣,x[“a”]會傳回甚麼?\n\r但是在data.frame的結構中,names()\u0026lt;- 給定的是欄位名稱\nxd\u0026lt;-data.frame(x)\rnames(xd)\u0026lt;-c(\u0026#39;a\u0026#39;,\u0026#39;b\u0026#39;,\u0026#39;c\u0026#39;)\rxd\r a b c\rx 0.834 0.0074 0.290\ry 0.601 0.4664 0.733\rz 0.157 0.4978 0.773\r\r存取 List 元素\r# 3個元素,分別是list, matrix, list\rlist_data \u0026lt;- list(c(\u0026quot;Jan\u0026quot;,\u0026quot;Feb\u0026quot;,\u0026quot;Mar\u0026quot;), matrix(c(3,9,5,1,-2,8), nrow = 2),\rlist(\u0026quot;green\u0026quot;,12.3))\r# 給名稱\rnames(list_data) \u0026lt;- c(\u0026quot;1st Quarter\u0026quot;, \u0026quot;A_Matrix\u0026quot;, \u0026quot;A Inner list\u0026quot;)\r# Access the first element of the list.\rprint(list_data[1])\r$`1st Quarter`\r[1] \u0026quot;Jan\u0026quot; \u0026quot;Feb\u0026quot; \u0026quot;Mar\u0026quot;\r# Access the thrid element. As it is also a list, all its elements will be printed.\rprint(list_data[3])\r$`A Inner list`\r$`A Inner list`[[1]]\r[1] \u0026quot;green\u0026quot;\r$`A Inner list`[[2]]\r[1] 12.3\r# Access the list element using the name of the element.\rprint(list_data$A_Matrix)\r [,1] [,2] [,3]\r[1,] 3 5 -2\r[2,] 9 1 8\r\rManipulating List Elements\rWe can add, delete and update list elements as shown below. We can add and delete elements only at the end of a list. But we can update any element.\n# Create a list containing a vector, a matrix and a list.\rlist_data \u0026lt;- list(c(\u0026quot;Jan\u0026quot;,\u0026quot;Feb\u0026quot;,\u0026quot;Mar\u0026quot;), matrix(c(3,9,5,1,-2,8), nrow = 2),\rlist(\u0026quot;green\u0026quot;,12.3))\r# Give names to the elements in the list.\rnames(list_data) \u0026lt;- c(\u0026quot;1st Quarter\u0026quot;, \u0026quot;A_Matrix\u0026quot;, \u0026quot;A Inner list\u0026quot;)\r# Add element at the end of the list.\rlist_data[4] \u0026lt;- \u0026quot;New element\u0026quot;\rprint(list_data[4])\r[[1]]\r[1] \u0026quot;New element\u0026quot;\r# Remove the last element.\rlist_data[4] \u0026lt;- NULL\r# Print the 4th Element.\rprint(list_data[4])\r$\u0026lt;NA\u0026gt;\rNULL\r# Update the 3rd Element.\rlist_data[3] \u0026lt;- \u0026quot;updated element\u0026quot;\rprint(list_data[3])\r$`A Inner list`\r[1] \u0026quot;updated element\u0026quot;\r\rMerging Lists\rYou can merge many lists into one list by placing all the lists inside one list() function.\n# Create two lists.\rlist1 \u0026lt;- list(1,2,3)\rlist2 \u0026lt;- list(\u0026quot;Sun\u0026quot;,\u0026quot;Mon\u0026quot;,\u0026quot;Tue\u0026quot;)\r# Merge the two lists.\rmerged.list \u0026lt;- c(list1,list2)\r# Print the merged list.\rprint(merged.list)\r[[1]]\r[1] 1\r[[2]]\r[1] 2\r[[3]]\r[1] 3\r[[4]]\r[1] \u0026quot;Sun\u0026quot;\r[[5]]\r[1] \u0026quot;Mon\u0026quot;\r[[6]]\r[1] \u0026quot;Tue\u0026quot;\r❓ 我們說 在R語言中,向量的意思,只要元素同型態就行。上面的程式碼中,利用c將兩個list 合併成向量,元素都是相同型態(都是list),那就是2個元素，但是現在是6個,為甚麼?\n👍 我們說函數c()是一個處理向量的函數,參數中兩個元素都是list,會先被轉成向量,所以3+3,但是但是這裡的list裡面有多個型態,所以美個元素都是list(證明:list),所以是6個。\n如果要2個,那就是merged.list2\u0026lt;-list(list1,list2)。\n\r❓ merge.list\u0026lt;-c(x,y) 中的merge是不是物件的意思?\n👍 不是。只是個合法的變數。\n\r❓ 寫一個函數,合併兩個list,但是要求兩個list中有同名的元素必須是第2個中的名稱。例如 list(a=1,b=2,c=3), list(b=4) 合併後變成 a=1,b=4,c=3。\n👍\nmerge_list = function(x, y) {\rx[names(y)] = y\rx\r}\r\r\rList 轉 Vector\r函數 unlist()\n# Create lists.\rlist1 \u0026lt;- list(1:5)\rprint(list1)\r[[1]]\r[1] 1 2 3 4 5\rlist2 \u0026lt;-list(10:14)\rprint(list2)\r[[1]]\r[1] 10 11 12 13 14\r# Convert the lists to vectors.\rv1 \u0026lt;- unlist(list1)\rv2 \u0026lt;- unlist(list2)\rprint(v1)\r[1] 1 2 3 4 5\rprint(v2)\r[1] 10 11 12 13 14\r# Now add the vectors\rresult \u0026lt;- v1+v2\rprint(result)\r[1] 11 13 15 17 19\r\r比較vector, list中,字串的問題\rQ length()函數可以知道vector,list 的長度,但是為甚麼length(“hello”)的長度是1?\r\ra\u0026lt;-c(\u0026quot;hello\u0026quot;,\u0026quot;r\u0026quot;)\rlength(a)\r[1] 2\rlength(a[1])\r[1] 1\rlength(a[[1]])\r[1] 1\rnchar(a[1])\r[1] 5\rlength(\u0026quot;hello\u0026quot;)\r[1] 1\rQ\r\ra\u0026lt;-list(\u0026quot;hello\u0026quot;,\u0026quot;r\u0026quot;)\rlength(a)\r[1] 2\rlength(a[1])\r[1] 1\rlength(a[[1]])\r[1] 1\r上面兩個答案的問題,和R怎樣建立字串有關\r我猜是\r“hello” 的記憶體結構是 list(ptr) ,ptr-\u0026gt;“hello”\r也就是說紀錄在list中,當我問說length(“hello”)的時候,list的長度都是1。\n總之,字串長度函數nchar()。\n\r\rdata set build in\rList of pre-loaded data\rdata()\rLoading a built-in R data\ndata(mtcars) \rnrow(mtcars)\r[1] 32\rncol(mtcars)\r[1] 11\r\r\rprimer to access element\r?“[” pretty much covers the various ways of accessing elements of things.\nUnder usage it lists these:\nx[i]\rx[i, j, ... , drop = TRUE]\rx[[i, exact = TRUE]]\rx[[i, j, ..., exact = TRUE]]\rx$name\rgetElement(object, name)\rx[i] \u0026lt;- value\rx[i, j, ...] \u0026lt;- value\rx[[i]] \u0026lt;- value\rx$i \u0026lt;- value\rThe second item is sufficient for your purpose\nUnder Arguments it points out that with [ the arguments i and j can be numeric, character or logical\nSo these work:\ndata[1,1]\rdata[1,\u0026quot;V1\u0026quot;]\rAs does this:\ndata$V1[1]\rand keeping in mind a data frame is a list of vectors:\ndata[[1]][1]\rdata[[\u0026quot;V1\u0026quot;]][1]\rwill also both work.\nSo that’s a few things to be going on with. I suggest you type in the examples at the bottom of the help page one line at a time (yes, actually type the whole thing in one line at a time and see what they all do, you’ll pick up stuff very quickly and the typing rather than copypasting is an important part of helping to commit it to memory.)\n\r"
},
{
	"uri": "/rlang/type_matrix.html",
	"title": "type matrix",
	"tags": [],
	"description": "基本語法",
	"content": "\r\r\rmatrix\r矩陣的建立有多種方式,其中一種是利用向量轉填矩陣，填入的方式預設是以coumn為主要方向。\nmatrix(c(1,2,3,4,5,6),2,3)\r [,1] [,2] [,3]\r[1,] 1 3 5\r[2,] 2 4 6\r問題: 怎樣產生\n1 2 3\n4 5 6\n的矩陣\ndiag(1, nrow = 5)\r [,1] [,2] [,3] [,4] [,5]\r[1,] 1 0 0 0 0\r[2,] 0 1 0 0 0\r[3,] 0 0 1 0 0\r[4,] 0 0 0 1 0\r[5,] 0 0 0 0 1\rmatrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), nrow = 3, byrow = TRUE, dimnames = list(c(\u0026quot;r1\u0026quot;, \u0026quot;r2\u0026quot;, \u0026quot;r3\u0026quot;), c(\u0026quot;c1\u0026quot;, \u0026quot;c2\u0026quot;, \u0026quot;c3\u0026quot;)))\r c1 c2 c3\rr1 1 2 3\rr2 4 5 6\rr3 7 8 9\rm1 \u0026lt;- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), ncol = 3)\rrownames(m1) \u0026lt;- c(\u0026quot;r1\u0026quot;, \u0026quot;r2\u0026quot;, \u0026quot;r3\u0026quot;)\rcolnames(m1) \u0026lt;- c(\u0026quot;c1\u0026quot;, \u0026quot;c2\u0026quot;, \u0026quot;c3\u0026quot;)\rm1\r c1 c2 c3\rr1 1 4 7\rr2 2 5 8\rr3 3 6 9\r B = matrix( c(2, 4, 3, 1, 5, 7), nrow=3, ncol=2) B\r [,1] [,2]\r[1,] 2 1\r[2,] 4 5\r[3,] 3 7\rTranspose\rt(B)\r [,1] [,2] [,3]\r[1,] 2 4 3\r[2,] 1 5 7\r\r合併矩陣\r利用函數cbind() 可以合併同樣橫行數目的兩個矩陣,例如這裡C也是3個橫行:\nC = matrix( c(7, 4, 2), nrow=3, ncol=1) C\r [,1]\r[1,] 7\r[2,] 4\r[3,] 2\r和B合併\ncbind(B, C) \r [,1] [,2] [,3]\r[1,] 2 1 7\r[2,] 4 5 4\r[3,] 3 7 2\r同樣的,rbind() 也可以合併直行數目相同的兩個矩陣:\n D = matrix( c(6, 2), nrow=1, ncol=2) D\r [,1] [,2]\r[1,] 6 2\rrbind(B, D) \r [,1] [,2]\r[1,] 2 1\r[2,] 4 5\r[3,] 3 7\r[4,] 6 2\r將矩陣解構回向量:\r可以利用c() 會把矩陣所有的直行都合併成一個直行.\nc(B) \r[1] 2 4 3 1 5 7\runlist ?\n練習:利用上面的m1 回答下面的問題:\nm1[1, 2]\nm1[1:2, 2:3]\nm1[1,]\rm1[,2]\rm1[1:2,]\rm1[, 2:3]\nm1[-1,]\rm1[,-2]\nm1[c(“r1”, “r3”), c(“c1”, “c3”)]\nm1[1]\rm1[9]\rm1[3:7]\nm1 \u0026gt; 3\nm1[m1 \u0026gt; 3]\nm1 + m1\rm1 - 2m1\rm1  m1\rm1 / m1\rm1 ^ 2\rm1 %*% m1\nt(m1)\n\r\r"
},
{
	"uri": "/rlang/type_more.html",
	"title": "type more",
	"tags": [],
	"description": "基本語法",
	"content": "\r\r\rFactors\rR也能把資料存為factor(store data is as a factor)。\r在大部分實驗中,某些解釋變數經常有不同程度的測試。\r大意如下：\n\u0026gt;… includes trials for different levels of some explanatory variable.\r\u0026gt;The different levels are also called factors.\n探索一下factors\rfert = c(10,20,20,50,10,20,10,50,20)\rfert = factor(fert,levels=c(10,20,50),ordered=TRUE)\rlevels()可以顯示factor的標籤\nlevels(fert)\r[1] \u0026quot;10\u0026quot; \u0026quot;20\u0026quot; \u0026quot;50\u0026quot;\rfert 的內容，如果忽略標籤本身，其實已經是數字。\nfert\r[1] 10 20 20 50 10 20 10 50 20\rLevels: 10 \u0026lt; 20 \u0026lt; 50\r計算平均\nmean(fert)\rWarning in mean.default(fert): argument is not numeric or logical: returning NA\r[1] NA\rmean(as.numeric(levels(fert)[fert]))\r[1] 23.3\r解釋：\nlevels(fert) 產生一個「字串向量」，內容為10, 20, 50，如下可證：\nstr(levels(fert))\r chr [1:3] \u0026quot;10\u0026quot; \u0026quot;20\u0026quot; \u0026quot;50\u0026quot;\r然後如果把fert想程式數字內容，例如(1,2,1) 則，這是索引。就像這樣\nc(“a”,“b”,“c”)[c(1,1,2,3,2)] ==\u0026gt; a,a,b,c,b 。\n上面的問題，可以簡化為：找回原來還沒被factor的向量。\nx\u0026lt;-c(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;c\u0026quot;)\rx\u0026lt;-factor(x) # 現在x是一個factor\rx\u0026lt;-levels(x)[x] #現在又被轉回原來的x\r\r探索一下factor\ra \u0026lt;- factor(c(\u0026quot;A\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;C\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;C\u0026quot;))\r預期答案是factor,ok。\nclass(a)\r[1] \u0026quot;factor\u0026quot;\r因為a已經被編碼，預期是numeric，這裡答案直接給定integer:\ntypeof(a)\r[1] \u0026quot;integer\u0026quot;\ra是一個factor,所以a[]代表a的一個子集合，因此結果看起來也是類似原來a的型態：\na[1]\r[1] A\rLevels: A B C\r驗證是不是和上面的表示方式一樣：\na\r[1] A A B A B B C A C\rLevels: A B C\r所以，a,a[]都是類型為factor的變數。\n按照之間[]和[[]]的規則，這裡會出現什麼？\na[[1]]\r[1] A\rLevels: A B C\r出現的結果和a[1]一樣，這說明了，a的結構不是list,利用str()函數看一下確認：\nstr(a)\r Factor w/ 3 levels \u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;,\u0026quot;C\u0026quot;: 1 1 2 1 2 2 3 1 3\r總之，a[1] a[[1]] 都是Factor 沒有[ 和 [[ 的分別。這很好記，因為這個factor也是r的內建資料型態。\n其他驗證如下，自行推敲：\r\r typeof(a[[1]])\r[1] \"integer\"\r typeof(a[1])\r[1] \"integer\"\r class(a[[1]])\r[1] \"factor\"\r class(a[1])\r[1] \"factor\"\r\r又有新的問題了，到底table(a),summary(a)的資料結構是什麼？\nstr(table(a))\r \u0026#39;table\u0026#39; int [1:3(1d)] 4 3 2\r- attr(*, \u0026quot;dimnames\u0026quot;)=List of 1\r..$ a: chr [1:3] \u0026quot;A\u0026quot; \u0026quot;B\u0026quot; \u0026quot;C\u0026quot;\rstr(summary(a))\r Named int [1:3] 4 3 2\r- attr(*, \u0026quot;names\u0026quot;)= chr [1:3] \u0026quot;A\u0026quot; \u0026quot;B\u0026quot; \u0026quot;C\u0026quot;\rclass(table(a))\r[1] \u0026quot;table\u0026quot;\rclass(summary(a))\r[1] \u0026quot;integer\u0026quot;\r又來一個讓人無言的地方，輸出樣子看起來很像，但是結構一個是類別table一個是「整數向量」，然後每個元素都是因子的發生次數，帶有因子名字，這裡是“A”,“B”,“C”。\n\rfactor 和函數read.csv()\rread.csv() 通常產生一個data.frame的類別。但是在讀檔的時候，如果遇到字串欄位，會將字串欄位預設轉為factor欄位。\n觀察carbon dioxide 對樹木的生長速率 trees91.csv 1^:\ntree = read.csv(\u0026quot;./resources/trees91.csv\u0026quot;, header = TRUE, sep = \u0026quot;,\u0026quot;);\rattributes(tree)\r$names\r[1] \u0026quot;C\u0026quot; \u0026quot;N\u0026quot; \u0026quot;CHBR\u0026quot; \u0026quot;REP\u0026quot; \u0026quot;LFBM\u0026quot; \u0026quot;STBM\u0026quot; \u0026quot;RTBM\u0026quot; \u0026quot;LFNCC\u0026quot; [9] \u0026quot;STNCC\u0026quot; \u0026quot;RTNCC\u0026quot; \u0026quot;LFBCC\u0026quot; \u0026quot;STBCC\u0026quot; \u0026quot;RTBCC\u0026quot; \u0026quot;LFCACC\u0026quot; \u0026quot;STCACC\u0026quot; \u0026quot;RTCACC\u0026quot;\r[17] \u0026quot;LFKCC\u0026quot; \u0026quot;STKCC\u0026quot; \u0026quot;RTKCC\u0026quot; \u0026quot;LFMGCC\u0026quot; \u0026quot;STMGCC\u0026quot; \u0026quot;RTMGCC\u0026quot; \u0026quot;LFPCC\u0026quot; \u0026quot;STPCC\u0026quot; [25] \u0026quot;RTPCC\u0026quot; \u0026quot;LFSCC\u0026quot; \u0026quot;STSCC\u0026quot; \u0026quot;RTSCC\u0026quot; $class\r[1] \u0026quot;data.frame\u0026quot;\r$row.names\r[1] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\r[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\r[51] 51 52 53 54\rnames(tree)\r [1] \u0026quot;C\u0026quot; \u0026quot;N\u0026quot; \u0026quot;CHBR\u0026quot; \u0026quot;REP\u0026quot; \u0026quot;LFBM\u0026quot; \u0026quot;STBM\u0026quot; \u0026quot;RTBM\u0026quot; \u0026quot;LFNCC\u0026quot; [9] \u0026quot;STNCC\u0026quot; \u0026quot;RTNCC\u0026quot; \u0026quot;LFBCC\u0026quot; \u0026quot;STBCC\u0026quot; \u0026quot;RTBCC\u0026quot; \u0026quot;LFCACC\u0026quot; \u0026quot;STCACC\u0026quot; \u0026quot;RTCACC\u0026quot;\r[17] \u0026quot;LFKCC\u0026quot; \u0026quot;STKCC\u0026quot; \u0026quot;RTKCC\u0026quot; \u0026quot;LFMGCC\u0026quot; \u0026quot;STMGCC\u0026quot; \u0026quot;RTMGCC\u0026quot; \u0026quot;LFPCC\u0026quot; \u0026quot;STPCC\u0026quot; [25] \u0026quot;RTPCC\u0026quot; \u0026quot;LFSCC\u0026quot; \u0026quot;STSCC\u0026quot; \u0026quot;RTSCC\u0026quot; \rA description of the data file is located at http://cdiac.ornl.gov/ftp/ndp061a/ndp061a.txt .\n\rfactor 和函數summary()\rsummary(tree$CHBR)\r Length Class Mode 54 character character \r在CHBR這個欄位中,因為不全都是數字,因此R自動假定這是一個factor。\r因此針對這個欄位summary()函數不會列出5個統計量,而是列出次數表。因為，一旦向量轉為一組factors, 5個基本統計量不再有意義。\n但有些欄位例如C,也是一個factor。但是,R認定為數字,這時必須手動處理。\n以下將 tree$C 轉為 factor:\ntree$C\r [1] 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3\r[39] 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4\rsummary(tree$C)\r Min. 1st Qu. Median Mean 3rd Qu. Max. 1.00 2.00 2.00 2.52 3.00 4.00 \rtree$C \u0026lt;- factor(tree$C)\rtree$C\r [1] 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3\r[39] 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4\rLevels: 1 2 3 4\rsummary(tree$C)\r 1 2 3 4 8 23 10 13 \rlevels(tree$C)\r[1] \u0026quot;1\u0026quot; \u0026quot;2\u0026quot; \u0026quot;3\u0026quot; \u0026quot;4\u0026quot;\rnode: summary() 函數，參考table一節。\n\r\rData Frames\r簡單介紹一下手動建立data.frame\r3個欄位，分別是a,b,f\na \u0026lt;- c(1, 2, 3, 4)\rb \u0026lt;- c(2, 4, 6, 8)\rlevels \u0026lt;- factor(c(\u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;))\rbubba \u0026lt;- data.frame(first = a,\rsecond = b,\rf = levels)\rbubba\r first second f\r1 1 2 A\r2 2 4 B\r3 3 6 A\r4 4 8 B\rsummary(bubba)\r first second f Min. :1.00 Min. :2.0 A:2 1st Qu.:1.75 1st Qu.:3.5 B:2 Median :2.50 Median :5.0 Mean :2.50 Mean :5.0 3rd Qu.:3.25 3rd Qu.:6.5 Max. :4.00 Max. :8.0 \rbubba$first\r[1] 1 2 3 4\rbubba$second\r[1] 2 4 6 8\rbubba$f\r[1] A B A B\rLevels: A B\r\rdata frame 的常用函數：\r\rhead() - shows first 6 rows\rtail() - shows last 6 rows\rdim() - returns the dimensions of data frame (i.e. number of rows and number of columns)\rnrow() - number of rows\rncol() - number of columns\rstr() - structure of data frame - name, type and preview of data in each column\rnames() - shows the names attribute for a data frame, which gives the column names.\rsapply(dataframe, class) - shows the class of each column in the data frame\r\r回到之前利用read.csv讀入的data.frame : tree\n# 順便看看結構\rtypeof(tree)\r[1] \u0026quot;list\u0026quot;\rclass(tree)\r[1] \u0026quot;data.frame\u0026quot;\ris.data.frame(tree)\r[1] TRUE\r既然tree是一個list,那麼[]和[[]]的應用就和之前討論的一樣：\ntree[1]\r C\r1 1\r2 1\r3 1\r4 1\r5 1\r6 1\r7 1\r8 1\r9 2\r10 2\r11 2\r12 2\r13 2\r14 2\r15 2\r16 2\r17 2\r18 2\r19 2\r20 2\r21 2\r22 2\r23 2\r24 2\r25 2\r26 2\r27 2\r28 2\r29 2\r30 2\r31 2\r32 3\r33 3\r34 3\r35 3\r36 3\r37 3\r38 3\r39 3\r40 3\r41 3\r42 4\r43 4\r44 4\r45 4\r46 4\r47 4\r48 4\r49 4\r50 4\r51 4\r52 4\r53 4\r54 4\rtree[[1]] \r [1] 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3\r[39] 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4\rLevels: 1 2 3 4\rclass(tree[1]) # data.frame\r[1] \u0026quot;data.frame\u0026quot;\rclass(tree[[1]]) # integer\r[1] \u0026quot;factor\u0026quot;\rtypeof(tree[1]) # list\r[1] \u0026quot;list\u0026quot;\rtypeof(tree$C) # integer\r[1] \u0026quot;integer\u0026quot;\rtypeof(tree[[1]]) # integer\r[1] \u0026quot;integer\u0026quot;\rtree[1] 是一個list\ntree[[1]] 外圍的tree[]首先被解讀為list類別,然後[1]傳到類別\n\r[[ vs [\n由typeof,class看起來\n[[抽取list中的元素\r[只是分割list,中的subset\n\r\r\rTables\r除了data frame 以外,還有table 可以用來組織資料。\r這裡只看怎樣建立table,分析看其他章節。\nOne Way Tables\rtable()指令:\n這個指令通常用來建立因子之間的關聯表(contingency table)。參數通常是一個「因子向量」(factor vector)。\n例如建立一個單因子關聯表（one way table）:\na \u0026lt;- factor(c(\u0026quot;A\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;C\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;C\u0026quot;))\rtable_a \u0026lt;- table(a)\rtable_a：\ntable_a\ra\rA B C 4 3 2 \rattributes可以看出table_a裡面有哪些帶名元素\nattributes(table_a)\r$dim\r[1] 3\r$dimnames\r$dimnames$a\r[1] \u0026quot;A\u0026quot; \u0026quot;B\u0026quot; \u0026quot;C\u0026quot;\r$class\r[1] \u0026quot;table\u0026quot;\rsummary(table_a)\rNumber of cases in table: 9 Number of factors: 1 \r對照table(a)，直接把factor 變數，代入summary()看一下，結果是次數分配表（如下）\ntable(a)\ra\rA B C 4 3 2 \rsummary(a)\rA B C 4 3 2 \r問題：如果我們知道A有4,個,B有3個,C有2個,能不能直接建立table?\n1. 先建立matrix\n2. 再加入欄位名稱\n3. 利用函數as.table()\n# step 1\roccur \u0026lt;- matrix(c(4, 3, 2), ncol = 3, byrow = TRUE)\roccur\r [,1] [,2] [,3]\r[1,] 4 3 2\r#step 2\rcolnames(occur) \u0026lt;- c(\u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;C\u0026quot;)\roccur\r A B C\r[1,] 4 3 2\r#step 3\roccur \u0026lt;- as.table(occur)\roccur\r A B C\rA 4 3 2\rattributes(occur)\r$dim\r[1] 1 3\r$dimnames\r$dimnames[[1]]\r[1] \u0026quot;A\u0026quot;\r$dimnames[[2]]\r[1] \u0026quot;A\u0026quot; \u0026quot;B\u0026quot; \u0026quot;C\u0026quot;\r$class\r[1] \u0026quot;table\u0026quot;\r\rTwo Way Tables\r這個例子中有兩個問題:第1個問題的答案有“Never,” “Sometimes,” or “Always.”\n第2個問題的答案有 “Yes,” “No,” or “Maybe.”\r兩個問題分別以向量a,b存放( The set of vectors “a,” and “b,” contain the response for each measurement.)\na \u0026lt;- c(\u0026quot;Sometimes\u0026quot;, \u0026quot;Sometimes\u0026quot;, \u0026quot;Never\u0026quot;, \u0026quot;Always\u0026quot;, \u0026quot;Always\u0026quot;, \u0026quot;Sometimes\u0026quot;, \u0026quot;Sometimes\u0026quot;, \u0026quot;Never\u0026quot;)\rb \u0026lt;- c(\u0026quot;Maybe\u0026quot;, \u0026quot;Maybe\u0026quot;, \u0026quot;Yes\u0026quot;, \u0026quot;Maybe\u0026quot;, \u0026quot;Maybe\u0026quot;, \u0026quot;No\u0026quot;, \u0026quot;Yes\u0026quot;, \u0026quot;No\u0026quot;)\rresults \u0026lt;- table(a, b)\rresults\r b\ra Maybe No Yes\rAlways 2 0 0\rNever 0 1 1\rSometimes 2 1 1\r在表格中,可以看到同時回答 “Maybe” “Sometimes” 的個數有幾個。\n這裡是另一個直接由我們知道的數據建立table的例子\nsexsmoke \u0026lt;- matrix(c(70, 120, 65, 140), ncol = 2, byrow = TRUE)\rrownames(sexsmoke) \u0026lt;- c(\u0026quot;male\u0026quot;, \u0026quot;female\u0026quot;)\rcolnames(sexsmoke) \u0026lt;- c(\u0026quot;smoke\u0026quot;, \u0026quot;nosmoke\u0026quot;)\rsexsmoke \u0026lt;- as.table(sexsmoke)\rsexsmoke\r smoke nosmoke\rmale 70 120\rfemale 65 140\r\r\rOOP\radvance R\r### Base objects vs OO objects\r辨別變數是基礎型別或是物件型別，可以簡單利用函數： is.object():\n基礎物件base object:\nis.object(1:10)\r[1] FALSE\r[1] FALSE\n物件導向物件 OO object\nis.object(mtcars)\r[1] TRUE\r[1] TRUE\n主要的區別在於基本物件沒有class 這個attribute\nattr(1:10, \u0026quot;class\u0026quot;) # NULL\rNULL\rattr(mtcars, \u0026quot;class\u0026quot;) # [1] \u0026quot;data.frame\u0026quot;\r[1] \u0026quot;data.frame\u0026quot;\rclass()這個函數,不見得總是會和attr()的結果一致,因為，對基本物件而言,傳回的是後面討論,而不是 NULL。\n變數屬性查詢函數\rnames()\rdimnames()\rlength()\rdim(): 各維度長度\rclass() : 變數類別\rtable()：各類資料計數\rstr()：變數的資料結構(其實是一個list)\n透過names()函數，可取得各種list元素的名稱,但是如果是data.frame則是顯示欄位名稱\rislands是內建資料\nstr(islands)\r Named num [1:48] 11506 5500 16988 2968 16 ...\r- attr(*, \u0026quot;names\u0026quot;)= chr [1:48] \u0026quot;Africa\u0026quot; \u0026quot;Antarctica\u0026quot; \u0026quot;Asia\u0026quot; \u0026quot;Australia\u0026quot; ...\rhead(names(islands)) \r[1] \u0026quot;Africa\u0026quot; \u0026quot;Antarctica\u0026quot; \u0026quot;Asia\u0026quot; \u0026quot;Australia\u0026quot; \u0026quot;Axel Heiberg\u0026quot;\r[6] \u0026quot;Baffin\u0026quot; \r方形資料（例如，矩陣，table, data.frame)，可以透過dimnames()函數可顯示data.frame 橫行和直行的名稱 先橫行，然後直行。\ndimnames(USArrests) \r[[1]]\r[1] \u0026quot;Alabama\u0026quot; \u0026quot;Alaska\u0026quot; \u0026quot;Arizona\u0026quot; \u0026quot;Arkansas\u0026quot; [5] \u0026quot;California\u0026quot; \u0026quot;Colorado\u0026quot; \u0026quot;Connecticut\u0026quot; \u0026quot;Delaware\u0026quot; [9] \u0026quot;Florida\u0026quot; \u0026quot;Georgia\u0026quot; \u0026quot;Hawaii\u0026quot; \u0026quot;Idaho\u0026quot; [13] \u0026quot;Illinois\u0026quot; \u0026quot;Indiana\u0026quot; \u0026quot;Iowa\u0026quot; \u0026quot;Kansas\u0026quot; [17] \u0026quot;Kentucky\u0026quot; \u0026quot;Louisiana\u0026quot; \u0026quot;Maine\u0026quot; \u0026quot;Maryland\u0026quot; [21] \u0026quot;Massachusetts\u0026quot; \u0026quot;Michigan\u0026quot; \u0026quot;Minnesota\u0026quot; \u0026quot;Mississippi\u0026quot; [25] \u0026quot;Missouri\u0026quot; \u0026quot;Montana\u0026quot; \u0026quot;Nebraska\u0026quot; \u0026quot;Nevada\u0026quot; [29] \u0026quot;New Hampshire\u0026quot; \u0026quot;New Jersey\u0026quot; \u0026quot;New Mexico\u0026quot; \u0026quot;New York\u0026quot; [33] \u0026quot;North Carolina\u0026quot; \u0026quot;North Dakota\u0026quot; \u0026quot;Ohio\u0026quot; \u0026quot;Oklahoma\u0026quot; [37] \u0026quot;Oregon\u0026quot; \u0026quot;Pennsylvania\u0026quot; \u0026quot;Rhode Island\u0026quot; \u0026quot;South Carolina\u0026quot;\r[41] \u0026quot;South Dakota\u0026quot; \u0026quot;Tennessee\u0026quot; \u0026quot;Texas\u0026quot; \u0026quot;Utah\u0026quot; [45] \u0026quot;Vermont\u0026quot; \u0026quot;Virginia\u0026quot; \u0026quot;Washington\u0026quot; \u0026quot;West Virginia\u0026quot; [49] \u0026quot;Wisconsin\u0026quot; \u0026quot;Wyoming\u0026quot; [[2]]\r[1] \u0026quot;Murder\u0026quot; \u0026quot;Assault\u0026quot; \u0026quot;UrbanPop\u0026quot; \u0026quot;Rape\u0026quot; \r方形資料，可以透過length()函數可顯示資料長度，但是如果是data.frame則顯示欄位數。\nlength(islands) \r[1] 48\r透過dim() 顯示方形資料的「資料筆數」和「欄位數目」，先「橫行」，後「直行」\ndim(USArrests) \r[1] 50 4\r使用class()函數可知道變數類別\nclass(pi)\r[1] \u0026quot;numeric\u0026quot;\rclass(Sys.Date())\r[1] \u0026quot;Date\u0026quot;\r使用table()函數可知道向量中每個值出現幾次\ntable(iris$Species) ##統計結果\r\rsetosa versicolor virginica 50 50 50 \r\r\roperator %\u0026gt;%\r%\u0026gt;% 不是R基礎套件\r而是定義再套件 magrittr (CRAN) 且常跟 dplyr (CRAN)搭配。\n意思是把左邊(LHS)當成右邊(RHS)的參數。\n例如下面的例子: 資料框iris 用來當 head()的參數:\r也就是說 iris %\u0026gt;% head() 相當於 head(iris).\nlibrary(magrittr)\riris %\u0026gt;% head()\rSepal.Length Sepal.Width Petal.Length Petal.Width Species\r1 5.1 3.5 1.4 0.2 setosa\r2 4.9 3.0 1.4 0.2 setosa\r3 4.7 3.2 1.3 0.2 setosa\r4 4.6 3.1 1.5 0.2 setosa\r5 5.0 3.6 1.4 0.2 setosa\r6 5.4 3.9 1.7 0.4 setosa\n為甚麼需要這樣用,下面是一個例子\niris %\u0026gt;% head() %\u0026gt;% summary()\r類似的觀念, iris %\u0026gt;% head() %\u0026gt;% summary() 等同於summary(head(iris)).\r也就是說,避免了使用巢狀呼叫。\n\r"
},
{
	"uri": "/rlang/type_post.html",
	"title": "type post",
	"tags": [],
	"description": "補充",
	"content": "\r\r\r相關操作\rpractice1.R\n問題:想要知道有甚麼資料庫可以用?\r例如， 想要知道資料庫裏面有沒有’mtcars’\nhint:\rgrep(‘pattern’,target)\nl\u0026lt;-list(\u0026#39;a\u0026#39;,\u0026#39;b\u0026#39;,\u0026#39;c\u0026#39;)\rgrep(\u0026#39;a\u0026#39;,l)\r[1] 1\r利用指令data()可以列出內建資料：\nxx\u0026lt;-data()\rxx 是甚麼?直接打入xx並沒有像其他變數一樣，在console顯示內容：\nxx\rstr(xx)\rList of 4\r$ title : chr \u0026quot;Data sets\u0026quot;\r$ header : NULL\r$ results: chr [1:104, 1:4] \u0026quot;datasets\u0026quot; \u0026quot;datasets\u0026quot; \u0026quot;datasets\u0026quot; \u0026quot;datasets\u0026quot; ...\r..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r.. ..$ : NULL\r.. ..$ : chr [1:4] \u0026quot;Package\u0026quot; \u0026quot;LibPath\u0026quot; \u0026quot;Item\u0026quot; \u0026quot;Title\u0026quot;\r$ footer : chr \u0026quot;Use \u0026#39;data(package = .packages(all.available = TRUE))\u0026#39;\\nto list the data sets in all *available* packages.\u0026quot;\r- attr(*, \u0026quot;class\u0026quot;)= chr \u0026quot;packageIQR\u0026quot;\ris.data.frame(xx)\r[1] FALSE\ris.list(xx)\r[1] TRUE\ris.table(xx)\r[1] FALSE\rclass(xx)\r[1] \u0026quot;packageIQR\u0026quot;\rclass()函數說明xx是一個packageIQR物件。str()可以看出是一個長度為4的list，其中results標籤，是一個字串矩陣，大小為104 x 4。其中4個欄位的名稱為：“Package” “LibPath” “Item” “Title”（如下）：\nhead(xx$results)\r Package LibPath Item [1,] \u0026quot;datasets\u0026quot; \u0026quot;C:/Program Files/R/R-4.0.2/library\u0026quot; \u0026quot;AirPassengers\u0026quot; [2,] \u0026quot;datasets\u0026quot; \u0026quot;C:/Program Files/R/R-4.0.2/library\u0026quot; \u0026quot;BJsales\u0026quot; [3,] \u0026quot;datasets\u0026quot; \u0026quot;C:/Program Files/R/R-4.0.2/library\u0026quot; \u0026quot;BJsales.lead (BJsales)\u0026quot;\r[4,] \u0026quot;datasets\u0026quot; \u0026quot;C:/Program Files/R/R-4.0.2/library\u0026quot; \u0026quot;BOD\u0026quot; [5,] \u0026quot;datasets\u0026quot; \u0026quot;C:/Program Files/R/R-4.0.2/library\u0026quot; \u0026quot;CO2\u0026quot; [6,] \u0026quot;datasets\u0026quot; \u0026quot;C:/Program Files/R/R-4.0.2/library\u0026quot; \u0026quot;ChickWeight\u0026quot; Title [1,] \u0026quot;Monthly Airline Passenger Numbers 1949-1960\u0026quot; [2,] \u0026quot;Sales Data with Leading Indicator\u0026quot; [3,] \u0026quot;Sales Data with Leading Indicator\u0026quot; [4,] \u0026quot;Biochemical Oxygen Demand\u0026quot; [5,] \u0026quot;Carbon Dioxide Uptake in Grass Plants\u0026quot; [6,] \u0026quot;Weight versus age of chicks on different diets\u0026quot;\r如果覺得混亂,可以利用\nView(xx$results)\r因為是矩陣,所以不能以「$」得到Item的內容?\nxx$results$Item\rError in xx$results$Item:\r$ operator is invalid for atomic vectors\rhead(xx$results[,\u0026#39;item\u0026#39;])\rError in xx$results[, \u0026quot;item\u0026quot;]:\r下標超出邊界\r為甚麼錯誤?\n因為大小寫,所以正確寫法為：\nhead(xx$results[,\u0026#39;Item\u0026#39;])\r[1] \u0026quot;AirPassengers\u0026quot; \u0026quot;BJsales\u0026quot; \u0026quot;BJsales.lead (BJsales)\u0026quot;\r[4] \u0026quot;BOD\u0026quot; \u0026quot;CO2\u0026quot; \u0026quot;ChickWeight\u0026quot; \r利用grep()可以拿到mtcars的位置：\nidx\u0026lt;-grep(\u0026#39;mtcars\u0026#39;,xx$results[,\u0026#39;Item\u0026#39;])\ridx\r[1] 72\r確認\nxx$results[idx,\u0026#39;Item\u0026#39;]\r Item \u0026quot;mtcars\u0026quot; \r\r\r常見錯誤\rerror\rl0 \u0026lt;- list(1, c(TRUE, FALSE), c(\u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;c\u0026quot;))\rl0\r\r錯誤念法\nl0等於一個列表list，裡面有三個元素，第一個元素是1，第二個元素是c(TRUE, FALSE)，第三個元素是c(“a”, “b”, “c”)\n\r\r正確念法：\n正確念法 指派一個list給變數l0，裡面有三個元素，第一個元素是純量1，第二個元素是邏輯向量，長度為2，內容分別是TRUE, FALSE，第三個元素是字元向量，長度為3，內容分別是“a”, “b”, “c”\n\rnames(l1) \u0026lt;- c(\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;,\u0026quot;C\u0026quot;)\r\r錯誤念法\n設定names(li)等於集合(“A”,“B”,“C”)\n\r\r正確念法：\n將l1 這個list 的前3個元素名稱，分別指定為 A,B,C\n\r\rerror\rl1$x \u0026lt;- NULL\r\r正確念法：\n刪除元素名為x的元素。\n\r\rerror\rl0 \u0026lt;- list(1, c(TRUE, FALSE), c(\u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;c\u0026quot;))\rl1 \u0026lt;- list(x = 1, y = c(TRUE, FALSE), z = c(\u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;c\u0026quot;))\rl1$x\rl1$y\rl1$z\rl1$m\r\r更正念法\r建立list變數l1,名稱分別是x,y,z,內容分別是…….\nl1\\(y 為邏輯向量 l1\\)z 為字元向量\n尤其是這句\n—-\u0026gt; ?? l1 y產生兩次邏輯運算。?? \u0026lt;—-\r邏輯運算指的是 and, or\r因此，應該說 l1$y 是邏輯向量，元素有2個。\n\r\r\r"
},
{
	"uri": "/rlang/type_string_function.html",
	"title": "type string",
	"tags": [],
	"description": "基本語法",
	"content": "\r\r\r字串函數\rasic character string functions provided by R:\r\rnchar: string length\n\rpaste: concatenate strings\rsubstr: substring\rtoupper: convert entire string to uppercase\rtolower: convert entire string to lowercase\rchartr: character map replacement (like “tr”)\rstrtrim：trunates string\r\rnchar, substr, toupper, tolower will accept string vectors as arguments and return vector results.\nstrtrim accepts both a vector of strings and a vector of truncation positions.\n\r\\': 等同於 \"'\" .\n\r\\\": 等同於 '\"'.\n\r\\n: newline.\n\r\\r: carriage return.\n\r\\t: tab character.\r\r\rNote: cat() and print() 處理逃逸字元的方式不一樣如果要在螢幕上解讀上面的字串,需要的是 cat().\n\rprint(\u0026quot;a\\nb\u0026quot;)\r[1] \u0026quot;a\\nb\u0026quot;\rcat(\u0026quot;a\\nb\u0026quot;)\ra\rb\r問題:\r1. 解釋paste0(c(1,2),c(3,4),collapse=’’)\r2. 怎樣得到“1234”\n\r應用範例macro\rversion 1\nx\u0026lt;- \u0026quot;${1} is good\u0026quot;\rgsub(\u0026quot;\\\\$\\\\{1\\\\}\u0026quot;,\u0026quot;dog\u0026quot;,x)\r[1] \u0026quot;dog is good\u0026quot;\r** version 2 to function**\nmstr\u0026lt;-function (src,mto)\r{\rreturn (gsub(\u0026quot;\\\\$\\\\{1\\\\}\u0026quot;,mto,src))\r}\rx\u0026lt;- \u0026quot;${1} is good\u0026quot;\rmstr(x,\u0026quot;dog\u0026quot;)\r[1] \u0026quot;dog is good\u0026quot;\r\rpaste\rpaste0(\u0026quot;x\u0026quot;,\u0026quot;y\u0026quot;,\u0026quot;z\u0026quot;)\r[1] \u0026quot;xyz\u0026quot;\r\rmisc\r.\nThe get() and assign() functions allow you to reference objects by\rcharacter strings, and as.name() will convert a string into a reference\r(you would then probably need to use substitute() to create an expression\rand eval()) to evaluate it.\neg\nassign(\u0026quot;a\u0026quot;,get(\u0026quot;b\u0026quot;))\rdoes\ra\u0026lt;-b\nOften there is a better way: the objects can be stored in a list, making\rit possible to use character strings directly to reference them\nIf obj\u0026lt;-list(a=1,b=2)\nthen obj[[“a”]] is a reference to the “a” element and you can do eg\nobj[[“a”]]\u0026lt;-otherobj[[“b”]]\n\r\r"
},
{
	"uri": "/rlang/type_vector.html",
	"title": "type vector",
	"tags": [],
	"description": "基本語法",
	"content": "\r\r\rvector 函數範例\rcbind,rbind\rx\u0026lt;-runif(5)\ry\u0026lt;-runif(6)\rcbind(x,y)\rWarning in cbind(x, y): number of rows of result is not a multiple of vector\rlength (arg 1)\r x y\r[1,] 0.0808 0.466\r[2,] 0.8343 0.498\r[3,] 0.6008 0.290\r[4,] 0.1572 0.733\r[5,] 0.0074 0.773\r[6,] 0.0808 0.875\r\r函數diff\rArguments\n* x: a numeric vector or matrix containing the values to be differenced.\n* lag: an integer indicating which lag to use.\n* differences: an integer indicating the order of the difference.\n例如\rdiff(x,lag=d,differences=n)\rx[(1+d):n] - x[1:(n-d)]\n\r\r練習: 刪除向量中的一個元素\rx\u0026lt;-c(1,2,3)\r如何刪除x中的第2個元素 ?\nhint:\n數字向量元素的刪除 ，不能像是list[2]\u0026lt;-NULL ，請問你的解法？ 並說明\n物件元素的刪除，簡單一點的像是list，\nx\u0026lt;-list(1,2,3)\rx[2]\u0026lt;-NULL\rx\r但是向量元素的刪除沒有捷徑\nx\u0026lt;-c(1,2,3)\rx[2]\u0026lt;-NULL\rError in x[2] \u0026lt;- NULL:\r置換的長度為零\r因此，需要變通的辦法\n方法1：\nx\u0026lt;-c(1,2,3)\rt\u0026lt;-as.list(x) # note: 使用list(x)而不是as.list(x)會有什麼不同\rt[2]\u0026lt;-NULL\rx\u0026lt;-unlist(t)\rx\r[1] 1 3\r方法2：\nx\u0026lt;-c(1,2,3)\ry\u0026lt;-x[-2]\rx\u0026lt;-y\r練習：改為函數\ndelElement\u0026lt;-function(x,idx){\rif (is.vector(x)){\rt\u0026lt;-as.list(x)\rt[idx]\u0026lt;-NULL\rt\u0026lt;-unlist(t)\rreturn(t) } else {\rstop(\u0026#39;must be vector\u0026#39;)\r}\r}\rx\u0026lt;-c(1,2,3)\rx\u0026lt;-delElement(x,2)\rx\r[1] 1 3\rAdding Attributes to Vectors\rThe attributes that you can add to vectors includes names and comments. If we continue with our vector v1 we can see that the vector currently has no attributes:\nv1 \u0026lt;- 8:17\rattributes(v1)\rNULL\rWe can add names to vectors using two approaches. The first uses names() to assign names to each element of the vector. The second approach is to assign names when creating the vector.\n# assigning names to a pre-existing vector\rnames(v1) \u0026lt;- letters[1:length(v1)]\rv1\r a b c d e f g h i j 8 9 10 11 12 13 14 15 16 17 \rattributes(v1)\r$names\r[1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; \u0026quot;e\u0026quot; \u0026quot;f\u0026quot; \u0026quot;g\u0026quot; \u0026quot;h\u0026quot; \u0026quot;i\u0026quot; \u0026quot;j\u0026quot;\r那，什麼是names(v1)\nnames(v1)\r [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; \u0026quot;e\u0026quot; \u0026quot;f\u0026quot; \u0026quot;g\u0026quot; \u0026quot;h\u0026quot; \u0026quot;i\u0026quot; \u0026quot;j\u0026quot;\r也就是說names()函數返回每個元素的名子，而attributes()返回的是有什麼屬性，也是函數名稱字面上的意思。但是再仔細看看，可以發現指派attribute 給\nattributes(v1)\u0026lt;-list(x=\u0026#39;\u0026#39;,y=\u0026#39;\u0026#39;,z=\u0026#39;\u0026#39;)\rv1\r [1] 8 9 10 11 12 13 14 15 16 17\rattr(,\u0026quot;x\u0026quot;)\r[1] \u0026quot;\u0026quot;\rattr(,\u0026quot;y\u0026quot;)\r[1] \u0026quot;\u0026quot;\rattr(,\u0026quot;z\u0026quot;)\r[1] \u0026quot;\u0026quot;\r測試是否可以自行加入attributes，然後讓names()可以運作，如下：\nattributes(v1)\u0026lt;-list(names=letters[1:10])\rv1\r a b c d e f g h i j 8 9 10 11 12 13 14 15 16 17 \rattributes(v1)\r$names\r[1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; \u0026quot;e\u0026quot; \u0026quot;f\u0026quot; \u0026quot;g\u0026quot; \u0026quot;h\u0026quot; \u0026quot;i\u0026quot; \u0026quot;j\u0026quot;\rnames(v1)\r [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; \u0026quot;e\u0026quot; \u0026quot;f\u0026quot; \u0026quot;g\u0026quot; \u0026quot;h\u0026quot; \u0026quot;i\u0026quot; \u0026quot;j\u0026quot;\r上面這個程式暗示了什麼？\r\u0026gt;函數names()只是attributes()\u0026lt;-的一個特例，我們總是可以自行加入一個屬性，名稱為names讓函數names()可以把每個元素的名稱列印出來。\n後面這段程式碼只是對照一下之前每個元素加入名稱的作法，本身沒意義：\n# adding names when creating vectors\rv2 \u0026lt;- c(name1 = 1, name2 = 2, name3 = 3)\rv2\rname1 name2 name3 1 2 3 \rattributes(v2)\r$names\r[1] \u0026quot;name1\u0026quot; \u0026quot;name2\u0026quot; \u0026quot;name3\u0026quot;\r也可以加入註解：\ncomment(v1) \u0026lt;- \u0026quot;This is a comment on a vector\u0026quot;\rv1\r a b c d e f g h i j 8 9 10 11 12 13 14 15 16 17 \rattributes(v1)\r$names\r[1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; \u0026quot;e\u0026quot; \u0026quot;f\u0026quot; \u0026quot;g\u0026quot; \u0026quot;h\u0026quot; \u0026quot;i\u0026quot; \u0026quot;j\u0026quot;\r$comment\r[1] \u0026quot;This is a comment on a vector\u0026quot;\r\r\r"
},
{
	"uri": "/rlang/filesystem.html",
	"title": "File System",
	"tags": [],
	"description": "讀取資料",
	"content": "\r\r\rFile System\r暫時子目錄\n函數 tempfile() 不是建立新檔案,而是在目前的r session中隨機產生唯一檔案名稱，檔案位置預設是在暫時子目錄中。\nmydirname \u0026lt;- tempfile(pattern = \u0026quot;mydir\u0026quot;)\rmydirname\r[1] \"C:\\Users\\linchao\\AppData\\Local\\Temp\\RtmpIp3ZiD\nExploring file system\rfunction file.exists() 可以用來知道檔案是否存在,\rfunction dir() 用來知道目前檔案位置的內容.\nfile.exists(mydirname)\rdir(tempdir())\rcharacter(0) # Empty character vector\r::: sidebar\ra \u0026lt;- character(0)\ridentical(a, character(0)) # returns TRUE\nidentical(a, \"\") # returns FALSE\ridentical(a, numeric(0)) # returns also FALSE\rhint: 利用length\r:::\n\rCreating of a directory\rdir.create 建立子目錄\ndir.create(mydirname) file.exists(mydirname) # 上面指令建立的子目錄是否存在\rdir(tempdir(), full.names = TRUE) #列出目前子目錄內容(全名)\rfile.mtime(mydirname) #子目錄建立時間,make time\r[1] TRUE\n[1] “C:\\Users\\linchao\\AppData\\Local\\Temp\\RtmpIp3ZiD/file87e8755a1876”\n[2] “C:\\Users\\linchao\\AppData\\Local\\Temp\\RtmpIp3ZiD/mydir87e86b51384d”\n[3] “C:\\Users\\linchao\\AppData\\Local\\Temp\\RtmpIp3ZiD/rs-graphics-0f3f81af-32b7-49c4-a272-ad1a859f222f”\n[1] “2018-10-25 23:42:51 CST”\n\rR系統檔案列表\r如果要觀察安裝套件的檔案位置,可以使用指令\rsystem.file(),這個指令可以列出套建的全路徑。例如,\nsystem.file(package = \u0026quot;stats\u0026quot;)\r[1] “C:/PROGRA~1/R/R-3.5.1/library/stats”\n列出套件stats中,所有的檔案\ndir(system.file(package = \u0026quot;stats\u0026quot;))\r[1] “COPYRIGHTS.modreg” “demo” “DESCRIPTION”\n[4] “help” “html” “INDEX”\n[7] “libs” “Meta” “NAMESPACE”\n[10] “R” “SOURCES.ts”\n上面可以看到套件中包含子目錄demo，如果還要查看demo中的檔案內容:\ndir(system.file(\u0026quot;demo\u0026quot;, package = \u0026quot;stats\u0026quot;))\r[1] “glm.vr.R” “lm.glm.R” “nlm.R” “smooth.R”\n如果要看全路徑，可以:\ndir(system.file(\u0026quot;demo\u0026quot;, package = \u0026quot;stats\u0026quot;), full.names = TRUE)\r[1] “/usr/lib64/R/library/stats/demo/glm.vr.R”\r[2] “/usr/lib64/R/library/stats/demo/lm.glm.R”\r[3] “/usr/lib64/R/library/stats/demo/nlm.R”\n[4] “/usr/lib64/R/library/stats/demo/smooth.R”\n\r在R中建立檔案名稱\r甚麼是檔案名稱?不是 character string 而是 system-specific character string。例如,R函數file.path()的執行結果就是system-specific file names.\nworkingdir \u0026lt;- \u0026quot;projects\u0026quot;\rprojectdir \u0026lt;- \u0026quot;warandpeace\u0026quot;\rdatadir \u0026lt;- \u0026quot;data\u0026quot;\rfile.path(workingdir, projectdir, datadir)\r[1] “projects/warandpeace/data”\r上面是windows 10系統上的結果,比較 Linux-based OS,則為:\n[1] “projects/warandpeace/data”\r注意斜線都一樣。\nNote about Windows\r利用函數 file.path()列出的檔案路徑分隔是斜線,而不是反斜線 (例如for example C:\\Program Files\\R\\R-3.5.1)?\n求助文件說:\nThe components are by default separated by ‘/’ (not ‘’) on Windows.\rNote: DOS 和 Windows 也支援斜線.\n\r和工作區相關的指令\rdir(), list.files, list.dirs\ngetwd()\rsetwd()\nlist.files(R.home())\r## Only files starting with a-l or r\r## Note that a-l is locale-dependent, but using case-insensitive\r## matching makes it unambiguous in English locales\rdir(\u0026quot;../..\u0026quot;, pattern = \u0026quot;^[a-lr]\u0026quot;, full.names = TRUE, ignore.case = TRUE)\rlist.dirs(R.home(\u0026quot;doc\u0026quot;))\rlist.dirs(R.home(\u0026quot;doc\u0026quot;), full.names = FALSE)\r###應用範例\n列出目前工作目錄上的檔案\rx \u0026lt;- dir()\rfor (item in x) {\rshow(item) #print(item)\r}\r\r或者,僅列出前幾個檔案\nx\u0026lt;-dir()\rhead(x)\r\r\r\r\r讀檔\r僅僅查看檔案內容\r測試中文的檔案\n測試檔案\n注意檔案內容第一行不是資料。\nfile.show(\"resources/wh.csv\")會打開excel\n也可以利用殼層指令:\nsystem(\"cat resources/wh.csv\")，但是如果內容是中文,顯示結果會變成亂碼。\ncat(readChar(\u0026quot;resources/wh.csv\u0026quot;, 1e5))\rWarning in readChar(\u0026quot;resources/wh.csv\u0026quot;, 1e+05): 在非 UTF-8 MBCS 語區中只能以位元\r組為單位讀取\r# this is a test file\rheight,weight,sex\r156,56, m\r167,., f\r189,70, m\r180,, f\r利用useBytes 不會出現警告\ncat(readChar(\u0026quot;resources/wh.csv\u0026quot;, useBytes=TRUE,1e5)) \r# this is a test file\rheight,weight,sex\r156,56, m\r167,., f\r189,70, m\r180,, f\r參數有useBytes,但是不管TRUE/FALSE，都是中文亂碼\nres \u0026lt;- readLines(system.file(\u0026quot;DESCRIPTION\u0026quot;, package=\u0026quot;MASS\u0026quot;))\rlength(res)\r\rcsv 範例\rrst = read.csv(\u0026#39;resources/wh.csv\u0026#39;,comment.char=\u0026quot;#\u0026quot;,na.string=\u0026#39;.\u0026#39;)\rwrite.csv(rst, file = \u0026quot;MyData.csv\u0026quot;,row.names=FALSE, quote=F)\r# system(\u0026quot;cat myData.csv\u0026quot;) # 這個不行\rcat(readLines(\u0026#39;MyData.csv\u0026#39;), sep = \u0026#39;\\n\u0026#39;)\rheight,weight,sex\r156,56, m\r167,NA, f\r189,70, m\r180,NA, f\rcat(readr::read_file(\u0026quot;MyData.csv\u0026quot;))\rheight,weight,sex\r156,56, m\r167,NA, f\r189,70, m\r180,NA, f\r\r一般的開檔/關檔過程\r大體上每個語言的開檔和關檔案的過程，都會利用到作業系統，因此會有開檔動作，從作業系統得到一個數字，這裡稱為檔案指標，然後利用這個指標，讀入文字或寫入文字，然後有一個關閉檔案的動作告訴作業系統，處理檔案結束。\n在R語言中，開檔不是open(),而是file：\n con = file(filepath, \u0026quot;r\u0026quot;)\r開始讀寫操作\rclose(con)\rcsv\rread.csv(\u0026quot;filename.csv\u0026quot;, #name of file\rheader = TRUE, #are there column names in 1st row?\rsep = \u0026quot;,\u0026quot;, #what separates rows?\ras.is = !stringsAsFactors, #關掉字元轉factor\rcolClasses = NA # to convert everything to character data set to \u0026quot;character\u0026quot;\rna.string = \u0026quot;NA\u0026quot; # could be \u0026quot;.\u0026quot; for SAS files\rskip = 0, #要跳過的前幾行數目\u0026gt;0\rstrip.white = TRUE, #擠掉空白,例如 \u0026quot; 0.1\u0026quot; = \u0026quot;0.1\u0026quot;\rfill = TRUE, #fill in rows that have unequal numbers of columns\rcomment.char = \u0026quot;#\u0026quot;, #註解不讀入\rstringsAsFactors = FALSE #比as.is 常用,關掉字元轉factor\r)\rread.csv()最簡單的用法是直接給檔案名稱,例如\nrst = read.csv(\u0026#39;resources/wh.csv\u0026#39;)\rError in read.table(file = file, header = header, sep = sep, quote = quote, :\rmore columns than column names\rError in dec = dec, fill = fill, comment.char = comment.char, ...):\rmore columns than column names\r但是wh.csv 前面有幾行是註解\nreadLines(\u0026#39;resources/wh.csv\u0026#39;,n=3)\r[1] \u0026quot;# this is a test file\u0026quot; \u0026quot;height,weight,sex\u0026quot; \u0026quot;156,56, m\u0026quot; \r因此加上skip 參數\nrst = read.csv(\u0026#39;resources/wh.csv\u0026#39;,skip=1)\rhead(rst)\r height weight sex\r1 156 56 m\r2 167 . f\r3 189 70 m\r4 180 f\r也可以利用參數comment.char\nrst = read.csv(\u0026#39;resources/wh.csv\u0026#39;,comment.char=\u0026quot;#\u0026quot;)\rhead(rst)\r height weight sex\r1 156 56 m\r2 167 . f\r3 189 70 m\r4 180 f\r但是注意到weight這個欄位被轉為字串,因為有一個 “.” 。有些套裝軟體的CSV輸出將NA轉為“.”,因此\nrst = read.csv(\u0026#39;resources/wh.csv\u0026#39;,comment.char=\u0026quot;#\u0026quot;,na.string=\u0026#39;.\u0026#39;)\rhead(rst)\r height weight sex\r1 156 56 m\r2 167 NA f\r3 189 70 m\r4 180 NA f\r\r\r\rwrite csv\rdata.frame to CSV\rrst = read.csv(\u0026#39;resources/wh.csv\u0026#39;,comment.char=\u0026quot;#\u0026quot;,na.string=\u0026#39;.\u0026#39;)\rwrite.csv(rst, file = \u0026quot;MyData.csv\u0026quot;)\rreadLines(\u0026quot;MyData.csv\u0026quot;,n=3) # note: readLines()不是readline() \r[1] \u0026quot;\\\u0026quot;\\\u0026quot;,\\\u0026quot;height\\\u0026quot;,\\\u0026quot;weight\\\u0026quot;,\\\u0026quot;sex\\\u0026quot;\u0026quot; \u0026quot;\\\u0026quot;1\\\u0026quot;,156,56,\\\u0026quot; m\\\u0026quot;\u0026quot; [3] \u0026quot;\\\u0026quot;2\\\u0026quot;,167,NA,\\\u0026quot; f\\\u0026quot;\u0026quot; \r如果row names不要寫進csv,可以利用參數 row.names=FALSE。\nrst = read.csv(\u0026#39;resources/wh.csv\u0026#39;,comment.char=\u0026quot;#\u0026quot;,na.string=\u0026#39;.\u0026#39;)\rwrite.csv(rst, file = \u0026quot;MyData.csv\u0026quot;,row.names=FALSE)\rreadLines(\u0026quot;MyData.csv\u0026quot;,n=3) \r[1] \u0026quot;\\\u0026quot;height\\\u0026quot;,\\\u0026quot;weight\\\u0026quot;,\\\u0026quot;sex\\\u0026quot;\u0026quot; \u0026quot;156,56,\\\u0026quot; m\\\u0026quot;\u0026quot; [3] \u0026quot;167,NA,\\\u0026quot; f\\\u0026quot;\u0026quot; \rrst = read.csv(\u0026#39;resources/wh.csv\u0026#39;,comment.char=\u0026quot;#\u0026quot;,na.string=\u0026#39;.\u0026#39;)\rwrite.csv(rst, file = \u0026quot;MyData.csv\u0026quot;,row.names=FALSE)\rreadLines(\u0026quot;MyData.csv\u0026quot;,n=3) \r輸出是:\r[1] “\"height\",\"weight\",\"sex\"”\n[2] “156,56,\" m\"”\n[3] “167,NA,\" f\"”\n可以看出來每一行都有雙引號表示字串。\n對照文字檔(mData.csv)\n“height”,“weight”,“sex”\n156,56,\" m\"\n167,NA,\" f\"\n189,70,\" m\"\n180,NA,\" f\"\n\r上面sidebar中,顯示的的sex欄位,可以看見\" m\" 也就是有空白,問利用read.csv 讀入時,會是甚麼情況?\r\r\r如果要指定NA的值,可以利用欄位=””,否則預定是NA\nrst = read.csv(\u0026#39;resources/wh.csv\u0026#39;,comment.char=\u0026quot;#\u0026quot;,na.string=\u0026#39;.\u0026#39;)\rwrite.csv(rst, file = \u0026quot;MyData.csv\u0026quot;,row.names=FALSE, na=\u0026quot;\u0026quot;)\rcat(readLines(\u0026quot;MyData.csv\u0026quot;), sep = \u0026#39;\\n\u0026#39;)\r\u0026quot;height\u0026quot;,\u0026quot;weight\u0026quot;,\u0026quot;sex\u0026quot;\r156,56,\u0026quot; m\u0026quot;\r167,,\u0026quot; f\u0026quot;\r189,70,\u0026quot; m\u0026quot;\r180,,\u0026quot; f\u0026quot;\rNote: 參考rmarkdown 提要\r::: todo\rcat\r:::\n如果輸出時,字串不要雙引號,則可以用quote=FALSE\nrst = read.csv(\u0026#39;resources/wh.csv\u0026#39;,comment.char=\u0026quot;#\u0026quot;,na.string=\u0026#39;.\u0026#39;)\rwrite.csv(rst, file = \u0026quot;MyData.csv\u0026quot;,row.names=FALSE, quote=F)\r# system(\u0026quot;cat myData.csv\u0026quot;) # 這個不行\rcat(readLines(\u0026#39;MyData.csv\u0026#39;), sep = \u0026#39;\\n\u0026#39;)\rheight,weight,sex\r156,56, m\r167,NA, f\r189,70, m\r180,NA, f\r如果要更多的輸出控制可以參考可以write.table().\rwrite.csv()函數,實際上會再呼叫write.table()函數。例如,欄位名稱也不要輸出的話,可以利用write.table()，要設定的參數如下: sep=”,” 和 col.names=FALSE,前者是CSV的主要分隔字元,後者則是不要欄位名稱。\nwrite.table(rst, file = \u0026quot;MyData.csv\u0026quot;,row.names=FALSE, na=\u0026quot;\u0026quot;,col.names=FALSE, sep=\u0026quot;,\u0026quot;)\rcat(readLines(\u0026#39;MyData.csv\u0026#39;), sep = \u0026#39;\\n\u0026#39;)\r156,56,\u0026quot; m\u0026quot;\r167,,\u0026quot; f\u0026quot;\r189,70,\u0026quot; m\u0026quot;\r180,,\u0026quot; f\u0026quot;\r\r\rR語言的檔案格式\r如果不考慮存檔格式，那麼可以利用\nsave(v1,v2,...file=\u0026quot;myfile.RData\u0026quot;)\r...\rload(file=\u0026quot;myfie.RData\u0026quot;)\r\r\r"
},
{
	"uri": "/rlang/objectbasic.html",
	"title": "object_basic",
	"tags": [],
	"description": "物件",
	"content": "\r\r\r物件\rattribute\roth the names and the dimensions of matrices and arrays are stored in R as attributes of the object. These attributes can be seen as labeled values you can attach to any object.\nThey form one of the mechanisms R uses to define specific object types like dates, time series, and so on. They can include any kind of information, and you can use them yourself to add information to any object.\nTo see all the attributes of an object, you can use the attributes() function. You can see all the attributes of my.array like this:\n\rattributes(my.array)\r$dim\r[1] 3 4 2\rThis function returns a named list, where each item in the list is an attribute. Each attribute can, on itself, be a list again. For example, the attribute dimnames is actually a list containing the row and column names of a matrix.\n\rYou can check that for yourself by checking the output of attributes(baskets.team). You can set all attributes as a named list as well. You find examples of that in the Help file ?attributes.\nTo get or set a single attribute, you can use the attr() function. This function takes two important arguments. The first argument is the object you want to examine, and the second argument is the name of the attribute you want to see or change. If the attribute you ask for doesn’t exist, R simply returns NULL.\nImagine you want to add which season Granny and Geraldine scored the baskets mentioned in baskets.team. You can do this with the following code:\n\rattr(baskets.team,‘season’) \u0026lt;- ‘2010-2011’\rTo get the value of this attribute returned, you can then use following code:\n\r\rattr(baskets.team,‘season’)\r[1] “2010-2011”\rYou can delete attributes again by setting their value to NULL, like this:\n\r\rattr(baskets.team,‘season’) \u0026lt;- NULL\n\r\rattr, attributes \u0026amp; structure Functions in R | 4 Examples (get, remove \u0026amp; set)\r三個函數的基本寫法:\nattributes(data)\rattr(x = data, which = \u0026quot;attribute_name\u0026quot;)\rstructure(data, dim = c(2, 6))\rDefinitions:\n函數 attributes 設定或列出物件的所有attributes。\n函數 attr 物件中某個指定的attribute.\n函數structure 設定資料物件中其他額外的 attributes。\n使用方法\nBasic Application of attr() \u0026amp; attributes()\r載入資料集然後利用函數看看data.frame有甚麼attribute。\ndata(cars) # Load head(cars) attributes(cars) attr(x = cars, which = \u0026quot;names\u0026quot;) \r[1] \u0026quot;speed\u0026quot; \u0026quot;dist\u0026quot; \r也可以寫成\nattr(cars,\u0026quot;names\u0026quot;)\r[1] \u0026quot;speed\u0026quot; \u0026quot;dist\u0026quot; \r比較一下names,可以發現,names 只是一個data.frame中的attribute\n class(cars)\r[1] \u0026quot;data.frame\u0026quot;\r str(cars)\r\u0026#39;data.frame\u0026#39;: 50 obs. of 2 variables:\r$ speed: num 4 4 7 7 8 9 10 10 10 11 ...\r$ dist : num 2 10 4 22 16 10 18 26 34 17 ...\r names(cars)\r[1] \u0026quot;speed\u0026quot; \u0026quot;dist\u0026quot; \r\r\rAssign New Attributes with the attributes() R Function\rattributes_list \u0026lt;- list(names = c(\u0026quot;col1\u0026quot;, \u0026quot;col2\u0026quot;), #設定不同的欄位名稱\rclass = \u0026quot;data.frame\u0026quot;, # 保留類別\rrow.names = nrow(cars):1) # 反向\r然後可以利用attributes設定所有attributes。\nattributes(cars) \u0026lt;- attributes_list # Set all attributes of data\rattributes(cars) # Apply attributes function\r$names\r[1] \u0026quot;col1\u0026quot; \u0026quot;col2\u0026quot;\r$class\r[1] \u0026quot;data.frame\u0026quot;\r$row.names\r[1] 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26\r[26] 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\r\r利用attr() 改變其中一個Attribute\rattr(x = cars, which = \u0026quot;names\u0026quot;) \u0026lt;- c(\u0026quot;aaa\u0026quot;, \u0026quot;bbb\u0026quot;) # Set only names attribute\r檢查看看結果\nattributes(cars) # Apply attributes function\r$names\r[1] \u0026quot;aaa\u0026quot; \u0026quot;bbb\u0026quot;\r$class\r[1] \u0026quot;data.frame\u0026quot;\r$row.names\r[1] 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26\r[26] 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\r　\rThe R structure Function\r和attributes() attr() 相關的命令是 structure() 。\nset.seed(12345) vec \u0026lt;- round(runif(15, 0, 10)) # 1D 向量 vec\r [1] 7 9 8 9 5 2 3 5 7 10 0 2 7 0 4\r改變成矩陣:\nvec_dim \u0026lt;- structure(vec, dim = c(3, 5)) # Change dimension of vector\rvec_dim # Print updated vector\r [,1] [,2] [,3] [,4] [,5]\r[1,] 7 9 3 10 7\r[2,] 9 5 5 0 0\r[3,] 8 2 7 2 4\r比較之前的寫法:\nmatrix(vec,nrow=3)\rExample:\rdd \u0026lt;- structure(list( year = c(2001, 2002, 2004, 2006) ,length_days = c(366.3240, 365.4124, 366.5323423, 364.9573234)) ,.Names = c(\u0026quot;year\u0026quot;, \u0026quot;length of days\u0026quot;) ,row.names = c(NA, -4L) ,class = \u0026quot;data.frame\u0026quot;)\rdd\r year length of days\r1 2001 366\r2 2002 365\r3 2004 367\r4 2006 365\rstr(dd)\r\u0026#39;data.frame\u0026#39;: 4 obs. of 2 variables:\r$ year : num 2001 2002 2004 2006\r$ length of days: num 366 365 367 365\rdd的meta data:\nattributes(dd)\r$names\r[1] \u0026quot;year\u0026quot; \u0026quot;length of days\u0026quot;\r$row.names\r[1] 1 2 3 4\r$class\r[1] \u0026quot;data.frame\u0026quot;\r利用structure()建立的物件,不管是同質(vector,matrix)還是異質(data.frame,list) 都會利用attributes儲存meta data。例如,\njust_vector \u0026lt;- structure(1:10, comment = \u0026quot;This is my simple vector with info\u0026quot;)\rjust_vector\r [1] 1 2 3 4 5 6 7 8 9 10\rstr(just_vector)\r int [1:10] 1 2 3 4 5 6 7 8 9 10\r- attr(*, \u0026quot;comment\u0026quot;)= chr \u0026quot;This is my simple vector with info\u0026quot;\r然後利用函數，可以拿到我們之前的資訊:\nattributes(just_vector)\r結果如下:\r$comment\r[1] “This is my simple vector with info”\n注意:attributes()的傳回結果為list,因此有$comment\nstr(attributes(just_vector))\rList of 1\r$ comment: chr \u0026quot;This is my simple vector with info\u0026quot;\rattributes(attributes(just_vector))\r$names\r[1] \u0026quot;comment\u0026quot;\r\rIn one go\r這是另一個利用函數structure()的例子。先看一下一般建立data.frame物件的方法:\nyear = c(1999, 2002, 2005, 2008)\rpollution = c(346.82,134.308821199349, 130.430379885892, 88.275457392443)\rdd2 \u0026lt;- data.frame(year,pollution)\rdd2$year \u0026lt;- as.factor(dd2$year)\r利用 structure, 一步就可以完成:\ndd \u0026lt;- structure(list( year = as.factor(c(2001, 2002, 2004, 2006))\r,length_days = c(366.3240, 365.4124, 366.5323423, 364.9573234)) ,.Names = c(\u0026quot;year\u0026quot;, \u0026quot;length of days\u0026quot;) ,row.names = c(NA, -4L) ,class = \u0026quot;data.frame\u0026quot;)\rConstructing data-frame with additional attributes and comments.\ndd3 \u0026lt;- structure(list(\rv1 = as.factor(c(2001, 2002, 2004, 2006))\r,v2 = I(c(2001, 2002, 2004, 2006))\r,v3 = ordered(c(2001, 2002, 2004, 2006))\r,v4 = as.double(c(366.3240, 365.4124, 366.5323423, 364.9573234)))\r,.Names = c(\u0026quot;year\u0026quot;, \u0026quot;AsIs Year\u0026quot;,\u0026quot;yearO\u0026quot;, \u0026quot;length of days\u0026quot;)\r,.typeOf = c(\u0026quot;factor\u0026quot;, \u0026quot;numeric\u0026quot;, \u0026quot;ordered\u0026quot;,\u0026quot;numeric\u0026quot;)\r,row.names = c(NA, -4L)\r,class = \u0026quot;data.frame\u0026quot;\r,comment = \u0026quot;Ordered YearO for categorical analysis and other variables\u0026quot;)\rdd3\r year AsIs Year yearO length of days\r1 2001 2001 2001 366\r2 2002 2002 2002 365\r3 2004 2004 2004 367\r4 2006 2006 2006 365\rAnd checking comments can be done as:\nattributes(dd3)$comment\r[1] \u0026quot;Ordered YearO for categorical analysis and other variables\u0026quot;\rattr(dd3, which=\u0026quot;comment\u0026quot;)\r[1] \u0026quot;Ordered YearO for categorical analysis and other variables\u0026quot;\r\r\r\r\r"
},
{
	"uri": "/rlang/programming_1.html",
	"title": "Programming 1",
	"tags": [],
	"description": "基本語法",
	"content": "\r\r\rprogramming in R\r條件指令\rif\r一般來講，通用寫法如下：\nif(判斷式){\r成功\r}else{\r失敗\r}\r例如\r# 多行寫法\nif(4 \u0026gt; 3){\rTRUE\r}else{\rFALSE\r}\r另外，如果區塊內只有一行\nif(4 \u0026gt; 3) TRUE else FALSE\n\rifelse的寫法\rifelse('判斷式','成功','失敗')\n例如，\rifelse(4 \u0026gt; 3, T, F)\n\rswitch的寫法\rswitch(‘判斷式’,\r‘動作1’,\r‘動作2’,\r…\r)\r** 指定第幾行 **\nswitch(2, 1, 2, #因為判斷式為2，因此，執行動作2\r3) \r** 也可以利用字串**\nswitch(\u0026quot;a\u0026quot;, a = 1, b = 2, c = \u0026quot;why\u0026quot;)\r[1] 1\r這個switch 並不是一個語法，而是一個函數，原理大概是\r第1個參數以後的東西，會被變成是一個named list。\r例如上面的例子中\nalist \u0026lt;-list(a=1,b=2,c=\u0026quot;why\u0026quot;)\r然後利用判斷式 查找要返回對應的值。\n\r\r迴圈指令\rR 語言的迴圈，可以搭配 break和next，前者跳出迴圈，後者繼續下一個迴圈。\nfor-loop\r計算 1+2+3+4. 的值是多少？\nrst \u0026lt;- 0\rfor(i in c(1:4)){ rst \u0026lt;- rst + i\r}\r\rwhile-loop\ri \u0026lt;- 1\rresult \u0026lt;- 0\rwhile(i \u0026lt; 5){ rst \u0026lt;- rst + i\ri \u0026lt;- i + 1\r}\r\rrepeat-loop\ri \u0026lt;- 1\rrst \u0026lt;- 0\rrepeat{ if(i \u0026gt; 4) break rst \u0026lt;- rst + i\ri \u0026lt;- i + 1\r}\r\r\r%in% operator\r範例 detach_package()\r討論內建函數detach_package()\n使用方法：\ndetach_package(vegan)\rdetach_package(\u0026quot;vegan\u0026quot;, TRUE)\r注意一下第2個使用方式，第2個參數`character.only’：\ndetach_package \u0026lt;- function(pkg, character.only = FALSE)\r{\rif(!character.only) #如果沒有指定參數是字串\r{\rpkg \u0026lt;- deparse(substitute(pkg)) # 轉字串\r}\rsearch_item \u0026lt;- paste(\u0026quot;package\u0026quot;, pkg, sep = \u0026quot;:\u0026quot;)\rwhile(search_item %in% search())\r{\rdetach(search_item, unload = TRUE, character.only = TRUE)\r}\r}\r\r範例2：.libPaths()\r.libPaths\rfunction (new) {\rif (!missing(new)) {\rnew \u0026lt;- Sys.glob(path.expand(new))\rpaths \u0026lt;- c(new, .Library.site, .Library)\rpaths \u0026lt;- paths[dir.exists(paths)]\r.lib.loc \u0026lt;\u0026lt;- unique(normalizePath(paths, \u0026quot;/\u0026quot;))\r}\relse .lib.loc\r}\r\u0026lt;bytecode: 0x000000001375b890\u0026gt;\r\u0026lt;environment: 0x0000000013756800\u0026gt;\r\r\rR語言的 meta 計算。\r\rassign()\r語法解析：substitute(), parse(), deparse()\n\r表達式構造：quote()\r表達式求值：eval(), source()\r表達式：expression()\r\rparse(text=\u0026#39;x\u0026lt;-1+2\u0026#39;)\rexpression(x \u0026lt;- 1 + 2)\r在R中解析有三種不同的變種：\n\rThe read-eval-print loop\rParsing of text files\rParsing of character strings\r\rread-eval-print 是讀入文本，然後進行解析，然後求值，最後打印，這個就是我們日常看到的命令行操作。\n解析文件是parse函數來完成。\n解析字符串就是parse中用text參數來表示。\ndeparse\r相對於parse,deparse 把expression 轉為字串。\n deparse(expression(1+2))\r[1] \u0026quot;expression(1 + 2)\u0026quot;\r\rquote\rquote() 的參數也是expression，返回類別class，可以再給eval()計算。\rquote()的參數雖然是expression但是不會進行計算，而是token分解。\n quote(1+2)\r1 + 2\r typeof(quote(1+2)) \r[1] \u0026quot;language\u0026quot;\r class(quote(1+2))\r[1] \u0026quot;call\u0026quot;\r\reval\rparse() 和eval()\rtext –\u0026gt;parse()–\u0026gt; expression—\u0026gt;eval()\r#### quote() 和eval()\rexpression –\u0026gt;quote()–\u0026gt; call—\u0026gt;eval()\n eval(quote(1+2))\r[1] 3\r一般是用parse從字符串（或者是硬盤上的文件）解析成一個expression對象，是表達式列表，不是一個表達式。\n eval(parse(text=\u0026quot;1+2\u0026quot;))\r[1] 3\r首先使用parse()函數將字符串轉化為表達式（expression），而後使用eval()函數對表達式求解。\n?eval\r# Evaluate an R expression in a specified environment.\r# Usage\r# eval(expr, envir = parent.frame(),\r# enclos = if(is.list(envir) || is.pairlist(envir))\r# parent.frame() else baseenv())\r# evalq(expr, envir, enclos)\r# eval.parent(expr, n = 1)\r# local(expr, envir = new.env())\r\r\rsubstitue()\r如果沒有第二個參數，是否substitue()==quote()?\n(s.e \u0026lt;- substitute(expression(a + b), list(a = 1))) #\u0026gt; expression(1 + b)\rexpression(1 + b)\r(s.s \u0026lt;- substitute( a + b, list(a = 1))) #\u0026gt; 1 + b\r1 + b\r\r\r\r討論\r測試紀錄\rtest1\u0026lt;-function (..., list = character() ) {\rnames \u0026lt;- c(as.character(substitute(list(...))[-1L]), list)\rreturn (names)\r}\rtest1(x,y,list=\u0026quot;data\u0026quot;)\r[1] \u0026quot;x\u0026quot; \u0026quot;y\u0026quot; \u0026quot;data\u0026quot;\rnames \u0026lt;- c(as.character(substitute(list(...))[-1L]), list)\r* list(…) 把傳進來的參數打包成list\r* 在執行list(…)的時候，如果傳進的參數是還沒有初值的變數，會出錯，因此用substitute()打包。\r+ 為什麼用substitute()就不會出錯，因為它不執行這個expression(e.g. list(…))。\r-為什麼可以不執行？因為substitue()有把它變成匿名函數(和call這個類別有關，自推論），這樣當然不會有問題。\r-為什麼有-1L?接續之前的推論，第一個元素應該是匿名函數的內建名稱。\n所以整個函數，就是把使用者所有的參數，打成字串向量。如範例結果。\n\r\r練習\rzeros(3,2),ones(2,3)\r\rhint:\nsapply(a,function(x) matrix(x,2,2), simplify=\u0026#39;array\u0026#39;)\rzeros\u0026lt;-function (nrow,ncol)\r{\rrst\u0026lt;-sapply(c(0),function(x) matrix(x,nrow,ncol),simplify=\u0026#39;array\u0026#39;)\rreturn(rst[,,1])\r}\rx\u0026lt;-zeros(4,5)\rx\r [,1] [,2] [,3] [,4] [,5]\r[1,] 0 0 0 0 0\r[2,] 0 0 0 0 0\r[3,] 0 0 0 0 0\r[4,] 0 0 0 0 0\r\r\r"
},
{
	"uri": "/rlang/r_function.html",
	"title": "Function",
	"tags": [],
	"description": "撰寫R 函數",
	"content": "\r\r\r3個逗點 (dots)\r3個逗點可以利用?dots查詢。\n範例\nf \u0026lt;- function(x, ...)\r{\rdots \u0026lt;- list(...) #1\rif(length(dots) == 0) return(NULL) cat(\u0026quot;The arguments in ... are\\n\u0026quot;)\rprint(dots)\rf(...) #2\r}\rf(1,2,3,\u0026quot;a\u0026quot;, list(\u0026quot;monkey\u0026quot;))\r\roperator \u0026lt;\u0026lt;-\rexample\npower \u0026lt;- function(exponent) {\rfunction(x) x ^ exponent\r}\rsquare \u0026lt;- power(2)\rsquare(2) # -\u0026gt; [1] 4\rsquare(4) # -\u0026gt; [1] 16\rcube \u0026lt;- power(3)\rcube(2) # -\u0026gt; [1] 8\rcube(4) # -\u0026gt; [1] 64\rmake.accumulator\u0026lt;-function(){\ra\u0026lt;-0\rfunction(x) {\ra\u0026lt;\u0026lt;-a+x\ra\r}\r}\rf\u0026lt;-make.accumulator()\rf(1)\r[1] 1\rf(1)\r[1] 2\rf(1)\r[1] 3\r❓ 利用上述觀念建立一個計數器。\n👍\nnew_counter \u0026lt;- function() {\ri \u0026lt;- 0\rfunction() {\r# do something useful, then ...\ri \u0026lt;\u0026lt;- i + 1\ri\r}\r}\r\r\rclosure\r\rox\u0026lt;-function (arg=3) {\rx\u0026lt;-0\ro1\u0026lt;-function(){\rx\u0026lt;\u0026lt;-x+arg;\r}\rlist(go=o1)\r}\robj\u0026lt;-ox(4)\robj$go()\r\r"
},
{
	"uri": "/rlang/apply_family.html",
	"title": "function - apply family",
	"tags": [],
	"description": "list 的應用",
	"content": "\r\r\rapply family\r\r其他參考\r\rapply\r可以處理的對象包括 矩陣、資料集、陣列(二維、多維)，可以指定直行、橫行。\n函數定義：\napply(X, MARGIN, FUN, ...)\r參數列表：\r- X : 矩陣matrix、資料集dataframe 、陣列 array\r- MARGIN : 1表示橫行，2表示直行\r- FUN : the function to be applied\n- … : optional arguments to FUN\n範例1\nx\u0026lt;-matrix(1,ncol=4,nrow=3);x\r [,1] [,2] [,3] [,4]\r[1,] 1 1 1 1\r[2,] 1 1 1 1\r[3,] 1 1 1 1\rapply(x,1,sum)\r[1] 4 4 4\r範例：\n有一個list,裡面有2個欄位，分別是x1,x2,想要分別算出每個欄位的最小和最大\nx \u0026lt;- cbind(x1 = 3, x2 = c(1:6)); # x 是矩陣\rf1\u0026lt;- function(col) {\rc(min(col),max(col)) }\rapply(x,2,f1)\r x1 x2\r[1,] 3 1\r[2,] 3 6\r練習：如果用for loop?\r練習：哪種方式比較快？hint:利用 system.time(a function)\n\rlapply函數\r和apply不同的地方是,沒辦法指定橫行或是直行的區別,只能是逐個元素運算。\n大綱：lapply(),sapply(),vapply() 都參數都吃list 或者vector。\n* lapply(), sapply()差別是 前者返回list,後者返回matrix;\r* sapply(), vapply() 差別是，後者可以加入row names。\nlapply 的參數是 list、data.frame，然後返回和X長度同樣的list結構作為結果。\n函數定義：\nlapply(X, FUN, ...)\r參數列表：\n\rX: list、vector、data.frame\rFUN: 自定義的調用函數\r…: 更多參數，可選\r\r\r\r輸入\r輸出\r\r\r\rvector\rlist\r\rlist\rlist\r\rdata.frame\rlist\r\r\r\r比如，計算list中的每個KEY對應 的5個Tukey分位數 (minimum, lower-hinge, median, upper-hinge, maximum) 。利用fivenum()\nx \u0026lt;- list(a = 1:6, b = rnorm(2,6,8));x\r$a\r[1] 1 2 3 4 5 6\r$b\r[1] -5.20 8.04\rlapply(x,fivenum)\r$a\r[1] 1.0 2.0 3.5 5.0 6.0\r$b\r[1] -5.20 -5.20 1.42 8.04 8.04\r如果傳入的參數是data.frame(),如下，對資料集的每個欄位求和。\nlapply(data.frame(x), sum)\r$a\r[1] 21\r$b\r[1] 8.53\rnote: 如果傳入的參數是矩陣，則會對每個元素求函數值。\nx \u0026lt;- matrix(rnorm(4,5,10),nrow=2);x\r [,1] [,2]\r[1,] -19.37 11.2\r[2,] 4.94 16.5\r lapply(x, sum)\r[[1]]\r[1] -19.4\r[[2]]\r[1] 4.94\r[[3]]\r[1] 11.2\r[[4]]\r[1] 16.5\r\rsapply函數\rsapply函數包裹了一上面提到的lapply()，返回值為向量，而不是list對象。sapply增加了2個參數simplify和USE.NAMES，\n函數定義：\nsapply(X, FUN, ..., simplify=TRUE, USE.NAMES = TRUE)\r參數列表：\n\rX: list、matrix、data.frame\rFUN: 自定義的調用函數\r…: 更多參數，可選\rsimplify: 預設為T,返為值為向量；如果是F成list。? 設定為“array”時，輸出結果按數組進行分組\rUSE.NAMES: 如果X為字符串，TRUE設置字符串為數據名，FALSE不設置\r\r\r\r輸入\r輸出\r\r\r\rvector\rvector,matrix,array,list\r\rlist\rvector,matrix,array,list\r\rdata.frame\rvector,matrix,array,list\r\r\r\rnote: 如果我們利用函數unlist 配合 lapply 的返回值，也可以得到向量，例如：\runlist(lapply(1:3, function(x) x^2))\nx \u0026lt;- cbind(x1 = 3, x2 = c(1:6)); # x 是矩陣\rx\r x1 x2\r[1,] 3 1\r[2,] 3 2\r[3,] 3 3\r[4,] 3 4\r[5,] 3 5\r[6,] 3 6\rsapply(x, sum) #結果類似lapply()\r [1] 3 3 3 3 3 3 1 2 3 4 5 6\r# data.frame\rsapply(data.frame(x), sum)\rx1 x2 18 21 \r# 確認返回類別\rclass(lapply(x, sum))\r[1] \u0026quot;list\u0026quot;\rclass(sapply(x, sum))\r[1] \u0026quot;numeric\u0026quot;\rclass(sapply(x, sum, simplify=FALSE, USE.NAMES=FALSE))\r[1] \u0026quot;list\u0026quot;\r說明書提到：simplify=FALSE和USE.NAMES=FALSE，則 sapply函數 ＝lapply函數。\n練習：解釋下面的輸出結果。\nx \u0026lt;- cbind(x1 = 3, x2 = c(1:6))\rsapply(x, quantile) \r [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\r0% 3 3 3 3 3 3 1 2 3 4 5 6\r25% 3 3 3 3 3 3 1 2 3 4 5 6\r50% 3 3 3 3 3 3 1 2 3 4 5 6\r75% 3 3 3 3 3 3 1 2 3 4 5 6\r100% 3 3 3 3 3 3 1 2 3 4 5 6\rsapply(2:4, seq)\r[[1]]\r[1] 1 2\r[[2]]\r[1] 1 2 3\r[[3]]\r[1] 1 2 3 4\rhint: sapply的調用函數lapply()，而已經知道lapply()的參數是矩陣的時候，每個元素都會被傳到函數。因此欄位有12個；又，每個quantile()傳回5個元素，因此，橫行有5個。\r正確的作法是：\nx \u0026lt;- list(x1 = 3, x2 = c(1:6))\rsapply(x, quantile) \r x1 x2\r0% 3 1.00\r25% 3 2.25\r50% 3 3.50\r75% 3 4.75\r100% 3 6.00\r範例：USE.NAMES=TRUE\nalist\u0026lt;-list(a=c(1,1,1),b=c(2,2,2),c=c(3,3,3))\rf2\u0026lt;-function(x)\r{\rmean(alist[[x]])\r}\rsapply(c(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;c\u0026quot;),f2,USE.NAMES = T)\ra b c 1 2 3 \r對於simplify為array時，我們可以參考下面的例子，構建一個三維數組，其中二個維度為方陣。\na\u0026lt;-1:2\r# 按數組分組\rsapply(a,function(x) matrix(x,2,2), simplify=\u0026#39;array\u0026#39;)\r, , 1\r[,1] [,2]\r[1,] 1 1\r[2,] 1 1\r, , 2\r[,1] [,2]\r[1,] 2 2\r[2,] 2 2\r# 默認情況，則自動合併分組\rsapply(a,function(x) matrix(x,2,2))\r [,1] [,2]\r[1,] 1 2\r[2,] 1 2\r[3,] 1 2\r[4,] 1 2\r\r比較\r\r\r\r\rFunction\rArguments\rObjective\rInput\rOutput\r\r\r\rapply\rapply(x, MARGIN, FUN)\rApply a function to the rows or columns or both\rData frame or matrix\rvector, list, array\r\rlapply\rlapply(X, FUN)\rApply a function to all the elements of the input\rList, vector or data frame\rlist\r\rsapply\rsappy(X FUN)\rApply a function to all the elements of the input\rList, vector or data frame\rvector or matrix\r\r\r\rm\u0026lt;-matrix(1:4,4,3);m\r [,1] [,2] [,3]\r[1,] 1 1 1\r[2,] 2 2 2\r[3,] 3 3 3\r[4,] 4 4 4\rsapply(1:3, function(x) mean(m[,x]))\r[1] 2.5 2.5 2.5\rm\u0026lt;-matrix(1:4,4,3);\rlapply(1:3, function(x) mean(m[,x]))\r[[1]]\r[1] 2.5\r[[2]]\r[1] 2.5\r[[3]]\r[1] 2.5\r\rvapply函數\rvapply類似於sapply，提供了FUN.VALUE參數，用來控制返回值的行名。\nnote: sapply() 配上rownames\u0026lt;- 可以達到一樣的效果。\n函數定義：\nvapply(X, FUN, FUN.VALUE, ..., USE.NAMES = TRUE)\r參數列表：\n\rX:數組、矩陣、數據框\rFUN: 自定義的調用函數\rFUN.VALUE: 可以記為對每一紀錄給名稱(e.g. row.names)\r…: 更多參數，可選\rUSE.NAMES: 如果X為字符串，TRUE設置字符串為數據名，FALSE不設置\r\rx \u0026lt;- cbind(x1 = 3, x2 = c(1:6)); # x 是矩陣\rx\u0026lt;-data.frame(x) # 不能是矩陣\rf1\u0026lt;- function(col) {\rc(min(col),max(col)) }\rvapply(x,f1,FUN.VALUE = c(\u0026quot;min\u0026quot;=0,\u0026quot;max\u0026quot;=0)) # FUN.VALUE 是一個named vector\r x1 x2\rmin 3 1\rmax 3 6\r# vapply(x,f1,FUN.VALUE = c(\u0026quot;min\u0026quot;,\u0026quot;max\u0026quot;)) # 錯誤\r\rmapply函數\r函數定義：\nmapply(FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE,USE.NAMES = TRUE)\r參數列表：\n\rFUN: 自定義的調用函數\n\r…: 接收多個數據\n\rMoreArgs: 參數列表\n\rSIMPLIFY: 是否轉矩陣，當值array時，輸出結果按數組進行分組\n\rUSE.NAMES: 如果X為字符串，TRUE設置字符串為數據名，FALSE不設置\n\r如果Fun=f(x)，則 mapply(f,a1,a2)的執行是：\nf(a1), f(a2)\n\r如果Fun=f(x,y)，則 mapply(f,a1,a2)的執行是：\nf(a1, a2)\n\r\r比如，比較3個向量大小，按索引順序取較大的值。\nset.seed(1)\r# 定義3個向量\rx\u0026lt;-1:10\ry\u0026lt;-5:-4\rz\u0026lt;-round(runif(10,-5,5))\r# 按索引順序取較大的值。\rmapply(max,x,y,z)\r [1] 5 4 3 4 5 6 7 8 9 10\r再看一個例子，生成4個符合正態分佈的數據集，分別對應的均值和方差為c(1,10,100,1000)。\nset.seed(1)\r# 長度為4\rn\u0026lt;-rep(4,4)\r# m為均值，v為方差\rm\u0026lt;-v\u0026lt;-c(1,10,100,1000)\r# 生成4組數據，按列分組\rmapply(rnorm,n,m,v)\r [,1] [,2] [,3] [,4]\r[1,] 0.374 13.3 157.6 379\r[2,] 1.184 1.8 69.5 -1215\r[3,] 0.164 14.9 251.2 2125\r[4,] 2.595 17.4 139.0 955\r\rtapply函數\rtapply用於分組的循環計算，通過INDEX參數可以把數據集X進行分組，相當於group by的操作。\n函數定義：\ntapply(X, INDEX, FUN = NULL, ..., simplify = TRUE)\r參數列表：\n\rX: 向量\rINDEX: 用於分組的索引\rFUN: 自定義的調用函數\r…: 接收多個數據\rsimplify : 是否數組化，當值array時，輸出結果按數組進行分組\r\r比如，計算不同品種的鳶尾花的花瓣(iris)長度的均值。\n# 通過iris$Species品種進行分組\rtapply(iris$Petal.Length,iris$Species,mean)\r setosa versicolor virginica 1.46 4.26 5.55 \r分組求和的範例。\nset.seed(1)\rx\u0026lt;-1:10\r# 亂術分成3組，分別是0,1,2 t\u0026lt;-round(runif(10,1,100)%%2);t\r [1] 1 2 2 1 1 2 1 0 1 1\r# 對x進行分組求和\rtapply(x,t,sum)\r 0 1 2 8 36 11 \r\rrapply函數\r\reapply函數\r函數定義：\neapply(env, FUN, ..., all.names = FALSE, USE.NAMES = TRUE)\r練習：\n1 把iris 每個欄位的加總列出\riris 有一個欄位是factor\n\r範例\r將每個rmd檔案中需要的函數庫列表\r#setwd(~/directory1/)\rlibs = lapply(list.files(pattern = \u0026quot;\\\\.Rmd$\u0026quot;),\rfunction(x){\rd = readLines(x)\rd = d[grepl(\u0026quot;library\\\\(.*\\\\)\u0026quot;, d)]\rgsub(\u0026quot;library\\\\((.*)\\\\)\u0026quot;, \u0026quot;\\\\1\u0026quot;, d)\r})\runique(unlist(libs))\rnote:\ngrepl :　邏輯值\ngsub :　只拿取library(“函數庫名稱”)中的“函數庫名稱”。\n\r\r\r"
},
{
	"uri": "/rlang/rpackages.html",
	"title": "R Package",
	"tags": [],
	"description": "開發套件",
	"content": "\r\r\rR Packages\r基本\r套件在哪裡\r\rR package and Github\r建立R套件\r\r\rnote: 可以DOS指令tree .列出目錄樹結構\n\rR.home()\r[1] \u0026quot;C:/PROGRA~1/R/R-4.0.2\u0026quot;\rsystem.file()\r[1] \u0026quot;C:/PROGRA~1/R/R-4.0.2/library/base\u0026quot;\r如果要知道安裝的套件在電腦的哪個地方:\n.libPaths()\r如果要自己預設指定安裝套件位置，可以在使用者文件夾上找到.Rprofile 然後寫上這一行:\n.libPaths(\"C:/myRlibary\")\n套件的安裝\n範例:\rinstall.packages(‘Rcpp’, dependencies = TRUE)\r第2個參數,可以讓依存的檔案自動安裝。\n\r搜尋套件中的檔案\rsystem.file(“help”, “AnIndex”, package = “splines”)\n結果:[1] “C:/PROGRA1/MICROS4/RCLIEN~1/R_SERVER/library/splines/help/AnIndex”\n解釋：在套件splines 中的根目錄中搜尋子目錄help，找出名稱為AnIndex的檔案，並傳回路徑名稱。\n練習：\n例如,套件epuRate的安裝目錄為D:\\RSTUDIO\\RMD\\RPACK\\EPURATE-MASTER\\INST，目錄結構如下：\nD:\\RSTUDIO\\RMD\\RPACK\\EPURATE-MASTER\\INST\r└─rmarkdown\r└─templates\r├─basic\r│ └─skeleton\r├─epurate\r│ ├─resources\r│ └─skeleton\r└─PCTG\r├─resources\r└─skeleton\r\r參考上面的目錄結構，則下面程式執行的結果css,header, template 分別是什麼?\n css \u0026lt;- system.file(\u0026quot;rmarkdown\u0026quot;, \u0026quot;templates\u0026quot;, \u0026quot;epurate\u0026quot; ,\u0026quot;resources\u0026quot;, \u0026quot;style.css\u0026quot;, package = \u0026quot;epuRate\u0026quot;)\rheader \u0026lt;- system.file(\u0026quot;rmarkdown\u0026quot;, \u0026quot;templates\u0026quot;, \u0026quot;epurate\u0026quot; ,\u0026quot;resources\u0026quot;, \u0026quot;header.html\u0026quot;, package = \u0026quot;epuRate\u0026quot;)\rtemplate \u0026lt;- system.file(\u0026quot;rmarkdown\u0026quot;, \u0026quot;templates\u0026quot;, \u0026quot;epurate\u0026quot; ,\u0026quot;resources\u0026quot;, \u0026quot;template_epurate.html\u0026quot;, package = \u0026quot;epuRate\u0026quot;)\r\rhint:\ncss: D:\\RSTUDIO\\RMD\\RPACK\\EPURATE-MASTER\\INST\\rmarkdown\\templates\\eurate\\resouces\\style.css\r問題：\nsystem.file(\u0026#39;rmarkdown\u0026#39;)\r[1] \u0026quot;\u0026quot;\r為什麼傳回空值 : \"\" ?\nhint\r沒有指定套件名稱，因此預設為base，而base的根目錄中，找不到子目錄或檔案為rmarkdown的檔案。\n下面驗證驗證這句話「找不到子目錄或檔案為rmarkdown的檔案」\nlist.dirs(system.file())\r[1] \u0026quot;C:/PROGRA~1/R/R-4.0.2/library/base\u0026quot; [2] \u0026quot;C:/PROGRA~1/R/R-4.0.2/library/base/demo\u0026quot;\r[3] \u0026quot;C:/PROGRA~1/R/R-4.0.2/library/base/help\u0026quot;\r[4] \u0026quot;C:/PROGRA~1/R/R-4.0.2/library/base/html\u0026quot;\r[5] \u0026quot;C:/PROGRA~1/R/R-4.0.2/library/base/Meta\u0026quot;\r[6] \u0026quot;C:/PROGRA~1/R/R-4.0.2/library/base/R\u0026quot; \rlist.files(system.file())\r[1] \u0026quot;CITATION\u0026quot; \u0026quot;demo\u0026quot; \u0026quot;DESCRIPTION\u0026quot; \u0026quot;help\u0026quot; \u0026quot;html\u0026quot; [6] \u0026quot;INDEX\u0026quot; \u0026quot;Meta\u0026quot; \u0026quot;R\u0026quot; \r\rnote: list.files傳回的不僅是檔案名稱，還有子目錄名稱。\n\rsystem.file()傳回套件base的根目錄\nlist.dirs(system.file()) 傳回上述根目錄的所有子目錄。\n驗證system.file()的搜尋範圍包括子目錄和檔案名稱。下面的參數，一個是子目錄html一個是檔案INDEX，都傳回路徑名稱。\nsystem.file(\u0026quot;html\u0026quot;)\r[1] \u0026quot;C:/PROGRA~1/R/R-4.0.2/library/base/html\u0026quot;\rsystem.file(\u0026quot;INDEX\u0026quot;)\r[1] \u0026quot;C:/PROGRA~1/R/R-4.0.2/library/base/INDEX\u0026quot;\r\r\r哪個函數屬於哪個套件?\r可以直接打入函數名稱但是不要有括號，看最後一行:\nR.home \u0026lt;-\rfunction (component = \u0026quot;home\u0026quot;) {\rrh \u0026lt;- .Internal(R.home())\rswitch(component, home = rh, bin = if (.Platform$OS.type == \u0026quot;windows\u0026quot; \u0026amp;\u0026amp; nzchar(p \u0026lt;- .Platform$r_arch)) file.path(rh, component, p) else file.path(rh, component), share = if (nzchar(p \u0026lt;- Sys.getenv(\u0026quot;R_SHARE_DIR\u0026quot;))) p else file.path(rh, component), doc = if (nzchar(p \u0026lt;- Sys.getenv(\u0026quot;R_DOC_DIR\u0026quot;))) p else file.path(rh, component), include = if (nzchar(p \u0026lt;- Sys.getenv(\u0026quot;R_INCLUDE_DIR\u0026quot;))) p else file.path(rh, component), modules = if (nzchar(p \u0026lt;- .Platform$r_arch)) file.path(rh, component, p) else file.path(rh, component), file.path(rh, component))\r}\r\u0026lt;bytecode: 0x3183948\u0026gt;\r\u0026lt;environment: namespace:base\u0026gt;\r\r\rlibrary() vs require()\r\r測試debug\r\rRTVS debug\n\r互動R document\r\ry是局部變數。\nx \u0026lt;- 2\rg \u0026lt;- function() {\ry \u0026lt;- 1\rc(x, y)\r}\rg()\r[1] 2 1\ry\rError in eval(expr, envir, enclos):\r找不到物件 \u0026#39;y\u0026#39;\rrm(x, g)\r\r自製 package\r\rR 包製作\n\rpackage example\rR packages book on documentation\n(Hilary Parker’s is the classic), and if you’re in the second camp you probably already know what you’re doing (and if not, Hadley Wickham’s R packages book is an excellent and thorough guide).\r\r自製 package 範例\r本範例中package 只有一個data.frame,一個函數.\n\r執行完package.seleton()以後,必須在man子目錄中修改每個RD檔案,title裡面必須有內容。\n\r然後才執行build()\r\r範例需要的檔案： trees91.csv\nrm(list = ls())\rufc \u0026lt;- read.csv(\u0026#39;./resource/trees91.csv\u0026#39;)\rvol.m3 \u0026lt;- function(dbh.cm, height.m, multiplier = 0.5) {\rvol.m3 \u0026lt;- pi * (dbh.cm / 200) ^ 2 * height.m * multiplier\rreturn(vol.m3)\r}\rpackage.skeleton(name = \u0026quot;xxx\u0026quot;, path = \u0026quot;./packages\u0026quot;, force = TRUE)\rlibrary(devtools)\rbuild(\u0026quot;./packages/xxx\u0026quot;)\rbuild(\u0026quot;./packages/xxx\u0026quot;, binary = TRUE)\rWarning: package \u0026#39;dplyr\u0026#39; was built under R version 4.0.3\rWarning: package \u0026#39;devtools\u0026#39; was built under R version 4.0.3\r\r\rPacking up your data\rRstudio, package devtools , RMD 常識。\n\rWhat is a package?\r最小的套件一般包括一個根目錄，下有一個子目錄R\\，一個檔案 DESCRIPTION(package叫什麼名子，依賴於哪些其他套件).\n當載入套件的時候，會執行套件中位於子目錄R/中的.R。\n也可以包含資料\r資料一般位於子目錄 data/ 中。副檔名一般是.RData, .csv, .R。但是不受限制。\n有三個方法可以從套件存取資料。例如，\n利用::\r\rggplot2::diamonds %\u0026gt;% head()\rlibrary()\r\rlibrary(ggplot2)\rdiamonds %\u0026gt;% head()\rdata()\r\rdata(\u0026quot;diamonds\u0026quot;, package=\u0026quot;ggplot2\u0026quot;)\rls()\rnote: 2,3 的不同是，後者直接導入global空間。\n\r\r怎樣自訂套件\r利用devtools 建立骨架(package skeleton)\rWith (the slightly less easy way)\r建立套件骨架 devtools::create('~/mypackage').\r編輯 DESCRIPTION.\r程式碼放入子目錄 R/.\r\r\r\r工作流程\r測試\r如果目前的工作目錄就是套件根目錄，那麼加入資料和寫完程式碼以後，就可以使用指令devtools::load_all()，或是利用Rstudio 的按鍵。可以參考這裡。\n\rInstalled package workflow\r如果套件已經安裝，並且被其他的專案中使用，那麼程式碼變動的話，就必須3個步驟\nEdit code (or add data).\rRe-generate documentation and namespace: devtools::document('/path/to/pkg')\rInstall: devtools::install('/path/to/pkg').\rReload: devtools::reload(inst('pkg')).\r\r\r\rDocumentation and exports\r當套建立用指令library()載入時，預設上，所有的變數和函數都是 private 並不會被加入到 global環境。 而檔案NAMESPACE 則是用來指定要__public__的函數。\r如果不想要手動編輯檔案NAMESPACE，則可以使用特殊指令，產生如下的格式：\n#\u0026#39; Short description of what this does\r#\u0026#39;\r#\u0026#39; Longer description of what this does. Approximately a paragraph.\r#\u0026#39;\r#\u0026#39; @param x The first thing\r#\u0026#39; @param y The second thing.\r#\u0026#39; @return The thing that comes out of this function\r#\u0026#39;\r#\u0026#39; @export (do export this in NAMESPACE)\ra_function \u0026lt;- function(x,y) {\rreturn x+y\r}\r然後利用指令， devtools::document(), 會自動更新 NAMESPACE 並建立函數相關的說明檔。例如， man/a_function.Rd. 這樣這個函數，就像其他一般的函數一樣，可以求助，也可以在指令library()之後呼叫調用。\n如果只是自行測試，指令 devtools::load_all()就可以了。\r但是通常要散發，也就是利用 devtools::install() 安裝套件。\n\r\r資料放入套件\r最簡單的方法，直接將資料檔 (.RData, .csv, etc.)置於\rdata/子目錄。\n比較不會出錯的方式是利用usethis套件（取代舊版 devtools )。\r基本上用到兩個函數\ruserthis::use_data_raw()\ruserthis::use_data()\nusethis::use_data_raw()，會建立子目錄data-raw/:\n\r在data-raw/子目錄中，放進非R格式的資料，例如，csv檔案。\n\r處理資料的程式碼，任意Rscript 名稱，然後手動執行，（不會被自動執行）置於 data-raw/ ，如下：\nexperiment1 \u0026lt;-\rread.csv(\u0026#39;expt1.csv\u0026#39;) usethis::use_data(experiment1)\rThis saves data/experiment1.RData in your package directory (make sure you’ve setwd() to the package directory…)\n\r測試:\ndevtools::load_all()\rexperiment1 %\u0026gt;% head()\r## or use data() to put it in the global environment\rdata(\u0026quot;experiment1\u0026quot;)\r\r\r\r"
},
{
	"uri": "/rlang/plot01.html",
	"title": "Plot 01",
	"tags": [],
	"description": "繪圖",
	"content": "\r\r\r基本繪圖\rreference\rQuric R\n一般視窗作業系統的繪圖，會有一個抽象物件device在這個device上，有一個抽象物件canvas，和繪圖工具例如，水彩筆之類的抽象物件可以指定顏色，線條粗細等等。\n\rbasic\r基本繪圖函數，plot(),hist()\n㊙️ 怎樣快速查詢？\n\r??draw\r?plot : 參考其中的plot.default 查看圖形選項\r\rplot\r可能最常用的繪圖函數就是plot(),而這個函數比較常用的選項有：\r* type: 僅分佈點（預設）是否連線等基本模板。\r* lty: 線條樣式line style\r* lwd: 線條寬度line width\r* col:\r* pch: mark\n\r\rtype\rdescription\r\r\r\rp\rpoints\r\rl\rlines\r\ro\r重合的點和線段\r\rb, c\rb(both) 點+線,不重合 (如果是“c” 則沒有點)\r\rs, S\rstair steps\r\rh\rhistogram-like vertical lines\r\rn\rdoes not produce any points or lines\r\r\r\r資料點 符號\nThe parameter that sets the symbol is called pch (“point character”).\npch —\u0026gt; takes values between 0 to 24 to give 25 symbols.\nIn addiditon, 10 keyboard characters like \"*“,”+“,”o“,”@“,”#\" etc can be used.\nThe list of 25 symbols are given below:\n pch=0 square\rpch=1 circle\rpch=2 triangle point up\rpch=3 plus\rpch=4 cross\rpch=5 diamond\rpch=6 triangle point down\rpch=7 square cross\rpch=8 star\rpch=9 diamond plus\rpch=10 circle plus\rpch=11 triangles up and down\rpch=12 square plus\rpch=13 circle cross\rpch=14 square and triangle down\rpch=15 filled square blue\rpch=16 filled circle blue\rpch=17 filled triangle point up blue\rpch=18 filled diamond blue\rpch=19 solid circle blue\rpch=20 bullet (smaller circle)\rpch=21 filled circle red\rpch=22 filled square red\rpch=23 filled diamond red\rpch=24 filled triangle point up red\rpch=25 filled triangle point down red\rcex 資料點大小\ncex 表示放大倍數\n因此, cex = 1 is default size\ncex = 1.5 is 150% of default size\ncex = 0.5 is 50% of default size\n[Note : cex.axis –\u0026gt; scales the axis\ncex.lab —\u0026gt; scales the label\ncex.main –\u0026gt; scales main title\ncex.sub —\u0026gt; scales the subtitle ]\n線條型態\n lty = 0 or lty = \u0026quot;blank\u0026quot;\rlty = 1 or lty = \u0026quot;solid\u0026quot;\rlty = 2 or lty = \u0026quot;dashed\u0026quot;\rlty = 3 or lty = \u0026quot;dotted\u0026quot;\rlty = 4 or lty = \u0026quot;dotdash\u0026quot;\rlty = 5 or lty = \u0026quot;longdash\u0026quot;\rlty = 6 or lty = \u0026quot;twodash\u0026quot;\r顏色 col \ncol = “blue\ncol =”red\"\n\rcolors() 可用來查詢顏色\n\rreturns names of 657 colours that can bes used for this parameter.\ncol = “#A9F3BB” ——\u0026gt; colour corresponding to Red=A9, Green=F3, Blue=BB in hexadecimal representation.\n繪製向量 中的資料\nx \u0026lt;- c(1,3,4,7,8,9)\ry \u0026lt;- c(0,3,6,9,7,8)\rplot(x,y,main=\u0026#39;plot(x,y)\u0026#39;)\r繪製data.frame 中的資料\nplot(mtcars$wt, mtcars$mpg) abline(lm(mtcars$mpg~mtcars$wt))\rtitle(\u0026quot;Regression of MPG on Weight\u0026quot;)\rattach(mtcars)\rplot(wt, mpg) abline(lm(mpg~wt))\rtitle(\u0026quot;Regression of MPG on Weight\u0026quot;)\rplot()函數，新建視窗然後畫出 weight vs. miles per gallon.\nabline() 不會開啟新視窗做圖，abline()的語法如下:\nabline(a = NULL, b = NULL, h = NULL, v = NULL, reg = NULL,coef = NULL, untf = FALSE, …)\n代表的意思是畫出一條直線a+bx ，其中a代表截距常數，b則是斜率常數。例如\nY=2X+1，則對應的函數為 abline(a=1,b=2) 。\nplot(sin, -pi, 2*pi) \r\r更多\rrequire(stats) # for lowess, rpois, rnorm\rsummary(cars)\r speed dist Min. : 4.0 Min. : 2 1st Qu.:12.0 1st Qu.: 26 Median :15.0 Median : 36 Mean :15.4 Mean : 43 3rd Qu.:19.0 3rd Qu.: 56 Max. :25.0 Max. :120 \rplot(cars)\rlines(lowess(cars))\r\rHistograms\r函數hist(x)：其中x是一個數字向量，\n\r選項freq=FALSE 用來畫出 probability densities 而不是次數 frequencies.\n\r選項：breaks= ## 則是控制分成幾份。\r\rSimple Histogram\nhist(mtcars$mpg)\r分成12份，顏色紅色。\nhist(mtcars$mpg, breaks=12, col=\u0026quot;red\u0026quot;)\r自行給定分割點\nhist(mtcars$mpg, breaks=c(4,5,12,50), col=\u0026quot;red\u0026quot;)\rAdd a Normal Curve\rx \u0026lt;- mtcars$mpg h\u0026lt;-hist(x, breaks=10, col=\u0026quot;red\u0026quot;, xlab=\u0026quot;Miles Per Gallon\u0026quot;, main=\u0026quot;Histogram with Normal Curve\u0026quot;) xfit\u0026lt;-seq(min(x),max(x),length=40) yfit\u0026lt;-dnorm(xfit,mean=mean(x),sd=sd(x)) yfit \u0026lt;- yfit*diff(h$mids[1:2])*length(x) lines(xfit, yfit, col=\u0026quot;blue\u0026quot;, lwd=2)\rhint:\rh: 次數分配圖,又\n\\(pdf=\\frac{\\frac{n}{N}}{bin \\quad width}\\)\n所以\n\\(n=pdf\\times N \\times (bin \\quad width)\\)\nHistograms can be a poor method for determining the shape of a distribution because it is so strongly affected by the number of bins used.\nh\r$breaks\r[1] 10 12 14 16 18 20 22 24 26 28 30 32 34\r$counts\r[1] 2 1 7 3 5 5 2 2 1 0 2 2\r$density\r[1] 0.0312 0.0156 0.1094 0.0469 0.0781 0.0781 0.0312 0.0312 0.0156 0.0000\r[11] 0.0312 0.0312\r$mids\r[1] 11 13 15 17 19 21 23 25 27 29 31 33\r$xname\r[1] \u0026quot;x\u0026quot;\r$equidist\r[1] TRUE\rattr(,\u0026quot;class\u0026quot;)\r[1] \u0026quot;histogram\u0026quot;\r\r\rKernel Density Plot\r核密度畫圖(Kernal density plots) 用來觀察一個變量，比較有有效率，指令如：plot(density(x)) 其中x 是一個數字向量。\nd \u0026lt;- density(mtcars$mpg) # returns the density data plot(d) # plots the results\rFilled Density Plot\rd \u0026lt;- density(mtcars$mpg)\rplot(d, main=\u0026quot;Kernel Density of Miles Per Gallon\u0026quot;)\rpolygon(d, col=\u0026quot;red\u0026quot;, border=\u0026quot;blue\u0026quot;)\r\r\rSaving Graphs\r可以利用menu存檔，例如File -\u0026gt; Save As.\r也可以利用函數：\n\r\rFunction\rOutput to\r\r\r\rpdf(“mygraph.pdf”)\rpdf file\r\rwin.metafile(“mygraph.wmf”)\rwindows metafile\r\rpng(“mygraph.png”)\rpng file\r\rjpeg(“mygraph.jpg”)\rjpeg file\r\rbmp(“mygraph.bmp”)\rbmp file\r\rpostscript(“mygraph.ps”)\rpostscript file\r\r\r\r\r\r多個圖和疊圖\r傻瓜指令例如 (plot, hist, boxplot, etc.)基本上會開啟新視窗，然後畫圖。這裡討論幾種自行控制的方法：\n多視窗(multiple windows)、覆圖(combining figure) 和疊圖(overlay)討論。\n多視窗\r開多視窗的方法根據OS而不同，如下：\n\r\rFunction\rPlatform\r\r\r\rwindows()\rWindows\r\rX11()\rUnix\r\rquartz()\rMac\r\r\r\r要關閉視窗，可以用函數dev.off()\n如果要知道目前的視窗是那一個，可以參考 dev.cur()。\rNote:\r如果目前有多個圖窗，則一直呼叫這個函數dev.off()，會依次關閉視窗，直到函數傳回NULL。\n驗證上面的說法可以利用\nhist(mtcars$mpg)\rdev.cur()\rpng 2 \rhist(mtcars$mpg)\rdev.cur()\rpng 2 \r上面的範例，可以看到圖裝置的編號都是2，也就是多個圖在一個device上。。\nhist(mtcars$mpg)\rdev.cur()\rpng 2 \rhist(mtcars$mpg)\rdev.cur()\rpng 2 \rdev.off()\rnull device 1 \r討論下面的輸出結果，：\nhint: 無法在rmarkdown 執行？確認，在rscript中執行正常。\nif(.Platform$OS.type==\u0026quot;windows\u0026quot;) windows() else X11()\rhist(mtcars$mpg)\rdev.cur()\rif(.Platform$OS.type==\u0026quot;windows\u0026quot;) windows() else X11()\rhist(mtcars$mpg)\rdev.cur()\r\r\r測試,練習\nplot.new() # 清圖形,直接在目前畫布塗上底色\rdev.new() #新視窗\rplot(1:1)\rdev.new()\rplot(2,2)\rdev.set(dev.prev()) # go back to first\rtitle(main=\u0026quot;test dev 1\u0026quot;)\rdev.set(dev.next()) # go to second\rtitle(main=\u0026quot;test dev 2\u0026quot;)\r\r合併 Plots\rpar()\rabout par()\r同時顯示多個plot的結果，可以利用函數par() or layout( )。\n函數par( )的選項有：\nmfrow=c(nrows, ncols) 填plot的方向為橫行。\nmfcol=c(nrows, ncols) 填入的方向為直行。\n在console執行(課堂執行)\nx\u0026lt;-par() 會把目前的參數拿出存到變數x。 如果par() 放了參數,會在設定完新參數以後，傳回舊紀錄(一個原因是,便於以後再還原)。在這個過程中，有些參數是無法修改的，因此儲存到變數x。\r也就是說no.readonly是說在x中不要目前設定中的唯讀參數\n✔️範例:\r線條形式type的幾種基本類型\nx \u0026lt;- c(1,3,4,7,8,9)\ry \u0026lt;- c(0,3,6,9,7,8)\rpar(mfrow=c(2,3))\rplot(x,y,main=\u0026#39;plot(x,y)\u0026#39;)\rplot(x,y,type=\u0026quot;l\u0026quot;,main=\u0026quot;plot(x,y,type=\u0026#39;l\u0026#39;)\u0026quot;)\rplot(x,y,type=\u0026quot;b\u0026quot;,main=\u0026quot;plot(x,y,type=\u0026#39;b\u0026#39;)\u0026quot;)\rplot(x,y,type=\u0026quot;o\u0026quot;,main=\u0026quot;plot(x,y,type=\u0026#39;o\u0026#39;)\u0026quot;)\rplot(x,y,type=\u0026quot;s\u0026quot;,main=\u0026quot;plot(x,y,type=\u0026#39;s\u0026#39;)\u0026quot;)\rplot(x,y,type=\u0026quot;h\u0026quot;,main=\u0026quot;plot(x,y,type=\u0026#39;h\u0026#39;)\u0026quot;)\r範例\nattach(mtcars)\rattach(mtcars)\rpar(mfrow=c(2,2))\rplot(wt,mpg, main=\u0026quot;Scatterplot of wt vs. mpg\u0026quot;)\rplot(wt,disp, main=\u0026quot;Scatterplot of wt vs disp\u0026quot;)\rhist(wt, main=\u0026quot;Histogram of wt\u0026quot;)\rboxplot(wt, main=\u0026quot;Boxplot of wt\u0026quot;)\r# attach(mtcars)\rpar(mfrow=c(1,3)) hist(wt)\rhist(mpg)\rhist(disp)\r#dev.off()\rnote:\rpar(mar) 列出margin\npar(mar=c(1,1,1,1)) 更動margin\nplot.new()常發生的錯誤 : figure margins too large\n有兩個原因：1 是畫布過小 2，當前畫布的上下左右距離過大\r這裡看看如何解第二個發生原因\n默認的畫布上邊款的距離為：\r預設為 c(5, 4, 4, 2) + 0.1. 對應 c(bottom, left, top, right)，也就是順時針，由下到右結束一圈。\n我們可以將其設置為0，同時將目前的設定紀錄，後面程式的第一行\nop \u0026lt;- par(mar = rep(0, 4)) # op 會紀錄之前的margin = 5.1 4.1 4.1 2.1 plot.new() # 畫圖 par(op) # 改回原先的margin \r\r是不是有需要寫個新函數，用來重設裝置參數？\r下面這個函數resetPar()重新設定device: 主要試看這一行:par(no.readonly = TRUE)。\r意思是說，不要傳回 readonly的設定。\nresetPar \u0026lt;- function() {\rdev.new() #重新開始一個裝置\rop \u0026lt;- par(no.readonly = TRUE)#因為是新的，所以裡面的設定都是預設值\rdev.off()# 只是把之前的新裝置關掉\rop # 傳回預設值\r}\r其他用法\rpar() # view current settings\nopar \u0026lt;- par() # make a copy of current settings\npar(col.lab=“red”) # red x and y labels\nhist(mtcars$mpg) # create a plot with these new settings\npar(opar) # restore original settings\n\r更多的圖形控制: 在散佈圖中加入boxplot\npar(mar=rep(2,4))\r# 整個圖的座標，想成左下角(0,0)右上角(1,1)\rpar(fig=c(0,0.8,0,0.8))#左下(0,0)右上(0.8,0.8)\r#左下(x1,y1)右上(x2,y2) =\u0026gt; c(x1,x2,y1,y2)\rplot(mtcars$wt, mtcars$mpg, xlab=\u0026quot;Car Weight\u0026quot;,\rylab=\u0026quot;Miles Per Gallon\u0026quot;)\rpar(fig=c(0,0.8,0.55,1), new=TRUE)\rboxplot(mtcars$wt, horizontal=TRUE, axes=FALSE)\rpar(fig=c(0.65,1,0,0.8),new=TRUE)\rboxplot(mtcars$mpg, axes=FALSE)\rmtext(\u0026quot;Enhanced Scatterplot\u0026quot;, side=3, outer=TRUE, line=-3)\r\r\rRMD 中的圖\r並排顯示圖形,如下:\nboxplot(1:10)\rplot(rnorm(10))\r\r練習\r練習1\n讓下面兩個圖不重疊\rr boxplot(mtcars$wt, axes=FALSE) par(new=TRUE) boxplot(mtcars$mpg, axes=FALSE)\n練習2\n讓disp,mpg 的histogram 疊在一起:\n練習3\n測試這篇文章\nlayout()\r函數 layout( ) 的使用方法為 layout(mat) 其中\rmat 的元素用來指定圖形號碼。例如分成4個格子,順序為左右上下(byrow=TRUE)\n如layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE)) 對應如下表\n\r\r1\r1\r\r2\r3\r\r\r\r# One figure in row 1 and two figures in row 2\r#attach(mtcars)\rlayout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))\rhist(wt)\rhist(mpg)\rhist(disp)\r#dev.off()\r在layout()函數中，也可以更改圖形大小，其參數 為：\rwidths= 數字向量，用來代表column 寬度\rheights= 數字向量，用來代表row 高度\nnote:Relative widths are specified with numeric values. Absolute widths (in centimetres) are specified with the lcm() function.\n\r\r疊圖\r有些繪圖指令的選項，可以利用add=T。\n💥 plot指令不支援add=T\ncurve( dnorm(x,0,1), -5 , 5, lwd=1, lty=1)\rcurve( dnorm(x,0,2),add=TRUE, lwd=2, lty=2)\rcurve( dnorm(x,0,3) , add=TRUE, lwd=3, lty=3)\r# Add the legend\rlegend( \u0026quot;topright\u0026quot;,c(\u0026quot;sigma=1\u0026quot;,\u0026quot;sigma=2\u0026quot;,\u0026quot;sigma=3\u0026quot;) , lwd=1:3, lty=1:3)\r\r\r分組畫圖\rComparing Groups VIA Kernal Density\rThe sm.density.compare( ) function in the sm package allows you to superimpose the kernal density plots of two or more groups. The format is sm.density.compare(x, factor) where x is a numeric vector and factor is the grouping variable.\nCompare MPG distributions for cars with 4,6, or 8 cylinders\rlibrary(sm)\rattach(mtcars)\r#create value labels cyl.f \u0026lt;- factor(cyl, levels= c(4,6,8),\rlabels = c(\u0026quot;4 cylinder\u0026quot;, \u0026quot;6 cylinder\u0026quot;, \u0026quot;8 cylinder\u0026quot;)) #plot densities sm.density.compare(mpg, cyl, xlab=\u0026quot;Miles Per Gallon\u0026quot;)\rtitle(main=\u0026quot;MPG Distribution by Car Cylinders\u0026quot;)\r#add legend via mouse click\rcolfill\u0026lt;-c(2:(2+length(levels(cyl.f)))) legend(locator(1), levels(cyl.f), fill=colfill)\r\r\r\r\r"
},
{
	"uri": "/topic/rmd/git-book-note.html",
	"title": "git book note",
	"tags": [],
	"description": "基本語法",
	"content": "\r\r\rgitbook introduction\r3個地方需要注意:\r_output.yml\r_bookdown.yml\rindex.rmd\n_output.yml:\rbookdown::gitbook:\rcss: style.css\rsplit_by: chapter\rconfig:\rtoc:\rcollapse: subsection\rbefore: |\r\u0026lt;li\u0026gt;\u0026lt;a href=\u0026quot;./\u0026quot;\u0026gt;A Minimal Bookdown Book\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\rafter: |\r\u0026lt;li\u0026gt;\u0026lt;a href=\u0026quot;https://github.com/rstudio/bookdown\u0026quot; target=\u0026quot;blank\u0026quot;\u0026gt;Published with bookdown\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\rbookdown::pdf_book:\rincludes:\rin_header: preamble.tex\rlatex_engine: xelatex\rcitation_package: natbib\rbookdown::epub_book:\rstylesheet: style.css\r\r上面要修改的部分只有書名(title of book)\n\r_bookdown.yml:\r\rbook_filename: \u0026quot;bookdown-xx\u0026quot;\rchapter_name: \u0026quot;Chapter \u0026quot;\rrepo: https://github.com/seankross/bookdown-start\routput_dir: docs\rrmd_files: [\u0026quot;index.Rmd\u0026quot;, \u0026quot;01-Introduction.Rmd\u0026quot;, \u0026quot;02-Diving-In.Rmd\u0026quot;]\rclean: [packages.bib, bookdown.bbl]\rnew_session: yes\r\r\r欄位 book_filename :書名(PDF 或EPUB)例如本例的書名為bookdown_xx.pdf。\n\r欄位 chapter_name:每個章節的前綴,例如 01-Introduction.Rmd 第一個H1 標籤為 # Introduction ,會變成 “Chapter 1 Introduction”。\n\r欄位 repo field just designates a GitHub repository associated with this book but this is not a required field.\n\r欄位 output_dir: HTML檔案的輸出位置。同時也是pdf檔案的輸出位置。如果沒有設定這個欄位,那麼預設輸出位置是 _book/ 。\n\r欄位 rmd_files:這是選擇性的,如果沒有設定,那麼專案子目錄下的所有RMD都會被rendered。\n\r欄位 new_session: 這也是選擇性的。如果是 new_session: yes 那麼每個RMD都在新的R連結(session)描繪(rendered)，否則在同一個session.\r\r\rnew_session 注意事項\r但是我注意到,new_session 設定為yes的時候,md檔案會被留下,而設定為no的時候,則不會。\n同時,在new_session=no的時候,可以指定子目錄中的RMD檔案。\n例如\nlanguage:\rui:\rchapter_name: \u0026quot;Chapter \u0026quot;\rnew_session: no\rafter_chapter_script: clear_vars_and_pkgs.R\rrmd_files:\r- \u0026quot;index.Rmd\u0026quot;\r- \u0026quot;my_sub_dir/chapter1.Rmd\u0026quot;\r- \u0026quot;my_sub_dir/chapter2.Rmd\u0026quot;\r注意:\rnew_session=yes 的時候,會產生md檔案,如果上傳到Github會被jekyll解讀\r要避免這個情況發生,推測兩個解法\r1. (OK) 在docs中放入.nojkeyll 這個檔案(在bash中執行指令 touch .nojkeyll)\n1. (不確定)在_bookdown.yml 的欄位after_chapter_script:中指定執行指令殺掉所有md檔案\n\rindex.rmd\r另外一個相關設定的地方是index.rmd 。這個檔案用來設定書的cover, 和前幾頁。因此Preface 和簡介可以放在這個檔案。這個檔案的前幾行通常是有關yaml的一些設定,例如\n---\rtitle: \u0026quot;XXX title\u0026quot;\rauthor: \u0026quot;len jwj cen\u0026quot;\rdate: \u0026quot;2018-1-1\u0026quot;\rsite: bookdown::bookdown_site\rdocumentclass: book\r#bibliography: [book.bib]\r#biblio-style: apalike\rlink-citations: yes\rgithub-repo: seankross/bookdown-start\rurl: \u0026#39;http\\://seankross.com/bookdown-start/\u0026#39;\rdescription: \u0026quot;gitbook\u0026#39;s simple setup\u0026quot;\r---\r應該更改的有 title, author, date, github-repo, url, and description 欄位。\r其他設定有 cover-image:圖檔位置。\nsite: bookdown::bookdown_site\r有這行就不用設定_site.yml。\n\r\r執行\rbookdown::render_book(“index.Rmd”)\n\r加入:Travis\r使用 Travis 產生書一需要3個檔案,這三個黨要放在github repo的根目錄:\r3個檔案的前2個,可以直接從這裡複製:\r### .Rbuildignore\n^.*.Rproj$\r^.Rproj.user$\r^.travis.yml$\n.travis.yml:\rlanguage: r\rcache: packages\rscript:\r- Rscript -e \u0026#39;bookdown::render_book(\u0026quot;index.rmd\u0026quot;)\u0026#39;\r\rDESCRIPTION\r要讓travis誤認為package 所以,只是放著,內容不管\nPackage: placeholder\rTitle: Does not matter.\rVersion: 0.0.1\rImports: bookdown\rRemotes: rstudio/bookdown\r\r\r\r"
},
{
	"uri": "/topic/rmd/rmd_pdf.html",
	"title": "Rmd pdf",
	"tags": [],
	"description": "基本語法",
	"content": "\r\r\r產生PDF 文件\r** 中文字型問題 ** 參考\nupdate.packages(ask = FALSE, checkBuilt = TRUE) tinytex::tlmgr_update()\r中文：\r不要管那麼多網路上講的，就\ndevtools::install_github(c(\u0026#39;rstudio/rmarkdown\u0026#39;, \u0026#39;yihui/tinytex\u0026#39;))\rtinytex::install_tinytex()\r大部分問題都是中文自行沒有安裝或指定錯誤的問題：\r在RMD檔案開頭指定\n---\rtitle: \u0026quot;xxx\u0026quot;\rauthor: \u0026quot;xxx\u0026quot;\rdate: \u0026quot;2020年8月10日\u0026quot;\rheader-includes:\r- \\usepackage{xeCJK}\r- \\setCJKmainfont{標楷體}\routput:\rhtml_document: toc: yes\rdf_print: paged\rword_document:\rtoc: yes\rpdf_document: latex_engine: xelatex toc: yes\r---\rOverview\r參考\n整個轉換過程如下：\rRmarkdown -\u0026gt; markdown -\u0026gt;pandoc-\u0026gt;pdf,html\n\rmeta data 上的pdf 設定,常見版本\r---\rtitle: \u0026quot;Habits\u0026quot;\rauthor: lendjwjcen date: 3/1/2017\routput: pdf_document\r---\r加入目錄\r---\rtitle: \u0026quot;Habits\u0026quot;\routput:\rpdf_document:\rtoc: true\rtoc_depth: 2\r---\rTOC深度預設是3。\ryaml的註解符號是# 。\n如果要章節號碼,則利用number_sections option:\n---\rtitle: \u0026quot;Habits\u0026quot;\routput:\rpdf_document:\rtoc: true\rnumber_sections: true\r---\r\r圖形選項\rfig_width 和 fig_height 控制圖形的寬度和高度 (6 x 4.5 is used by default)\nfig_crop 控制 pdfcrop utility (如果有)是否自動使用來修剪圖型(default). 如果我們的圖形設備是 postscript, 建議關掉這個選項。.\nfig_caption 控制是否有圖型標題(預設是否)\ndev 控制用來描繪圖型的設備 (defaults to pdf)\n例如:\n---\rtitle: \u0026quot;Habits\u0026quot;\routput:\rpdf_document:\rfig_width: 7\rfig_height: 6\rfig_caption: true\r---\r\rData Frame Printing\rdf-print 參數可以用來改進data frame的輸出,選項包括:\n選項描述\rdefault: 利用 print.data.frame 函數\nkable 其實利用的是 knitr::kable 函數\ntibble 則利用 tibble::print.tbl_df 函數。.\n例如:\n---\rtitle: \u0026quot;Habits\u0026quot;\routput:\rpdf_document:\rdf_print: kable\r---\r\rSyntax Highlighting\r打光型態有 “default”, “tango”, “pygments”, “kate”, “monochrome”, “espresso”, “zenburn”, and “haddock” 如果不要打光,則設定null:\n例如:\n---\rtitle: \u0026quot;Habits\u0026quot;\routput:\rpdf_document:\rhighlight: tango\r---\r\rLaTeX Options\r有關LaTeX選項的設定位置並不是在output: pdf_document的後續段落,而是在最頂層。\r例如:\n---\rtitle: \u0026quot;Crop Analysis Q3 2013\u0026quot;\routput: pdf_document\rfontsize: 11pt\rgeometry: margin=1in\r---\r\r在RMD中有RMD\r```{block2, type=\u0026#39;FOO\u0026#39;}\rSome text for this block [@citation-key].\r- a list item\r- another item\r- end the list with a blank line\r```\r\r其他\rAvailable metadata variables include:\n\r\r\r\rVariable\rDescription\r\r\r\rpapersize\rpaper size, e.g. letter, A4\r\rlang\rDocument language code\r\rfontsize\rFont size (e.g. 10pt, 11pt, 12pt)\r\rdocumentclass\rLaTeX document class (e.g. article)\r\rclassoption\rOption for documentclass (e.g. oneside); may be repeated\r\rgeometry\rOptions for geometry class (e.g. margin=1in); may be repeated\r\rlinkcolor, urlcolor, citecolor\rColor for internal, external, and citation links (red, green, magenta, cyan, blue, black)\r\rthanks\rspecifies contents of acknowledgments footnote after document title.\r\r\r\r更多控制可以在 here.找到\n\r\rLaTeX Packages for Citations\rcitation的處理,預設是經由 pandoc-citeproc(不僅PDF文件,還有HTML), 但是對於PDF來講,最好還是使用 LaTeX 來處理例如 natbib or biblatex。設定方法僅僅是設定 citation_package 為 natbib 或 biblatex, 例如:\n---\routput:\rpdf_document:\rcitation_package: natbib\r---\r\r\r中文\r建立中文PDF 需要安裝 TeX版本可以使用tinytex。\ninstall.packages(\u0026#39;tinytex\u0026#39;)\rtinytex::install_tinytex()\r\rRstudio chinese\rcd /usr/lib/rstudio/bin\rsudo mkdir Qt\rsudo mv libQt5* Qt\rsudo mv qt.conf Qt\rLaTeX Engine\rRStudio 預設使用 pdflatex. 我們可以使用 latex_engine 選項設定其他引擎例如, “pdflatex”, “xelatex”, and “lualatex”. 而中文的引擎範例:\n---\rtitle: \u0026quot;Habits\u0026quot;\routput:\rpdf_document:\rlatex_engine: xelatex\r---\r但是只有這樣還不夠，因為我們需要中文字型,這時可以利用indclude選項:\n### Include\r要在文件本身(body)前面後面加上一些內容,可以利用includes 選項:\n---\rtitle: \u0026quot;Habits\u0026quot;\routput:\rpdf_document:\rincludes:\rin_header: header.tex\rbefore_body: doc_prefix.tex\rafter_body: doc_suffix.tex\r---\r最後的中文設定可以是這樣\n\r---\rtitle: \u0026quot;Untitled\u0026quot;\rauthor: \u0026quot;lin\u0026quot;\rdate: \u0026quot;\u0026quot;\routput:\rpdf_document: latex_engine: xelatex includes:\rin_header: header.tex \rheader.tex的內容(%是註解):\n\\usepackage{xeCJK}\r% microsoft windows\r% linux font\r\\setCJKmainfont{AR PL UMing TW}\r% microsoft font\r% \\setCJKmainfont{微軟正黑體}\r% \\setCJKmainfont{Microsoft YaHei}\r%\\setmainfont{Georgia} % 設定英文字型\r%\\setromanfont{Georgia} % 字型\r%\\setmonofont{Courier New}\r\r\r註記\r有關一些中文常常發生的錯誤：\n\r無法解決字型錯誤:Package fontspec Error: The font “Inconsolata” cannot be found\r改用其他字形，例如使用指令\r\rfc-list :lang=zh-tw fullname\r新系統例如linux安裝完以後，如果要測試中文是否可用於產生pdf，最好利用一些短文。\r### 測試中文轉pdf\r下列的檔案名稱為x1.tx,測試的時候，可以利用tinytex::xelatex(x1.tex) 用來驗證是否中文可以轉pdf。\n這裡先利用tex小檔案測試xelatex是否功能正常。\n\\documentclass{book}\r\\usepackage{xeCJK}\r\\setCJKmainfont{AR PL UMing TW}\r\\begin{document}\r早安，台灣\r$$b^2-4\\times a \\times c$$\rnight TeXing.\r\\end{document}\r\r\rCustom Templates\r也可以利用選項template 取代pandoc 模板 :\n---\rtitle: \u0026quot;Habits\u0026quot;\routput:\rpdf_document:\rtemplate: quarterly_report.tex\r---\r參考 pandoc templates 上的說明。或者參考 default LaTeX template 中的範例。\n\rPandoc Arguments\r如果在YAML中找不到相關於pandoc的選項,則可以直接利用 pandoc_args. 例如:\n---\rtitle: \u0026quot;Habits\u0026quot;\routput:\rpdf_document:\rpandoc_args: [\r\u0026quot;--no-tex-ligatures\u0026quot;\r]\r---\r\r\r共用設定\r多個文件如果都有一樣的輸出格式,則可以利用檔案 _output.yaml 例如:\n**_output.yaml**\npdf_document:\rtoc: true\rhighlight: zenburn\r做為文件中的YAML的比對,可以發現,只是把output: 的後面整個層級搬到_output.yaml。\n---\rtitle: \u0026quot;Habits\u0026quot;\routput:\rpdf_document:\rincludes:\rin_header: header.tex\rbefore_body: doc_prefix.tex\rafter_body: doc_suffix.tex\r---\r\r客製block\r\r客製block參考([git](https://github.com/rstudio/bookdown/blob/master/inst/examples/02-components.Rmd))\r\r相關tex\r\r\r解釋範例\r資源子目錄下可以找到相關專案(customizedBlock)。\n在RMD中打入\n- RMD檔案內容 :\n\r::: xxx :::\r- xxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r- yyyy yyyyyyyyyyyyyyyyyyyyy\r\r會在產生的tex產生一個environment xxx\n\r檔案preamble.tex 內容:\r\r\\usepackage{booktabs}\r\\makeatletter\r\\newenvironment{kframe}{%\r\\medskip{}\r\\setlength{\\fboxsep}{.8em}\r\\def\\at@end@of@kframe{}%\r\\ifinner\\ifhmode%\r\\def\\at@end@of@kframe{\\end{minipage}}%\r\\begin{minipage}{\\columnwidth}%\r\\fi\\fi%\r\\def\\FrameCommand##1{\\hskip\\@totalleftmargin \\hskip-\\fboxsep\r\\colorbox{shadecolor}{##1}\\hskip-\\fboxsep\r% There is no \\\\@totalrightmargin, so:\r\\hskip-\\linewidth \\hskip-\\@totalleftmargin \\hskip\\columnwidth}%\r\\MakeFramed {\\advance\\hsize-\\width\r\\@totalleftmargin\\z@ \\linewidth\\hsize\r\\@setminipage}}%\r{\\par\\unskip\\endMakeFramed%\r\\at@end@of@kframe}\r\\makeatother\r\\newenvironment{xxx}\r{\\begin{kframe}}\r{\\end{kframe}}\r\\newenvironment{whisper}\r{\\begin{kframe}}\r{\\end{kframe}}\r\r此時pandoc 利用 output.yml PDF才有這個自訂BLOCK。\n\r檔案(output.yml)內容:\n\r\rbookdown::pdf_book:\rincludes:\rin_header: preamble.tex\rlatex_engine: xelatex\rcitation_package: natbib\rkeep_tex: yes\rkeep_md: yes\r#pandoc_args: [\u0026quot;--lua-filter=./texclass.lua\u0026quot;]\r上面的內容中,pandoc_args 無作用。\n\r檔案texclass.lua內容\r\rfunction Div(el)\rlocal kls, _ = el.classes:find_if(function (s) return string.match(s, \u0026quot;^tex%-\u0026quot;) end)\rif kls then\rlocal texkls = kls:gsub(\u0026quot;^tex%-\u0026quot;,\u0026quot;\u0026quot;,1)\rif texkls then\rreturn { pandoc.RawBlock(\u0026quot;latex\u0026quot;, \u0026quot;\\\\begin{\u0026quot; .. texkls .. \u0026quot;}\u0026quot;),\rel,\rpandoc.RawBlock(\u0026quot;latex\u0026quot;, \u0026quot;\\\\end{\u0026quot; .. texkls .. \u0026quot;}\u0026quot;)}\rend\rend\rend\r\r\r\r"
},
{
	"uri": "/rlang/tidybasic01.html",
	"title": "TidyBasic01",
	"tags": [],
	"description": "基本語法",
	"content": "\r\r\r需要安裝babynames,ggplot2\rTidy Basic 01\rrequire(tidyr)\rrequire(dplyr) # data_frame\rFrom http://stackoverflow.com/questions/1181060\nrequire(tidyr)\rLoading required package: tidyr\rWarning: package \u0026#39;tidyr\u0026#39; was built under R version 4.0.3\rrequire(dplyr) # data_frame\rLoading required package: dplyr\rWarning: package \u0026#39;dplyr\u0026#39; was built under R version 4.0.3\r\rAttaching package: \u0026#39;dplyr\u0026#39;\rThe following objects are masked from \u0026#39;package:stats\u0026#39;:\rfilter, lag\rThe following objects are masked from \u0026#39;package:base\u0026#39;:\rintersect, setdiff, setequal, union\rstocks \u0026lt;- data_frame(\rtime = as.Date(\u0026#39;2009-01-01\u0026#39;) + 0:9,\rX = rnorm(10, 0, 1),\rY = rnorm(10, 0, 2),\rZ = rnorm(10, 0, 4)\r)\rWarning: `data_frame()` is deprecated as of tibble 1.1.0.\rPlease use `tibble()` instead.\rThis warning is displayed once every 8 hours.\rCall `lifecycle::last_warnings()` to see where this warning was generated.\rdset1 \u0026lt;- head(stocks)\rknitr::kable(dset1, format = \u0026quot;html\u0026quot;)\r\r\r\rtime\r\rX\r\rY\r\rZ\r\r\r\r\r\r2009-01-01\r\r-1.400\r\r-1.11\r\r1.87\r\r\r\r2009-01-02\r\r0.255\r\r1.26\r\r1.45\r\r\r\r2009-01-03\r\r-2.437\r\r4.13\r\r-5.22\r\r\r\r2009-01-04\r\r-0.006\r\r-3.26\r\r2.95\r\r\r\r2009-01-05\r\r0.622\r\r1.02\r\r7.55\r\r\r\r2009-01-06\r\r1.148\r\r-3.73\r\r-0.39\r\r\r\r\rgather(stocks, stock, price, -time)\r# A tibble: 30 x 3\rtime stock price\r\u0026lt;date\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt;\r1 2009-01-01 X -1.40 2 2009-01-02 X 0.255 3 2009-01-03 X -2.44 4 2009-01-04 X -0.00557\r5 2009-01-05 X 0.622 6 2009-01-06 X 1.15 7 2009-01-07 X -1.82 8 2009-01-08 X -0.247 9 2009-01-09 X -0.244 10 2009-01-10 X -0.283 # ... with 20 more rows\rstocks %\u0026gt;% gather(stock, price, -time)\r# A tibble: 30 x 3\rtime stock price\r\u0026lt;date\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt;\r1 2009-01-01 X -1.40 2 2009-01-02 X 0.255 3 2009-01-03 X -2.44 4 2009-01-04 X -0.00557\r5 2009-01-05 X 0.622 6 2009-01-06 X 1.15 7 2009-01-07 X -1.82 8 2009-01-08 X -0.247 9 2009-01-09 X -0.244 10 2009-01-10 X -0.283 # ... with 20 more rows\rdset1 \u0026lt;- head(stocks)\rknitr::kable(dset1, format = \u0026quot;html\u0026quot;)\r\r\r\rtime\r\rX\r\rY\r\rZ\r\r\r\r\r\r2009-01-01\r\r-1.400\r\r-1.11\r\r1.87\r\r\r\r2009-01-02\r\r0.255\r\r1.26\r\r1.45\r\r\r\r2009-01-03\r\r-2.437\r\r4.13\r\r-5.22\r\r\r\r2009-01-04\r\r-0.006\r\r-3.26\r\r2.95\r\r\r\r2009-01-05\r\r0.622\r\r1.02\r\r7.55\r\r\r\r2009-01-06\r\r1.148\r\r-3.73\r\r-0.39\r\r\r\r\r設定css\nwriteLines(\u0026quot;td, th { padding : 6px } th { background-color : brown ; color : white; border : 1px solid white; } td { color : brown ; border : 1px solid brown }\u0026quot;, con = \u0026quot;tableStyle.css\u0026quot;)\rstocks \u0026lt;- data_frame(\rtime = as.Date(\u0026#39;2009-01-01\u0026#39;) + 0:9,\rX = rnorm(10, 0, 1),\rY = rnorm(10, 0, 2),\rZ = rnorm(10, 0, 4)\r)\rdset1 \u0026lt;- head(stocks)\rknitr::kable(dset1, format = \u0026quot;html\u0026quot;)\r\r\r\rtime\r\rX\r\rY\r\rZ\r\r\r\r\r\r2009-01-01\r\r0.935\r\r0.140\r\r3.448\r\r\r\r2009-01-02\r\r0.176\r\r-1.278\r\r-0.973\r\r\r\r2009-01-03\r\r0.244\r\r-0.100\r\r-0.824\r\r\r\r2009-01-04\r\r1.624\r\r-0.503\r\r0.077\r\r\r\r2009-01-05\r\r0.112\r\r0.890\r\r0.118\r\r\r\r2009-01-06\r\r-0.134\r\r5.511\r\r2.199\r\r\r\r\rdemo\u0026lt;-gather(stocks, stock, price, -time)\rdset1 \u0026lt;- head(demo)\rknitr::kable(dset1, format = \u0026quot;html\u0026quot;)\r\r\r\rtime\r\rstock\r\rprice\r\r\r\r\r\r2009-01-01\r\rX\r\r0.935\r\r\r\r2009-01-02\r\rX\r\r0.176\r\r\r\r2009-01-03\r\rX\r\r0.244\r\r\r\r2009-01-04\r\rX\r\r1.624\r\r\r\r2009-01-05\r\rX\r\r0.112\r\r\r\r2009-01-06\r\rX\r\r-0.134\r\r\r\r\rlong and wide data\rgather: wide to long\rwide \u0026lt;- data_frame(\rtime = as.Date(\u0026#39;2009-01-01\u0026#39;) + 0:9,\rX = rnorm(10, 0, 1),\rY = rnorm(10, 0, 2),\rZ = rnorm(10, 0, 4)\r)\rlong \u0026lt;- gather(wide,stock,price,-time)\rhead(long)\r# A tibble: 6 x 3\rtime stock price\r\u0026lt;date\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt;\r1 2009-01-01 X 1.07 2 2009-01-02 X -0.665\r3 2009-01-03 X 1.11 4 2009-01-04 X -0.246\r5 2009-01-05 X -1.18 6 2009-01-06 X -0.976\r\rspread :long to wide\rwide2 \u0026lt;-spread(long,stock,price)\rhead(wide2)\r# A tibble: 6 x 4\rtime X Y Z\r\u0026lt;date\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r1 2009-01-01 1.07 -2.94 7.70\r2 2009-01-02 -0.665 0.568 5.19\r3 2009-01-03 1.11 2.67 3.00\r4 2009-01-04 -0.246 0.473 2.22\r5 2009-01-05 -1.18 2.64 -2.19\r6 2009-01-06 -0.976 1.05 4.44\r更多參考:\rcookbook for R\n\r\rdplyr\r函數名 功能\n\rrow_number 排序,如果數值一樣,則靠前出現的元素排名在前,例如(3,3) 則 1,2\n\rmin_rank 排序,如果數值一樣,則都是同一等級，但是，佔用下一名次。例如\n\r\rdata\u0026lt;-c(3,3,4) data\r[1] 3 3 4\rmin_rank(data)\r[1] 1 1 3\r\rdense_rank 排序,如果數值一樣,則都是同一等級，但是，不佔用下一名次\r\rdata\u0026lt;-c(3,3,4) data\r[1] 3 3 4\rdense_rank(data)\r[1] 1 1 2\r\rpercent_rank 按百分比的排名\npercent_rank = (min_rank(x) - 1)/(sum(!is.na(x)) - 1)\n\rcume_dist 累計分佈\n\rntile : floor(n * (row_number(x) - 1)/len + 1)\n\r\rdata\u0026lt;-round(runif(10)*10)\rpr\u0026lt;-percent_rank(data)\rcd\u0026lt;-cume_dist(data)\rmr\u0026lt;-min_rank(data)\rdf\u0026lt;-data.frame(data,pr,mr,cd)\rarrange(df,data)\r data pr mr cd\r1 1 0.000 1 0.3\r2 1 0.000 1 0.3\r3 1 0.000 1 0.3\r4 2 0.333 4 0.5\r5 2 0.333 4 0.5\r6 5 0.556 6 0.6\r7 7 0.667 7 0.8\r8 7 0.667 7 0.8\r9 9 0.889 9 1.0\r10 9 0.889 9 1.0\rnote:\n(2,3,3,3,3,4,5,6,6,9)\n\r\r1\r2\r3\r4\r5\r6\r7\r8\r9\r\r\r\r0\r1\r4\r1\r1\r2\r0\r0\r1\r\r\r\rarrange(dataframe, col1, col2, col3)\nvs.\ndataframe[order(dataframe\\(col1, dataframe\\)col2, dataframe$col3), ]\rvs.\nwith(dataframe, dataframe[order(col1, col2, col3), ])\n\r想要由大到小,例如分數等級\ndata\r [1] 7 1 9 1 9 1 5 2 7 2\rrow_number(desc(data))\r [1] 3 8 1 9 2 10 5 6 4 7\r\rPercentile\rThe nth percentile of an observation variable is the value that cuts off the first n percent of the data values when it is sorted in ascending order.\nProblem\rFind the 32nd, 57th and 98th percentiles of runiform(200).\ndata\u0026lt;-runif(200) quantile(data, c(.32, .57, .98)) \r\r\rother\rlibrary(babynames)\rbabynames\r# A tibble: 1,924,665 x 5\ryear sex name n prop\r\u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt;\r1 1880 F Mary 7065 0.0724\r2 1880 F Anna 2604 0.0267\r3 1880 F Emma 2003 0.0205\r4 1880 F Elizabeth 1939 0.0199\r5 1880 F Minnie 1746 0.0179\r6 1880 F Margaret 1578 0.0162\r7 1880 F Ida 1472 0.0151\r8 1880 F Alice 1414 0.0145\r9 1880 F Bertha 1320 0.0135\r10 1880 F Sarah 1288 0.0132\r# ... with 1,924,655 more rows\rBasic verbs\rbabynames %\u0026gt;% select(-prop)\r# A tibble: 1,924,665 x 4\ryear sex name n\r\u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt;\r1 1880 F Mary 7065\r2 1880 F Anna 2604\r3 1880 F Emma 2003\r4 1880 F Elizabeth 1939\r5 1880 F Minnie 1746\r6 1880 F Margaret 1578\r7 1880 F Ida 1472\r8 1880 F Alice 1414\r9 1880 F Bertha 1320\r10 1880 F Sarah 1288\r# ... with 1,924,655 more rows\rbabynames %\u0026gt;% select(year:n)\r# A tibble: 1,924,665 x 4\ryear sex name n\r\u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt;\r1 1880 F Mary 7065\r2 1880 F Anna 2604\r3 1880 F Emma 2003\r4 1880 F Elizabeth 1939\r5 1880 F Minnie 1746\r6 1880 F Margaret 1578\r7 1880 F Ida 1472\r8 1880 F Alice 1414\r9 1880 F Bertha 1320\r10 1880 F Sarah 1288\r# ... with 1,924,655 more rows\r# starts_with(), ends_with(), contains()\rbabynames %\u0026gt;% filter(name == \u0026quot;Hadley\u0026quot;)\r# A tibble: 163 x 5\ryear sex name n prop\r\u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt;\r1 1906 M Hadley 6 0.0000416\r2 1908 M Hadley 16 0.0000962\r3 1909 M Hadley 14 0.0000792\r4 1910 M Hadley 5 0.0000240\r5 1911 M Hadley 9 0.0000373\r6 1912 M Hadley 11 0.0000244\r7 1913 M Hadley 10 0.0000186\r8 1914 M Hadley 15 0.0000220\r9 1915 M Hadley 14 0.0000159\r10 1916 M Hadley 14 0.0000152\r# ... with 153 more rows\rbabynames %\u0026gt;% filter(year == 1900, sex == \u0026quot;F\u0026quot;)\r# A tibble: 2,224 x 5\ryear sex name n prop\r\u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt;\r1 1900 F Mary 16706 0.0526\r2 1900 F Helen 6343 0.0200\r3 1900 F Anna 6114 0.0192\r4 1900 F Margaret 5304 0.0167\r5 1900 F Ruth 4765 0.0150\r6 1900 F Elizabeth 4096 0.0129\r7 1900 F Florence 3920 0.0123\r8 1900 F Ethel 3896 0.0123\r9 1900 F Marie 3856 0.0121\r10 1900 F Lillian 3414 0.0107\r# ... with 2,214 more rows\rbabynames %\u0026gt;% filter(year == 2013, sex == \u0026quot;F\u0026quot;)\r# A tibble: 19,231 x 5\ryear sex name n prop\r\u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt;\r1 2013 F Sophia 21213 0.0110 2 2013 F Emma 20936 0.0109 3 2013 F Olivia 18414 0.00957\r4 2013 F Isabella 17631 0.00916\r5 2013 F Ava 15249 0.00793\r6 2013 F Mia 13147 0.00683\r7 2013 F Emily 13124 0.00682\r8 2013 F Abigail 12405 0.00645\r9 2013 F Madison 10591 0.00551\r10 2013 F Elizabeth 9448 0.00491\r# ... with 19,221 more rows\rbabynames %\u0026gt;%\rmutate(\rfirst = tolower(substr(name, 1, 1)),\rlast = substr(name, nchar(name), nchar(name))\r)\r# A tibble: 1,924,665 x 7\ryear sex name n prop first last \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt;\r1 1880 F Mary 7065 0.0724 m y 2 1880 F Anna 2604 0.0267 a a 3 1880 F Emma 2003 0.0205 e a 4 1880 F Elizabeth 1939 0.0199 e h 5 1880 F Minnie 1746 0.0179 m e 6 1880 F Margaret 1578 0.0162 m t 7 1880 F Ida 1472 0.0151 i a 8 1880 F Alice 1414 0.0145 a e 9 1880 F Bertha 1320 0.0135 b a 10 1880 F Sarah 1288 0.0132 s h # ... with 1,924,655 more rows\rbabynames %\u0026gt;%\rarrange(desc(prop))\r# A tibble: 1,924,665 x 5\ryear sex name n prop\r\u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt;\r1 1880 M John 9655 0.0815\r2 1881 M John 8769 0.0810\r3 1880 M William 9532 0.0805\r4 1883 M John 8894 0.0791\r5 1881 M William 8524 0.0787\r6 1882 M John 9557 0.0783\r7 1884 M John 9388 0.0765\r8 1882 M William 9298 0.0762\r9 1886 M John 9026 0.0758\r10 1885 M John 8756 0.0755\r# ... with 1,924,655 more rows\rbabynames %\u0026gt;%\rsummarise(n = sum(n))\r# A tibble: 1 x 1\rn\r\u0026lt;int\u0026gt;\r1 348120517\r\rGroup by\r分組指令不會影響到原來的資料\nhead(mtcars)\r mpg cyl disp hp drat wt qsec vs am gear carb\rMazda RX4 21.0 6 160 110 3.90 2.62 16.5 0 1 4 4\rMazda RX4 Wag 21.0 6 160 110 3.90 2.88 17.0 0 1 4 4\rDatsun 710 22.8 4 108 93 3.85 2.32 18.6 1 1 4 1\rHornet 4 Drive 21.4 6 258 110 3.08 3.21 19.4 1 0 3 1\rHornet Sportabout 18.7 8 360 175 3.15 3.44 17.0 0 0 3 2\rValiant 18.1 6 225 105 2.76 3.46 20.2 1 0 3 1\rstr(mtcars)\r\u0026#39;data.frame\u0026#39;: 32 obs. of 11 variables:\r$ mpg : num 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...\r$ cyl : num 6 6 4 6 8 6 8 4 4 6 ...\r$ disp: num 160 160 108 258 360 ...\r$ hp : num 110 110 93 110 175 105 245 62 95 123 ...\r$ drat: num 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...\r$ wt : num 2.62 2.88 2.32 3.21 3.44 ...\r$ qsec: num 16.5 17 18.6 19.4 17 ...\r$ vs : num 0 0 1 1 0 1 0 1 1 1 ...\r$ am : num 1 1 1 0 0 0 0 0 0 0 ...\r$ gear: num 4 4 4 3 3 3 3 4 4 4 ...\r$ carb: num 4 4 1 1 2 1 4 2 2 4 ...\rby_cyl \u0026lt;- mtcars %\u0026gt;% group_by(cyl)\rhead(by_cyl)\r# A tibble: 6 x 11\r# Groups: cyl [3]\rmpg cyl disp hp drat wt qsec vs am gear carb\r\u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r1 21 6 160 110 3.9 2.62 16.5 0 1 4 4\r2 21 6 160 110 3.9 2.88 17.0 0 1 4 4\r3 22.8 4 108 93 3.85 2.32 18.6 1 1 4 1\r4 21.4 6 258 110 3.08 3.22 19.4 1 0 3 1\r5 18.7 8 360 175 3.15 3.44 17.0 0 0 3 2\r6 18.1 6 225 105 2.76 3.46 20.2 1 0 3 1\rstr(by_cyl)\rtibble [32 x 11] (S3: grouped_df/tbl_df/tbl/data.frame)\r$ mpg : num [1:32] 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...\r$ cyl : num [1:32] 6 6 4 6 8 6 8 4 4 6 ...\r$ disp: num [1:32] 160 160 108 258 360 ...\r$ hp : num [1:32] 110 110 93 110 175 105 245 62 95 123 ...\r$ drat: num [1:32] 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...\r$ wt : num [1:32] 2.62 2.88 2.32 3.21 3.44 ...\r$ qsec: num [1:32] 16.5 17 18.6 19.4 17 ...\r$ vs : num [1:32] 0 0 1 1 0 1 0 1 1 1 ...\r$ am : num [1:32] 1 1 1 0 0 0 0 0 0 0 ...\r$ gear: num [1:32] 4 4 4 3 3 3 3 4 4 4 ...\r$ carb: num [1:32] 4 4 1 1 2 1 4 2 2 4 ...\r- attr(*, \u0026quot;groups\u0026quot;)= tibble [3 x 2] (S3: tbl_df/tbl/data.frame)\r..$ cyl : num [1:3] 4 6 8\r..$ .rows: list\u0026lt;int\u0026gt; [1:3] .. ..$ : int [1:11] 3 8 9 18 19 20 21 26 27 28 ...\r.. ..$ : int [1:7] 1 2 4 6 10 11 30\r.. ..$ : int [1:14] 5 7 12 13 14 15 16 17 22 23 ...\r.. ..@ ptype: int(0) ..- attr(*, \u0026quot;.drop\u0026quot;)= logi TRUE\r但是分組結果會影響其他dplyr指令的計算結果:\nby_cyl %\u0026gt;% summarise(\rdisp = mean(disp),\rhp = mean(hp)\r)\r`summarise()` ungrouping output (override with `.groups` argument)\r# A tibble: 3 x 3\rcyl disp hp\r\u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r1 4 105. 82.6\r2 6 183. 122. 3 8 353. 209. \rby_cyl %\u0026gt;% filter(disp == max(disp))\r# A tibble: 3 x 11\r# Groups: cyl [3]\rmpg cyl disp hp drat wt qsec vs am gear carb\r\u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r1 21.4 6 258 110 3.08 3.22 19.4 1 0 3 1\r2 24.4 4 147. 62 3.69 3.19 20 1 0 4 2\r3 10.4 8 472 205 2.93 5.25 18.0 0 0 3 4\r\rsummarize()\rWhat other summary functions can we use inside the summarize() verb? Any function in R that takes a vector of values and returns just one. Here are just a few:\nmean(): the mean AKA the average\nsd(): the standard deviation, which is a measure of spread\nmin() and max(): the minimum and maximum values respectively\nIQR(): Interquartile range\nsum(): the sum\nn(): a count of the number of rows/observations in each group. This particular summary function will make more sense when group_by() is covered in Section 5.5.\n實驗 pipeline vs no pipeline\r產生資料\nyear=c(1990, 1991, 1990, 1991, 1990, 1991, 1990, 1991, 1990, 1991) sex=c(\u0026quot;f\u0026quot;, \u0026quot;f\u0026quot;, \u0026quot;f\u0026quot;, \u0026quot;f\u0026quot;, \u0026quot;f\u0026quot;, \u0026quot;m\u0026quot;, \u0026quot;m\u0026quot;, \u0026quot;m\u0026quot;, \u0026quot;m\u0026quot;, \u0026quot;m\u0026quot;)\r#value=c(1, 2, 3, 4, 5, 1, 2, 3, 4, 5)\rvalue=c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\rdf\u0026lt;-data.frame(sex,year,value)\rhead(df)\r sex year value\r1 f 1990 1\r2 f 1991 2\r3 f 1990 3\r4 f 1991 4\r5 f 1990 5\r6 m 1991 6\r\r不用 pipeline\rdf\u0026lt;-group_by(df,sex)\rndf\u0026lt;-mutate(df,rank=min_rank(value))\rarrange(ndf,sex)\r# A tibble: 10 x 4\r# Groups: sex [2]\rsex year value rank\r\u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt;\r1 f 1990 1 1\r2 f 1991 2 2\r3 f 1990 3 3\r4 f 1991 4 4\r5 f 1990 5 5\r6 m 1991 6 1\r7 m 1990 7 2\r8 m 1991 8 3\r9 m 1990 9 4\r10 m 1991 10 5\r\r使用 pipeline\rndf\u0026lt;-df %\u0026gt;%\rgroup_by(sex) %\u0026gt;%\rmutate(rank = min_rank(value)) arrange(ndf,sex)\r# A tibble: 10 x 4\r# Groups: sex [2]\rsex year value rank\r\u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt;\r1 f 1990 1 1\r2 f 1991 2 2\r3 f 1990 3 3\r4 f 1991 4 4\r5 f 1990 5 5\r6 m 1991 6 1\r7 m 1990 7 2\r8 m 1991 8 3\r9 m 1990 9 4\r10 m 1991 10 5\r問題:\r1. 如何知道min-rank(value)中的value 是全局或是欄位?\rhint: rm(value)\r2. 會出現甚麼結果\ndf %\u0026gt;%\rgroup_by(sex) %\u0026gt;%str()\nnb \u0026lt;-babynames %\u0026gt;%\rgroup_by(name)\rbabynames %\u0026gt;%\rgroup_by(name) %\u0026gt;%\rsummarise(n = sum(n))\r`summarise()` ungrouping output (override with `.groups` argument)\r# A tibble: 97,310 x 2\rname n\r\u0026lt;chr\u0026gt; \u0026lt;int\u0026gt;\r1 Aaban 107\r2 Aabha 35\r3 Aabid 10\r4 Aabir 5\r5 Aabriella 32\r6 Aada 5\r7 Aadam 254\r8 Aadan 130\r9 Aadarsh 199\r10 Aaden 4658\r# ... with 97,300 more rows\rbabynames %\u0026gt;%\rfilter(name %in% c(\u0026quot;John\u0026quot;, \u0026quot;Mary\u0026quot;, \u0026quot;William\u0026quot;)) %\u0026gt;%\rgroup_by(name, sex) %\u0026gt;%\rsummarise(n = sum(n))\r`summarise()` regrouping output by \u0026#39;name\u0026#39; (override with `.groups` argument)\r# A tibble: 6 x 3\r# Groups: name [3]\rname sex n\r\u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt;\r1 John F 21676\r2 John M 5115466\r3 Mary F 4123200\r4 Mary M 15160\r5 William F 15949\r6 William M 4102604\rbabynames %\u0026gt;%\rgroup_by(year, sex) %\u0026gt;%\rmutate(rank = min_rank(desc(n))) %\u0026gt;%\rtail()\r# A tibble: 6 x 6\r# Groups: year, sex [1]\ryear sex name n prop rank\r\u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt;\r1 2017 M Zyhier 5 0.00000255 12171\r2 2017 M Zykai 5 0.00000255 12171\r3 2017 M Zykeem 5 0.00000255 12171\r4 2017 M Zylin 5 0.00000255 12171\r5 2017 M Zylis 5 0.00000255 12171\r6 2017 M Zyrie 5 0.00000255 12171\r\rCombining to answer more complex questions ———————————–\rHow many Hadley’s?\rbabynames %\u0026gt;%\rfilter(name == \u0026quot;Hadley\u0026quot;) %\u0026gt;%\rgroup_by(sex) %\u0026gt;%\rsummarise(n = sum(n))\r`summarise()` ungrouping output (override with `.groups` argument)\r# A tibble: 2 x 2\rsex n\r\u0026lt;chr\u0026gt; \u0026lt;int\u0026gt;\r1 F 26708\r2 M 1883\r\rThe travesty\rlibrary(ggplot2)\rbabynames %\u0026gt;%\rfilter(name == \u0026quot;Hadley\u0026quot;) %\u0026gt;%\rggplot(aes(year, n)) + geom_line(aes(colour = sex))\r\r\r\r\r\r"
},
{
	"uri": "/rlang/plot02.html",
	"title": "更多繪圖",
	"tags": [],
	"description": "基本語法",
	"content": "\r\r\r更多繪圖\r繪圖區中的字串\r函數 text() 在繪圖區填入字串,簡化的指令如下:\ntext(x, y, labels)\nx and y: 文字座標;\nlabels: 例如 “a label”\npos: 下左上右，1234\ncex: 放大倍數，例如，0.65。\n範例 :\nd\u0026lt;-head(mtcars)\rplot(d[,\u0026#39;wt\u0026#39;], d[,\u0026#39;mpg\u0026#39;], main=\u0026quot;Milage vs. Car Weight\\n~~~~~~~~~~~~~~~~~~~\u0026quot;,\rxlab=\u0026quot;Weight\u0026quot;, ylab=\u0026quot;Miles/(US) gallon\u0026quot;,\rpch=19, col=\u0026quot;darkgreen\u0026quot;)\rtext(d[,\u0026#39;wt\u0026#39;], d[,\u0026#39;mpg\u0026#39;], row.names(d), cex=1,pos=3,col=\u0026quot;red\u0026quot;) \r在圖形margin中填入文字\rmtext(text, side=3)\rtext : 例如“a label”\rside : 哪一側 :\n順時針\r1: 下\r2: 左\r3: 上\r4: 又\n範例 :\nplot(1:10, 1:10, main=\u0026quot;mtext(...) examples\\n~~~~~~~~~~~\u0026quot;)\rmtext(\u0026quot;Magic function\u0026quot;, side=3)\r\rAdd mathematical annotation to a plot\rplot(1:10, 1:10, main=\u0026quot;text(...) examples\\n~~~~~~~~~~~\u0026quot;)\rtext(4, 9, expression(hat(beta) == (X^t * X)^{-1} * X^t * y))\rtext(7, 4, expression(bar(x) == sum(frac(x[i], n), i==1, n)))\r\r\r函數畫圖\req = function(x){x*x}\rplot(eq(1:1000), type=\u0026#39;l\u0026#39;)\r問題是如果x座標的增加不是1單位?\nx\u0026lt;-seq(1,10,0.1)\ry\u0026lt;-exp(x)\rx\u0026lt;-y\req = function(x){x*x}\rplot(x,eq(x), type=\u0026#39;l\u0026#39;)\rplot()的參數可以是y 或兩個參數(x,y),但是函數curv()的第一個參數是expr,不是y。如下面的eq() (㊙️ 這個參數會被轉成expression)\r💯 如果不指定from,to,或者add=T,內定是從0到1。\neq = function(x){x*x}\rcurve(eq, from=1, to=50, xlab=\u0026quot;x\u0026quot;, ylab=\u0026quot;y\u0026quot;)\r問題:解釋為何錯誤\neq = function(x){x*x}\ry\u0026lt;-eq(1:50)\rcurve(y, xlab=\u0026quot;x\u0026quot;, ylab=\u0026quot;y\u0026quot;)\rError in y(x):\r沒有這個函數 \u0026quot;y\u0026quot;\r問題:如何修正下面的錯誤?\neq = function(x){x*x}\rz\u0026lt;-1:50\rcurve(eq(z), xlab=\u0026quot;x\u0026quot;, ylab=\u0026quot;y\u0026quot;)\rError in curve(eq(z), xlab = “x”, ylab = “y”) :\r‘expr’ must be a function, or a call or an expression containing ‘x’\rsolution:\ncurve(eq(z),xname=\u0026quot;z\u0026quot;, xlab=\u0026quot;x\u0026quot;, ylab=\u0026quot;y\u0026quot;)\r\rplot example\r正常\npolyred = curve(dnorm(x), xlim = c(-4,4)) polygon(polyred$x, polyred$y, col = \u0026quot;red\u0026quot;)\r❓\rcurv 高階指令？\neq = function(x){x*x}\ry\u0026lt;-eq(1:50)\rcurve(eq, 1,50,xlab=\u0026quot;x\u0026quot;, ylab=\u0026quot;y\u0026quot;,lwd=5,col=\u0026quot;yellow\u0026quot;)\rpolygon(1:50,y,lty=2,col=\u0026quot;red\u0026quot;)\req = function(x){x*x}\ry\u0026lt;-eq(1:50)\rcurve(eq, 1,50,xlab=\u0026quot;x\u0026quot;, ylab=\u0026quot;y\u0026quot;,lwd=5,col=\u0026quot;yellow\u0026quot;)\rpolygon(c(1:50,50),c(y,0),lty=2,col=\u0026quot;red\u0026quot;)\r💯 ⭕ 第一個點和最後一個點會連在一起。然後填色。\n\rrug\rset.seed(3)\rx \u0026lt;- rbeta(150, 3, 25)\r#png(\u0026quot;rug.png\u0026quot;)\rhist(x)\rrug(quantile(x), col=2, lwd=2.5)\r## 練習\npar(mfrow=c(2,2))\rplot(dnorm(x),xlim=c(-4,4))\rplot(pnorm(x),xlim=c(-4,4))\rplot(qnorm(x),xlim=c(-4,4))\rplot(rnorm(x),xlim=c(-4,4))\r\r\r"
},
{
	"uri": "/rlang/environments.html",
	"title": "Environment",
	"tags": [],
	"description": "進階",
	"content": "\r\r\rEnvironments\r參考\rhttps://holtzy.github.io/Pimp-my-rmd/\nIntroduction\rThe environment is the data structure that powers scoping. 相關概念:lexical scoping, namespaces, and R6 classes。\n這個文件需要\ndevtools::install_github(\u0026quot;tidyverse/rlang\u0026quot;)\rQuiz\rIf you can answer the following questions correctly, you already know the most important topics in this chapter. You can find the answers at the end of the chapter in answers.\nList at least three ways that an environment is different to a list.\n\rWhat is the parent of the global environment? What is the only\renvironment that doesn’t have a parent?\n\rWhat is the enclosing environment of a function? Why is it\rimportant?\n\rHow do you determine the environment from which a function was called?\n\rHow are \u0026lt;- and \u0026lt;\u0026lt;- different?\n\r\r\rOutline\r\rEnvironment basics introduces you to the basic properties\rof an environment and shows you how to create your own.\n\rRecursing over environments provides a function template\rfor computing with environments, illustrating the idea with a useful\rfunction.\n\rExplicit environments briefly discusses three places where\renvironments are useful data structures for solving other problems.\n\r\r\rPrerequisites\r這個章節利用了套件rlang裡的函數，來探索環境物件。\n在rlang套件中,env_函數是設計用來和pipe一起工作的,這裡不深入。\nglobal_env()和globalenv()的執行結果一樣。\n.GlobalEnv\r\u0026lt;environment: R_GlobalEnv\u0026gt;\rglobalenv()\r\u0026lt;environment: R_GlobalEnv\u0026gt;\rglobal_env()\r\u0026lt;environment: R_GlobalEnv\u0026gt;\r.BaseNamespaceEnv\r\u0026lt;environment: namespace:base\u0026gt;\rcurrent_env() #\r\u0026lt;environment: R_GlobalEnv\u0026gt;\r\r\r\rEnvironment basics\r基本上一個 environment 類似名稱串列(named list),但是有4個例外:\n\r名稱唯一(就是變數唯一)\n\r名稱沒有順序關係\n\r會有一個parent\n\r當改變的時候,不會自動複製 (Environments are not copied when modified).\r\r分別探索上面四點:\nBasics\r要建立environment, 使用 rlang::env(). 類似使用list(),也是一組名稱-值的配對。:\ne1 \u0026lt;- env(\ra = FALSE,\rb = \u0026quot;a\u0026quot;,\rc = 2.3,\rd = 1:3\r)\r建立environment物件,利用函數 new.env() 不用管參數 hash 和 size。注意不能利用$\u0026lt;-同時定義和建立 parameters; 例如,\re1 \u0026lt;- env( ** a \u0026lt;- FALSE ** ) # error\r.\n\renvironment物件可以想成是一個袋子,或是names集合。因為沒有次序關係\n就像在 names and values, 討論的,這個物件是參考為基礎.(in C concept) 不會有copy on modifying。而且,環境物件可以自己指向自己(recursion)\ne1$d \u0026lt;- e1\r沒有指派的環境變數,只會顯示記憶體位址:\ne1\r\u0026lt;environment: 0x00000000165f64a8\u0026gt;\r要知道內容可以使用 env_print() :\nenv_print(e1)\r\u0026lt;environment: 00000000165F64A8\u0026gt;\rparent: \u0026lt;environment: global\u0026gt;\rbindings:\r* a: \u0026lt;lgl\u0026gt;\r* b: \u0026lt;chr\u0026gt;\r* c: \u0026lt;dbl\u0026gt;\r* d: \u0026lt;env\u0026gt;\r想要知道目前有哪些binding(名稱-值 配對)可以利用 env_names()\nenv_names(e1)\r[1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot;\r要列出環境下的繫結，在R 3.2.0 以上,可以使用函數names() ,之前的版本則是 ls(), 但是要注意的是ls 的參數 all.names 內設是 FALSE 因此.開頭的看不到。.\n\r\rImportant environments\r另外參考 Special environments。\rcurrent_env() 可以知道目前程式碼的執行環境。例如,當我們互動執行RCODE的時候,環境通常是 總體環境,或者由函數global_env()可以得到。這個總體環境有時候就叫“workspace”，同時,這也是函數外面所有互動計算發生的地方。\r環境物件的比較不能用==,只能用函數identical()。\nidentical(global_env(), current_env())\r[1] TRUE\rglobal_env() == current_env()\rError in global_env() == current_env():\r只有基元或串列類型才能做比較 (1)\r\rglobalenv() 和.GlobalEnv: 拿到global environmentand。\renvironment():拿到目前的環境\r\rglobal environment 的名稱為 R_GlobalEnv 。\nglobal_env()\r\u0026lt;environment: R_GlobalEnv\u0026gt;\rcurrent_env()\r\u0026lt;environment: R_GlobalEnv\u0026gt;\r.GlobalEnv\r\u0026lt;environment: R_GlobalEnv\u0026gt;\r\r\rParents\r每一個環境物件都有一個parent。parent 也一個環境物件。在方塊圖中,parent以藍色圈表示,並用箭頭指向另一個環境物件。\n這個parent用來建立 lexical scoping: 如果name沒有在某個環境物件找到,R會重複的在parent中找。\r函數env()可以用來建立一個沒有名字的環境\rYou can set the parent environment by supplying an unnamed argument to env(). If you don’t supply it, it defaults to the current environment.\ne2a \u0026lt;- env(d = 4, e = 5)\re2b \u0026lt;- env(e2a, a = 1, b = 2, c = 3)\r函數 env_parent()可以用來找出某個環境物件的parent:\nenv_parent(e2b)\r\u0026lt;environment: 0x000000001588cad0\u0026gt;\renv_parent(e2a)\r\u0026lt;environment: R_GlobalEnv\u0026gt;\rparent.env() === env_parent()\n\r所有的環境物件中只有一個名稱為R_EmptyEnv的物件沒有parent(用空心藍色表示):\ne2c \u0026lt;- env(empty_env(), d = 4, e = 5)\re2d \u0026lt;- env(e2c, a = 1, b = 2, c = 3)\remptyenv() === empty_env()\n\r試圖利用函數env_parent()找空環境物件的parent會發生錯誤:\nenv_parent(empty_env())\rError: The empty environment has no parent\r函數 env_parents()可以找出目前環境物件的所有祖先:這個函數會繼續直到遇上global environment 或是空環境物件。上述過程可以利用last環境物件控制。\nenv_parents(e2b)\r[[1]] \u0026lt;env: 000000001588CAD0\u0026gt;\r[[2]] $ \u0026lt;env: global\u0026gt;\renv_parents(e2d)\r[[1]] \u0026lt;env: 000000001475CBC0\u0026gt;\r[[2]] $ \u0026lt;env: empty\u0026gt;\r可以利用Use parent.env() 找到環境的parent，但是base中沒有可以找出所有祖先的函數。\n\r\rGetting and setting\r存取環境中元素的方法和list類似:使用 $ 和 [[:\ne3 \u0026lt;- env(x = 1, y = 2)\re3$x\r[1] 1\re3$z \u0026lt;- 3\re3[[\u0026quot;z\u0026quot;]]\r[1] 3\r但是不能使用 [[ +數字索引,也不能單獨使用 [:\ne3[[1]]\rError in e3[[1]]:\r取子集環境時的引數不正確\re3[c(\u0026quot;x\u0026quot;, \u0026quot;y\u0026quot;)]\rError in e3[c(\u0026quot;x\u0026quot;, \u0026quot;y\u0026quot;)]:\r\u0026#39;environment\u0026#39; 類型的物件無法具有子集合\r當環境中的繫結不存在時(簡單點,就是變數不存在時)$ 和 [[ 會傳回 NULL 但不會引發錯誤,如果要有錯誤警告,則利用 env_get() :\ne3$xyz\rNULL\renv_get(e3, \u0026quot;xyz\u0026quot;)\rError in env_get(e3, \u0026quot;xyz\u0026quot;):\r缺少引數 \u0026quot;default\u0026quot;，也沒有預設值\r當繫結不存在,但是想要有預設值傳回時,可以利用參數 default .\nenv_get(e3, \u0026quot;xyz\u0026quot;, default = NA)\r[1] NA\r另有兩種方式可以在環境物件加入繫結:\n\renv_poke()1 takes a name (as string) and a value:\nenv_poke(e3, \u0026quot;a\u0026quot;, 100)\re3$a\r[1] 100\renv_bind() allows you to bind multiple values:\nenv_bind(e3, a = 10, b = 20)\renv_names(e3)\r[1] \u0026quot;x\u0026quot; \u0026quot;y\u0026quot; \u0026quot;z\u0026quot; \u0026quot;a\u0026quot; \u0026quot;b\u0026quot;\r\renv_has(): 是否環境中有繫結\nenv_has(e3, \u0026quot;a\u0026quot;)\r a TRUE \r不能像是list中刪除元素的方式(指派NULL給元素)，而必須使用 env_unbind():\ne3$a \u0026lt;- NULL\renv_has(e3, \u0026quot;a\u0026quot;)\r a TRUE \renv_unbind(e3, \u0026quot;a\u0026quot;)\renv_has(e3, \u0026quot;a\u0026quot;)\r a FALSE \r從一個物件Unbinding 解除名稱，並不會刪除物件，是否刪除物件是 garbage collector的工作.。可以參考 GC.\nSee get(), assign(), exists(), and rm(). These are designed interactively for use with the current environment, so working with other environments is a little clunky. Also beware the inherits argument: it defaults to TRUE meaning that the base equivalents will inspect the supplied environment and all its ancestors.\n\r\rFinalisers\rAdd something once rlang has an API. Also mention in data structures below\n\rAdvanced bindings\rThere are two more exotic variants of env_bind():\n\renv_bind_exprs() creates delayed bindings, which are evaluated the\rfirst time they are accessed. Behind the scenes, delayed bindings create\rpromises, so behave in the same way as function arguments.\nenv_bind_exprs(current_env(), b = {Sys.sleep(1); 1})\rWarning: `env_bind_exprs()` is deprecated as of rlang 0.3.0.\rPlease use `env_bind_lazy()` instead.\rThis warning is displayed once per session.\rsystem.time(print(b))\r[1] 1\r user system elapsed 0 0 1 \rsystem.time(print(b))\r[1] 1\r user system elapsed 0 0 0 \rDelayed bindings are used to implement autoload(), which makes R behave\ras if the package data is in memory, even though it’s only loaded from\rdisk when you ask for it.\n\renv_bind_fns() creates active bindings which are re-computed every\rtime they’re accessed:\nenv_bind_fns(current_env(), z1 = function(val) runif(1))\rWarning: `env_bind_fns()` is deprecated as of rlang 0.3.0.\rPlease use `env_bind_active()` instead.\rThis warning is displayed once per session.\rz1\r[1] 0.0808\rz1\r[1] 0.834\rThe argument to the function allows you to also override behaviour when\rthe variable is set:\nenv_bind_fns(current_env(), z2 = function(val) {\rif (missing(val)) {\r2\r} else {\rstop(\u0026quot;Don\u0026#39;t touch z2!\u0026quot;, call. = FALSE)\r}\r})\rz2\r[1] 2\rz2 \u0026lt;- 3\rError: Don\u0026#39;t touch z2!\r\rSee ?delayedAssign() and ?makeActiveBinding().\n\r\rExercises\rList three ways in which an environment differs from a list.\n\rCreate an environment as illustrated by this picture.\n\rCreate a pair of environments as illustrated by this picture.\n\rExplain why e[[1]] and e[c(\"a\", \"b\")] don’t make sense when e is\ran environment.\n\rCreate a version of env_poke() that will only bind new names, never\rre-bind old names. Some programming languages only do this, and are known\ras single assignment languages.\n\r\r\r\rRecursing over environments\rIf you want to operate on every ancestor of an environment, it’s often convenient to write a recursive function. This section shows you how, applying your new knowledge of environments to write a function that given a name, finds the environment where() that name is defined, using R’s regular scoping rules.\nThe definition of where() is straightforward. It has two arguments: the name to look for (as a string), and the environment in which to start the search. (We’ll learn why caller_env() is a good default in calling environments.)\nwhere \u0026lt;- function(name, env = caller_env()) {\rif (identical(env, empty_env())) {\r# Base case\rstop(\u0026quot;Can\u0026#39;t find \u0026quot;, name, call. = FALSE)\r} else if (env_has(env, name)) {\r# Success case\renv\r} else {\r# Recursive case\rwhere(name, env_parent(env))\r}\r}\r3個情況:\n\rThe base case: 到達empty environment 沒有parent無法繼續,所以丟出error.\n\rThe successful case: 在env中找到name ，成功,所以傳回env。.\n\rThe recursive case: 在env中找不到,繼續在parent中找。.\n\r\rThese three cases are illustrated with these three examples:\nwhere(\u0026quot;yyy\u0026quot;)\rError: Can\u0026#39;t find yyy\rx \u0026lt;- 5\rwhere(\u0026quot;x\u0026quot;)\r\u0026lt;environment: R_GlobalEnv\u0026gt;\rwhere(\u0026quot;mean\u0026quot;)\r\u0026lt;environment: base\u0026gt;\r想像有兩個環境物件(如圖):\ne4a \u0026lt;- env(empty_env(), a = 1, b = 2)\re4b \u0026lt;- env(e4a, x = 10, a = 11)\r\rwhere(a, e4a) will find a in e4a.\n\rwhere(\"b\", e4a) doesn’t find b in e4a, so it looks in its parent, e4b,\rand finds it there.\n\rwhere(\"c\", e4a) looks in e4a, then e4b, then hits the empty environment\rand throws an error.\n\r\rIt’s natural to work with environments recursively, so where() provides a useful template. Removing the specifics of where() shows the structure more clearly:\nf \u0026lt;- function(..., env = caller_env()) {\rif (identical(env, empty_env())) {\r# base case\r} else if (success) {\r# success case\r} else {\r# recursive case\rf(..., env = env_parent(env))\r}\r}\rIteration vs recursion\r也可以用迭代的方式\nf2 \u0026lt;- function(..., env = caller_env()) {\rwhile (!identical(env, empty_env())) {\rif (success) {\r# success case\rreturn()\r}\r# inspect parent\renv \u0026lt;- env_parent(env)\r}\r# base case\r}\r\rExercises\rModify where() to return all environments that contain a binding for\rname. Carefully think through what type of object the function will\rneed to return.\n\rWrite a function called fget() that finds only function objects. It\rshould have two arguments, name and env, and should obey the regular\rscoping rules for functions: if there’s an object with a matching name\rthat’s not a function, look in the parent. For an added challenge, also\radd an inherits argument which controls whether the function recurses up\rthe parents or only looks in one environment.\n\r\r\r\rSpecial environments\r這裡討論 package environments. 然後探討當函數建立時,綁入函數的函數環境。還有當函數被呼叫時的執行環境(ephemeral)。\n套裝環境主要是看這些環境如何支援namespaces。同時,namespace讓package每次載入的時候,都有一樣的行為,而不售其他packages載入先後的影響。\nPackage environments and the search path\r每個套件經由library() 或 require() 接入成為總體環境的parent。而最後一個接入的套件,則是總體環境的第一個parent:\nload 和 attach不一樣，當我們使用library的時候,我們做的是[^attach] 在環境串列中加入我們利用library載入的物件..\r[^attach]: Note the difference between attached and loaded. A package is loaded automatically if you access one of its functions using ::; it is only attached to the search path by library() or require().\n\renv_parent(global_env())\r\u0026lt;environment: package:rlang\u0026gt;\rattr(,\u0026quot;name\u0026quot;)\r[1] \u0026quot;package:rlang\u0026quot;\rattr(,\u0026quot;path\u0026quot;)\r[1] \u0026quot;C:/Program Files/R/R-4.0.2/library/rlang\u0026quot;\rAnd the parent of that package is the second to last package you attached:\nenv_parent(env_parent(global_env()))\r\u0026lt;environment: package:stats\u0026gt;\rattr(,\u0026quot;name\u0026quot;)\r[1] \u0026quot;package:stats\u0026quot;\rattr(,\u0026quot;path\u0026quot;)\r[1] \u0026quot;C:/Program Files/R/R-4.0.2/library/stats\u0026quot;\r如果一層一層parent回朔,就可以到每個套件被接入的順序,這也是R執行中會用到的 search path 因為這些環境的所有物件都可以經由 top-level interactive workspace找到。\nsearch_envs()\r [[1]] $ \u0026lt;env: global\u0026gt;\r[[2]] $ \u0026lt;env: package:rlang\u0026gt;\r[[3]] $ \u0026lt;env: package:stats\u0026gt;\r[[4]] $ \u0026lt;env: package:graphics\u0026gt;\r[[5]] $ \u0026lt;env: package:grDevices\u0026gt;\r[[6]] $ \u0026lt;env: package:utils\u0026gt;\r[[7]] $ \u0026lt;env: package:datasets\u0026gt;\r[[8]] $ \u0026lt;env: package:methods\u0026gt;\r[[9]] $ \u0026lt;env: Autoloads\u0026gt;\r[[10]] $ \u0026lt;env: package:base\u0026gt;\r函數 search()可以找出環境物件的名稱。\n\r最後兩個環境物件都一樣:\n\rAutoloads 環境物件,利用 delayed bindings來節省記憶體，也就是在需要的時候才載入(loading)package中的物件(例如大型資料集)。\n\rbase environment, package:base 或簡稱 base, 是base 套裝的環境物件。用來 載入其他套裝(bootstrap)。利用函數 base_env()存取.\n\r\r利用圖型表示:\n當利用 library() attach其他套件的時候, 總體環境的parent馬上改變:\n\rThe function environment\r當函數被建立的時候,現有的環境會被繫結。稱為function environment, 主要用來支援lexical scoping. 在電腦語言中,當函數紀錄它們的運作環境時,我們說這個函數屬於 closures。,這也是為甚麼這個字眼經常在R語言中出現。.\n利用函數 fn_env()可以得到函數的環境物件:\ny \u0026lt;- 1\rf \u0026lt;- function(x) x + y\rfn_env(f)\r\u0026lt;environment: R_GlobalEnv\u0026gt;\r一樣利用函數 environment(f) 可以找到函數 f的環境.\n\r在圖形中,函數被畫成類似子彈,而彈頭的部分繫結環境。\n在這個案例中,f()繫結的環境物件,就是繫結名稱f的環境。但並不一定總是這樣，例如在下一個例子中,g被繫結在新環境物件e中。但是函數g()繫結的是global environment。這之間的分別是我們如何找到g和g如何找到他的變數。\ne \u0026lt;- env()\re$g \u0026lt;- function() 1\r\rNamespaces\r在上面的圖形中,我們已經知道套件的parent會隨著之前套件載入的順序不同而不同。這就導致R程式設計者必須保證個別套件上如果使用別的套件的函數，必須是原始目的的那一個。namespaces 就是為此目的而產生: 每個套件必須的使用必須一致,而不管使用者如何載入套件.\n以 sd()為例子:\nsd\rfunction (x, na.rm = FALSE) sqrt(var(if (is.vector(x) || is.factor(x)) x else as.double(x), na.rm = na.rm))\r\u0026lt;bytecode: 0x000000001392f7d0\u0026gt;\r\u0026lt;environment: namespace:stats\u0026gt;\rsd() 必須使用函數 var(), 因此這個var()到底來自 global environment,還是其他接入(attached)的套件的這種問題必須避免。 R avoids this problem by taking advantage of the function vs. binding environment described above.\n每個套件中的函數和一對環境物件有關:套件環境(之前學到的)還有namespace環境物件。\n\rpackage environment: 是套件的外部介面，這是R使用者如何在接入的套件中尋找函數的地方(或者可以利用 ::) package enviromnent 的parent 由搜尋路徑決定(可以利用search()知道)決定(也就是載入的順序)\n\rnamespace environment:是套件的內部介面。package environment 控制我們如何找到函數,而namespace environment控制函數如何找到變數。\n\r\r在package environment的每個繫結也可以在namespace environment中找到。這樣可以確保每個函數可以使用套件中的其他函數。但是有些繫結只能在namespace 中找到(例如內部或非輸出物件),這種內部物件通常是用來隱藏一些繁瑣的且不需要給使用者看到的細節。;\n每個namespace environment 有一樣的祖集合:\n\r每個namespace有imports的環境物件，其中包含了套件中用到的所有函數繫結。而所謂輸入環境實際由套裝開發人員在檔案NAMESPACE指定\n\r明確的輸入每個base函數,很繁瑣,所以R直接設定import enviroment的parent是base *namespae*[^1]。\nThe base namespace contains the same bindings as the base environment, but it has different parent.\n\rbase namespace 的parent是總體環境(#global environment).參考下圖,這種設計導致在import environment中找不到繫結時,會開始再總體環境中尋找,而之前提過總體環境通常是互動環境下名稱搜尋的開始路徑,這也導致搜尋的方式受到套件載入順序的影響。因此,R提供了了R CMD check來警告此種情況的發生。(雖然有麻煩,但是由於S3 方法的dispatch 關係,此種方式仍然留著)\n\r\r綜合上述,可以得到下圖::\n所以當 sd() 搜尋var 的值的時候,搜尋順序是受到開發者的指定(在檔案NAMESPACE利用import)，而不會受到套裝使用者的影響。這樣保證每次套件程式碼執行的時候,都一樣,而不會受到一般使用者載入套件的順序而影響。\n注意在package和namespace兩種環境之間沒有直接的連結.連結是由函數環境定義。\n\rExecution environments\rexecution environment. 下面的函數第一次執行的時候會傳回甚麼?第2次呢?\ng \u0026lt;- function(x) {\rif (!env_has(current_env(), \u0026quot;a\u0026quot;)) {\rmessage(\u0026quot;Defining a\u0026quot;)\ra \u0026lt;- 1\r} else {\ra \u0026lt;- a + 1\r}\ra\r}\r再一次利用下面的調用,確認你的答案:\ng(10)\rDefining a\r[1] 1\rg(10)\rDefining a\r[1] 1\rg(11)\rDefining a\r[1] 1\r這個函數每次執行都傳回一樣的答案,參考 a fresh start. 每次函數被調用的時候,一個新的環境都會被建立來主導執行。這種環境稱為執行環境。而執行環境的parent為 function environment.\n用另一個簡單點的例子說明.\r(圖中,執行環境的parent間接表示:經由函數環境).\nh \u0026lt;- function(x) {\r# 1.\ra \u0026lt;- 2 # 2.\rx + a\r}\ry \u0026lt;- h(1) # 3.\r執行環境(execution environment)短暫存在,當函數執行完畢通常會被GC。在幾種情況下,會在記憶體存在比較久,第一種是回傳給另一個變數:\nh2 \u0026lt;- function(x) {\ra \u0026lt;- x * 2\rcurrent_env()\r}\re \u0026lt;- h2(x = 10)\renv_print(e)\r\u0026lt;environment: 000000001CCAE4E0\u0026gt;\rparent: \u0026lt;environment: global\u0026gt;\rbindings:\r* a: \u0026lt;dbl\u0026gt;\r* x: \u0026lt;dbl\u0026gt;\rfn_env(h2)\r\u0026lt;environment: R_GlobalEnv\u0026gt;\rAnother way to capture it is to return an object with a binding to that environment, like a function. The following example illustrates that idea with a function factory, plus(). We use that factory to create a function called plus_one().\nThere’s a lot going on in the diagram because the enclosing environment of plus_one() is the execution environment of plus().\nplus \u0026lt;- function(x) {\rfunction(y) x + y\r}\rplus_one \u0026lt;- plus(1)\rplus_one\rfunction(y) x + y\r\u0026lt;environment: 0x000000001d012868\u0026gt;\rWhat happens when we call plus_one()? Its execution environment will have the captured execution environment of plus() as its parent:\nplus_one(2)\r[1] 3\rYou’ll learn more about function factories in functional programming.\n\rExercises\rHow is search_envs() different to env_parents(global_env())?\n\rDraw a diagram that shows the enclosing environments of this function:\nf1 \u0026lt;- function(x1) {\rf2 \u0026lt;- function(x2) {\rf3 \u0026lt;- function(x3) {\rx1 + x2 + x3\r}\rf3(3)\r}\rf2(2)\r}\rf1(1)\rWrite an enhanced version of str() that provides more information\rabout functions. Show where the function was found and what environment\rit was defined in.\n\r\r\r\rThe call stack\r還有另一種環境稱為 caller environment, 可以經由 rlang::caller_env()存取。. This provides the environment from which the function was called, and hence varies based on how the function is called, not how the function was created. As we saw above this is a useful default whenever you write a function that takes an environment as an argument.\nparent.frame() is equivalent to caller_env(); just note that it returns an environment, not a frame.\n\rTo fully understand the caller environment we need to discuss two related concepts: the call stack, which is made up of frames. Executing a function creates two types of context. You’ve learned about one already: the execution environment is a child of the function environment, which is determined by where the function was created. There’s another type of context created by where the function was called: this is called the call stack.\nThere are also a couple of small wrinkles when it comes to custom evaluation. See environments vs. frames for more details.\nSimple call stacks\rLet’s illustrate this with a simple sequence of calls: f() calls g() calls h().\nf \u0026lt;- function(x) {\rg(x = 2)\r}\rg \u0026lt;- function(x) {\rh(x = 3)\r}\rh \u0026lt;- function(x) {\rstop()\r}\rThe way you most commonly see a call stack in R is by looking at the traceback() after an error has occured:\nf(x = 1)\r#\u0026gt; Error:\rtraceback()\r#\u0026gt; 4: stop()\r#\u0026gt; 3: h(x = 3) #\u0026gt; 2: g(x = 2)\r#\u0026gt; 1: f(x = 1)\rInstead of stop() + traceback() to understand the call stack, we’re going to use lobstr::cst() to print out the call stack tree:\nh \u0026lt;- function(x) {\rlobstr::cst()\r}\rf(x = 1)\r#\u0026gt; ???\r#\u0026gt; ???f(x = 1)\r#\u0026gt; ???g(x = 2)\r#\u0026gt; ???h(x = 3)\r#\u0026gt; ???lobstr::cst()\rThis shows us that cst() was called from h(), which was called from g(), which was called from f(). Note that the order is the opposite from traceback(). As the call stacks get more compliated, I think it’s easier to understand the sequence of calls if you start from the beginning, rather than the end (i.e. f() calls g(); rather than g() was called by f()).\n\rLazy evaluation\rThe call stack above is simple - while you get a hint that there’s some tree-like structure involved, everything happens on a single branch. This is typical of a call stack when all arguments are eagerly evaluated.\nLet’s create a more complicated example that involves some lazy evaluation. We’ll create a sequence of functions, a(), b(), c(), that pass along an argument x.\na \u0026lt;- function(x) b(x)\rb \u0026lt;- function(x) c(x)\rc \u0026lt;- function(x) x\ra(f())\r#\u0026gt; ???\r#\u0026gt; ???a(f())\r#\u0026gt; ??? ???b(x)\r#\u0026gt; ??? ???c(x)\r#\u0026gt; ???f()\r#\u0026gt; ???g(x = 2)\r#\u0026gt; ???h(x = 3)\r#\u0026gt; ???lobstr::cst()\rx is lazily evaluated so this tree gets two branches. In the first branch a() calls b(), then b() calls c(). The second branch starts when c() evaluates its argument x. This argument is evaluated in a new branch because the environment in which it is evaluated is the global environment, not the environment of c().\n\rFrames\rEach element of the call stack is a frame2, also known as an evaluation context.\rThe frame is an extremely important internal data structure, and R code can only access a small part of the data structure because it’s so critical. A frame has three main components that are accessible from R:\n\rAn expression (labelled with expr) giving the function call. This is\rwhat traceback() prints out.\n\rAn environment (labelled with env), which is typically the execution\renvironment of a function. There are two main exceptions: the environment of\rthe global frame is the global environment, and calling eval() also\rgenerates frames, where the environment can be anything.\n\rA parent, the previous call in the call stack (shown by a grey arrow).\n\r\r(To focus on the calling environments, I have omitted the bindings in the global environment from f, g, and h to the respective function objects.)\nThe frame also holds exit handlers created with on.exit(), restarts and handlers for the condition system, and which context to return() to when a function completes. These are important for the internal operation of R, but are not directly accessible.\n\rDynamic scope\rLooking up variables in the calling stack rather than in the enclosing environment is called dynamic scoping. Few languages implement dynamic scoping (Emacs Lisp is a notable exception.) This is because dynamic scoping makes it much harder to reason about how a function operates: not only do you need to know how it was defined, you also need to know the context in which it was called. Dynamic scoping is primarily useful for developing functions that aid interactive data analysis. It is one of the topics discussed in non-standard evaluation.\n\rExercises\rWrite a function that lists all the variables defined in the environment\rin which it was called. It should return the same results as ls().\r\r\r\rAs data structures\rAs well as powering scoping, environments are also useful data structures in their own right because they have reference semantics. There are three common problems that they can help solve:\n\rAvoiding copies of large data. Since environments have reference semantics,\ryou’ll never accidentally create a copy. This makes it a useful vessel for\rlarge objects. Bare environments are not that pleasant to work with;\rI recommend using R6 objects instead. Learn more in [R6].\n\rManaging state within a package. Explicit environments are useful in\rpackages because they allow you to maintain state across function calls.\rNormally, objects in a package are locked, so you can’t modify them\rdirectly. Instead, you can do something like this:\nmy_env \u0026lt;- new.env(parent = emptyenv())\rmy_env$a \u0026lt;- 1\rget_a \u0026lt;- function() {\rmy_env$a\r}\rset_a \u0026lt;- function(value) {\rold \u0026lt;- my_env$a\rmy_env$a \u0026lt;- value\rinvisible(old)\r}\rReturning the old value from setter functions is a good pattern because\rit makes it easier to reset the previous value in conjunction with\ron.exit() (see more in on exit).\n\rAs a hashmap. A hashmap is a data structure that takes constant, O(1),\rtime to find an object based on its name. Environments provide this\rbehaviour by default, so can be used to simulate a hashmap. See the\rCRAN package hash for a complete development of this idea.\n\r\r\r\u0026lt;\u0026lt;-\rThe ancestors of an environment have an important relationship to \u0026lt;\u0026lt;-. The regular assignment arrow, \u0026lt;-, always creates a variable in the current environment. The deep assignment arrow, \u0026lt;\u0026lt;-, never creates a variable in the current environment, but instead modifies an existing variable found by walking up the parent environments.\nx \u0026lt;- 0\rf \u0026lt;- function() {\rx \u0026lt;\u0026lt;- 1\r}\rf()\rx\r[1] 1\rIf \u0026lt;\u0026lt;- doesn’t find an existing variable, it will create one in the global environment. This is usually undesirable, because global variables introduce non-obvious dependencies between functions. \u0026lt;\u0026lt;- is most often used in conjunction with a closure, as described in Closures.\nExercises\rWhat does this function do? How does it differ from \u0026lt;\u0026lt;- and why\rmight you prefer it?\nrebind \u0026lt;- function(name, value, env = caller_env()) {\rif (identical(env, empty_env())) {\rstop(\u0026quot;Can\u0026#39;t find `\u0026quot;, name, \u0026quot;`\u0026quot;, call. = FALSE)\r} else if (env_has(env, name)) {\renv_poke(env, name, value)\r} else {\rrebind(name, value, env_parent(env))\r}\r}\rrebind(\u0026quot;a\u0026quot;, 10)\rError: Can\u0026#39;t find `a`\ra \u0026lt;- 5\rrebind(\u0026quot;a\u0026quot;, 10)\ra\r[1] 10\r\r\r\rQuiz answers\rThere are four ways: every object in an environment must have a name;\rorder doesn’t matter; environments have parents; environments have\rreference semantics.\n\rThe parent of the global environment is the last package that you\rloaded. The only environment that doesn’t have a parent is the empty\renvironment.\n\rThe enclosing environment of a function is the environment where it\rwas created. It determines where a function looks for variables.\n\rUse caller_env() or parent.frame().\n\r\u0026lt;- always creates a binding in the current environment; \u0026lt;\u0026lt;-\rrebinds an existing name in a parent of the current environment.\n\r\rterm\rglobal environment :總體環境\r\rpackage environments\r\rimports environment\r\r\r\r\r\rYou might wonder why rlang has env_poke() instead of env_set().\rThis is for consistency: _set() functions return a modified copy;\r_poke() functions modify in place.↩︎\n\rNB: ?environment uses frame in a different sense: “Environments consist of a frame, or collection of named objects, and a pointer to an enclosing environment.”. We avoid this sense of frame, which comes from S, because it’s very specific and not widely used in base R. For example, the “frame” in parent.frame() is an execution context, not a collection of named objects.↩︎\n\r\r\r"
},
{
	"uri": "/rlang/sampling.html",
	"title": "sampling",
	"tags": [],
	"description": "基本抽樣",
	"content": "\r\r\rSample and Distribution 01\rN\u0026lt;-100\rpop\u0026lt;-rnorm(N,5,2)\rrndno\u0026lt;-as.integer(runif(N)*N)+1\rsmp\u0026lt;-pop[rndno]\rss\u0026lt;-summary(smp)\rs1\u0026lt;-hist(smp)\rrug(quantile(smp), col=2, lwd=2.5)\rplot(s1$mids,s1$density,type=\u0026quot;s\u0026quot;) #quiz:barplot??\rs2\u0026lt;-hist(pop)\rplot(s1,col=\u0026quot;red\u0026quot;)\rlines(s2,col=\u0026quot;blue\u0026quot;) \r##　內建隨機抽樣\r函數sample(x,n,replace=FALSE ).\r其中x為要抽取的向量, n為樣本容量. replace 預設為false\nno replacement, 等機率:\r\r例如從52張撲克牌中抽取5張:\nsample(1:52, 5)\r[1] 6 51 49 24 40\rreplacement:\r例如拋一枚均勻的硬幣10次\r\r sample(c(\u0026quot;H\u0026quot;, \u0026quot;T\u0026quot;), 10, replace=T)\r [1] \u0026quot;T\u0026quot; \u0026quot;T\u0026quot; \u0026quot;T\u0026quot; \u0026quot;T\u0026quot; \u0026quot;T\u0026quot; \u0026quot;H\u0026quot; \u0026quot;T\u0026quot; \u0026quot;H\u0026quot; \u0026quot;H\u0026quot; \u0026quot;T\u0026quot;\r練習:一棵骰子擲10次可表示為:\n不等可能的隨機抽樣:\rsample(x, n, replace=TRUE, prob=y)\rprob=y指定x中元素出現的概率, 向量y與x等長度. 例如一娃娃機取出成功的概率為0.6, 那麼10次的試驗為:\r\rsample(c(\u0026quot;sucess\u0026quot;, \u0026quot;fail\u0026quot;), 10, replace=T, prob=c(0.6,0.4))\r [1] \u0026quot;sucess\u0026quot; \u0026quot;sucess\u0026quot; \u0026quot;fail\u0026quot; \u0026quot;fail\u0026quot; \u0026quot;sucess\u0026quot; \u0026quot;sucess\u0026quot; \u0026quot;fail\u0026quot; \u0026quot;fail\u0026quot; [9] \u0026quot;fail\u0026quot; \u0026quot;sucess\u0026quot;\r排列組合與概率的計算\r例 從一副52張撲克中取4張, 求以下事件的概率:\n1. 抽取的4張依次為紅心A，方塊A，黑桃A和梅花A的概率;\n2. 一次抽取4張為紅心A，方塊A，黑桃A和梅花A的概率.\nhis summation expression \\(\\sum_{i=1}^n X_i\\) appears inline.\n解\n1) 抽取的4張是有次序的, 因此使用排列來求解. 所求的事件(記為A)概率為 \\(P(A)=\\frac{1}{52 \\times 51 \\times 50 \\times 49}\\)\r利用R函數\n1/prod(52:49)\r[1] 1.54e-07\r沒有次序的, 可以使用組合數來求解.\r\r\\[ P(B)=\\frac{1}{(52,4)} \\]\n其中 \\((n,m)=\\frac{n!}{m!(n-m)!}\\),可以利用函數choose(),例如\n1/choose(52,4)\r[1] 3.69e-06\r\rdistribution\r標準表格上下沒有線條,左右有\n\r\r名稱\rR函數\r選項\r\r\r\rbeta\rbeta\rshape1, shape2\r\rbinomial\rbinom\rsize, prob\r\rCauchy\rcauchy\rlocation=0, scale=1\r\rchi-sqaured (\\(\\chi^2\\))\rchisq\rdf, ncp\r\rexponential\rexp\rrate\r\rFisher (F)\rf\rdf1, df2, ncp\r\rgamma\rgamma\rshape, scale=1\r\rgeometric\rgeom\rprob\r\rhypergeometric\rhyper\rm, n, k\r\rlognormal\rlnorm\rmeanlog=0, sdlog=1\r\rlogistic\rlogis\rlocation=0, scale=1\r\rmultinomial\rmultinom\rsize, prob\r\rnormal\rnorm\rmean=0, sd=1\r\rnegative binomial\rnbinom\rsize, prob\r\rPoisson\rpois\rlambda\r\rStudent’s (t)\rt\rdf\r\runiform\runif\rmin=0, max=1\r\rWeibull\rweibull\rshape, scale=1\r\rWilcoxon’s statistics\rwilcox\rm, n\r\r\rsignrank\rn\r\r\r\r對於所給的分佈名稱，有四類。\n以func為例， 四類函數的對應為:\n1. 「d」概率密度函數: dfunc(x, p1, p2, …), x為數值向量;\n1. 「p」(累積)分佈函數: pfunc(q, p1, p2, …), q為數值向量;\n1. 「q」分位數函數: qfunc(p, p1, p2, …), p為由概率構成的向量;\n1. 「r」隨機數函數: rfunc(n, p1, p2, …), n為生成數據的個數\n這四類函數的第一個參數是有規律的: 形為dfunc的函數為x，pfunc的函數為q，qfunc的函數為p，rfunc的函數為n\nnote:\r(但rhyper和rwilcox是特例，他們的第一個參數為nn).\r非中心參數(non-centrality parameter)僅對CDF和\r少數其它幾個函數有效.\n\\[ \\frac{{\\sum\\limits_{i = 1}^n {{x_i} - n\\mu } }}{{\\sqrt {n{\\sigma ^2}} }} \\sim N(0,1) \\]\n\\[ \\bar X = \\frac{{\\sum_{i = 1}^n {{x_i} } }}{n} \\sim N(\\mu, \\sigma^2/n) \\]\nuniform a~b\r\\[\\mu = (a+b)/2\\]\r\\[\\sigma^2=\\frac{(b-a)^2}{12} \\]\rdata的每一個ROW有sample size (=i=column)\n共1000次(=N=row)\nN=1000 i=3 #sample size\rmu=0.5\rsigma=1/sqrt(12)\rdata\u0026lt;-matrix(runif(i*N),ncol=i)\rrs\u0026lt;-rowSums(data)\rrs\u0026lt;-rs/i\rz\u0026lt;-(rs-mu)/(sigma/sqrt(i))\rhist(z)\rlines(density(z), col = \u0026#39;red\u0026#39;, lwd = 3)\rx\u0026lt;-z\rcurve(dnorm(x), col = \u0026#39;blue\u0026#39;, lwd = 3, lty = 3, add = T)\rrug(sample(z,100))\rlimite.central \u0026lt;-\rfunction (r = runif, distpar = c(0, 1), m = .5, s = 1 / sqrt(12), n = c(1, 3, 10, 30), N = 1000) {\rfor (i in n) {\rif (length(distpar) == 2) {\rx \u0026lt;-matrix(r(i * N, distpar[1], distpar[2]), nc = i)\r} else {\rx \u0026lt;-matrix(r(i * N, distpar), nc = i)\r}\rx \u0026lt;-(apply(x, 1, sum) - i * m) / (sqrt(i) * s)\rhist(x, col = \u0026#39;light blue\u0026#39;, probability = T, main = paste(\u0026quot;n=\u0026quot;, i),\rylim = c(0, max(.4, density(x) $y)))\rlines(density(x), col = \u0026#39;red\u0026#39;, lwd = 3)\rcurve(dnorm(x), col = \u0026#39;blue\u0026#39;, lwd = 3, lty = 3, add = T)\rif (N \u0026gt; 100) {\rrug(sample(x, 100))\r} else {\rrug(x)\r}\r}\r}\rop \u0026lt;- par(mfrow=c(2,2))\rlimite.central(rbinom, distpar=c(10 ,0.1), m=1, s=0.9)\rpar(op)\r\rapply(x,1,sum) 第2個參數1表示row 方向,如果是2表示column 和matlab 相反。\r\r\r\r"
},
{
	"uri": "/rlang/eco_01_intro.html",
	"title": "Econometrics",
	"tags": [],
	"description": "基本計量",
	"content": "\r\r\rpackage recommended\rpackage foreign 可以用來導入外部資料例如，\r* stata 的資料 dta,\r* SPSS\r* SAS\r* Systat\r* Mini tab . mtp\n利用foreign讀入stata 的資料檔：\nrequire(foreign)\rLoading required package: foreign\raffairs\u0026lt;- read.dta(\u0026quot;http://fmwww.bc.edu/ec-p/data/wooldridge/affairs.dta\u0026quot;)\rsave(affairs,file=\u0026#39;./resources/affairs.RData\u0026#39;)\r測試\nrm(affairs)\rload(\u0026#39;./resources/affairs.RData\u0026#39;)\rhead(affairs)\r id male age yrsmarr kids relig educ occup ratemarr naffairs affair vryhap\r1 4 1 37 10.0 0 3 18 7 4 0 0 0\r2 5 0 27 4.0 0 4 14 6 4 0 0 0\r3 6 1 27 1.5 0 3 18 4 4 3 1 0\r4 11 0 32 15.0 1 1 12 1 4 0 0 0\r5 12 0 27 4.0 1 3 17 1 5 3 1 1\r6 16 1 57 15.0 1 5 18 6 5 0 0 1\rhapavg avgmarr unhap vryrel smerel slghtrel notrel\r1 1 0 0 0 0 1 0\r2 1 0 0 0 1 0 0\r3 1 0 0 0 0 1 0\r4 1 0 0 0 0 0 0\r5 0 0 0 0 0 1 0\r6 0 0 0 1 0 0 0\r\r"
},
{
	"uri": "/rlang/sim_1.html",
	"title": "simulation 1",
	"tags": [],
	"description": "基本模擬",
	"content": "\r\r\rsimulate 1\r\r\r身高\r女生\r男生\r\r\r\r\r1\r0\r\r平均\r180\r170\r\r標準差\r10\r10\r\r\r\rfn_num\u0026lt;-100\rfh\u0026lt;-rnorm(fn_num,180,10)\rfm\u0026lt;-rnorm(200-fn_num,170,10)\rheight\u0026lt;-c(fh,fm)\rsex\u0026lt;-c(rep(1,fn_num),rep(0,200-fn_num))\rr1\u0026lt;-tapply(height, sex,mean)\rr1\r 0 1 171 181 \rfn_num_set\u0026lt;-sample(1:199,1000,replace=T) #先抽出female的個數\rrst\u0026lt;-matrix(rep(0,2000),ncol=2) #每一次抽樣男生/女生的平均值\rfor(idx in 1:1000)\r{\rfn_num \u0026lt;-fn_num_set[idx]\rfh\u0026lt;-rnorm(fn_num,180,10)\rfm\u0026lt;-rnorm(200-fn_num,170,10)\rheight\u0026lt;-c(fh,fm)\rsex\u0026lt;-c(rep(1,fn_num),rep(0,200-fn_num))\rr1\u0026lt;-tapply(height, sex,mean)\rrst[idx,1]=r1[1]\rrst[idx,2]=r1[2]\r}\rsummary(rst)\r V1 V2 Min. :151 Min. :165 1st Qu.:169 1st Qu.:179 Median :170 Median :180 Mean :170 Mean :180 3rd Qu.:171 3rd Qu.:181 Max. :181 Max. :200 \r下面這個,好像在rmarkdown 畫不出來\runknown reason !!\nalist\u0026lt;-list(rst[,1],rst[,2])\rdinfo\u0026lt;-lapply(alist,density)\rt1\u0026lt;-sapply(dinfo,function(item){range(item$x)})\rrx\u0026lt;-range(t1)\rt2\u0026lt;-sapply(dinfo,function(item){range(item$y)})\rry\u0026lt;-range(t2)\rplot(dinfo[[1]], xlim = rx, ylim = ry, main = \u0026quot;\u0026quot;)\rfor(i in 1:length(dinfo)) {\rlines(dinfo[[i]], xlim = rx, ylim = ry, col = i)\r} \r轉函數\n總體而言，轉成函數的考慮就是如何避免hard coding。\nplot.multi.density\u0026lt;-function (alist)\r{\rdinfo\u0026lt;-lapply(alist,density)#每組資料，求density\r# 每組資料的x範圍\rt1\u0026lt;-sapply(dinfo,function(item){range(item$x)})\rrx\u0026lt;-range(t1)\r# 每組資料的y範圍\rt2\u0026lt;-sapply(dinfo,function(item){range(item$y)})\rry\u0026lt;-range(t2)\rplot(dinfo[[1]],xlim = rx, ylim = ry, main = \u0026quot;\u0026quot;)\rfor(i in 1:length(dinfo)) {\rlines(dinfo[[i]],xlim = rx, ylim = ry, col = i)\r} } \r討論：上面函數的限制？\r第一個限制，先看看有沒有預設組別\n問題：如果要加上區域顏色？\r簡單一點的話，可以用選項type=“h”, (plot, line兩個函數都吃)\n應用自己的函數\nalist\u0026lt;-list(rst[,1],rst[,2])\rplot.multi.density(alist)\r上面的函數，預設參數是傳入使用者指定的list，裡面有使用者指定的組別\r但是如果因為需要，發現傳入矩陣比較方便（例如每一個欄位代表每一組的模擬結果，那樣怎樣避免hard coding?\nelist\u0026lt;-vector(\u0026quot;list\u0026quot;,ncol(rst))#指定大小的list,如果空集合elist\u0026lt;-list()\rfor(i in 1:ncol(rst)){\relist[[i]]\u0026lt;-rst[,i] #注意雙括號\r}\r之前有提過，大部分的文件都是說單/雙括號的差別是前者拿到的仍然是list,後者拿到的是內容。\r但是以程式語言的眼光來看，我們先說凡是陣列，其元素的型態都只能放一樣（也就是大小固定），但是現在list的元素型態可以不單一，因此，編譯器無法知道如何指派大小，解決辦法就是每一個元素其實都是一個指標。\r（todo: 需要一個圖）\n\r利用套件sm\rThe sm package also includes a way of doing multiple density plots. The data must be in a data frame.\nlibrary(sm)\rPackage \u0026#39;sm\u0026#39;, version 2.2-5.6: type help(sm) for summary information\rrstdf\u0026lt;-data.frame(rst)\rcolnames(rstdf)\u0026lt;-c(\u0026quot;male\u0026quot;,\u0026quot;female\u0026quot;)\rsm.density.compare(rstdf$male, rstdf$female)\r# Add a legend (the color numbers start from 2 and go up)\r#legend(\u0026quot;topright\u0026quot;, levels(data$cond), fill=2+(0:nlevels(data$cond)))\r\rsm 範例\rsm.density.compare(iris$Sepal.Length, iris$Species, xlab=\u0026quot;Species\u0026quot;)\rtitle(main=\u0026quot;Distributions of Species\u0026quot;)\rx \u0026lt;- seq(from = 110, to = 174, by = 0.5)\ry1 \u0026lt;- dnorm(x, mean = 145, sd = 9)\ry2 \u0026lt;- dnorm(x, mean = 138, sd = 8)\rplot(x, y1, type=\u0026quot;l\u0026quot;, lwd=2, col=\u0026quot;red\u0026quot;,\rmain=\u0026quot;Systolic Blood Pressure Before and After Treatment\u0026quot;,\rxlab = \u0026quot;Systolic Blood Pressure (mmHg)\u0026quot;,\rylab = \u0026quot;Frequency\u0026quot;, yaxt=\u0026quot;n\u0026quot;,\rxlim = c(110, 175), ylim = c(0, 0.05))\rlines(x, y2)\rpolygon(c(110,x,175),c(0,y2,0), col=\u0026quot;firebrick3\u0026quot;,\rborder = \u0026quot;black\u0026quot;)\rpolygon(c(117,x,175),c(0,y1,0), col=\u0026quot;dodgerblue4\u0026quot;,\rborder = \u0026quot;black\u0026quot;)\rylab=c(seq(from=0, to=175, by=25))\ry=c(seq(from=0, to=0.05, length.out = 8))\raxis(2,at=y,labels=ylab, las=1)#下左（2），在y向量上標ylab,las 文字和座標的角度\rtext(x = 120, y = 0.045, \u0026quot;- Pre-Treatment BP\u0026quot;, col = \u0026quot;dodgerblue4\u0026quot;, cex = 0.9)\rtext(x = 120, y = 0.04, \u0026quot; - Post-Treatment BP\u0026quot;, col = \u0026quot;firebrick3\u0026quot;, cex = 0.9)\rpoints(109, 0.0445, pch = 15, col = \u0026quot;dodgerblue4\u0026quot;)\rpoints(109, 0.0395, pch = 15, col = \u0026quot;firebrick3\u0026quot;)\r其他測試\nx \u0026lt;- seq(-2, 2, 0.05)\ry1 \u0026lt;- pnorm(x)\ry2 \u0026lt;- pnorm(x,1,1)\rplot(x,y1,type=\u0026quot;l\u0026quot;,col=\u0026quot;red\u0026quot;)\rlines(x,y2,col=\u0026quot;green\u0026quot;)\rplot( x, y1, type=\u0026quot;l\u0026quot;, col=\u0026quot;red\u0026quot; )\rpar(new=TRUE)\rplot( x, y2, type=\u0026quot;l\u0026quot;, col=\u0026quot;green\u0026quot; )\rnote: add=TRUE 有時候不作用，例如plot\nhist( y1 ,col=\u0026quot;red\u0026quot; )\rhist( y2, add=TRUE,col=\u0026quot;blue\u0026quot; )\r\r\r"
},
{
	"uri": "/",
	"title": "test for class",
	"tags": [],
	"description": "web article test",
	"content": "\r\r\r簡介\r紀錄這個很難記的語言\n無關紀錄\n先前的設定tango\n測試紀錄,簡單提要,各種其他文章複製參考\n\r網路資源\r\r可以參考\rrmd cheat sheet\rgitbook\rpimp my rmd\rENDMEMO\rR Package Primer\rs3\r\r\r\r"
},
{
	"uri": "/categories.html",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/topic/test/emo_test.html",
	"title": "emoji_test",
	"tags": [],
	"description": "",
	"content": "\r\r\rR Markdown\r\rExample\rYou can either refer to emoji by their name (which is unique):\nemo::ji(\u0026quot;poop\u0026quot;)\r\u0026lt;U+0001F4A9\u0026gt; \rOr by a keyword. Keywords are not unique so emo::ji will pick one for you at random.\nemo::ji(\u0026quot;face\u0026quot;)\r\u0026lt;U+0001F635\u0026gt; \remo::ji(\u0026quot;face\u0026quot;)\r\u0026lt;U+0001F486\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt; \remo::ji(\u0026quot;face\u0026quot;)\r\u0026lt;U+0001F981\u0026gt; \rOften you’ll use inline like `r emo::ji(\"smile\")` 😄\n\rKeywords\rThese are all keywords with more than one emoji associated with them.\n : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F9B0\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F9B0\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F9B1\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F9B1\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F9B2\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F9B2\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F9B3\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F9B3\u0026gt;\u0026lt;U+0001F9B8\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F9B8\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F9B9\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F9B9\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\r(no specific gender) : \u0026lt;U+0001F9D2\u0026gt;\u0026lt;U+0001F9D1\u0026gt;\u0026lt;U+0001F9D3\u0026gt;\r(non-human color) : \u0026lt;U+0001F9DE\u0026gt;\u0026lt;U+0001F9DF\u0026gt;\r00 : \u0026lt;U+0001F55B\u0026gt;\u0026lt;U+0001F550\u0026gt;\u0026lt;U+0001F551\u0026gt;\u0026lt;U+0001F552\u0026gt;\u0026lt;U+0001F553\u0026gt;\u0026lt;U+0001F554\u0026gt;\u0026lt;U+0001F555\u0026gt;\u0026lt;U+0001F556\u0026gt;\u0026lt;U+0001F557\u0026gt;\u0026lt;U+0001F558\u0026gt;\u0026lt;U+0001F559\u0026gt;\u0026lt;U+0001F55A\u0026gt;\r1 : \u0026lt;U+0001F550\u0026gt;\u0026lt;U+0001F55C\u0026gt;\r10 : \u0026lt;U+0001F559\u0026gt;\u0026lt;U+0001F565\u0026gt;\r11 : \u0026lt;U+0001F55A\u0026gt;\u0026lt;U+0001F566\u0026gt;\r12 : \u0026lt;U+0001F55B\u0026gt;\u0026lt;U+0001F567\u0026gt;\r2 : \u0026lt;U+0001F551\u0026gt;\u0026lt;U+0001F55D\u0026gt;\r3 : \u0026lt;U+0001F552\u0026gt;\u0026lt;U+0001F55E\u0026gt;\r30 : \u0026lt;U+0001F567\u0026gt;\u0026lt;U+0001F55C\u0026gt;\u0026lt;U+0001F55D\u0026gt;\u0026lt;U+0001F55E\u0026gt;\u0026lt;U+0001F55F\u0026gt;\u0026lt;U+0001F560\u0026gt;\u0026lt;U+0001F561\u0026gt;\u0026lt;U+0001F562\u0026gt;\u0026lt;U+0001F563\u0026gt;\u0026lt;U+0001F564\u0026gt;\u0026lt;U+0001F565\u0026gt;\u0026lt;U+0001F566\u0026gt;\r4 : \u0026lt;U+0001F340\u0026gt;\u0026lt;U+0001F553\u0026gt;\u0026lt;U+0001F55F\u0026gt;\r5 : \u0026lt;U+0001F554\u0026gt;\u0026lt;U+0001F560\u0026gt;\r6 : \u0026lt;U+0001F555\u0026gt;\u0026lt;U+0001F561\u0026gt;\r7 : \u0026lt;U+0001F556\u0026gt;\u0026lt;U+0001F562\u0026gt;\r8 : \u0026lt;U+0001F557\u0026gt;\u0026lt;U+0001F563\u0026gt;\u0026lt;U+0001F3B1\u0026gt;\r9 : \u0026lt;U+0001F558\u0026gt;\u0026lt;U+0001F564\u0026gt;\ractor : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A4\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A4\u0026gt;\radmission : \u0026lt;U+0001F39F\u0026gt;\u0026lt;U+0001F3AB\u0026gt;\raeroplane : \u0026lt;U+0001F6E9\u0026gt;\u0026lt;U+0001F6EB\u0026gt;\u0026lt;U+0001F6EC\u0026gt;\rairplane : \u0026lt;U+0001F6E9\u0026gt;\u0026lt;U+0001F6EB\u0026gt;\u0026lt;U+0001F6EC\u0026gt;\ralien : \u0026lt;U+0001F47D\u0026gt;\u0026lt;U+0001F47E\u0026gt;\ralphabet : \u0026lt;U+0001F524\u0026gt;\u0026lt;U+0001F524\u0026gt;\ramusement park : \u0026lt;U+0001F3A1\u0026gt;\u0026lt;U+0001F3A2\u0026gt;\ranchor : \u0026lt;U+2693\u0026gt;\u0026lt;U+0001F531\u0026gt;\rangel : \u0026lt;U+0001F607\u0026gt;\u0026lt;U+0001F607\u0026gt;\u0026lt;U+0001F47C\u0026gt;\rangry : \u0026lt;U+0001F621\u0026gt;\u0026lt;U+0001F621\u0026gt;\u0026lt;U+0001F620\u0026gt;\u0026lt;U+0001F47F\u0026gt;\u0026lt;U+0001F4A2\u0026gt;\u0026lt;U+0001F4A2\u0026gt;\u0026lt;U+0001F5EF\u0026gt;\rantenna : \u0026lt;U+0001F4E1\u0026gt;\u0026lt;U+0001F4F6\u0026gt;\rapology : \u0026lt;U+0001F647\u0026gt;\u0026lt;U+0001F647\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F647\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rapple : \u0026lt;U+0001F34E\u0026gt;\u0026lt;U+0001F34F\u0026gt;\rAquarius : \u0026lt;U+0001F3FA\u0026gt;\u0026lt;U+2652\u0026gt;\rarcher : \u0026lt;U+0001F3F9\u0026gt;\u0026lt;U+2650\u0026gt;\rarchitect : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BC\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BC\u0026gt;\rAries : \u0026lt;U+0001F40F\u0026gt;\u0026lt;U+2648\u0026gt;\rarrow : \u0026lt;U+0001F498\u0026gt;\u0026lt;U+0001F4F2\u0026gt;\u0026lt;U+0001F4E9\u0026gt;\u0026lt;U+0001F3F9\u0026gt;\u0026lt;U+2B06\u0026gt;\u0026lt;U+FE0F\u0026gt;↗\u0026lt;U+FE0F\u0026gt;\u0026lt;U+27A1\u0026gt;\u0026lt;U+FE0F\u0026gt;↘\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2B07\u0026gt;\u0026lt;U+FE0F\u0026gt;↙\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2B05\u0026gt;\u0026lt;U+FE0F\u0026gt;↖\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2195\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+21A9\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+21AA\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2934\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2935\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F503\u0026gt;\u0026lt;U+0001F504\u0026gt;\u0026lt;U+0001F519\u0026gt;\u0026lt;U+0001F51A\u0026gt;\u0026lt;U+0001F51B\u0026gt;\u0026lt;U+0001F51C\u0026gt;\u0026lt;U+0001F51D\u0026gt;\u0026lt;U+0001F500\u0026gt;\u0026lt;U+0001F501\u0026gt;\u0026lt;U+0001F502\u0026gt;\u0026lt;U+25B6\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+23E9\u0026gt;\u0026lt;U+23ED\u0026gt;\u0026lt;U+23EF\u0026gt;\u0026lt;U+25C0\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+23EA\u0026gt;\u0026lt;U+23EE\u0026gt;\u0026lt;U+0001F53C\u0026gt;\u0026lt;U+23EB\u0026gt;\u0026lt;U+0001F53D\u0026gt;\u0026lt;U+23EC\u0026gt;\rart : \u0026lt;U+0001F3AD\u0026gt;\u0026lt;U+0001F5BC\u0026gt;\u0026lt;U+0001F3A8\u0026gt;\rartist : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A8\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A8\u0026gt;\rassembly : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3ED\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3ED\u0026gt;\rastronaut : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F680\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F680\u0026gt;\raubergine : \u0026lt;U+0001F346\u0026gt;\u0026lt;U+0001F346\u0026gt;\rAustralia : \u0026lt;U+0001F998\u0026gt;\u0026lt;U+0001F30F\u0026gt;\rautomobile : \u0026lt;U+0001F697\u0026gt;\u0026lt;U+0001F698\u0026gt;\rautumn : \u0026lt;U+0001F342\u0026gt;\u0026lt;U+0001F96E\u0026gt;\rbaby : \u0026lt;U+0001F476\u0026gt;\u0026lt;U+0001F931\u0026gt;\u0026lt;U+0001F47C\u0026gt;\u0026lt;U+0001F423\u0026gt;\u0026lt;U+0001F424\u0026gt;\u0026lt;U+0001F425\u0026gt;\u0026lt;U+0001F37C\u0026gt;\u0026lt;U+0001F6BC\u0026gt;\rbackhand : \u0026lt;U+0001F448\u0026gt;\u0026lt;U+0001F449\u0026gt;\u0026lt;U+0001F446\u0026gt;\u0026lt;U+0001F447\u0026gt;\u0026lt;U+0001F91A\u0026gt;\rbacteria : \u0026lt;U+0001F9A0\u0026gt;\u0026lt;U+0001F9EB\u0026gt;\rbag : \u0026lt;U+0001F45C\u0026gt;\u0026lt;U+0001F45D\u0026gt;\u0026lt;U+0001F45D\u0026gt;\u0026lt;U+0001F6CD\u0026gt;\u0026lt;U+0001F392\u0026gt;\u0026lt;U+0001F4B0\u0026gt;\rbaggage : \u0026lt;U+0001F6C4\u0026gt;\u0026lt;U+0001F6C5\u0026gt;\rbakery : \u0026lt;U+0001F96F\u0026gt;\u0026lt;U+0001F9C1\u0026gt;\rbalance : \u0026lt;U+0001F939\u0026gt;\u0026lt;U+264E\u0026gt;\rball : \u0026lt;U+0001F3CC\u0026gt;\u0026lt;U+26F9\u0026gt;\u0026lt;U+26F9\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+26F9\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F93E\u0026gt;\u0026lt;U+0001F359\u0026gt;\u0026lt;U+0001F38A\u0026gt;\u0026lt;U+26BD\u0026gt;\u0026lt;U+26BE\u0026gt;\u0026lt;U+0001F94E\u0026gt;\u0026lt;U+0001F3C0\u0026gt;\u0026lt;U+0001F3D0\u0026gt;\u0026lt;U+0001F3C8\u0026gt;\u0026lt;U+0001F3C9\u0026gt;\u0026lt;U+0001F3BE\u0026gt;\u0026lt;U+0001F3B3\u0026gt;\u0026lt;U+0001F3CF\u0026gt;\u0026lt;U+0001F3D1\u0026gt;\u0026lt;U+0001F94D\u0026gt;\u0026lt;U+0001F3D3\u0026gt;\u0026lt;U+0001F3B1\u0026gt;\u0026lt;U+0001F52E\u0026gt;\u0026lt;U+0001F9F6\u0026gt;\rballoon : \u0026lt;U+0001F4AC\u0026gt;\u0026lt;U+0001F5EF\u0026gt;\u0026lt;U+0001F4AD\u0026gt;\u0026lt;U+0001F388\u0026gt;\rbank : \u0026lt;U+0001F3E6\u0026gt;\u0026lt;U+0001F4B4\u0026gt;\u0026lt;U+0001F4B5\u0026gt;\u0026lt;U+0001F4B6\u0026gt;\u0026lt;U+0001F4B7\u0026gt;\u0026lt;U+0001F4B8\u0026gt;\u0026lt;U+0001F4B3\u0026gt;\u0026lt;U+0001F4B9\u0026gt;\u0026lt;U+0001F4B1\u0026gt;\u0026lt;U+0001F3E7\u0026gt;\rbanknote : \u0026lt;U+0001F4B4\u0026gt;\u0026lt;U+0001F4B5\u0026gt;\u0026lt;U+0001F4B6\u0026gt;\u0026lt;U+0001F4B7\u0026gt;\u0026lt;U+0001F4B8\u0026gt;\rbar : \u0026lt;U+0001F36B\u0026gt;\u0026lt;U+0001F376\u0026gt;\u0026lt;U+0001F37E\u0026gt;\u0026lt;U+0001F377\u0026gt;\u0026lt;U+0001F378\u0026gt;\u0026lt;U+0001F379\u0026gt;\u0026lt;U+0001F37A\u0026gt;\u0026lt;U+0001F37B\u0026gt;\u0026lt;U+0001F3EE\u0026gt;\u0026lt;U+0001F4CA\u0026gt;\u0026lt;U+0001F9FC\u0026gt;\u0026lt;U+23F8\u0026gt;\u0026lt;U+0001F4F6\u0026gt;\rbarber : \u0026lt;U+0001F487\u0026gt;\u0026lt;U+0001F488\u0026gt;\rbat : \u0026lt;U+0001F987\u0026gt;\u0026lt;U+0001F3CF\u0026gt;\u0026lt;U+0001F3D3\u0026gt;\rbath : \u0026lt;U+0001F6C0\u0026gt;\u0026lt;U+0001F6BF\u0026gt;\u0026lt;U+0001F6C1\u0026gt;\rbathtub : \u0026lt;U+0001F6C0\u0026gt;\u0026lt;U+0001F6C1\u0026gt;\rbeach : \u0026lt;U+0001F459\u0026gt;\u0026lt;U+0001F41A\u0026gt;\u0026lt;U+0001F3D6\u0026gt;\rbear : \u0026lt;U+0001F43B\u0026gt;\u0026lt;U+0001F428\u0026gt;\rbearer : \u0026lt;U+0001F40D\u0026gt;\u0026lt;U+2652\u0026gt;\u0026lt;U+26CE\u0026gt;\rbeauty : \u0026lt;U+0001F487\u0026gt;\u0026lt;U+0001F485\u0026gt;\rbeer : \u0026lt;U+0001F37A\u0026gt;\u0026lt;U+0001F37B\u0026gt;\rbell : \u0026lt;U+0001F6CE\u0026gt;\u0026lt;U+0001F390\u0026gt;\u0026lt;U+0001F514\u0026gt;\u0026lt;U+0001F515\u0026gt;\rbeverage : \u0026lt;U+2615\u0026gt;\u0026lt;U+0001F375\u0026gt;\u0026lt;U+0001F376\u0026gt;\u0026lt;U+0001F377\u0026gt;\rbicycle : \u0026lt;U+0001F6B4\u0026gt;\u0026lt;U+0001F6B4\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B4\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B5\u0026gt;\u0026lt;U+0001F6B5\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B5\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B2\u0026gt;\u0026lt;U+0001F6B2\u0026gt;\u0026lt;U+0001F6B3\u0026gt;\rbike : \u0026lt;U+0001F6B5\u0026gt;\u0026lt;U+0001F6B5\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B5\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B2\u0026gt;\u0026lt;U+0001F6B3\u0026gt;\rbiking : \u0026lt;U+0001F6B4\u0026gt;\u0026lt;U+0001F6B4\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B4\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B5\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rbill : \u0026lt;U+0001F4B4\u0026gt;\u0026lt;U+0001F4B5\u0026gt;\u0026lt;U+0001F4B6\u0026gt;\u0026lt;U+0001F4B7\u0026gt;\u0026lt;U+0001F4B8\u0026gt;\rbiologist : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F52C\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F52C\u0026gt;\u0026lt;U+0001F9EB\u0026gt;\u0026lt;U+0001F9EC\u0026gt;\rbird : \u0026lt;U+0001F983\u0026gt;\u0026lt;U+0001F414\u0026gt;\u0026lt;U+0001F413\u0026gt;\u0026lt;U+0001F423\u0026gt;\u0026lt;U+0001F424\u0026gt;\u0026lt;U+0001F425\u0026gt;\u0026lt;U+0001F426\u0026gt;\u0026lt;U+0001F427\u0026gt;\u0026lt;U+0001F54A\u0026gt;\u0026lt;U+0001F985\u0026gt;\u0026lt;U+0001F986\u0026gt;\u0026lt;U+0001F9A2\u0026gt;\u0026lt;U+0001F989\u0026gt;\u0026lt;U+0001F99A\u0026gt;\u0026lt;U+0001F99C\u0026gt;\rbirthday : \u0026lt;U+0001F382\u0026gt;\u0026lt;U+0001F388\u0026gt;\u0026lt;U+0001F381\u0026gt;\rblond : \u0026lt;U+0001F471\u0026gt;\u0026lt;U+0001F471\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\rblonde : \u0026lt;U+0001F478\u0026gt;\u0026lt;U+0001F471\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rblood type : \u0026lt;U+0001F170\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F18E\u0026gt;\u0026lt;U+0001F171\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F17E\u0026gt;\u0026lt;U+FE0F\u0026gt;\rblossom : \u0026lt;U+0001F338\u0026gt;\u0026lt;U+0001F33C\u0026gt;\rblow : \u0026lt;U+0001F4A8\u0026gt;\u0026lt;U+0001F343\u0026gt;\u0026lt;U+0001F32C\u0026gt;\rblue : \u0026lt;U+0001F630\u0026gt;\u0026lt;U+0001F499\u0026gt;\u0026lt;U+0001F4D8\u0026gt;\u0026lt;U+0001F537\u0026gt;\u0026lt;U+0001F539\u0026gt;\u0026lt;U+0001F535\u0026gt;\rblush : \u0026lt;U+0001F60A\u0026gt;\u0026lt;U+263A\u0026gt;\u0026lt;U+FE0F\u0026gt;\rboat : \u0026lt;U+0001F6A3\u0026gt;\u0026lt;U+0001F6A3\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6A3\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+26F5\u0026gt;\u0026lt;U+0001F6F6\u0026gt;\u0026lt;U+0001F6A4\u0026gt;\u0026lt;U+26F4\u0026gt;\u0026lt;U+0001F6E5\u0026gt;\u0026lt;U+0001F6A2\u0026gt;\rbody : \u0026lt;U+0001F442\u0026gt;\u0026lt;U+0001F443\u0026gt;\u0026lt;U+0001F441\u0026gt;\u0026lt;U+0001F445\u0026gt;\rbone : \u0026lt;U+0001F356\u0026gt;\u0026lt;U+0001F357\u0026gt;\rbook : \u0026lt;U+0001F4D4\u0026gt;\u0026lt;U+0001F4D5\u0026gt;\u0026lt;U+0001F4D6\u0026gt;\u0026lt;U+0001F4D7\u0026gt;\u0026lt;U+0001F4D8\u0026gt;\u0026lt;U+0001F4D9\u0026gt;\u0026lt;U+0001F4DA\u0026gt;\rbookmark : \u0026lt;U+0001F4D1\u0026gt;\u0026lt;U+0001F516\u0026gt;\rboom : \u0026lt;U+0001F4A3\u0026gt;\u0026lt;U+0001F4A5\u0026gt;\rboot : \u0026lt;U+0001F97E\u0026gt;\u0026lt;U+0001F462\u0026gt;\rbottle : \u0026lt;U+0001F37C\u0026gt;\u0026lt;U+0001F376\u0026gt;\u0026lt;U+0001F37E\u0026gt;\u0026lt;U+0001F37E\u0026gt;\rbow : \u0026lt;U+0001F647\u0026gt;\u0026lt;U+0001F64F\u0026gt;\u0026lt;U+0001F3F9\u0026gt;\rbowing : \u0026lt;U+0001F647\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F647\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rbox : \u0026lt;U+0001F371\u0026gt;\u0026lt;U+0001F381\u0026gt;\u0026lt;U+0001F4E4\u0026gt;\u0026lt;U+0001F4E5\u0026gt;\u0026lt;U+0001F4E6\u0026gt;\u0026lt;U+0001F5F3\u0026gt;\u0026lt;U+0001F5C3\u0026gt;\rboy : \u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F471\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\rbread : \u0026lt;U+0001F35E\u0026gt;\u0026lt;U+0001F950\u0026gt;\u0026lt;U+0001F956\u0026gt;\u0026lt;U+0001F96A\u0026gt;\rbreakfast : \u0026lt;U+0001F373\u0026gt;\u0026lt;U+0001F963\u0026gt;\u0026lt;U+0001F375\u0026gt;\rbright : \u0026lt;U+0001F60E\u0026gt;\u0026lt;U+2600\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F31D\u0026gt;\u0026lt;U+0001F31E\u0026gt;\u0026lt;U+0001F506\u0026gt;\rbrightness : \u0026lt;U+0001F505\u0026gt;\u0026lt;U+0001F506\u0026gt;\rbubble : \u0026lt;U+0001F4AC\u0026gt;\u0026lt;U+0001F5EF\u0026gt;\u0026lt;U+0001F4AD\u0026gt;\rbug : \u0026lt;U+0001F41B\u0026gt;\u0026lt;U+0001F41E\u0026gt;\rbuilding : \u0026lt;U+0001F3E2\u0026gt;\u0026lt;U+0001F3E6\u0026gt;\u0026lt;U+0001F3E8\u0026gt;\u0026lt;U+0001F3EB\u0026gt;\u0026lt;U+0001F3ED\u0026gt;\rbull : \u0026lt;U+0001F402\u0026gt;\u0026lt;U+0001F3AF\u0026gt;\u0026lt;U+2649\u0026gt;\rbunny : \u0026lt;U+0001F46F\u0026gt;\u0026lt;U+0001F46F\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+0001F430\u0026gt;\u0026lt;U+0001F430\u0026gt;\u0026lt;U+0001F407\u0026gt;\rbunny ear : \u0026lt;U+0001F46F\u0026gt;\u0026lt;U+0001F46F\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F46F\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rbus : \u0026lt;U+0001F68C\u0026gt;\u0026lt;U+0001F68D\u0026gt;\u0026lt;U+0001F68E\u0026gt;\u0026lt;U+0001F690\u0026gt;\u0026lt;U+0001F68F\u0026gt;\rbusiness : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BC\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BC\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BC\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BC\u0026gt;\u0026lt;U+0001F574\u0026gt;\u0026lt;U+0001F4BC\u0026gt;\rbust : \u0026lt;U+0001F464\u0026gt;\u0026lt;U+0001F465\u0026gt;\rbutton : \u0026lt;U+0001F53C\u0026gt;\u0026lt;U+0001F53D\u0026gt;\u0026lt;U+0001F518\u0026gt;\u0026lt;U+0001F532\u0026gt;\u0026lt;U+0001F533\u0026gt;\rcable : \u0026lt;U+0001F6A0\u0026gt;\u0026lt;U+0001F6A1\u0026gt;\rcake : \u0026lt;U+0001F365\u0026gt;\u0026lt;U+0001F382\u0026gt;\u0026lt;U+0001F370\u0026gt;\rcalendar : \u0026lt;U+0001F4C5\u0026gt;\u0026lt;U+0001F4C5\u0026gt;\u0026lt;U+0001F4C6\u0026gt;\u0026lt;U+0001F5D3\u0026gt;\rcall : \u0026lt;U+0001F919\u0026gt;\u0026lt;U+0001F4F2\u0026gt;\u0026lt;U+0001F4DE\u0026gt;\rcamel : \u0026lt;U+0001F42A\u0026gt;\u0026lt;U+0001F42B\u0026gt;\rcamera : \u0026lt;U+0001F933\u0026gt;\u0026lt;U+0001F3A5\u0026gt;\u0026lt;U+0001F4F7\u0026gt;\u0026lt;U+0001F4F8\u0026gt;\u0026lt;U+0001F4F9\u0026gt;\u0026lt;U+0001F3A6\u0026gt;\rcamping : \u0026lt;U+0001F97E\u0026gt;\u0026lt;U+0001F3D5\u0026gt;\u0026lt;U+26FA\u0026gt;\rCancer : \u0026lt;U+0001F980\u0026gt;\u0026lt;U+264B\u0026gt;\rcandy : \u0026lt;U+0001F36C\u0026gt;\u0026lt;U+0001F36D\u0026gt;\rCapricorn : \u0026lt;U+0001F410\u0026gt;\u0026lt;U+2651\u0026gt;\rcar : \u0026lt;U+0001F3CE\u0026gt;\u0026lt;U+0001F683\u0026gt;\u0026lt;U+0001F69E\u0026gt;\u0026lt;U+0001F68B\u0026gt;\u0026lt;U+0001F693\u0026gt;\u0026lt;U+0001F694\u0026gt;\u0026lt;U+0001F697\u0026gt;\u0026lt;U+0001F698\u0026gt;\u0026lt;U+0001F6A8\u0026gt;\u0026lt;U+0001F6A1\u0026gt;\rcard : \u0026lt;U+2660\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2665\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2666\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2663\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F0CF\u0026gt;\u0026lt;U+0001F3B4\u0026gt;\u0026lt;U+0001F4B3\u0026gt;\u0026lt;U+0001F5C2\u0026gt;\u0026lt;U+0001F4C7\u0026gt;\u0026lt;U+0001F5C3\u0026gt;\rcardinal : \u0026lt;U+2B06\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+27A1\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2B07\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2B05\u0026gt;\u0026lt;U+FE0F\u0026gt;\rcastle : \u0026lt;U+0001F3EF\u0026gt;\u0026lt;U+0001F3F0\u0026gt;\rcat : \u0026lt;U+0001F63A\u0026gt;\u0026lt;U+0001F638\u0026gt;\u0026lt;U+0001F639\u0026gt;\u0026lt;U+0001F63B\u0026gt;\u0026lt;U+0001F63C\u0026gt;\u0026lt;U+0001F63D\u0026gt;\u0026lt;U+0001F640\u0026gt;\u0026lt;U+0001F63F\u0026gt;\u0026lt;U+0001F63E\u0026gt;\u0026lt;U+0001F431\u0026gt;\u0026lt;U+0001F408\u0026gt;\rcelebration : \u0026lt;U+0001F973\u0026gt;\u0026lt;U+0001F385\u0026gt;\u0026lt;U+0001F936\u0026gt;\u0026lt;U+0001F64C\u0026gt;\u0026lt;U+0001F393\u0026gt;\u0026lt;U+0001F382\u0026gt;\u0026lt;U+0001F37E\u0026gt;\u0026lt;U+0001F383\u0026gt;\u0026lt;U+0001F384\u0026gt;\u0026lt;U+0001F386\u0026gt;\u0026lt;U+0001F387\u0026gt;\u0026lt;U+0001F388\u0026gt;\u0026lt;U+0001F389\u0026gt;\u0026lt;U+0001F38A\u0026gt;\u0026lt;U+0001F38B\u0026gt;\u0026lt;U+0001F38D\u0026gt;\u0026lt;U+0001F38E\u0026gt;\u0026lt;U+0001F38F\u0026gt;\u0026lt;U+0001F390\u0026gt;\u0026lt;U+0001F391\u0026gt;\u0026lt;U+0001F380\u0026gt;\u0026lt;U+0001F381\u0026gt;\u0026lt;U+0001F397\u0026gt;\u0026lt;U+0001F396\u0026gt;\u0026lt;U+0001F38C\u0026gt;\rcell : \u0026lt;U+0001F4F1\u0026gt;\u0026lt;U+0001F4F2\u0026gt;\u0026lt;U+0001F4F5\u0026gt;\u0026lt;U+0001F4F6\u0026gt;\u0026lt;U+0001F4F3\u0026gt;\u0026lt;U+0001F4F4\u0026gt;\rchart : \u0026lt;U+0001F4B9\u0026gt;\u0026lt;U+0001F4C8\u0026gt;\u0026lt;U+0001F4C9\u0026gt;\u0026lt;U+0001F4CA\u0026gt;\rcheese : \u0026lt;U+0001F9C0\u0026gt;\u0026lt;U+0001F355\u0026gt;\rchef : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F373\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F373\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F373\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F373\u0026gt;\rchemist : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F52C\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F52C\u0026gt;\u0026lt;U+0001F9EA\u0026gt;\rcherry : \u0026lt;U+0001F338\u0026gt;\u0026lt;U+0001F352\u0026gt;\rchick : \u0026lt;U+0001F423\u0026gt;\u0026lt;U+0001F424\u0026gt;\u0026lt;U+0001F425\u0026gt;\rchicken : \u0026lt;U+0001F414\u0026gt;\u0026lt;U+0001F357\u0026gt;\u0026lt;U+0001F357\u0026gt;\rchild : \u0026lt;U+0001F476\u0026gt;\u0026lt;U+0001F9D2\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F46A\u0026gt;\u0026lt;U+0001F6B8\u0026gt;\rchop : \u0026lt;U+0001F969\u0026gt;\u0026lt;U+0001F52A\u0026gt;\rchristmas : \u0026lt;U+0001F385\u0026gt;\u0026lt;U+2603\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F381\u0026gt;\rChristmas : \u0026lt;U+0001F385\u0026gt;\u0026lt;U+0001F936\u0026gt;\u0026lt;U+0001F384\u0026gt;\rcigarette : \u0026lt;U+0001F6AC\u0026gt;\u0026lt;U+0001F6AC\u0026gt;\rcinema : \u0026lt;U+0001F3A5\u0026gt;\u0026lt;U+0001F39E\u0026gt;\u0026lt;U+0001F4FD\u0026gt;\u0026lt;U+0001F3A6\u0026gt;\rcircle : \u0026lt;U+23FA\u0026gt;\u0026lt;U+2B55\u0026gt;\u0026lt;U+24C2\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+26AA\u0026gt;\u0026lt;U+26AB\u0026gt;\u0026lt;U+0001F534\u0026gt;\u0026lt;U+0001F535\u0026gt;\rcity : \u0026lt;U+0001F3D9\u0026gt;\u0026lt;U+0001F306\u0026gt;\rclaus : \u0026lt;U+0001F385\u0026gt;\u0026lt;U+0001F936\u0026gt;\rcleaning : \u0026lt;U+0001F9F9\u0026gt;\u0026lt;U+0001F9FC\u0026gt;\u0026lt;U+0001F9FD\u0026gt;\rclenched : \u0026lt;U+270A\u0026gt;\u0026lt;U+0001F44A\u0026gt;\rclimber : \u0026lt;U+0001F9D7\u0026gt;\u0026lt;U+0001F9D7\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F9D7\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\rclink : \u0026lt;U+0001F37B\u0026gt;\u0026lt;U+0001F942\u0026gt;\rclock : \u0026lt;U+231A\u0026gt;\u0026lt;U+23F0\u0026gt;\u0026lt;U+23F1\u0026gt;\u0026lt;U+23F2\u0026gt;\u0026lt;U+0001F570\u0026gt;\u0026lt;U+0001F55B\u0026gt;\u0026lt;U+0001F567\u0026gt;\u0026lt;U+0001F550\u0026gt;\u0026lt;U+0001F55C\u0026gt;\u0026lt;U+0001F551\u0026gt;\u0026lt;U+0001F55D\u0026gt;\u0026lt;U+0001F552\u0026gt;\u0026lt;U+0001F55E\u0026gt;\u0026lt;U+0001F553\u0026gt;\u0026lt;U+0001F55F\u0026gt;\u0026lt;U+0001F554\u0026gt;\u0026lt;U+0001F560\u0026gt;\u0026lt;U+0001F555\u0026gt;\u0026lt;U+0001F561\u0026gt;\u0026lt;U+0001F556\u0026gt;\u0026lt;U+0001F562\u0026gt;\u0026lt;U+0001F557\u0026gt;\u0026lt;U+0001F563\u0026gt;\u0026lt;U+0001F558\u0026gt;\u0026lt;U+0001F564\u0026gt;\u0026lt;U+0001F559\u0026gt;\u0026lt;U+0001F565\u0026gt;\u0026lt;U+0001F55A\u0026gt;\u0026lt;U+0001F566\u0026gt;\rclockwise : \u0026lt;U+0001F503\u0026gt;\u0026lt;U+0001F501\u0026gt;\u0026lt;U+0001F502\u0026gt;\rclosed : \u0026lt;U+0001F61A\u0026gt;\u0026lt;U+0001F4D5\u0026gt;\u0026lt;U+0001F4EB\u0026gt;\u0026lt;U+0001F4EA\u0026gt;\u0026lt;U+0001F512\u0026gt;\u0026lt;U+0001F510\u0026gt;\rclothing : \u0026lt;U+0001F463\u0026gt;\u0026lt;U+0001F453\u0026gt;\u0026lt;U+0001F454\u0026gt;\u0026lt;U+0001F455\u0026gt;\u0026lt;U+0001F456\u0026gt;\u0026lt;U+0001F457\u0026gt;\u0026lt;U+0001F458\u0026gt;\u0026lt;U+0001F459\u0026gt;\u0026lt;U+0001F45A\u0026gt;\u0026lt;U+0001F45B\u0026gt;\u0026lt;U+0001F45C\u0026gt;\u0026lt;U+0001F45D\u0026gt;\u0026lt;U+0001F45E\u0026gt;\u0026lt;U+0001F45F\u0026gt;\u0026lt;U+0001F460\u0026gt;\u0026lt;U+0001F461\u0026gt;\u0026lt;U+0001F462\u0026gt;\u0026lt;U+0001F451\u0026gt;\u0026lt;U+0001F452\u0026gt;\u0026lt;U+0001F3A9\u0026gt;\u0026lt;U+0001F393\u0026gt;\u0026lt;U+0001F4FF\u0026gt;\u0026lt;U+0001F302\u0026gt;\u0026lt;U+2602\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2614\u0026gt;\rcloud : \u0026lt;U+26C5\u0026gt;\u0026lt;U+26C8\u0026gt;\u0026lt;U+0001F324\u0026gt;\u0026lt;U+0001F325\u0026gt;\u0026lt;U+0001F326\u0026gt;\u0026lt;U+0001F327\u0026gt;\u0026lt;U+0001F328\u0026gt;\u0026lt;U+0001F329\u0026gt;\u0026lt;U+0001F32A\u0026gt;\u0026lt;U+0001F32B\u0026gt;\u0026lt;U+0001F32C\u0026gt;\rclue : \u0026lt;U+0001F9E9\u0026gt;\u0026lt;U+0001F5DD\u0026gt;\rcoder : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BB\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BB\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BB\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BB\u0026gt;\rcold : \u0026lt;U+0001F605\u0026gt;\u0026lt;U+0001F613\u0026gt;\u0026lt;U+0001F630\u0026gt;\u0026lt;U+0001F976\u0026gt;\u0026lt;U+0001F637\u0026gt;\u0026lt;U+0001F3D4\u0026gt;\u0026lt;U+0001F328\u0026gt;\u0026lt;U+2744\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2603\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+26C4\u0026gt;\u0026lt;U+0001F4A7\u0026gt;\rcomic : \u0026lt;U+0001F4A9\u0026gt;\u0026lt;U+0001F4AA\u0026gt;\u0026lt;U+0001F4A4\u0026gt;\u0026lt;U+0001F4A2\u0026gt;\u0026lt;U+0001F4A3\u0026gt;\u0026lt;U+0001F4A5\u0026gt;\u0026lt;U+0001F4A6\u0026gt;\u0026lt;U+0001F4A8\u0026gt;\u0026lt;U+0001F4AB\u0026gt;\u0026lt;U+0001F4AC\u0026gt;\u0026lt;U+0001F4AD\u0026gt;\u0026lt;U+0001F4A7\u0026gt;\u0026lt;U+0001F4A1\u0026gt;\u0026lt;U+0001F4A0\u0026gt;\rcomputer : \u0026lt;U+0001F4BB\u0026gt;\u0026lt;U+0001F5A5\u0026gt;\u0026lt;U+0001F5A8\u0026gt;\u0026lt;U+0001F5B1\u0026gt;\u0026lt;U+0001F5B2\u0026gt;\u0026lt;U+0001F4BD\u0026gt;\u0026lt;U+0001F4BE\u0026gt;\u0026lt;U+0001F4BF\u0026gt;\u0026lt;U+0001F4C0\u0026gt;\rconfused : \u0026lt;U+0001F615\u0026gt;\u0026lt;U+2753\u0026gt;\rconstruction : \u0026lt;U+0001F477\u0026gt;\u0026lt;U+0001F477\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F477\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F3D7\u0026gt;\u0026lt;U+0001F6A7\u0026gt;\rcontrol : \u0026lt;U+0001F39B\u0026gt;\u0026lt;U+0001F6C2\u0026gt;\rcontroller : \u0026lt;U+0001F3AE\u0026gt;\u0026lt;U+0001F3AE\u0026gt;\rcook : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F373\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F373\u0026gt;\rcooking : \u0026lt;U+0001F373\u0026gt;\u0026lt;U+0001F37D\u0026gt;\u0026lt;U+0001F374\u0026gt;\u0026lt;U+0001F52A\u0026gt;\u0026lt;U+0001F3FA\u0026gt;\rcool : \u0026lt;U+0001F60E\u0026gt;\u0026lt;U+0001F60E\u0026gt;\u0026lt;U+0001F192\u0026gt;\rcop : \u0026lt;U+0001F46E\u0026gt;\u0026lt;U+0001F46E\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F46E\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rcosmetics : \u0026lt;U+0001F485\u0026gt;\u0026lt;U+0001F484\u0026gt;\rcouple : \u0026lt;U+0001F46B\u0026gt;\u0026lt;U+0001F46C\u0026gt;\u0026lt;U+0001F46C\u0026gt;\u0026lt;U+0001F46D\u0026gt;\u0026lt;U+0001F46D\u0026gt;\u0026lt;U+0001F48F\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F48B\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F48B\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F48B\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+0001F491\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\rcouple with heart : \u0026lt;U+0001F491\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\rcow : \u0026lt;U+0001F42E\u0026gt;\u0026lt;U+0001F404\u0026gt;\rcrab : \u0026lt;U+0001F980\u0026gt;\u0026lt;U+264B\u0026gt;\rcream : \u0026lt;U+0001F366\u0026gt;\u0026lt;U+0001F368\u0026gt;\u0026lt;U+0001F4B0\u0026gt;\rcreature : \u0026lt;U+0001F479\u0026gt;\u0026lt;U+0001F47A\u0026gt;\u0026lt;U+0001F47B\u0026gt;\u0026lt;U+0001F47D\u0026gt;\u0026lt;U+0001F47E\u0026gt;\rcrescent : \u0026lt;U+0001F312\u0026gt;\u0026lt;U+0001F318\u0026gt;\u0026lt;U+0001F319\u0026gt;\rcross : \u0026lt;U+0001F91E\u0026gt;\u0026lt;U+26D1\u0026gt;\u0026lt;U+26EA\u0026gt;\u0026lt;U+0001F38C\u0026gt;\rcrossed : \u0026lt;U+0001F500\u0026gt;\u0026lt;U+0001F38C\u0026gt;\rcrown : \u0026lt;U+0001F934\u0026gt;\u0026lt;U+0001F478\u0026gt;\u0026lt;U+0001F451\u0026gt;\rcrush : \u0026lt;U+0001F60D\u0026gt;\u0026lt;U+0001F970\u0026gt;\rcry : \u0026lt;U+0001F622\u0026gt;\u0026lt;U+0001F62D\u0026gt;\u0026lt;U+0001F62D\u0026gt;\u0026lt;U+0001F63F\u0026gt;\rcup : \u0026lt;U+0001F375\u0026gt;\u0026lt;U+0001F376\u0026gt;\rcurl : \u0026lt;U+0001F4C3\u0026gt;\u0026lt;U+27B0\u0026gt;\u0026lt;U+27BF\u0026gt;\rcurrency : \u0026lt;U+0001F4B4\u0026gt;\u0026lt;U+0001F4B5\u0026gt;\u0026lt;U+0001F4B6\u0026gt;\u0026lt;U+0001F4B7\u0026gt;\u0026lt;U+0001F4B9\u0026gt;\u0026lt;U+0001F4B1\u0026gt;\u0026lt;U+0001F4B2\u0026gt;\rcurry : \u0026lt;U+0001F958\u0026gt;\u0026lt;U+0001F35B\u0026gt;\rcut : \u0026lt;U+0001F52A\u0026gt;\u0026lt;U+2702\u0026gt;\u0026lt;U+FE0F\u0026gt;\rcutlery : \u0026lt;U+0001F374\u0026gt;\u0026lt;U+0001F374\u0026gt;\rcyclist : \u0026lt;U+0001F6B4\u0026gt;\u0026lt;U+0001F6B4\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B4\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B5\u0026gt;\u0026lt;U+0001F6B5\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B5\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rdancer : \u0026lt;U+0001F57A\u0026gt;\u0026lt;U+0001F46F\u0026gt;\u0026lt;U+0001F46F\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F46F\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rdanger : \u0026lt;U+0001F480\u0026gt;\u0026lt;U+2620\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+26A1\u0026gt;\rdark : \u0026lt;U+0001F576\u0026gt;\u0026lt;U+0001F311\u0026gt;\rdate : \u0026lt;U+0001F46B\u0026gt;\u0026lt;U+0001F46C\u0026gt;\u0026lt;U+0001F46D\u0026gt;\u0026lt;U+0001F4C5\u0026gt;\rdesert : \u0026lt;U+0001F42A\u0026gt;\u0026lt;U+0001F3DC\u0026gt;\u0026lt;U+0001F3DD\u0026gt;\rdesktop : \u0026lt;U+0001F4BB\u0026gt;\u0026lt;U+0001F5A5\u0026gt;\rdessert : \u0026lt;U+0001F361\u0026gt;\u0026lt;U+0001F366\u0026gt;\u0026lt;U+0001F367\u0026gt;\u0026lt;U+0001F368\u0026gt;\u0026lt;U+0001F369\u0026gt;\u0026lt;U+0001F36A\u0026gt;\u0026lt;U+0001F382\u0026gt;\u0026lt;U+0001F370\u0026gt;\u0026lt;U+0001F370\u0026gt;\u0026lt;U+0001F36B\u0026gt;\u0026lt;U+0001F36C\u0026gt;\u0026lt;U+0001F36D\u0026gt;\u0026lt;U+0001F36E\u0026gt;\rdetective : \u0026lt;U+0001F575\u0026gt;\u0026lt;U+0001F575\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F575\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rdeveloper : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BB\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BB\u0026gt;\rdevil : \u0026lt;U+0001F608\u0026gt;\u0026lt;U+0001F47F\u0026gt;\u0026lt;U+0001F47F\u0026gt;\rdialog : \u0026lt;U+0001F4AC\u0026gt;\u0026lt;U+0001F5E8\u0026gt;\u0026lt;U+FE0F\u0026gt;\rdiamond : \u0026lt;U+0001F48D\u0026gt;\u0026lt;U+0001F48E\u0026gt;\u0026lt;U+0001F48E\u0026gt;\u0026lt;U+0001F536\u0026gt;\u0026lt;U+0001F537\u0026gt;\u0026lt;U+0001F538\u0026gt;\u0026lt;U+0001F539\u0026gt;\u0026lt;U+0001F4A0\u0026gt;\rdice : \u0026lt;U+0001F3B2\u0026gt;\u0026lt;U+0001F3B2\u0026gt;\rdirection : \u0026lt;U+2B06\u0026gt;\u0026lt;U+FE0F\u0026gt;↗\u0026lt;U+FE0F\u0026gt;\u0026lt;U+27A1\u0026gt;\u0026lt;U+FE0F\u0026gt;↘\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2B07\u0026gt;\u0026lt;U+FE0F\u0026gt;↙\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2B05\u0026gt;\u0026lt;U+FE0F\u0026gt;↖\u0026lt;U+FE0F\u0026gt;\rdisappointed : \u0026lt;U+0001F625\u0026gt;\u0026lt;U+0001F61E\u0026gt;\rdisbelief : \u0026lt;U+0001F928\u0026gt;\u0026lt;U+0001F926\u0026gt;\rdisk : \u0026lt;U+0001F4BD\u0026gt;\u0026lt;U+0001F4BE\u0026gt;\u0026lt;U+0001F4BF\u0026gt;\u0026lt;U+0001F4C0\u0026gt;\rdizzy : \u0026lt;U+0001F635\u0026gt;\u0026lt;U+0001F974\u0026gt;\u0026lt;U+0001F4AB\u0026gt;\u0026lt;U+0001F300\u0026gt;\rdjinn : \u0026lt;U+0001F9DE\u0026gt;\u0026lt;U+0001F9DE\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F9DE\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\rdoctor : \u0026lt;U+0001F637\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2695\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2695\u0026gt;\u0026lt;U+0001F97C\u0026gt;\u0026lt;U+0001F3E5\u0026gt;\u0026lt;U+0001F489\u0026gt;\u0026lt;U+0001F48A\u0026gt;\rdocument : \u0026lt;U+0001F4C3\u0026gt;\u0026lt;U+0001F4DC\u0026gt;\u0026lt;U+0001F4C4\u0026gt;\u0026lt;U+0001F4DD\u0026gt;\rdog : \u0026lt;U+0001F436\u0026gt;\u0026lt;U+0001F415\u0026gt;\u0026lt;U+0001F429\u0026gt;\u0026lt;U+0001F429\u0026gt;\rdollar : \u0026lt;U+0001F4B0\u0026gt;\u0026lt;U+0001F4B0\u0026gt;\u0026lt;U+0001F4B5\u0026gt;\u0026lt;U+0001F4B8\u0026gt;\u0026lt;U+0001F4B8\u0026gt;\u0026lt;U+0001F4B2\u0026gt;\rdouble : \u0026lt;U+23E9\u0026gt;\u0026lt;U+23EA\u0026gt;\u0026lt;U+23EB\u0026gt;\u0026lt;U+23EC\u0026gt;\u0026lt;U+23F8\u0026gt;\u0026lt;U+27BF\u0026gt;\rdown : \u0026lt;U+0001F447\u0026gt;\u0026lt;U+0001F44E\u0026gt;\u0026lt;U+0001F4E9\u0026gt;\u0026lt;U+0001F4C9\u0026gt;\u0026lt;U+2B07\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2935\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F53D\u0026gt;\u0026lt;U+23EC\u0026gt;\u0026lt;U+0001F53B\u0026gt;\rDracula : \u0026lt;U+0001F9DB\u0026gt;\u0026lt;U+0001F9DB\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\rdragon : \u0026lt;U+0001F432\u0026gt;\u0026lt;U+0001F409\u0026gt;\rdress : \u0026lt;U+0001F483\u0026gt;\u0026lt;U+0001F457\u0026gt;\rdrink : \u0026lt;U+0001F37C\u0026gt;\u0026lt;U+0001F95B\u0026gt;\u0026lt;U+2615\u0026gt;\u0026lt;U+0001F375\u0026gt;\u0026lt;U+0001F376\u0026gt;\u0026lt;U+0001F37E\u0026gt;\u0026lt;U+0001F377\u0026gt;\u0026lt;U+0001F378\u0026gt;\u0026lt;U+0001F378\u0026gt;\u0026lt;U+0001F379\u0026gt;\u0026lt;U+0001F37A\u0026gt;\u0026lt;U+0001F37A\u0026gt;\u0026lt;U+0001F37B\u0026gt;\u0026lt;U+0001F942\u0026gt;\u0026lt;U+0001F3FA\u0026gt;\rdrop : \u0026lt;U+2614\u0026gt;\u0026lt;U+0001F4A7\u0026gt;\rdrum : \u0026lt;U+0001F6E2\u0026gt;\u0026lt;U+0001F941\u0026gt;\rdusk : \u0026lt;U+0001F306\u0026gt;\u0026lt;U+0001F307\u0026gt;\re-mail : \u0026lt;U+0001F4E7\u0026gt;\u0026lt;U+0001F4E8\u0026gt;\u0026lt;U+0001F4E9\u0026gt;\rear : \u0026lt;U+0001F442\u0026gt;\u0026lt;U+0001F33E\u0026gt;\u0026lt;U+0001F33D\u0026gt;\rearth : \u0026lt;U+0001F30D\u0026gt;\u0026lt;U+0001F30E\u0026gt;\u0026lt;U+0001F30F\u0026gt;\u0026lt;U+0001F310\u0026gt;\regg : \u0026lt;U+0001F95A\u0026gt;\u0026lt;U+0001F373\u0026gt;\reight : \u0026lt;U+0001F557\u0026gt;\u0026lt;U+0001F563\u0026gt;\u0026lt;U+0001F3B1\u0026gt;\relectric : \u0026lt;U+0001F683\u0026gt;\u0026lt;U+26A1\u0026gt;\u0026lt;U+0001F50C\u0026gt;\u0026lt;U+0001F4A1\u0026gt;\u0026lt;U+0001F526\u0026gt;\relectrician : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F527\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F527\u0026gt;\relectricity : \u0026lt;U+26A1\u0026gt;\u0026lt;U+0001F50C\u0026gt;\releven : \u0026lt;U+0001F55A\u0026gt;\u0026lt;U+0001F566\u0026gt;\remail : \u0026lt;U+0001F48C\u0026gt;\u0026lt;U+0001F4E7\u0026gt;\u0026lt;U+0001F4E8\u0026gt;\u0026lt;U+0001F4E9\u0026gt;\remergency : \u0026lt;U+0001F6A8\u0026gt;\u0026lt;U+0001F198\u0026gt;\rengine : \u0026lt;U+0001F682\u0026gt;\u0026lt;U+0001F692\u0026gt;\rengineer : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F52C\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F52C\u0026gt;\rentertainer : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A4\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A4\u0026gt;\rentry : \u0026lt;U+26D4\u0026gt;\u0026lt;U+0001F6AB\u0026gt;\renvelope : \u0026lt;U+0001F48C\u0026gt;\u0026lt;U+0001F4E8\u0026gt;\u0026lt;U+0001F4E9\u0026gt;\rEuropean : \u0026lt;U+0001F3E4\u0026gt;\u0026lt;U+0001F3F0\u0026gt;\revil : \u0026lt;U+0001F608\u0026gt;\u0026lt;U+0001F47F\u0026gt;\u0026lt;U+0001F648\u0026gt;\u0026lt;U+0001F649\u0026gt;\u0026lt;U+0001F64A\u0026gt;\u0026lt;U+0001F9B9\u0026gt;\u0026lt;U+0001F5A4\u0026gt;\rexcited : \u0026lt;U+0001F496\u0026gt;\u0026lt;U+0001F497\u0026gt;\rexclamation : \u0026lt;U+203C\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2049\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2755\u0026gt;\u0026lt;U+2757\u0026gt;\rexercise : \u0026lt;U+0001F3C3\u0026gt;\u0026lt;U+0001F3C3\u0026gt;\u0026lt;U+200D\u0026gt;♀\rexperiment : \u0026lt;U+0001F97C\u0026gt;\u0026lt;U+0001F9EA\u0026gt;\rextraterrestrial : \u0026lt;U+0001F47D\u0026gt;\u0026lt;U+0001F47E\u0026gt;\reye : \u0026lt;U+0001F601\u0026gt;\u0026lt;U+0001F604\u0026gt;\u0026lt;U+0001F60A\u0026gt;\u0026lt;U+0001F60E\u0026gt;\u0026lt;U+0001F60D\u0026gt;\u0026lt;U+0001F619\u0026gt;\u0026lt;U+0001F61A\u0026gt;\u0026lt;U+0001F61C\u0026gt;\u0026lt;U+0001F61D\u0026gt;\u0026lt;U+0001F92A\u0026gt;\u0026lt;U+0001F638\u0026gt;\u0026lt;U+0001F63B\u0026gt;\u0026lt;U+0001F63D\u0026gt;\u0026lt;U+0001F440\u0026gt;\u0026lt;U+0001F441\u0026gt;\u0026lt;U+0001F441\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F5E8\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F453\u0026gt;\u0026lt;U+0001F576\u0026gt;\u0026lt;U+0001F3AF\u0026gt;\reyes : \u0026lt;U+0001F929\u0026gt;\u0026lt;U+0001F644\u0026gt;\u0026lt;U+0001F440\u0026gt;\reyewear : \u0026lt;U+0001F60E\u0026gt;\u0026lt;U+0001F453\u0026gt;\u0026lt;U+0001F576\u0026gt;\rface : \u0026lt;U+0001F600\u0026gt;\u0026lt;U+0001F601\u0026gt;\u0026lt;U+0001F602\u0026gt;\u0026lt;U+0001F923\u0026gt;\u0026lt;U+0001F603\u0026gt;\u0026lt;U+0001F604\u0026gt;\u0026lt;U+0001F605\u0026gt;\u0026lt;U+0001F606\u0026gt;\u0026lt;U+0001F609\u0026gt;\u0026lt;U+0001F60A\u0026gt;\u0026lt;U+0001F60B\u0026gt;\u0026lt;U+0001F60E\u0026gt;\u0026lt;U+0001F60D\u0026gt;\u0026lt;U+0001F618\u0026gt;\u0026lt;U+0001F617\u0026gt;\u0026lt;U+0001F619\u0026gt;\u0026lt;U+0001F61A\u0026gt;\u0026lt;U+263A\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F642\u0026gt;\u0026lt;U+0001F917\u0026gt;\u0026lt;U+0001F929\u0026gt;\u0026lt;U+0001F914\u0026gt;\u0026lt;U+0001F610\u0026gt;\u0026lt;U+0001F611\u0026gt;\u0026lt;U+0001F636\u0026gt;\u0026lt;U+0001F644\u0026gt;\u0026lt;U+0001F60F\u0026gt;\u0026lt;U+0001F623\u0026gt;\u0026lt;U+0001F625\u0026gt;\u0026lt;U+0001F62E\u0026gt;\u0026lt;U+0001F910\u0026gt;\u0026lt;U+0001F62F\u0026gt;\u0026lt;U+0001F62A\u0026gt;\u0026lt;U+0001F62B\u0026gt;\u0026lt;U+0001F634\u0026gt;\u0026lt;U+0001F60C\u0026gt;\u0026lt;U+0001F61B\u0026gt;\u0026lt;U+0001F61C\u0026gt;\u0026lt;U+0001F61D\u0026gt;\u0026lt;U+0001F924\u0026gt;\u0026lt;U+0001F612\u0026gt;\u0026lt;U+0001F613\u0026gt;\u0026lt;U+0001F614\u0026gt;\u0026lt;U+0001F615\u0026gt;\u0026lt;U+0001F643\u0026gt;\u0026lt;U+0001F911\u0026gt;\u0026lt;U+0001F632\u0026gt;\u0026lt;U+0001F641\u0026gt;\u0026lt;U+0001F616\u0026gt;\u0026lt;U+0001F61E\u0026gt;\u0026lt;U+0001F61F\u0026gt;\u0026lt;U+0001F624\u0026gt;\u0026lt;U+0001F622\u0026gt;\u0026lt;U+0001F62D\u0026gt;\u0026lt;U+0001F626\u0026gt;\u0026lt;U+0001F627\u0026gt;\u0026lt;U+0001F628\u0026gt;\u0026lt;U+0001F629\u0026gt;\u0026lt;U+0001F62C\u0026gt;\u0026lt;U+0001F630\u0026gt;\u0026lt;U+0001F631\u0026gt;\u0026lt;U+0001F633\u0026gt;\u0026lt;U+0001F635\u0026gt;\u0026lt;U+0001F621\u0026gt;\u0026lt;U+0001F620\u0026gt;\u0026lt;U+0001F637\u0026gt;\u0026lt;U+0001F912\u0026gt;\u0026lt;U+0001F915\u0026gt;\u0026lt;U+0001F922\u0026gt;\u0026lt;U+0001F927\u0026gt;\u0026lt;U+0001F607\u0026gt;\u0026lt;U+0001F920\u0026gt;\u0026lt;U+0001F925\u0026gt;\u0026lt;U+0001F913\u0026gt;\u0026lt;U+0001F608\u0026gt;\u0026lt;U+0001F47F\u0026gt;\u0026lt;U+0001F921\u0026gt;\u0026lt;U+0001F479\u0026gt;\u0026lt;U+0001F47A\u0026gt;\u0026lt;U+0001F480\u0026gt;\u0026lt;U+0001F47B\u0026gt;\u0026lt;U+0001F47D\u0026gt;\u0026lt;U+0001F47E\u0026gt;\u0026lt;U+0001F916\u0026gt;\u0026lt;U+0001F4A9\u0026gt;\u0026lt;U+0001F63A\u0026gt;\u0026lt;U+0001F638\u0026gt;\u0026lt;U+0001F639\u0026gt;\u0026lt;U+0001F63B\u0026gt;\u0026lt;U+0001F63C\u0026gt;\u0026lt;U+0001F63D\u0026gt;\u0026lt;U+0001F640\u0026gt;\u0026lt;U+0001F63F\u0026gt;\u0026lt;U+0001F63E\u0026gt;\u0026lt;U+0001F648\u0026gt;\u0026lt;U+0001F649\u0026gt;\u0026lt;U+0001F64A\u0026gt;\u0026lt;U+0001F47C\u0026gt;\u0026lt;U+0001F926\u0026gt;\u0026lt;U+0001F486\u0026gt;\u0026lt;U+0001F486\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F486\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F5E3\u0026gt;\u0026lt;U+0001F440\u0026gt;\u0026lt;U+26D1\u0026gt;\u0026lt;U+0001F435\u0026gt;\u0026lt;U+0001F436\u0026gt;\u0026lt;U+0001F43A\u0026gt;\u0026lt;U+0001F98A\u0026gt;\u0026lt;U+0001F431\u0026gt;\u0026lt;U+0001F981\u0026gt;\u0026lt;U+0001F42F\u0026gt;\u0026lt;U+0001F434\u0026gt;\u0026lt;U+0001F984\u0026gt;\u0026lt;U+0001F42E\u0026gt;\u0026lt;U+0001F437\u0026gt;\u0026lt;U+0001F43D\u0026gt;\u0026lt;U+0001F42D\u0026gt;\u0026lt;U+0001F439\u0026gt;\u0026lt;U+0001F430\u0026gt;\u0026lt;U+0001F43B\u0026gt;\u0026lt;U+0001F43C\u0026gt;\u0026lt;U+0001F438\u0026gt;\u0026lt;U+0001F432\u0026gt;\u0026lt;U+0001F433\u0026gt;\u0026lt;U+0001F31A\u0026gt;\u0026lt;U+0001F31B\u0026gt;\u0026lt;U+0001F31C\u0026gt;\u0026lt;U+0001F31D\u0026gt;\u0026lt;U+0001F31E\u0026gt;\u0026lt;U+0001F32C\u0026gt;\u0026lt;U+0001F5FF\u0026gt;\rfactory : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3ED\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3ED\u0026gt;\u0026lt;U+0001F3ED\u0026gt;\rfairy tale : \u0026lt;U+0001F607\u0026gt;\u0026lt;U+0001F608\u0026gt;\u0026lt;U+0001F47F\u0026gt;\u0026lt;U+0001F479\u0026gt;\u0026lt;U+0001F47A\u0026gt;\u0026lt;U+0001F480\u0026gt;\u0026lt;U+0001F47B\u0026gt;\u0026lt;U+0001F47D\u0026gt;\u0026lt;U+0001F47E\u0026gt;\u0026lt;U+0001F478\u0026gt;\u0026lt;U+0001F47C\u0026gt;\u0026lt;U+0001F432\u0026gt;\u0026lt;U+0001F409\u0026gt;\u0026lt;U+0001F52E\u0026gt;\rfalling : \u0026lt;U+0001F341\u0026gt;\u0026lt;U+0001F342\u0026gt;\u0026lt;U+0001F320\u0026gt;\rfamily : \u0026lt;U+0001F46A\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\rfantasy : \u0026lt;U+0001F607\u0026gt;\u0026lt;U+0001F608\u0026gt;\u0026lt;U+0001F47F\u0026gt;\u0026lt;U+0001F479\u0026gt;\u0026lt;U+0001F47A\u0026gt;\u0026lt;U+0001F47B\u0026gt;\u0026lt;U+0001F47D\u0026gt;\u0026lt;U+0001F47E\u0026gt;\u0026lt;U+0001F478\u0026gt;\u0026lt;U+0001F47C\u0026gt;\u0026lt;U+0001F52E\u0026gt;\rfarmer : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F33E\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F33E\u0026gt;\rfast : \u0026lt;U+0001F4A8\u0026gt;\u0026lt;U+23E9\u0026gt;\rfather : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+0001F385\u0026gt;\rfavor : \u0026lt;U+0001F647\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F647\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rfear : \u0026lt;U+0001F628\u0026gt;\u0026lt;U+0001F631\u0026gt;\rfearful : \u0026lt;U+0001F628\u0026gt;\u0026lt;U+0001F631\u0026gt;\rfeet : \u0026lt;U+0001F463\u0026gt;\u0026lt;U+0001F43E\u0026gt;\rfestival : \u0026lt;U+0001F96E\u0026gt;\u0026lt;U+0001F386\u0026gt;\u0026lt;U+0001F38E\u0026gt;\rfile : \u0026lt;U+0001F4C1\u0026gt;\u0026lt;U+0001F4C2\u0026gt;\u0026lt;U+0001F5C3\u0026gt;\u0026lt;U+0001F5C4\u0026gt;\rfilm : \u0026lt;U+0001F3A5\u0026gt;\u0026lt;U+0001F39E\u0026gt;\u0026lt;U+0001F4FD\u0026gt;\u0026lt;U+0001F3AC\u0026gt;\u0026lt;U+0001F3A6\u0026gt;\u0026lt;U+0001F3A6\u0026gt;\rfinger : \u0026lt;U+0001F448\u0026gt;\u0026lt;U+0001F449\u0026gt;\u0026lt;U+261D\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F446\u0026gt;\u0026lt;U+0001F595\u0026gt;\u0026lt;U+0001F447\u0026gt;\u0026lt;U+0001F91E\u0026gt;\u0026lt;U+0001F596\u0026gt;\u0026lt;U+0001F918\u0026gt;\u0026lt;U+0001F590\u0026gt;\rfire : \u0026lt;U+0001F692\u0026gt;\u0026lt;U+0001F525\u0026gt;\u0026lt;U+0001F9EF\u0026gt;\rfirefighter : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F692\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F692\u0026gt;\rfiretruck : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F692\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F692\u0026gt;\rfireworks : \u0026lt;U+0001F386\u0026gt;\u0026lt;U+0001F387\u0026gt;\u0026lt;U+0001F9E8\u0026gt;\rfish : \u0026lt;U+0001F41F\u0026gt;\u0026lt;U+0001F420\u0026gt;\u0026lt;U+0001F421\u0026gt;\u0026lt;U+0001F988\u0026gt;\u0026lt;U+0001F365\u0026gt;\u0026lt;U+0001F3A3\u0026gt;\u0026lt;U+2653\u0026gt;\rfist : \u0026lt;U+270A\u0026gt;\u0026lt;U+0001F44A\u0026gt;\u0026lt;U+0001F91B\u0026gt;\u0026lt;U+0001F91C\u0026gt;\rfive : \u0026lt;U+0001F554\u0026gt;\u0026lt;U+0001F560\u0026gt;\rflag : \u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1E9\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1EB\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1F4\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1F6\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1FA\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1FC\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1FD\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1FF\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1E9\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1EB\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1ED\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1EF\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1F4\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1F6\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1FB\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1FC\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1FE\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1FF\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1E9\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1EB\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1ED\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1F4\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1FA\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1FB\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1FC\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1FD\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1FE\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1FF\u0026gt;\u0026lt;U+0001F1E9\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1E9\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1E9\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1E9\u0026gt;\u0026lt;U+0001F1EF\u0026gt;\u0026lt;U+0001F1E9\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1E9\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1E9\u0026gt;\u0026lt;U+0001F1F4\u0026gt;\u0026lt;U+0001F1E9\u0026gt;\u0026lt;U+0001F1FF\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1ED\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1FA\u0026gt;\u0026lt;U+0001F1EB\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1EB\u0026gt;\u0026lt;U+0001F1EF\u0026gt;\u0026lt;U+0001F1EB\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1EB\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1EB\u0026gt;\u0026lt;U+0001F1F4\u0026gt;\u0026lt;U+0001F1EB\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1E9\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1EB\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1ED\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1F6\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1FA\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1FC\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1FE\u0026gt;\u0026lt;U+0001F1ED\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1ED\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1ED\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1ED\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1ED\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1ED\u0026gt;\u0026lt;U+0001F1FA\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1E9\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1F4\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1F6\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1EF\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1EF\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1EF\u0026gt;\u0026lt;U+0001F1F4\u0026gt;\u0026lt;U+0001F1EF\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1ED\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1FC\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1FE\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1FF\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1FA\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1FB\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1FE\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1E9\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1EB\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1ED\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1F4\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1F6\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1FA\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1FB\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1FC\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1FD\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1FE\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1FF\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1EB\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1F4\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1FA\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1FF\u0026gt;\u0026lt;U+0001F1F4\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1EB\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1ED\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1FC\u0026gt;\u0026lt;U+0001F1F5\u0026gt;\u0026lt;U+0001F1FE\u0026gt;\u0026lt;U+0001F1F6\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1F4\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1FA\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1FC\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1E7\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1E9\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1ED\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1EF\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1F4\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1FB\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1FD\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1FE\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1FF\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1E9\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1EB\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1ED\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1EF\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1F1\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1F4\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1FB\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1FC\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1FF\u0026gt;\u0026lt;U+0001F1FA\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1FA\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1FA\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1FA\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1FA\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1FA\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1FA\u0026gt;\u0026lt;U+0001F1FE\u0026gt;\u0026lt;U+0001F1FA\u0026gt;\u0026lt;U+0001F1FF\u0026gt;\u0026lt;U+0001F1FB\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1FB\u0026gt;\u0026lt;U+0001F1E8\u0026gt;\u0026lt;U+0001F1FB\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1FB\u0026gt;\u0026lt;U+0001F1EC\u0026gt;\u0026lt;U+0001F1FB\u0026gt;\u0026lt;U+0001F1EE\u0026gt;\u0026lt;U+0001F1FB\u0026gt;\u0026lt;U+0001F1F3\u0026gt;\u0026lt;U+0001F1FB\u0026gt;\u0026lt;U+0001F1FA\u0026gt;\u0026lt;U+0001F1FC\u0026gt;\u0026lt;U+0001F1EB\u0026gt;\u0026lt;U+0001F1FC\u0026gt;\u0026lt;U+0001F1F8\u0026gt;\u0026lt;U+0001F1FD\u0026gt;\u0026lt;U+0001F1F0\u0026gt;\u0026lt;U+0001F1FE\u0026gt;\u0026lt;U+0001F1EA\u0026gt;\u0026lt;U+0001F1FE\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1FF\u0026gt;\u0026lt;U+0001F1E6\u0026gt;\u0026lt;U+0001F1FF\u0026gt;\u0026lt;U+0001F1F2\u0026gt;\u0026lt;U+0001F1FF\u0026gt;\u0026lt;U+0001F1FC\u0026gt;\u0026lt;U+0001F3F4\u0026gt;\u0026lt;U+000E0067\u0026gt;\u0026lt;U+000E0062\u0026gt;\u0026lt;U+000E0065\u0026gt;\u0026lt;U+000E006E\u0026gt;\u0026lt;U+000E0067\u0026gt;\u0026lt;U+000E007F\u0026gt;\u0026lt;U+0001F3F4\u0026gt;\u0026lt;U+000E0067\u0026gt;\u0026lt;U+000E0062\u0026gt;\u0026lt;U+000E0073\u0026gt;\u0026lt;U+000E0063\u0026gt;\u0026lt;U+000E0074\u0026gt;\u0026lt;U+000E007F\u0026gt;\u0026lt;U+0001F3F4\u0026gt;\u0026lt;U+000E0067\u0026gt;\u0026lt;U+000E0062\u0026gt;\u0026lt;U+000E0077\u0026gt;\u0026lt;U+000E006C\u0026gt;\u0026lt;U+000E0073\u0026gt;\u0026lt;U+000E007F\u0026gt;\rflex : \u0026lt;U+0001F4AA\u0026gt;\u0026lt;U+0001F4AA\u0026gt;\rflight : \u0026lt;U+2708\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6E9\u0026gt;\rflirt : \u0026lt;U+0001F609\u0026gt;\u0026lt;U+0001F618\u0026gt;\rflower : \u0026lt;U+0001F490\u0026gt;\u0026lt;U+0001F338\u0026gt;\u0026lt;U+0001F338\u0026gt;\u0026lt;U+0001F4AE\u0026gt;\u0026lt;U+0001F339\u0026gt;\u0026lt;U+0001F940\u0026gt;\u0026lt;U+0001F33A\u0026gt;\u0026lt;U+0001F33B\u0026gt;\u0026lt;U+0001F33C\u0026gt;\u0026lt;U+0001F337\u0026gt;\u0026lt;U+0001F3B4\u0026gt;\rfly : \u0026lt;U+0001F54A\u0026gt;\u0026lt;U+0001F4B8\u0026gt;\rfog : \u0026lt;U+0001F301\u0026gt;\u0026lt;U+0001F32B\u0026gt;\rfolder : \u0026lt;U+0001F4C1\u0026gt;\u0026lt;U+0001F4C2\u0026gt;\rfood : \u0026lt;U+0001F990\u0026gt;\u0026lt;U+0001F991\u0026gt;\u0026lt;U+0001F95D\u0026gt;\u0026lt;U+0001F951\u0026gt;\u0026lt;U+0001F954\u0026gt;\u0026lt;U+0001F955\u0026gt;\u0026lt;U+0001F952\u0026gt;\u0026lt;U+0001F95C\u0026gt;\u0026lt;U+0001F950\u0026gt;\u0026lt;U+0001F956\u0026gt;\u0026lt;U+0001F95E\u0026gt;\u0026lt;U+0001F953\u0026gt;\u0026lt;U+0001F959\u0026gt;\u0026lt;U+0001F95A\u0026gt;\u0026lt;U+0001F958\u0026gt;\u0026lt;U+0001F957\u0026gt;\rfootball : \u0026lt;U+26BD\u0026gt;\u0026lt;U+0001F3C8\u0026gt;\u0026lt;U+0001F3C9\u0026gt;\rforbidden : \u0026lt;U+0001F648\u0026gt;\u0026lt;U+0001F649\u0026gt;\u0026lt;U+0001F64A\u0026gt;\u0026lt;U+0001F645\u0026gt;\u0026lt;U+0001F645\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F645\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F515\u0026gt;\u0026lt;U+26D4\u0026gt;\u0026lt;U+0001F6AB\u0026gt;\u0026lt;U+0001F6B3\u0026gt;\u0026lt;U+0001F6AD\u0026gt;\u0026lt;U+0001F6AF\u0026gt;\u0026lt;U+0001F6B7\u0026gt;\u0026lt;U+0001F4F5\u0026gt;\u0026lt;U+0001F51E\u0026gt;\rfork : \u0026lt;U+0001F37D\u0026gt;\u0026lt;U+0001F374\u0026gt;\rfortune : \u0026lt;U+0001F52E\u0026gt;\u0026lt;U+0001F52F\u0026gt;\rfountain : \u0026lt;U+26F2\u0026gt;\u0026lt;U+0001F58B\u0026gt;\rfour : \u0026lt;U+0001F340\u0026gt;\u0026lt;U+0001F553\u0026gt;\u0026lt;U+0001F55F\u0026gt;\rfrench : \u0026lt;U+0001F950\u0026gt;\u0026lt;U+0001F956\u0026gt;\u0026lt;U+0001F35F\u0026gt;\u0026lt;U+0001F1EB\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\rfrown : \u0026lt;U+0001F641\u0026gt;\u0026lt;U+0001F626\u0026gt;\u0026lt;U+0001F64D\u0026gt;\rfrowning : \u0026lt;U+0001F64D\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F64D\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rfruit : \u0026lt;U+0001F347\u0026gt;\u0026lt;U+0001F348\u0026gt;\u0026lt;U+0001F349\u0026gt;\u0026lt;U+0001F34A\u0026gt;\u0026lt;U+0001F34B\u0026gt;\u0026lt;U+0001F34C\u0026gt;\u0026lt;U+0001F34C\u0026gt;\u0026lt;U+0001F34D\u0026gt;\u0026lt;U+0001F34E\u0026gt;\u0026lt;U+0001F34F\u0026gt;\u0026lt;U+0001F34F\u0026gt;\u0026lt;U+0001F350\u0026gt;\u0026lt;U+0001F351\u0026gt;\u0026lt;U+0001F352\u0026gt;\u0026lt;U+0001F352\u0026gt;\u0026lt;U+0001F353\u0026gt;\u0026lt;U+0001F353\u0026gt;\u0026lt;U+0001F95D\u0026gt;\u0026lt;U+0001F345\u0026gt;\u0026lt;U+0001F951\u0026gt;\u0026lt;U+0001F967\u0026gt;\rfull : \u0026lt;U+0001F315\u0026gt;\u0026lt;U+0001F31D\u0026gt;\u0026lt;U+0001F4AF\u0026gt;\rgame : \u0026lt;U+0001F47E\u0026gt;\u0026lt;U+0001F3D0\u0026gt;\u0026lt;U+0001F3B3\u0026gt;\u0026lt;U+0001F3CF\u0026gt;\u0026lt;U+0001F3D1\u0026gt;\u0026lt;U+0001F3D2\u0026gt;\u0026lt;U+0001F3D3\u0026gt;\u0026lt;U+0001F3F8\u0026gt;\u0026lt;U+0001F94C\u0026gt;\u0026lt;U+0001F3AF\u0026gt;\u0026lt;U+0001F3B1\u0026gt;\u0026lt;U+0001F3AE\u0026gt;\u0026lt;U+0001F579\u0026gt;\u0026lt;U+0001F3B0\u0026gt;\u0026lt;U+0001F3B2\u0026gt;\u0026lt;U+2660\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2665\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2666\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2663\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F0CF\u0026gt;\u0026lt;U+0001F004\u0026gt;\u0026lt;U+0001F3B4\u0026gt;\rgardener : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F33E\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F33E\u0026gt;\rgeek : \u0026lt;U+0001F913\u0026gt;\u0026lt;U+0001F913\u0026gt;\rGemini : \u0026lt;U+0001F46C\u0026gt;\u0026lt;U+264A\u0026gt;\rgender-neutral : \u0026lt;U+0001F9D2\u0026gt;\u0026lt;U+0001F9D1\u0026gt;\u0026lt;U+0001F9D3\u0026gt;\rgeometric : \u0026lt;U+25FD\u0026gt;\u0026lt;U+25FE\u0026gt;\u0026lt;U+2B1B\u0026gt;\u0026lt;U+2B1C\u0026gt;\u0026lt;U+0001F536\u0026gt;\u0026lt;U+0001F537\u0026gt;\u0026lt;U+0001F538\u0026gt;\u0026lt;U+0001F539\u0026gt;\u0026lt;U+0001F53A\u0026gt;\u0026lt;U+0001F53B\u0026gt;\u0026lt;U+0001F4A0\u0026gt;\u0026lt;U+0001F518\u0026gt;\u0026lt;U+0001F532\u0026gt;\u0026lt;U+0001F533\u0026gt;\u0026lt;U+26AA\u0026gt;\u0026lt;U+26AB\u0026gt;\u0026lt;U+0001F534\u0026gt;\u0026lt;U+0001F535\u0026gt;\rgesture : \u0026lt;U+0001F648\u0026gt;\u0026lt;U+0001F649\u0026gt;\u0026lt;U+0001F64A\u0026gt;\u0026lt;U+0001F64D\u0026gt;\u0026lt;U+0001F64D\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F64D\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F64E\u0026gt;\u0026lt;U+0001F64E\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F64E\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F645\u0026gt;\u0026lt;U+0001F645\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F645\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F646\u0026gt;\u0026lt;U+0001F646\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F646\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F64B\u0026gt;\u0026lt;U+0001F64B\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F64B\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F647\u0026gt;\u0026lt;U+0001F647\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F647\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F64C\u0026gt;\u0026lt;U+0001F64F\u0026gt;\rgibbous : \u0026lt;U+0001F314\u0026gt;\u0026lt;U+0001F316\u0026gt;\rgift : \u0026lt;U+0001F9E7\u0026gt;\u0026lt;U+0001F381\u0026gt;\rgirl : \u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\rglass : \u0026lt;U+0001F95B\u0026gt;\u0026lt;U+0001F377\u0026gt;\u0026lt;U+0001F378\u0026gt;\u0026lt;U+0001F942\u0026gt;\u0026lt;U+0001F943\u0026gt;\u0026lt;U+0001F50D\u0026gt;\u0026lt;U+0001F50E\u0026gt;\rglasses : \u0026lt;U+0001F60E\u0026gt;\u0026lt;U+0001F913\u0026gt;\u0026lt;U+0001F453\u0026gt;\u0026lt;U+0001F576\u0026gt;\rglobe : \u0026lt;U+0001F30D\u0026gt;\u0026lt;U+0001F30D\u0026gt;\u0026lt;U+0001F30E\u0026gt;\u0026lt;U+0001F30E\u0026gt;\u0026lt;U+0001F30F\u0026gt;\u0026lt;U+0001F30F\u0026gt;\u0026lt;U+0001F310\u0026gt;\rglove : \u0026lt;U+0001F94E\u0026gt;\u0026lt;U+0001F94A\u0026gt;\rgoal : \u0026lt;U+0001F94D\u0026gt;\u0026lt;U+0001F945\u0026gt;\rgoat : \u0026lt;U+0001F410\u0026gt;\u0026lt;U+2651\u0026gt;\rgold : \u0026lt;U+0001F3C5\u0026gt;\u0026lt;U+0001F947\u0026gt;\rgolf : \u0026lt;U+0001F3CC\u0026gt;\u0026lt;U+0001F3CC\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F3CC\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+26F3\u0026gt;\rgondola : \u0026lt;U+0001F6A0\u0026gt;\u0026lt;U+0001F6A1\u0026gt;\rgraduate : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F393\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F393\u0026gt;\rgraduation : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F393\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F393\u0026gt;\u0026lt;U+0001F393\u0026gt;\u0026lt;U+0001F393\u0026gt;\rgraph : \u0026lt;U+0001F4B9\u0026gt;\u0026lt;U+0001F4C8\u0026gt;\u0026lt;U+0001F4C8\u0026gt;\u0026lt;U+0001F4C9\u0026gt;\u0026lt;U+0001F4C9\u0026gt;\u0026lt;U+0001F4CA\u0026gt;\rgreen : \u0026lt;U+0001F49A\u0026gt;\u0026lt;U+0001F34F\u0026gt;\u0026lt;U+0001F957\u0026gt;\u0026lt;U+0001F375\u0026gt;\u0026lt;U+0001F4D7\u0026gt;\u0026lt;U+267B\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F530\u0026gt;\rgrin : \u0026lt;U+0001F600\u0026gt;\u0026lt;U+0001F601\u0026gt;\u0026lt;U+0001F638\u0026gt;\rgroom : \u0026lt;U+0001F935\u0026gt;\u0026lt;U+0001F935\u0026gt;\rgrowth : \u0026lt;U+0001F4B9\u0026gt;\u0026lt;U+0001F4C8\u0026gt;\rguard : \u0026lt;U+0001F482\u0026gt;\u0026lt;U+0001F482\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F482\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rgym : \u0026lt;U+0001F3CB\u0026gt;\u0026lt;U+0001F3CB\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rhaha : \u0026lt;U+0001F603\u0026gt;\u0026lt;U+0001F606\u0026gt;\rhaircut : \u0026lt;U+0001F487\u0026gt;\u0026lt;U+0001F487\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F487\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F488\u0026gt;\rhalloween : \u0026lt;U+0001F47B\u0026gt;\u0026lt;U+0001F383\u0026gt;\u0026lt;U+0001F383\u0026gt;\rhalt : \u0026lt;U+0001F645\u0026gt;\u0026lt;U+0001F645\u0026gt;\u0026lt;U+200D\u0026gt;♂\rhammer : \u0026lt;U+0001F528\u0026gt;\u0026lt;U+2692\u0026gt;\u0026lt;U+0001F6E0\u0026gt;\rhand : \u0026lt;U+0001F645\u0026gt;\u0026lt;U+0001F645\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F645\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F646\u0026gt;\u0026lt;U+0001F646\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F646\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F481\u0026gt;\u0026lt;U+0001F64B\u0026gt;\u0026lt;U+0001F46B\u0026gt;\u0026lt;U+0001F46C\u0026gt;\u0026lt;U+0001F46D\u0026gt;\u0026lt;U+0001F448\u0026gt;\u0026lt;U+0001F449\u0026gt;\u0026lt;U+261D\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F446\u0026gt;\u0026lt;U+0001F595\u0026gt;\u0026lt;U+0001F447\u0026gt;\u0026lt;U+270C\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F91E\u0026gt;\u0026lt;U+0001F596\u0026gt;\u0026lt;U+0001F918\u0026gt;\u0026lt;U+0001F919\u0026gt;\u0026lt;U+0001F590\u0026gt;\u0026lt;U+270B\u0026gt;\u0026lt;U+0001F44C\u0026gt;\u0026lt;U+0001F44D\u0026gt;\u0026lt;U+0001F44E\u0026gt;\u0026lt;U+270A\u0026gt;\u0026lt;U+0001F44A\u0026gt;\u0026lt;U+0001F44B\u0026gt;\u0026lt;U+0001F91F\u0026gt;\u0026lt;U+0001F44F\u0026gt;\u0026lt;U+0001F450\u0026gt;\u0026lt;U+0001F64C\u0026gt;\u0026lt;U+0001F64F\u0026gt;\u0026lt;U+0001F91D\u0026gt;\u0026lt;U+0001F9E4\u0026gt;\rhappy : \u0026lt;U+0001F600\u0026gt;\u0026lt;U+0001F603\u0026gt;\u0026lt;U+0001F604\u0026gt;\u0026lt;U+0001F606\u0026gt;\u0026lt;U+0001F64B\u0026gt;\rhat : \u0026lt;U+0001F920\u0026gt;\u0026lt;U+0001F973\u0026gt;\u0026lt;U+0001F477\u0026gt;\u0026lt;U+0001F472\u0026gt;\u0026lt;U+0001F452\u0026gt;\u0026lt;U+0001F3A9\u0026gt;\u0026lt;U+0001F393\u0026gt;\u0026lt;U+26D1\u0026gt;\rhealth : \u0026lt;U+0001F489\u0026gt;\u0026lt;U+0001F48A\u0026gt;\rhear : \u0026lt;U+0001F649\u0026gt;\u0026lt;U+0001F442\u0026gt;\rheart : \u0026lt;U+0001F498\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F49F\u0026gt;\u0026lt;U+0001F48C\u0026gt;\rhelmet : \u0026lt;U+0001F477\u0026gt;\u0026lt;U+26D1\u0026gt;\rhelp : \u0026lt;U+0001F481\u0026gt;\u0026lt;U+0001F198\u0026gt;\u0026lt;U+0001F198\u0026gt;\rhike : \u0026lt;U+0001F6B6\u0026gt;\u0026lt;U+0001F6B6\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B6\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rhockey : \u0026lt;U+0001F3D1\u0026gt;\u0026lt;U+0001F3D2\u0026gt;\rhold : \u0026lt;U+0001F46B\u0026gt;\u0026lt;U+0001F46C\u0026gt;\u0026lt;U+0001F46D\u0026gt;\rhole : \u0026lt;U+0001F573\u0026gt;\u0026lt;U+26F3\u0026gt;\rhome : \u0026lt;U+0001F46A\u0026gt;\u0026lt;U+0001F3E0\u0026gt;\u0026lt;U+0001F3E1\u0026gt;\rhooray : \u0026lt;U+0001F64C\u0026gt;\u0026lt;U+0001F64C\u0026gt;\u0026lt;U+0001F389\u0026gt;\rhorn : \u0026lt;U+0001F973\u0026gt;\u0026lt;U+0001F4EF\u0026gt;\rhorns : \u0026lt;U+0001F608\u0026gt;\u0026lt;U+0001F608\u0026gt;\u0026lt;U+0001F47F\u0026gt;\u0026lt;U+0001F918\u0026gt;\rhorror : \u0026lt;U+0001F631\u0026gt;\u0026lt;U+0001F640\u0026gt;\rhorse : \u0026lt;U+0001F3C7\u0026gt;\u0026lt;U+0001F434\u0026gt;\u0026lt;U+0001F40E\u0026gt;\u0026lt;U+0001F3A0\u0026gt;\rhospital : \u0026lt;U+0001F3E5\u0026gt;\u0026lt;U+0001F489\u0026gt;\rhot : \u0026lt;U+0001F605\u0026gt;\u0026lt;U+0001F975\u0026gt;\u0026lt;U+0001F336\u0026gt;\u0026lt;U+2615\u0026gt;\u0026lt;U+2668\u0026gt;\u0026lt;U+FE0F\u0026gt;\rhotel : \u0026lt;U+0001F6CC\u0026gt;\u0026lt;U+0001F6CD\u0026gt;\u0026lt;U+0001F3E8\u0026gt;\u0026lt;U+0001F3E9\u0026gt;\u0026lt;U+0001F6CE\u0026gt;\u0026lt;U+0001F6CF\u0026gt;\u0026lt;U+0001F6CB\u0026gt;\rhouse : \u0026lt;U+0001F3DA\u0026gt;\u0026lt;U+0001F3E0\u0026gt;\u0026lt;U+0001F3E1\u0026gt;\rhump : \u0026lt;U+0001F42A\u0026gt;\u0026lt;U+0001F42B\u0026gt;\rhurt : \u0026lt;U+0001F915\u0026gt;\u0026lt;U+0001F915\u0026gt;\rhush : \u0026lt;U+0001F910\u0026gt;\u0026lt;U+0001F64A\u0026gt;\rice : \u0026lt;U+0001F366\u0026gt;\u0026lt;U+0001F367\u0026gt;\u0026lt;U+0001F368\u0026gt;\u0026lt;U+0001F3D2\u0026gt;\u0026lt;U+26F8\u0026gt;\ridea : \u0026lt;U+0001F4A1\u0026gt;\u0026lt;U+0001F4A1\u0026gt;\rideograph : \u0026lt;U+0001F237\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F236\u0026gt;\u0026lt;U+0001F22F\u0026gt;\u0026lt;U+0001F250\u0026gt;\u0026lt;U+0001F239\u0026gt;\u0026lt;U+0001F21A\u0026gt;\u0026lt;U+0001F232\u0026gt;\u0026lt;U+0001F251\u0026gt;\u0026lt;U+0001F238\u0026gt;\u0026lt;U+0001F234\u0026gt;\u0026lt;U+0001F233\u0026gt;祝\u0026lt;U+FE0F\u0026gt;秘\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F23A\u0026gt;\u0026lt;U+0001F235\u0026gt;\rill : \u0026lt;U+0001F637\u0026gt;\u0026lt;U+0001F912\u0026gt;\rincoming : \u0026lt;U+0001F4F2\u0026gt;\u0026lt;U+0001F4E8\u0026gt;\rindex : \u0026lt;U+0001F448\u0026gt;\u0026lt;U+0001F449\u0026gt;\u0026lt;U+261D\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F446\u0026gt;\u0026lt;U+0001F447\u0026gt;\u0026lt;U+0001F5C2\u0026gt;\u0026lt;U+0001F4C7\u0026gt;\rindustrial : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3ED\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3ED\u0026gt;\rinformation : \u0026lt;U+0001F481\u0026gt;\u0026lt;U+0001F481\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+2139\u0026gt;\u0026lt;U+FE0F\u0026gt;\rinput : \u0026lt;U+0001F520\u0026gt;\u0026lt;U+0001F521\u0026gt;\u0026lt;U+0001F522\u0026gt;\u0026lt;U+0001F523\u0026gt;\u0026lt;U+0001F524\u0026gt;\rinsect : \u0026lt;U+0001F98B\u0026gt;\u0026lt;U+0001F41B\u0026gt;\u0026lt;U+0001F41C\u0026gt;\u0026lt;U+0001F41D\u0026gt;\u0026lt;U+0001F41E\u0026gt;\u0026lt;U+0001F577\u0026gt;\u0026lt;U+0001F99F\u0026gt;\rinstructor : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3EB\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3EB\u0026gt;\rinstrument : \u0026lt;U+0001F3B7\u0026gt;\u0026lt;U+0001F3B8\u0026gt;\u0026lt;U+0001F3B9\u0026gt;\u0026lt;U+0001F3BA\u0026gt;\u0026lt;U+0001F3BB\u0026gt;\rintercardinal : ↗\u0026lt;U+FE0F\u0026gt;↘\u0026lt;U+FE0F\u0026gt;↙\u0026lt;U+FE0F\u0026gt;↖\u0026lt;U+FE0F\u0026gt;\rinternational : \u0026lt;U+0001F30D\u0026gt;\u0026lt;U+0001F30E\u0026gt;\u0026lt;U+0001F30F\u0026gt;\u0026lt;U+0001F310\u0026gt;\rinventor : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BB\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BB\u0026gt;\rislam : \u0026lt;U+0001F54C\u0026gt;\u0026lt;U+0001F54B\u0026gt;\rJapanese : \u0026lt;U+0001F359\u0026gt;\u0026lt;U+0001F361\u0026gt;\u0026lt;U+0001F3E3\u0026gt;\u0026lt;U+0001F3EF\u0026gt;\u0026lt;U+0001F38B\u0026gt;\u0026lt;U+0001F38D\u0026gt;\u0026lt;U+0001F38E\u0026gt;\u0026lt;U+0001F3B4\u0026gt;\u0026lt;U+0001F530\u0026gt;\u0026lt;U+0001F201\u0026gt;\u0026lt;U+0001F202\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F237\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F236\u0026gt;\u0026lt;U+0001F22F\u0026gt;\u0026lt;U+0001F250\u0026gt;\u0026lt;U+0001F239\u0026gt;\u0026lt;U+0001F21A\u0026gt;\u0026lt;U+0001F232\u0026gt;\u0026lt;U+0001F251\u0026gt;\u0026lt;U+0001F238\u0026gt;\u0026lt;U+0001F234\u0026gt;\u0026lt;U+0001F233\u0026gt;祝\u0026lt;U+FE0F\u0026gt;秘\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F23A\u0026gt;\u0026lt;U+0001F235\u0026gt;\u0026lt;U+0001F38C\u0026gt;\rJew : \u0026lt;U+0001F54D\u0026gt;\u0026lt;U+2721\u0026gt;\u0026lt;U+FE0F\u0026gt;\rJewish : \u0026lt;U+0001F54D\u0026gt;\u0026lt;U+2721\u0026gt;\u0026lt;U+FE0F\u0026gt;\rjoy : \u0026lt;U+0001F602\u0026gt;\u0026lt;U+0001F603\u0026gt;\u0026lt;U+0001F604\u0026gt;\u0026lt;U+0001F639\u0026gt;\rjustice : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2696\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2696\u0026gt;\u0026lt;U+264E\u0026gt;\rkatakana : \u0026lt;U+0001F201\u0026gt;\u0026lt;U+0001F202\u0026gt;\u0026lt;U+FE0F\u0026gt;\rkebab : \u0026lt;U+0001F959\u0026gt;\u0026lt;U+0001F362\u0026gt;\rkey : \u0026lt;U+0001F510\u0026gt;\u0026lt;U+0001F511\u0026gt;\u0026lt;U+0001F5DD\u0026gt;\rkeycap : #\u0026lt;U+FE0F\u0026gt;\u0026lt;U+20E3\u0026gt;*\u0026lt;U+FE0F\u0026gt;\u0026lt;U+20E3\u0026gt;0\u0026lt;U+FE0F\u0026gt;\u0026lt;U+20E3\u0026gt;1\u0026lt;U+FE0F\u0026gt;\u0026lt;U+20E3\u0026gt;2\u0026lt;U+FE0F\u0026gt;\u0026lt;U+20E3\u0026gt;3\u0026lt;U+FE0F\u0026gt;\u0026lt;U+20E3\u0026gt;4\u0026lt;U+FE0F\u0026gt;\u0026lt;U+20E3\u0026gt;5\u0026lt;U+FE0F\u0026gt;\u0026lt;U+20E3\u0026gt;6\u0026lt;U+FE0F\u0026gt;\u0026lt;U+20E3\u0026gt;7\u0026lt;U+FE0F\u0026gt;\u0026lt;U+20E3\u0026gt;8\u0026lt;U+FE0F\u0026gt;\u0026lt;U+20E3\u0026gt;9\u0026lt;U+FE0F\u0026gt;\u0026lt;U+20E3\u0026gt;\u0026lt;U+0001F51F\u0026gt;\rkick : \u0026lt;U+0001F9B5\u0026gt;\u0026lt;U+0001F9B6\u0026gt;\u0026lt;U+0001F6F4\u0026gt;\rking : \u0026lt;U+0001F451\u0026gt;\u0026lt;U+0001F451\u0026gt;\rkiss : \u0026lt;U+0001F618\u0026gt;\u0026lt;U+0001F617\u0026gt;\u0026lt;U+0001F619\u0026gt;\u0026lt;U+0001F61A\u0026gt;\u0026lt;U+0001F63D\u0026gt;\u0026lt;U+0001F48F\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F48B\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F48B\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F48B\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+0001F444\u0026gt;\u0026lt;U+0001F48B\u0026gt;\rknife : \u0026lt;U+0001F37D\u0026gt;\u0026lt;U+0001F374\u0026gt;\u0026lt;U+0001F52A\u0026gt;\u0026lt;U+0001F5E1\u0026gt;\rlab : \u0026lt;U+0001F9EA\u0026gt;\u0026lt;U+0001F9EB\u0026gt;\rlantern : \u0026lt;U+0001F383\u0026gt;\u0026lt;U+0001F3EE\u0026gt;\rlatin : \u0026lt;U+0001F520\u0026gt;\u0026lt;U+0001F521\u0026gt;\u0026lt;U+0001F524\u0026gt;\rlaugh : \u0026lt;U+0001F602\u0026gt;\u0026lt;U+0001F923\u0026gt;\u0026lt;U+0001F604\u0026gt;\u0026lt;U+0001F606\u0026gt;\rlavatory : \u0026lt;U+0001F6B9\u0026gt;\u0026lt;U+0001F6BA\u0026gt;\u0026lt;U+0001F6BB\u0026gt;\u0026lt;U+0001F6BE\u0026gt;\rleaf : \u0026lt;U+0001F33F\u0026gt;\u0026lt;U+0001F340\u0026gt;\u0026lt;U+0001F341\u0026gt;\u0026lt;U+0001F342\u0026gt;\u0026lt;U+0001F343\u0026gt;\u0026lt;U+0001F530\u0026gt;\rLeo : \u0026lt;U+0001F981\u0026gt;\u0026lt;U+264C\u0026gt;\rletter : \u0026lt;U+0001F48C\u0026gt;\u0026lt;U+2709\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F4E7\u0026gt;\u0026lt;U+0001F4E8\u0026gt;\u0026lt;U+0001F4E9\u0026gt;\u0026lt;U+0001F4E4\u0026gt;\u0026lt;U+0001F4E5\u0026gt;\rletters : \u0026lt;U+0001F520\u0026gt;\u0026lt;U+0001F521\u0026gt;\u0026lt;U+0001F524\u0026gt;\rlight : \u0026lt;U+0001F6A8\u0026gt;\u0026lt;U+0001F6A5\u0026gt;\u0026lt;U+0001F6A6\u0026gt;\u0026lt;U+0001F56F\u0026gt;\u0026lt;U+0001F4A1\u0026gt;\u0026lt;U+0001F4A1\u0026gt;\u0026lt;U+0001F526\u0026gt;\u0026lt;U+0001F3EE\u0026gt;\rlightning : \u0026lt;U+0001F329\u0026gt;\u0026lt;U+26A1\u0026gt;\rlink : \u0026lt;U+0001F587\u0026gt;\u0026lt;U+0001F517\u0026gt;\rlion : \u0026lt;U+0001F981\u0026gt;\u0026lt;U+264C\u0026gt;\rlips : \u0026lt;U+0001F444\u0026gt;\u0026lt;U+0001F48B\u0026gt;\rlipstick : \u0026lt;U+0001F48B\u0026gt;\u0026lt;U+0001F484\u0026gt;\rlitter : \u0026lt;U+0001F6AE\u0026gt;\u0026lt;U+0001F6AF\u0026gt;\rlocation : \u0026lt;U+0001F4CC\u0026gt;\u0026lt;U+0001F4CD\u0026gt;\rlock : \u0026lt;U+0001F513\u0026gt;\u0026lt;U+0001F50F\u0026gt;\u0026lt;U+0001F510\u0026gt;\u0026lt;U+0001F511\u0026gt;\u0026lt;U+0001F511\u0026gt;\u0026lt;U+0001F5DD\u0026gt;\rloop : \u0026lt;U+0001F501\u0026gt;\u0026lt;U+27B0\u0026gt;\u0026lt;U+27BF\u0026gt;\rloud : \u0026lt;U+0001F50A\u0026gt;\u0026lt;U+0001F4E2\u0026gt;\rlove : \u0026lt;U+0001F60D\u0026gt;\u0026lt;U+0001F60D\u0026gt;\u0026lt;U+0001F63B\u0026gt;\u0026lt;U+0001F491\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+0001F498\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F495\u0026gt;\u0026lt;U+0001F48C\u0026gt;\u0026lt;U+0001F3E9\u0026gt;\rlowered : \u0026lt;U+0001F4EA\u0026gt;\u0026lt;U+0001F4ED\u0026gt;\rluck : \u0026lt;U+0001F91E\u0026gt;\u0026lt;U+0001F340\u0026gt;\rmad : \u0026lt;U+0001F621\u0026gt;\u0026lt;U+0001F620\u0026gt;\u0026lt;U+0001F620\u0026gt;\u0026lt;U+0001F4A2\u0026gt;\u0026lt;U+0001F5EF\u0026gt;\rmagical : \u0026lt;U+0001F9DD\u0026gt;\u0026lt;U+0001F9DD\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F9DD\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\rmagnetic : \u0026lt;U+0001F9ED\u0026gt;\u0026lt;U+0001F9F2\u0026gt;\rmagnifying : \u0026lt;U+0001F50D\u0026gt;\u0026lt;U+0001F50E\u0026gt;\rmail : \u0026lt;U+0001F48C\u0026gt;\u0026lt;U+0001F4E7\u0026gt;\u0026lt;U+0001F4E8\u0026gt;\u0026lt;U+0001F4E9\u0026gt;\u0026lt;U+0001F4E4\u0026gt;\u0026lt;U+0001F4E5\u0026gt;\u0026lt;U+0001F4EB\u0026gt;\u0026lt;U+0001F4EA\u0026gt;\u0026lt;U+0001F4EC\u0026gt;\u0026lt;U+0001F4ED\u0026gt;\u0026lt;U+0001F4EE\u0026gt;\rmailbox : \u0026lt;U+0001F4EB\u0026gt;\u0026lt;U+0001F4EA\u0026gt;\u0026lt;U+0001F4EC\u0026gt;\u0026lt;U+0001F4ED\u0026gt;\u0026lt;U+0001F4EE\u0026gt;\rman : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+0001F474\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F393\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3EB\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F33E\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F373\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F527\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3ED\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BC\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F52C\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BB\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A4\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A8\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F680\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F692\u0026gt;\u0026lt;U+0001F46E\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F575\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F482\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F477\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F473\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F472\u0026gt;\u0026lt;U+0001F471\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F935\u0026gt;\u0026lt;U+0001F64D\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F64E\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F645\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F646\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F481\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F64B\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F647\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F486\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F487\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B6\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F3C3\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F57A\u0026gt;\u0026lt;U+0001F574\u0026gt;\u0026lt;U+0001F3CC\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F3C4\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6A3\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F3CA\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+26F9\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F3CB\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B4\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B5\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F46B\u0026gt;\u0026lt;U+0001F46C\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F48B\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F48B\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F45E\u0026gt;\u0026lt;U+0001F6B9\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\rmanager : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BC\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BC\u0026gt;\rmanicure : \u0026lt;U+0001F485\u0026gt;\u0026lt;U+0001F485\u0026gt;\rmap : \u0026lt;U+0001F5FA\u0026gt;\u0026lt;U+0001F5FE\u0026gt;\rmarathon : \u0026lt;U+0001F3C3\u0026gt;\u0026lt;U+0001F3C3\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F3C3\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F3C3\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+0001F3BD\u0026gt;\rmark : \u0026lt;U+0001F4D1\u0026gt;\u0026lt;U+0001F516\u0026gt;\u0026lt;U+0001F51B\u0026gt;\u0026lt;U+2705\u0026gt;\u0026lt;U+274C\u0026gt;\u0026lt;U+274E\u0026gt;\u0026lt;U+203C\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2049\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2753\u0026gt;\u0026lt;U+2754\u0026gt;\u0026lt;U+2755\u0026gt;\u0026lt;U+2757\u0026gt;\u0026lt;U+2122\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F199\u0026gt;\rmarriage : \u0026lt;U+0001F935\u0026gt;\u0026lt;U+0001F470\u0026gt;\u0026lt;U+0001F48D\u0026gt;\u0026lt;U+0001F492\u0026gt;\rmask : \u0026lt;U+0001F637\u0026gt;\u0026lt;U+0001F3AD\u0026gt;\rmassage : \u0026lt;U+0001F486\u0026gt;\u0026lt;U+0001F486\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F486\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rmath : \u0026lt;U+2795\u0026gt;\u0026lt;U+2796\u0026gt;\u0026lt;U+2797\u0026gt;\rmathematician : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F52C\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F52C\u0026gt;\rmeat : \u0026lt;U+0001F356\u0026gt;\u0026lt;U+0001F357\u0026gt;\u0026lt;U+0001F953\u0026gt;\u0026lt;U+0001F967\u0026gt;\rmechanic : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F527\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F527\u0026gt;\u0026lt;U+0001F9F0\u0026gt;\rmedal : \u0026lt;U+0001F396\u0026gt;\u0026lt;U+0001F3C5\u0026gt;\u0026lt;U+0001F947\u0026gt;\u0026lt;U+0001F948\u0026gt;\u0026lt;U+0001F949\u0026gt;\rmedicine : \u0026lt;U+0001F637\u0026gt;\u0026lt;U+0001F3E5\u0026gt;\u0026lt;U+0001F489\u0026gt;\u0026lt;U+0001F48A\u0026gt;\u0026lt;U+0001F48A\u0026gt;\u0026lt;U+2695\u0026gt;\u0026lt;U+FE0F\u0026gt;\rmeditation : \u0026lt;U+0001F9D8\u0026gt;\u0026lt;U+0001F9D8\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F9D8\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\rmeh : \u0026lt;U+0001F610\u0026gt;\u0026lt;U+0001F612\u0026gt;\rmermaid : \u0026lt;U+0001F9DC\u0026gt;\u0026lt;U+0001F9DC\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rmerman : \u0026lt;U+0001F9DC\u0026gt;\u0026lt;U+0001F9DC\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\rmerwoman : \u0026lt;U+0001F9DC\u0026gt;\u0026lt;U+0001F9DC\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rmetrics : \u0026lt;U+0001F4C8\u0026gt;\u0026lt;U+0001F4C9\u0026gt;\u0026lt;U+0001F4CA\u0026gt;\rmexican : \u0026lt;U+0001F32E\u0026gt;\u0026lt;U+0001F32F\u0026gt;\rmic : \u0026lt;U+0001F399\u0026gt;\u0026lt;U+0001F3A4\u0026gt;\rmicrophone : \u0026lt;U+0001F399\u0026gt;\u0026lt;U+0001F3A4\u0026gt;\rmilk : \u0026lt;U+0001F37C\u0026gt;\u0026lt;U+0001F37C\u0026gt;\u0026lt;U+0001F95B\u0026gt;\rmobile : \u0026lt;U+0001F4F1\u0026gt;\u0026lt;U+0001F4F2\u0026gt;\u0026lt;U+0001F4F5\u0026gt;\u0026lt;U+0001F4F6\u0026gt;\u0026lt;U+0001F4F3\u0026gt;\u0026lt;U+0001F4F4\u0026gt;\rmoney : \u0026lt;U+0001F911\u0026gt;\u0026lt;U+0001F9E7\u0026gt;\u0026lt;U+0001F4B0\u0026gt;\u0026lt;U+0001F4B4\u0026gt;\u0026lt;U+0001F4B5\u0026gt;\u0026lt;U+0001F4B5\u0026gt;\u0026lt;U+0001F4B6\u0026gt;\u0026lt;U+0001F4B7\u0026gt;\u0026lt;U+0001F4B8\u0026gt;\u0026lt;U+0001F4B3\u0026gt;\u0026lt;U+0001F4B9\u0026gt;\u0026lt;U+0001F4B1\u0026gt;\u0026lt;U+0001F4B2\u0026gt;\rmonkey : \u0026lt;U+0001F648\u0026gt;\u0026lt;U+0001F648\u0026gt;\u0026lt;U+0001F649\u0026gt;\u0026lt;U+0001F649\u0026gt;\u0026lt;U+0001F64A\u0026gt;\u0026lt;U+0001F64A\u0026gt;\u0026lt;U+0001F435\u0026gt;\u0026lt;U+0001F412\u0026gt;\rmonster : \u0026lt;U+0001F479\u0026gt;\u0026lt;U+0001F479\u0026gt;\u0026lt;U+0001F47A\u0026gt;\u0026lt;U+0001F480\u0026gt;\u0026lt;U+0001F47B\u0026gt;\u0026lt;U+0001F47D\u0026gt;\u0026lt;U+0001F47E\u0026gt;\u0026lt;U+0001F916\u0026gt;\u0026lt;U+0001F4A9\u0026gt;\rmoon : \u0026lt;U+0001F311\u0026gt;\u0026lt;U+0001F312\u0026gt;\u0026lt;U+0001F313\u0026gt;\u0026lt;U+0001F314\u0026gt;\u0026lt;U+0001F315\u0026gt;\u0026lt;U+0001F316\u0026gt;\u0026lt;U+0001F317\u0026gt;\u0026lt;U+0001F318\u0026gt;\u0026lt;U+0001F319\u0026gt;\u0026lt;U+0001F31A\u0026gt;\u0026lt;U+0001F31B\u0026gt;\u0026lt;U+0001F31C\u0026gt;\u0026lt;U+0001F31D\u0026gt;\u0026lt;U+0001F391\u0026gt;\rmorning : \u0026lt;U+0001F304\u0026gt;\u0026lt;U+0001F305\u0026gt;\u0026lt;U+23F0\u0026gt;\rmountain : \u0026lt;U+0001F6B5\u0026gt;\u0026lt;U+0001F6B5\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B5\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F3D4\u0026gt;\u0026lt;U+26F0\u0026gt;\u0026lt;U+0001F30B\u0026gt;\u0026lt;U+0001F5FB\u0026gt;\u0026lt;U+0001F304\u0026gt;\u0026lt;U+0001F69E\u0026gt;\u0026lt;U+0001F6A0\u0026gt;\rmouse : \u0026lt;U+0001F42D\u0026gt;\u0026lt;U+0001F401\u0026gt;\rmouth : \u0026lt;U+0001F603\u0026gt;\u0026lt;U+0001F604\u0026gt;\u0026lt;U+0001F606\u0026gt;\u0026lt;U+0001F636\u0026gt;\u0026lt;U+0001F62E\u0026gt;\u0026lt;U+0001F910\u0026gt;\u0026lt;U+0001F911\u0026gt;\u0026lt;U+0001F626\u0026gt;\u0026lt;U+0001F630\u0026gt;\u0026lt;U+0001F63A\u0026gt;\u0026lt;U+0001F444\u0026gt;\rmovie : \u0026lt;U+0001F3A5\u0026gt;\u0026lt;U+0001F39E\u0026gt;\u0026lt;U+0001F4FD\u0026gt;\u0026lt;U+0001F3AC\u0026gt;\u0026lt;U+0001F3A6\u0026gt;\u0026lt;U+0001F3A6\u0026gt;\rmug : \u0026lt;U+0001F37A\u0026gt;\u0026lt;U+0001F37B\u0026gt;\rmuseum : \u0026lt;U+0001F5BC\u0026gt;\u0026lt;U+0001F3A8\u0026gt;\rmusic : \u0026lt;U+0001F3BC\u0026gt;\u0026lt;U+0001F3B5\u0026gt;\u0026lt;U+0001F3B6\u0026gt;\u0026lt;U+0001F3B6\u0026gt;\u0026lt;U+0001F399\u0026gt;\u0026lt;U+0001F39A\u0026gt;\u0026lt;U+0001F39B\u0026gt;\u0026lt;U+0001F3A7\u0026gt;\u0026lt;U+0001F3B7\u0026gt;\u0026lt;U+0001F3B8\u0026gt;\u0026lt;U+0001F3B9\u0026gt;\u0026lt;U+0001F3BA\u0026gt;\u0026lt;U+0001F3BB\u0026gt;\u0026lt;U+0001F941\u0026gt;\rMuslim : \u0026lt;U+0001F54C\u0026gt;\u0026lt;U+0001F54B\u0026gt;\rmute : \u0026lt;U+0001F636\u0026gt;\u0026lt;U+0001F64A\u0026gt;\u0026lt;U+0001F507\u0026gt;\u0026lt;U+0001F515\u0026gt;\u0026lt;U+0001F4F4\u0026gt;\rneedle : \u0026lt;U+0001F9F5\u0026gt;\u0026lt;U+0001F489\u0026gt;\u0026lt;U+0001F489\u0026gt;\rnervous : \u0026lt;U+0001F625\u0026gt;\u0026lt;U+0001F61F\u0026gt;\u0026lt;U+0001F630\u0026gt;\u0026lt;U+0001F497\u0026gt;\rnews : \u0026lt;U+0001F4F0\u0026gt;\u0026lt;U+0001F5DE\u0026gt;\rnewspaper : \u0026lt;U+0001F4F0\u0026gt;\u0026lt;U+0001F5DE\u0026gt;\rnight : \u0026lt;U+0001F303\u0026gt;\u0026lt;U+0001F309\u0026gt;\u0026lt;U+0001F319\u0026gt;\rnine : \u0026lt;U+0001F558\u0026gt;\u0026lt;U+0001F564\u0026gt;\rno : \u0026lt;U+0001F648\u0026gt;\u0026lt;U+0001F649\u0026gt;\u0026lt;U+0001F64A\u0026gt;\u0026lt;U+0001F645\u0026gt;\u0026lt;U+0001F645\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F645\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F515\u0026gt;\u0026lt;U+26D4\u0026gt;\u0026lt;U+0001F6AB\u0026gt;\u0026lt;U+0001F6B3\u0026gt;\u0026lt;U+0001F6AD\u0026gt;\u0026lt;U+0001F6AF\u0026gt;\u0026lt;U+0001F6B7\u0026gt;\u0026lt;U+0001F4F5\u0026gt;\u0026lt;U+0001F51E\u0026gt;\rnoodle : \u0026lt;U+0001F35C\u0026gt;\u0026lt;U+0001F35C\u0026gt;\rnose : \u0026lt;U+0001F443\u0026gt;\u0026lt;U+0001F43D\u0026gt;\rnot : \u0026lt;U+0001F648\u0026gt;\u0026lt;U+0001F649\u0026gt;\u0026lt;U+0001F64A\u0026gt;\u0026lt;U+0001F645\u0026gt;\u0026lt;U+0001F515\u0026gt;\u0026lt;U+26D4\u0026gt;\u0026lt;U+0001F6AB\u0026gt;\u0026lt;U+0001F6B3\u0026gt;\u0026lt;U+0001F6AD\u0026gt;\u0026lt;U+0001F6AF\u0026gt;\u0026lt;U+0001F6B7\u0026gt;\u0026lt;U+0001F4F5\u0026gt;\u0026lt;U+0001F51E\u0026gt;\rnote : \u0026lt;U+0001F3B5\u0026gt;\u0026lt;U+0001F3B6\u0026gt;\u0026lt;U+0001F4B4\u0026gt;\u0026lt;U+0001F4B5\u0026gt;\u0026lt;U+0001F4B6\u0026gt;\u0026lt;U+0001F4B7\u0026gt;\u0026lt;U+0001F4B8\u0026gt;\u0026lt;U+0001F4DD\u0026gt;\u0026lt;U+0001F5D2\u0026gt;\rnotebook : \u0026lt;U+0001F4D4\u0026gt;\u0026lt;U+0001F4D3\u0026gt;\u0026lt;U+0001F4D2\u0026gt;\rnumbers : \u0026lt;U+0001F522\u0026gt;\u0026lt;U+0001F522\u0026gt;\rnurse : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2695\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2695\u0026gt;\rnut : \u0026lt;U+0001F95C\u0026gt;\u0026lt;U+0001F529\u0026gt;\ro : \u0026lt;U+2B55\u0026gt;\u0026lt;U+0001F17E\u0026gt;\u0026lt;U+FE0F\u0026gt;\ro’clock : \u0026lt;U+0001F55B\u0026gt;\u0026lt;U+0001F550\u0026gt;\u0026lt;U+0001F551\u0026gt;\u0026lt;U+0001F552\u0026gt;\u0026lt;U+0001F553\u0026gt;\u0026lt;U+0001F554\u0026gt;\u0026lt;U+0001F555\u0026gt;\u0026lt;U+0001F556\u0026gt;\u0026lt;U+0001F557\u0026gt;\u0026lt;U+0001F558\u0026gt;\u0026lt;U+0001F559\u0026gt;\u0026lt;U+0001F55A\u0026gt;\rOberon : \u0026lt;U+0001F9DA\u0026gt;\u0026lt;U+0001F9DA\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\roff : \u0026lt;U+0001F515\u0026gt;\u0026lt;U+0001F4F4\u0026gt;\roffice : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BC\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BC\u0026gt;\rofficer : \u0026lt;U+0001F46E\u0026gt;\u0026lt;U+0001F46E\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F46E\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rOK : \u0026lt;U+0001F646\u0026gt;\u0026lt;U+0001F646\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F646\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F44C\u0026gt;\u0026lt;U+0001F197\u0026gt;\rold : \u0026lt;U+0001F9D3\u0026gt;\u0026lt;U+0001F474\u0026gt;\u0026lt;U+0001F475\u0026gt;\u0026lt;U+0001F9B3\u0026gt;\u0026lt;U+0001F5DD\u0026gt;\roncoming : \u0026lt;U+0001F68D\u0026gt;\u0026lt;U+0001F694\u0026gt;\u0026lt;U+0001F696\u0026gt;\u0026lt;U+0001F698\u0026gt;\rone : \u0026lt;U+0001F550\u0026gt;\u0026lt;U+0001F55C\u0026gt;\ropen : \u0026lt;U+0001F603\u0026gt;\u0026lt;U+0001F604\u0026gt;\u0026lt;U+0001F605\u0026gt;\u0026lt;U+0001F606\u0026gt;\u0026lt;U+0001F62E\u0026gt;\u0026lt;U+0001F626\u0026gt;\u0026lt;U+0001F630\u0026gt;\u0026lt;U+0001F63A\u0026gt;\u0026lt;U+0001F450\u0026gt;\u0026lt;U+0001F4D6\u0026gt;\u0026lt;U+0001F4EC\u0026gt;\u0026lt;U+0001F4ED\u0026gt;\u0026lt;U+0001F4C2\u0026gt;\u0026lt;U+0001F513\u0026gt;\rOphiuchus : \u0026lt;U+0001F40D\u0026gt;\u0026lt;U+26CE\u0026gt;\roptical : \u0026lt;U+0001F4BD\u0026gt;\u0026lt;U+0001F4BF\u0026gt;\u0026lt;U+0001F4C0\u0026gt;\rorange : \u0026lt;U+0001F9E1\u0026gt;\u0026lt;U+0001F34A\u0026gt;\u0026lt;U+0001F4D9\u0026gt;\u0026lt;U+0001F536\u0026gt;\u0026lt;U+0001F538\u0026gt;\routlined : \u0026lt;U+263A\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2754\u0026gt;\u0026lt;U+2755\u0026gt;\u0026lt;U+0001F533\u0026gt;\rox : \u0026lt;U+0001F402\u0026gt;\u0026lt;U+2649\u0026gt;\rpad : \u0026lt;U+0001F5D2\u0026gt;\u0026lt;U+0001F5D3\u0026gt;\rpaella : \u0026lt;U+0001F958\u0026gt;\u0026lt;U+0001F958\u0026gt;\rpage : \u0026lt;U+0001F4C3\u0026gt;\u0026lt;U+0001F4C4\u0026gt;\rpainter : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A8\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A8\u0026gt;\rpainting : \u0026lt;U+0001F5BC\u0026gt;\u0026lt;U+0001F3A8\u0026gt;\u0026lt;U+0001F58C\u0026gt;\rpalette : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A8\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A8\u0026gt;\u0026lt;U+0001F3A8\u0026gt;\rpalm : \u0026lt;U+0001F926\u0026gt;\u0026lt;U+0001F334\u0026gt;\u0026lt;U+0001F965\u0026gt;\rpan : \u0026lt;U+0001F373\u0026gt;\u0026lt;U+0001F958\u0026gt;\rpaper : \u0026lt;U+0001F4DC\u0026gt;\u0026lt;U+0001F4F0\u0026gt;\u0026lt;U+0001F5DE\u0026gt;\rpaperclip : \u0026lt;U+0001F4CE\u0026gt;\u0026lt;U+0001F587\u0026gt;\rparty : \u0026lt;U+0001F973\u0026gt;\u0026lt;U+0001F382\u0026gt;\u0026lt;U+0001F388\u0026gt;\u0026lt;U+0001F389\u0026gt;\u0026lt;U+0001F389\u0026gt;\rpartying : \u0026lt;U+0001F46F\u0026gt;\u0026lt;U+0001F46F\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F46F\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rpassenger : \u0026lt;U+0001F6F3\u0026gt;\u0026lt;U+26F4\u0026gt;\u0026lt;U+0001F6A2\u0026gt;\rpassword : \u0026lt;U+0001F511\u0026gt;\u0026lt;U+0001F511\u0026gt;\rpastry : \u0026lt;U+0001F365\u0026gt;\u0026lt;U+0001F382\u0026gt;\u0026lt;U+0001F370\u0026gt;\u0026lt;U+0001F967\u0026gt;\rpause : \u0026lt;U+23EF\u0026gt;\u0026lt;U+23F8\u0026gt;\rpeace : \u0026lt;U+270C\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F54A\u0026gt;\rpedestrian : \u0026lt;U+0001F6B8\u0026gt;\u0026lt;U+0001F6B7\u0026gt;\rpen : \u0026lt;U+0001F58B\u0026gt;\u0026lt;U+0001F58A\u0026gt;\u0026lt;U+0001F50F\u0026gt;\rpet : \u0026lt;U+0001F436\u0026gt;\u0026lt;U+0001F436\u0026gt;\u0026lt;U+0001F415\u0026gt;\u0026lt;U+0001F431\u0026gt;\u0026lt;U+0001F431\u0026gt;\u0026lt;U+0001F408\u0026gt;\u0026lt;U+0001F439\u0026gt;\u0026lt;U+0001F430\u0026gt;\u0026lt;U+0001F407\u0026gt;\rphone : \u0026lt;U+0001F933\u0026gt;\u0026lt;U+0001F4F1\u0026gt;\u0026lt;U+0001F4F2\u0026gt;\u0026lt;U+0001F4DE\u0026gt;\u0026lt;U+0001F4F5\u0026gt;\u0026lt;U+0001F4F6\u0026gt;\u0026lt;U+0001F4F3\u0026gt;\u0026lt;U+0001F4F4\u0026gt;\rphoto : \u0026lt;U+0001F4F7\u0026gt;\u0026lt;U+0001F4F8\u0026gt;\rphysicist : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F52C\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F52C\u0026gt;\rpiano : \u0026lt;U+0001F3B9\u0026gt;\u0026lt;U+0001F3B9\u0026gt;\rpick : \u0026lt;U+26CF\u0026gt;\u0026lt;U+2692\u0026gt;\rpig : \u0026lt;U+0001F437\u0026gt;\u0026lt;U+0001F416\u0026gt;\u0026lt;U+0001F417\u0026gt;\u0026lt;U+0001F43D\u0026gt;\rpin : \u0026lt;U+0001F4CC\u0026gt;\u0026lt;U+0001F4CD\u0026gt;\rpirate : \u0026lt;U+2620\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F99C\u0026gt;\u0026lt;U+0001F3F4\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2620\u0026gt;\u0026lt;U+FE0F\u0026gt;\rPisces : \u0026lt;U+0001F41F\u0026gt;\u0026lt;U+2653\u0026gt;\rplant : \u0026lt;U+0001F3F5\u0026gt;\u0026lt;U+0001F331\u0026gt;\u0026lt;U+0001F335\u0026gt;\u0026lt;U+0001F330\u0026gt;\rplay : \u0026lt;U+0001F3AE\u0026gt;\u0026lt;U+25B6\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+23EF\u0026gt;\rplease : \u0026lt;U+0001F64F\u0026gt;\u0026lt;U+0001F64F\u0026gt;\rpleased : \u0026lt;U+0001F604\u0026gt;\u0026lt;U+263A\u0026gt;\u0026lt;U+FE0F\u0026gt;\rplumber : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F527\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F527\u0026gt;\rpodcast : \u0026lt;U+0001F399\u0026gt;\u0026lt;U+0001F4FB\u0026gt;\rpoint : \u0026lt;U+0001F448\u0026gt;\u0026lt;U+0001F449\u0026gt;\u0026lt;U+261D\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F446\u0026gt;\u0026lt;U+0001F447\u0026gt;\rpole : \u0026lt;U+0001F488\u0026gt;\u0026lt;U+0001F3A3\u0026gt;\rpolice : \u0026lt;U+0001F46E\u0026gt;\u0026lt;U+0001F46E\u0026gt;\u0026lt;U+0001F46E\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F46E\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F693\u0026gt;\u0026lt;U+0001F694\u0026gt;\u0026lt;U+0001F6A8\u0026gt;\rpost : \u0026lt;U+0001F3E3\u0026gt;\u0026lt;U+0001F3E4\u0026gt;\u0026lt;U+0001F4EF\u0026gt;\u0026lt;U+0001F6A9\u0026gt;\rpostbox : \u0026lt;U+0001F4EB\u0026gt;\u0026lt;U+0001F4EA\u0026gt;\u0026lt;U+0001F4EC\u0026gt;\u0026lt;U+0001F4ED\u0026gt;\u0026lt;U+0001F4EE\u0026gt;\rpot : \u0026lt;U+0001F372\u0026gt;\u0026lt;U+0001F36F\u0026gt;\rpotato : \u0026lt;U+0001F954\u0026gt;\u0026lt;U+0001F360\u0026gt;\rpouting : \u0026lt;U+0001F621\u0026gt;\u0026lt;U+0001F63E\u0026gt;\u0026lt;U+0001F64E\u0026gt;\u0026lt;U+0001F64E\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F64E\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rpower : \u0026lt;U+270A\u0026gt;\u0026lt;U+0001F50B\u0026gt;\rprank : \u0026lt;U+0001F61C\u0026gt;\u0026lt;U+0001F61D\u0026gt;\rprayer : \u0026lt;U+0001F932\u0026gt;\u0026lt;U+0001F4FF\u0026gt;\rpresent : \u0026lt;U+0001F381\u0026gt;\u0026lt;U+0001F381\u0026gt;\rpress : \u0026lt;U+0001F4F0\u0026gt;\u0026lt;U+0001F5DE\u0026gt;\rprint : \u0026lt;U+0001F463\u0026gt;\u0026lt;U+0001F43E\u0026gt;\rprofessor : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3EB\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3EB\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3EB\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3EB\u0026gt;\rprohibited : \u0026lt;U+0001F648\u0026gt;\u0026lt;U+0001F649\u0026gt;\u0026lt;U+0001F64A\u0026gt;\u0026lt;U+0001F645\u0026gt;\u0026lt;U+0001F645\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F645\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F515\u0026gt;\u0026lt;U+26D4\u0026gt;\u0026lt;U+0001F6AB\u0026gt;\u0026lt;U+0001F6B3\u0026gt;\u0026lt;U+0001F6AD\u0026gt;\u0026lt;U+0001F6AF\u0026gt;\u0026lt;U+0001F6B7\u0026gt;\u0026lt;U+0001F4F5\u0026gt;\u0026lt;U+0001F51E\u0026gt;\rproud : \u0026lt;U+0001F60A\u0026gt;\u0026lt;U+0001F99A\u0026gt;\rPuck : \u0026lt;U+0001F9DA\u0026gt;\u0026lt;U+0001F9DA\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\rpunch : \u0026lt;U+270A\u0026gt;\u0026lt;U+0001F44A\u0026gt;\rpunctuation : \u0026lt;U+203C\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2049\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2753\u0026gt;\u0026lt;U+2754\u0026gt;\u0026lt;U+2755\u0026gt;\u0026lt;U+2757\u0026gt;\rpurse : \u0026lt;U+0001F45B\u0026gt;\u0026lt;U+0001F45C\u0026gt;\rpushpin : \u0026lt;U+0001F4CC\u0026gt;\u0026lt;U+0001F4CD\u0026gt;\rquarter : \u0026lt;U+0001F313\u0026gt;\u0026lt;U+0001F317\u0026gt;\u0026lt;U+0001F31B\u0026gt;\u0026lt;U+0001F31C\u0026gt;\rquestion : \u0026lt;U+2049\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2753\u0026gt;\u0026lt;U+2754\u0026gt;\rquiet : \u0026lt;U+0001F636\u0026gt;\u0026lt;U+0001F92B\u0026gt;\u0026lt;U+0001F507\u0026gt;\u0026lt;U+0001F515\u0026gt;\rrabbit : \u0026lt;U+0001F430\u0026gt;\u0026lt;U+0001F407\u0026gt;\rracehorse : \u0026lt;U+0001F3C7\u0026gt;\u0026lt;U+0001F40E\u0026gt;\rracing : \u0026lt;U+0001F3C3\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F3C3\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F3C7\u0026gt;\u0026lt;U+0001F3CE\u0026gt;\u0026lt;U+0001F3CD\u0026gt;\u0026lt;U+0001F40E\u0026gt;\u0026lt;U+0001F3C1\u0026gt;\rracquet : \u0026lt;U+0001F3BE\u0026gt;\u0026lt;U+0001F3F8\u0026gt;\rradio : \u0026lt;U+0001F4FB\u0026gt;\u0026lt;U+0001F518\u0026gt;\rrailway : \u0026lt;U+0001F682\u0026gt;\u0026lt;U+0001F683\u0026gt;\u0026lt;U+0001F684\u0026gt;\u0026lt;U+0001F685\u0026gt;\u0026lt;U+0001F686\u0026gt;\u0026lt;U+0001F688\u0026gt;\u0026lt;U+0001F689\u0026gt;\u0026lt;U+0001F69E\u0026gt;\u0026lt;U+0001F6E4\u0026gt;\u0026lt;U+0001F69F\u0026gt;\rrain : \u0026lt;U+26C8\u0026gt;\u0026lt;U+0001F326\u0026gt;\u0026lt;U+0001F327\u0026gt;\u0026lt;U+0001F308\u0026gt;\u0026lt;U+0001F302\u0026gt;\u0026lt;U+0001F302\u0026gt;\u0026lt;U+2602\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2614\u0026gt;\u0026lt;U+26F1\u0026gt;\rrainbow : \u0026lt;U+0001F308\u0026gt;\u0026lt;U+0001F3F3\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F308\u0026gt;\rraised : \u0026lt;U+0001F64B\u0026gt;\u0026lt;U+0001F91A\u0026gt;\u0026lt;U+0001F64C\u0026gt;\rraising hand : \u0026lt;U+0001F64B\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F64B\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rram : \u0026lt;U+0001F40F\u0026gt;\u0026lt;U+2648\u0026gt;\rrancher : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F33E\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F33E\u0026gt;\rreceive : \u0026lt;U+0001F4F2\u0026gt;\u0026lt;U+0001F4E8\u0026gt;\u0026lt;U+0001F4E5\u0026gt;\rred : \u0026lt;U+0001F621\u0026gt;\u0026lt;U+0001F34E\u0026gt;\u0026lt;U+0001F352\u0026gt;\u0026lt;U+0001F004\u0026gt;\u0026lt;U+0001F3EE\u0026gt;\u0026lt;U+0001F53C\u0026gt;\u0026lt;U+0001F53D\u0026gt;\u0026lt;U+0001F53A\u0026gt;\u0026lt;U+0001F53B\u0026gt;\u0026lt;U+0001F534\u0026gt;\rrelieved : \u0026lt;U+0001F625\u0026gt;\u0026lt;U+0001F60C\u0026gt;\rreligion : \u0026lt;U+0001F4FF\u0026gt;\u0026lt;U+26EA\u0026gt;\u0026lt;U+0001F54C\u0026gt;\u0026lt;U+0001F54D\u0026gt;\u0026lt;U+26E9\u0026gt;\u0026lt;U+0001F54B\u0026gt;\u0026lt;U+0001F6D0\u0026gt;\u0026lt;U+0001F549\u0026gt;\u0026lt;U+2721\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F54E\u0026gt;\rresearch : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F52C\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F52C\u0026gt;\rrespect : \u0026lt;U+0001F647\u0026gt;\u0026lt;U+0001F647\u0026gt;\u0026lt;U+200D\u0026gt;♀\rrestroom : \u0026lt;U+0001F6B9\u0026gt;\u0026lt;U+0001F6BA\u0026gt;\u0026lt;U+0001F6BB\u0026gt;\u0026lt;U+0001F6BE\u0026gt;\u0026lt;U+0001F6BE\u0026gt;\rrevolving : \u0026lt;U+0001F49E\u0026gt;\u0026lt;U+0001F6A8\u0026gt;\rribbon : \u0026lt;U+0001F49D\u0026gt;\u0026lt;U+0001F380\u0026gt;\u0026lt;U+0001F397\u0026gt;\rrice : \u0026lt;U+0001F33E\u0026gt;\u0026lt;U+0001F358\u0026gt;\u0026lt;U+0001F359\u0026gt;\u0026lt;U+0001F35A\u0026gt;\u0026lt;U+0001F35B\u0026gt;\rright : \u0026lt;U+25B6\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+23EF\u0026gt;\rrock : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A4\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A4\u0026gt;\u0026lt;U+0001F94C\u0026gt;\u0026lt;U+0001F3B8\u0026gt;\rrocket : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F680\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F680\u0026gt;\u0026lt;U+0001F680\u0026gt;\rrockstar : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A4\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A4\u0026gt;\rrolling : \u0026lt;U+0001F923\u0026gt;\u0026lt;U+0001F644\u0026gt;\rrowboat : \u0026lt;U+0001F6A3\u0026gt;\u0026lt;U+0001F6A3\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6A3\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rroyal : \u0026lt;U+0001F934\u0026gt;\u0026lt;U+0001F478\u0026gt;\u0026lt;U+0001F451\u0026gt;\rruler : \u0026lt;U+0001F4CF\u0026gt;\u0026lt;U+0001F4D0\u0026gt;\rrunning : \u0026lt;U+0001F3C3\u0026gt;\u0026lt;U+0001F3C3\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F3C3\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F4A8\u0026gt;\u0026lt;U+0001F45F\u0026gt;\u0026lt;U+0001F3BD\u0026gt;\rsad : \u0026lt;U+0001F61E\u0026gt;\u0026lt;U+0001F622\u0026gt;\u0026lt;U+0001F622\u0026gt;\u0026lt;U+0001F62D\u0026gt;\u0026lt;U+0001F62D\u0026gt;\u0026lt;U+0001F63F\u0026gt;\u0026lt;U+0001F63F\u0026gt;\u0026lt;U+0001F64D\u0026gt;\rSagittarius : \u0026lt;U+0001F3F9\u0026gt;\u0026lt;U+2650\u0026gt;\rsand : \u0026lt;U+231B\u0026gt;\u0026lt;U+23F3\u0026gt;\rsanta : \u0026lt;U+0001F385\u0026gt;\u0026lt;U+0001F936\u0026gt;\rsassy : \u0026lt;U+0001F481\u0026gt;\u0026lt;U+0001F481\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F481\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rsatellite : \u0026lt;U+0001F6F0\u0026gt;\u0026lt;U+0001F4E1\u0026gt;\rsauna : \u0026lt;U+0001F9D6\u0026gt;\u0026lt;U+0001F9D6\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F9D6\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\rscared : \u0026lt;U+0001F628\u0026gt;\u0026lt;U+0001F628\u0026gt;\u0026lt;U+0001F631\u0026gt;\rschedule : \u0026lt;U+0001F4C5\u0026gt;\u0026lt;U+0001F4C6\u0026gt;\rschool : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3EB\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3EB\u0026gt;\u0026lt;U+0001F392\u0026gt;\u0026lt;U+0001F3EB\u0026gt;\rscience : \u0026lt;U+0001F9EA\u0026gt;\u0026lt;U+0001F52C\u0026gt;\u0026lt;U+0001F52C\u0026gt;\u0026lt;U+0001F52D\u0026gt;\rscientist : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F52C\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F52C\u0026gt;\u0026lt;U+0001F97C\u0026gt;\rscooter : \u0026lt;U+0001F6F4\u0026gt;\u0026lt;U+0001F6F5\u0026gt;\rscore : \u0026lt;U+0001F3BC\u0026gt;\u0026lt;U+0001F4AF\u0026gt;\u0026lt;U+0001F4AF\u0026gt;\rScorpio : \u0026lt;U+0001F982\u0026gt;\u0026lt;U+264F\u0026gt;\rscorpion : \u0026lt;U+0001F982\u0026gt;\u0026lt;U+264F\u0026gt;\rsea : \u0026lt;U+0001F433\u0026gt;\u0026lt;U+0001F41A\u0026gt;\u0026lt;U+26F5\u0026gt;\u0026lt;U+0001F30A\u0026gt;\rseafood : \u0026lt;U+0001F99E\u0026gt;\u0026lt;U+0001F362\u0026gt;\rsearch : \u0026lt;U+0001F50D\u0026gt;\u0026lt;U+0001F50D\u0026gt;\u0026lt;U+0001F50E\u0026gt;\rsecurity : \u0026lt;U+0001F512\u0026gt;\u0026lt;U+0001F513\u0026gt;\u0026lt;U+0001F510\u0026gt;\rsee : \u0026lt;U+0001F648\u0026gt;\u0026lt;U+0001F440\u0026gt;\rsent : \u0026lt;U+0001F4E9\u0026gt;\u0026lt;U+0001F4E4\u0026gt;\rserpent : \u0026lt;U+0001F40D\u0026gt;\u0026lt;U+26CE\u0026gt;\rseven : \u0026lt;U+0001F556\u0026gt;\u0026lt;U+0001F562\u0026gt;\rshaker : \u0026lt;U+0001F96D\u0026gt;\u0026lt;U+0001F9C2\u0026gt;\rsheep : \u0026lt;U+0001F40F\u0026gt;\u0026lt;U+0001F411\u0026gt;\rshinkansen : \u0026lt;U+0001F684\u0026gt;\u0026lt;U+0001F685\u0026gt;\rship : \u0026lt;U+2693\u0026gt;\u0026lt;U+0001F6A4\u0026gt;\u0026lt;U+0001F6F3\u0026gt;\u0026lt;U+0001F6A2\u0026gt;\u0026lt;U+0001F680\u0026gt;\u0026lt;U+0001F531\u0026gt;\rshirt : \u0026lt;U+0001F454\u0026gt;\u0026lt;U+0001F455\u0026gt;\u0026lt;U+0001F3BD\u0026gt;\rshocked : \u0026lt;U+0001F632\u0026gt;\u0026lt;U+0001F628\u0026gt;\u0026lt;U+0001F92F\u0026gt;\u0026lt;U+0001F631\u0026gt;\rshoe : \u0026lt;U+0001F45E\u0026gt;\u0026lt;U+0001F45F\u0026gt;\u0026lt;U+0001F460\u0026gt;\u0026lt;U+0001F461\u0026gt;\u0026lt;U+0001F462\u0026gt;\rshopping : \u0026lt;U+0001F6CD\u0026gt;\u0026lt;U+0001F6D2\u0026gt;\rshot : \u0026lt;U+0001F943\u0026gt;\u0026lt;U+0001F489\u0026gt;\rshower : \u0026lt;U+0001F6C0\u0026gt;\u0026lt;U+0001F6BF\u0026gt;\rshrimp : \u0026lt;U+0001F990\u0026gt;\u0026lt;U+0001F364\u0026gt;\rsick : \u0026lt;U+0001F637\u0026gt;\u0026lt;U+0001F637\u0026gt;\u0026lt;U+0001F912\u0026gt;\u0026lt;U+0001F912\u0026gt;\u0026lt;U+0001F922\u0026gt;\u0026lt;U+0001F92E\u0026gt;\u0026lt;U+0001F927\u0026gt;\u0026lt;U+0001F489\u0026gt;\u0026lt;U+0001F48A\u0026gt;\rsignal : \u0026lt;U+0001F6A5\u0026gt;\u0026lt;U+0001F6A6\u0026gt;\u0026lt;U+0001F4E1\u0026gt;\u0026lt;U+0001F4F6\u0026gt;\rsilence : \u0026lt;U+0001F636\u0026gt;\u0026lt;U+0001F910\u0026gt;\u0026lt;U+0001F62F\u0026gt;\rsilent : \u0026lt;U+0001F636\u0026gt;\u0026lt;U+0001F507\u0026gt;\u0026lt;U+0001F515\u0026gt;\rsilhouette : \u0026lt;U+0001F5E3\u0026gt;\u0026lt;U+0001F464\u0026gt;\u0026lt;U+0001F465\u0026gt;\rsinger : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A4\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A4\u0026gt;\rsix : \u0026lt;U+0001F555\u0026gt;\u0026lt;U+0001F561\u0026gt;\rskewer : \u0026lt;U+0001F362\u0026gt;\u0026lt;U+0001F361\u0026gt;\rski : \u0026lt;U+26F7\u0026gt;\u0026lt;U+0001F3C2\u0026gt;\u0026lt;U+0001F3BF\u0026gt;\rsleep : \u0026lt;U+0001F62A\u0026gt;\u0026lt;U+0001F634\u0026gt;\u0026lt;U+0001F6CC\u0026gt;\u0026lt;U+0001F4A4\u0026gt;\u0026lt;U+0001F6CF\u0026gt;\rsleuth : \u0026lt;U+0001F575\u0026gt;\u0026lt;U+0001F575\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F575\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rslice : \u0026lt;U+0001F355\u0026gt;\u0026lt;U+0001F370\u0026gt;\rslow : \u0026lt;U+0001F422\u0026gt;\u0026lt;U+0001F40C\u0026gt;\rsmall : \u0026lt;U+0001F92A\u0026gt;\u0026lt;U+0001F990\u0026gt;\rsmile : \u0026lt;U+0001F600\u0026gt;\u0026lt;U+0001F601\u0026gt;\u0026lt;U+0001F603\u0026gt;\u0026lt;U+0001F604\u0026gt;\u0026lt;U+0001F605\u0026gt;\u0026lt;U+0001F606\u0026gt;\u0026lt;U+0001F60A\u0026gt;\u0026lt;U+0001F60B\u0026gt;\u0026lt;U+0001F60E\u0026gt;\u0026lt;U+0001F60D\u0026gt;\u0026lt;U+0001F619\u0026gt;\u0026lt;U+263A\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F642\u0026gt;\u0026lt;U+0001F607\u0026gt;\u0026lt;U+0001F608\u0026gt;\u0026lt;U+0001F63A\u0026gt;\u0026lt;U+0001F638\u0026gt;\u0026lt;U+0001F63B\u0026gt;\u0026lt;U+0001F63C\u0026gt;\rsmoking : \u0026lt;U+0001F6AC\u0026gt;\u0026lt;U+0001F6AD\u0026gt;\rsmug : \u0026lt;U+0001F60F\u0026gt;\u0026lt;U+0001F624\u0026gt;\rsnake : \u0026lt;U+0001F40D\u0026gt;\u0026lt;U+26CE\u0026gt;\rsnow : \u0026lt;U+26F7\u0026gt;\u0026lt;U+0001F3C2\u0026gt;\u0026lt;U+0001F3D4\u0026gt;\u0026lt;U+0001F328\u0026gt;\u0026lt;U+2603\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+26C4\u0026gt;\u0026lt;U+0001F3BF\u0026gt;\rsnowman : \u0026lt;U+2603\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+26C4\u0026gt;\rsoft : \u0026lt;U+0001F366\u0026gt;\u0026lt;U+0001F508\u0026gt;\rsoftware : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BB\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BB\u0026gt;\rsorcerer : \u0026lt;U+0001F9D9\u0026gt;\u0026lt;U+0001F9D9\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\rsorceress : \u0026lt;U+0001F9D9\u0026gt;\u0026lt;U+0001F9D9\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rsorry : \u0026lt;U+0001F647\u0026gt;\u0026lt;U+0001F647\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F647\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rsound : \u0026lt;U+0001F442\u0026gt;\u0026lt;U+0001F507\u0026gt;\u0026lt;U+0001F514\u0026gt;\rspa : \u0026lt;U+0001F486\u0026gt;\u0026lt;U+0001F486\u0026gt;\u0026lt;U+200D\u0026gt;♂\rspace : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F680\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F680\u0026gt;\u0026lt;U+0001F30C\u0026gt;\u0026lt;U+0001F6F0\u0026gt;\u0026lt;U+0001F680\u0026gt;\u0026lt;U+2604\u0026gt;\rspanner : \u0026lt;U+0001F6E0\u0026gt;\u0026lt;U+0001F527\u0026gt;\rsparkle : \u0026lt;U+0001F496\u0026gt;\u0026lt;U+0001F31F\u0026gt;\u0026lt;U+0001F387\u0026gt;\u0026lt;U+2728\u0026gt;\rspeak : \u0026lt;U+0001F64A\u0026gt;\u0026lt;U+0001F5E3\u0026gt;\rspeech : \u0026lt;U+0001F4AC\u0026gt;\u0026lt;U+0001F5E8\u0026gt;\u0026lt;U+FE0F\u0026gt;\rspeed : \u0026lt;U+0001F40E\u0026gt;\u0026lt;U+0001F684\u0026gt;\u0026lt;U+0001F685\u0026gt;\rspider : \u0026lt;U+0001F577\u0026gt;\u0026lt;U+0001F578\u0026gt;\rspiral : \u0026lt;U+0001F41A\u0026gt;\u0026lt;U+0001F5D2\u0026gt;\u0026lt;U+0001F5D3\u0026gt;\rspock : \u0026lt;U+0001F596\u0026gt;\u0026lt;U+0001F596\u0026gt;\rsports : \u0026lt;U+0001F3C0\u0026gt;\u0026lt;U+0001F3C8\u0026gt;\u0026lt;U+0001F3BE\u0026gt;\rspy : \u0026lt;U+0001F575\u0026gt;\u0026lt;U+0001F575\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F575\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rsquare : \u0026lt;U+23F9\u0026gt;\u0026lt;U+274E\u0026gt;\u0026lt;U+25FD\u0026gt;\u0026lt;U+25FE\u0026gt;\u0026lt;U+2B1B\u0026gt;\u0026lt;U+2B1C\u0026gt;\u0026lt;U+0001F532\u0026gt;\u0026lt;U+0001F533\u0026gt;\rstar : \u0026lt;U+0001F929\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A4\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A4\u0026gt;\u0026lt;U+0001F4AB\u0026gt;\u0026lt;U+0001F4AB\u0026gt;\u0026lt;U+0001F303\u0026gt;\u0026lt;U+2B50\u0026gt;\u0026lt;U+0001F31F\u0026gt;\u0026lt;U+0001F320\u0026gt;\u0026lt;U+2728\u0026gt;\u0026lt;U+2721\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F52F\u0026gt;\u0026lt;U+2734\u0026gt;\u0026lt;U+FE0F\u0026gt;\rstation : \u0026lt;U+0001F689\u0026gt;\u0026lt;U+26FD\u0026gt;\rstatue : \u0026lt;U+0001F5FD\u0026gt;\u0026lt;U+0001F5FF\u0026gt;\rsteam room : \u0026lt;U+0001F9D6\u0026gt;\u0026lt;U+0001F9D6\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F9D6\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\rsteaming : \u0026lt;U+0001F35C\u0026gt;\u0026lt;U+2615\u0026gt;\u0026lt;U+2668\u0026gt;\u0026lt;U+FE0F\u0026gt;\rstick : \u0026lt;U+0001F362\u0026gt;\u0026lt;U+0001F361\u0026gt;\u0026lt;U+0001F3D1\u0026gt;\u0026lt;U+0001F3D2\u0026gt;\u0026lt;U+0001F94D\u0026gt;\rstop : \u0026lt;U+0001F645\u0026gt;\u0026lt;U+0001F645\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+270B\u0026gt;\u0026lt;U+0001F68F\u0026gt;\u0026lt;U+0001F6D1\u0026gt;\u0026lt;U+23F9\u0026gt;\rstore : \u0026lt;U+0001F3EA\u0026gt;\u0026lt;U+0001F3EC\u0026gt;\rstudent : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F393\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F393\u0026gt;\rstuffed : \u0026lt;U+0001F959\u0026gt;\u0026lt;U+0001F9F8\u0026gt;\rstunned : \u0026lt;U+0001F62F\u0026gt;\u0026lt;U+0001F627\u0026gt;\rsummer : \u0026lt;U+0001F379\u0026gt;\u0026lt;U+0001F31E\u0026gt;\rsun : \u0026lt;U+0001F60E\u0026gt;\u0026lt;U+0001F33B\u0026gt;\u0026lt;U+0001F304\u0026gt;\u0026lt;U+0001F305\u0026gt;\u0026lt;U+0001F306\u0026gt;\u0026lt;U+0001F307\u0026gt;\u0026lt;U+2600\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F31E\u0026gt;\u0026lt;U+26C5\u0026gt;\u0026lt;U+0001F324\u0026gt;\u0026lt;U+0001F325\u0026gt;\u0026lt;U+0001F326\u0026gt;\u0026lt;U+26F1\u0026gt;\rsunglasses : \u0026lt;U+0001F60E\u0026gt;\u0026lt;U+0001F576\u0026gt;\rsunrise : \u0026lt;U+0001F304\u0026gt;\u0026lt;U+0001F305\u0026gt;\rsunset : \u0026lt;U+0001F306\u0026gt;\u0026lt;U+0001F307\u0026gt;\rsuperpowers : \u0026lt;U+0001F9B8\u0026gt;\u0026lt;U+0001F9B9\u0026gt;\rsurfing : \u0026lt;U+0001F3C4\u0026gt;\u0026lt;U+0001F3C4\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F3C4\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rsurprise : \u0026lt;U+0001F62E\u0026gt;\u0026lt;U+0001F92D\u0026gt;\rsurprised : \u0026lt;U+0001F62F\u0026gt;\u0026lt;U+0001F640\u0026gt;\rsweat : \u0026lt;U+0001F605\u0026gt;\u0026lt;U+0001F625\u0026gt;\u0026lt;U+0001F613\u0026gt;\u0026lt;U+0001F630\u0026gt;\u0026lt;U+0001F4A6\u0026gt;\u0026lt;U+0001F4A7\u0026gt;\rsweet : \u0026lt;U+0001F360\u0026gt;\u0026lt;U+0001F361\u0026gt;\u0026lt;U+0001F366\u0026gt;\u0026lt;U+0001F367\u0026gt;\u0026lt;U+0001F368\u0026gt;\u0026lt;U+0001F369\u0026gt;\u0026lt;U+0001F36A\u0026gt;\u0026lt;U+0001F382\u0026gt;\u0026lt;U+0001F370\u0026gt;\u0026lt;U+0001F9C1\u0026gt;\u0026lt;U+0001F36B\u0026gt;\u0026lt;U+0001F36C\u0026gt;\u0026lt;U+0001F36C\u0026gt;\u0026lt;U+0001F36D\u0026gt;\u0026lt;U+0001F36E\u0026gt;\u0026lt;U+0001F36F\u0026gt;\rswim : \u0026lt;U+0001F3CA\u0026gt;\u0026lt;U+0001F3CA\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F3CA\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F459\u0026gt;\rswirl : \u0026lt;U+0001F365\u0026gt;\u0026lt;U+0001F300\u0026gt;\rtarget : \u0026lt;U+0001F3AF\u0026gt;\u0026lt;U+0001F3AF\u0026gt;\rtaste : \u0026lt;U+0001F61D\u0026gt;\u0026lt;U+0001F445\u0026gt;\rTaurus : \u0026lt;U+0001F402\u0026gt;\u0026lt;U+2649\u0026gt;\rtaxi : \u0026lt;U+0001F695\u0026gt;\u0026lt;U+0001F696\u0026gt;\rtea : \u0026lt;U+2615\u0026gt;\u0026lt;U+0001F375\u0026gt;\rteacher : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3EB\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3EB\u0026gt;\rtear : \u0026lt;U+0001F602\u0026gt;\u0026lt;U+0001F622\u0026gt;\u0026lt;U+0001F62D\u0026gt;\u0026lt;U+0001F639\u0026gt;\u0026lt;U+0001F63F\u0026gt;\rtechnologist : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BB\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BB\u0026gt;\rtelephone : \u0026lt;U+0001F4F1\u0026gt;\u0026lt;U+0001F4F2\u0026gt;\u0026lt;U+0001F4DE\u0026gt;\u0026lt;U+0001F4F5\u0026gt;\u0026lt;U+0001F4F6\u0026gt;\u0026lt;U+0001F4F3\u0026gt;\u0026lt;U+0001F4F4\u0026gt;\rten : \u0026lt;U+0001F559\u0026gt;\u0026lt;U+0001F565\u0026gt;\rtent : \u0026lt;U+26FA\u0026gt;\u0026lt;U+0001F3AA\u0026gt;\rthanks : \u0026lt;U+0001F647\u0026gt;\u0026lt;U+0001F647\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+0001F64F\u0026gt;\rtheater : \u0026lt;U+0001F3AD\u0026gt;\u0026lt;U+0001F3AD\u0026gt;\rthermometer : \u0026lt;U+0001F912\u0026gt;\u0026lt;U+0001F321\u0026gt;\rthinking : \u0026lt;U+0001F914\u0026gt;\u0026lt;U+0001F4AD\u0026gt;\rthirty : \u0026lt;U+0001F567\u0026gt;\u0026lt;U+0001F55C\u0026gt;\u0026lt;U+0001F55D\u0026gt;\u0026lt;U+0001F55E\u0026gt;\u0026lt;U+0001F55F\u0026gt;\u0026lt;U+0001F560\u0026gt;\u0026lt;U+0001F561\u0026gt;\u0026lt;U+0001F562\u0026gt;\u0026lt;U+0001F563\u0026gt;\u0026lt;U+0001F564\u0026gt;\u0026lt;U+0001F565\u0026gt;\u0026lt;U+0001F566\u0026gt;\rthree : \u0026lt;U+0001F552\u0026gt;\u0026lt;U+0001F55E\u0026gt;\rthumb : \u0026lt;U+0001F44D\u0026gt;\u0026lt;U+0001F44E\u0026gt;\rticket : \u0026lt;U+0001F39F\u0026gt;\u0026lt;U+0001F3AB\u0026gt;\rtiger : \u0026lt;U+0001F42F\u0026gt;\u0026lt;U+0001F405\u0026gt;\rtimer : \u0026lt;U+231B\u0026gt;\u0026lt;U+23F3\u0026gt;\u0026lt;U+23F2\u0026gt;\rtipping hand : \u0026lt;U+0001F481\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F481\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rtired : \u0026lt;U+0001F62A\u0026gt;\u0026lt;U+0001F62B\u0026gt;\u0026lt;U+0001F629\u0026gt;\u0026lt;U+0001F629\u0026gt;\rTitania : \u0026lt;U+0001F9DA\u0026gt;\u0026lt;U+0001F9DA\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rtoast : \u0026lt;U+0001F35E\u0026gt;\u0026lt;U+0001F942\u0026gt;\rtoilet : \u0026lt;U+0001F6BD\u0026gt;\u0026lt;U+0001F6BB\u0026gt;\u0026lt;U+0001F6BE\u0026gt;\rtongue : \u0026lt;U+0001F60B\u0026gt;\u0026lt;U+0001F61B\u0026gt;\u0026lt;U+0001F61C\u0026gt;\u0026lt;U+0001F61D\u0026gt;\u0026lt;U+0001F445\u0026gt;\rtool : \u0026lt;U+0001F52A\u0026gt;\u0026lt;U+0001F3FA\u0026gt;\u0026lt;U+2693\u0026gt;\u0026lt;U+0001F525\u0026gt;\u0026lt;U+0001F52E\u0026gt;\u0026lt;U+0001F50D\u0026gt;\u0026lt;U+0001F50E\u0026gt;\u0026lt;U+0001F526\u0026gt;\u0026lt;U+0001F528\u0026gt;\u0026lt;U+26CF\u0026gt;\u0026lt;U+2692\u0026gt;\u0026lt;U+0001F6E0\u0026gt;\u0026lt;U+0001F52B\u0026gt;\u0026lt;U+0001F3F9\u0026gt;\u0026lt;U+0001F527\u0026gt;\u0026lt;U+0001F529\u0026gt;\u0026lt;U+0001F5DC\u0026gt;\u0026lt;U+0001F9F0\u0026gt;\u0026lt;U+0001F52C\u0026gt;\u0026lt;U+0001F52D\u0026gt;\u0026lt;U+0001F489\u0026gt;\u0026lt;U+0001F531\u0026gt;\u0026lt;U+0001F530\u0026gt;\rtop : \u0026lt;U+0001F3A9\u0026gt;\u0026lt;U+0001F51D\u0026gt;\rtrademark : \u0026lt;U+2122\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2122\u0026gt;\u0026lt;U+FE0F\u0026gt;\rtradesperson : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F527\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F527\u0026gt;\rtraffic : \u0026lt;U+0001F6A5\u0026gt;\u0026lt;U+0001F6A6\u0026gt;\u0026lt;U+0001F6B8\u0026gt;\u0026lt;U+26D4\u0026gt;\rtrain : \u0026lt;U+0001F682\u0026gt;\u0026lt;U+0001F682\u0026gt;\u0026lt;U+0001F683\u0026gt;\u0026lt;U+0001F684\u0026gt;\u0026lt;U+0001F685\u0026gt;\u0026lt;U+0001F686\u0026gt;\u0026lt;U+0001F689\u0026gt;\u0026lt;U+0001F6E4\u0026gt;\rtram : \u0026lt;U+0001F683\u0026gt;\u0026lt;U+0001F68A\u0026gt;\u0026lt;U+0001F68B\u0026gt;\u0026lt;U+0001F68E\u0026gt;\rtravel : \u0026lt;U+0001F5FA\u0026gt;\u0026lt;U+0001F9F3\u0026gt;\rtray : \u0026lt;U+0001F4E4\u0026gt;\u0026lt;U+0001F4E5\u0026gt;\rtree : \u0026lt;U+0001F332\u0026gt;\u0026lt;U+0001F333\u0026gt;\u0026lt;U+0001F334\u0026gt;\u0026lt;U+0001F384\u0026gt;\u0026lt;U+0001F38B\u0026gt;\rtrend : \u0026lt;U+0001F4B9\u0026gt;\u0026lt;U+0001F4C8\u0026gt;\u0026lt;U+0001F4C9\u0026gt;\rtriangle : \u0026lt;U+0001F4D0\u0026gt;\u0026lt;U+25B6\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+23ED\u0026gt;\u0026lt;U+23EF\u0026gt;\u0026lt;U+25C0\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+23EE\u0026gt;\rtrolley : \u0026lt;U+0001F68E\u0026gt;\u0026lt;U+0001F6D2\u0026gt;\rtrolleybus : \u0026lt;U+0001F683\u0026gt;\u0026lt;U+0001F68A\u0026gt;\u0026lt;U+0001F68B\u0026gt;\u0026lt;U+0001F68E\u0026gt;\rtropical : \u0026lt;U+0001F420\u0026gt;\u0026lt;U+0001F96D\u0026gt;\u0026lt;U+0001F379\u0026gt;\rtruck : \u0026lt;U+0001F692\u0026gt;\u0026lt;U+0001F69A\u0026gt;\u0026lt;U+0001F69B\u0026gt;\rturban : \u0026lt;U+0001F473\u0026gt;\u0026lt;U+0001F473\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F473\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rturkey : \u0026lt;U+0001F983\u0026gt;\u0026lt;U+0001F1F9\u0026gt;\u0026lt;U+0001F1F7\u0026gt;\rtwelve : \u0026lt;U+0001F55B\u0026gt;\u0026lt;U+0001F567\u0026gt;\rtwins : \u0026lt;U+0001F46C\u0026gt;\u0026lt;U+264A\u0026gt;\rtwo : \u0026lt;U+0001F551\u0026gt;\u0026lt;U+0001F55D\u0026gt;\rufo : \u0026lt;U+0001F47D\u0026gt;\u0026lt;U+0001F47E\u0026gt;\rumbrella : \u0026lt;U+0001F3D6\u0026gt;\u0026lt;U+0001F302\u0026gt;\u0026lt;U+2602\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2614\u0026gt;\u0026lt;U+26F1\u0026gt;\rundead : \u0026lt;U+0001F9DB\u0026gt;\u0026lt;U+0001F9DB\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F9DB\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F9DF\u0026gt;\u0026lt;U+0001F9DF\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F9DF\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\rup : \u0026lt;U+261D\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F446\u0026gt;\u0026lt;U+0001F44D\u0026gt;\u0026lt;U+0001F51D\u0026gt;\u0026lt;U+0001F199\u0026gt;\rupward : \u0026lt;U+0001F4B9\u0026gt;\u0026lt;U+0001F4C8\u0026gt;\rvampire : \u0026lt;U+0001F9DB\u0026gt;\u0026lt;U+0001F987\u0026gt;\rvegetable : \u0026lt;U+0001F345\u0026gt;\u0026lt;U+0001F346\u0026gt;\u0026lt;U+0001F954\u0026gt;\u0026lt;U+0001F955\u0026gt;\u0026lt;U+0001F952\u0026gt;\u0026lt;U+0001F95C\u0026gt;\rvehicle : \u0026lt;U+0001F69D\u0026gt;\u0026lt;U+0001F68C\u0026gt;\u0026lt;U+0001F691\u0026gt;\u0026lt;U+0001F695\u0026gt;\u0026lt;U+0001F69C\u0026gt;\u0026lt;U+0001F681\u0026gt;\rvictory : \u0026lt;U+270C\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+270C\u0026gt;\u0026lt;U+FE0F\u0026gt;\rvideo : \u0026lt;U+0001F4FB\u0026gt;\u0026lt;U+0001F3A5\u0026gt;\u0026lt;U+0001F4FD\u0026gt;\u0026lt;U+0001F4FA\u0026gt;\u0026lt;U+0001F4F7\u0026gt;\u0026lt;U+0001F4F8\u0026gt;\u0026lt;U+0001F4F9\u0026gt;\u0026lt;U+0001F4FC\u0026gt;\rvideo game : \u0026lt;U+0001F3AE\u0026gt;\u0026lt;U+0001F579\u0026gt;\rVirgo : \u0026lt;U+0001F467\u0026gt;\u0026lt;U+264D\u0026gt;\rvirus : \u0026lt;U+0001F99F\u0026gt;\u0026lt;U+0001F9A0\u0026gt;\rvolume : \u0026lt;U+0001F507\u0026gt;\u0026lt;U+0001F509\u0026gt;\u0026lt;U+0001F50A\u0026gt;\u0026lt;U+0001F515\u0026gt;\rvomit : \u0026lt;U+0001F922\u0026gt;\u0026lt;U+0001F92E\u0026gt;\rwalk : \u0026lt;U+0001F6B6\u0026gt;\u0026lt;U+0001F6B6\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B6\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rwalking dead : \u0026lt;U+0001F9DF\u0026gt;\u0026lt;U+0001F9DF\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F9DF\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\rwaning : \u0026lt;U+0001F316\u0026gt;\u0026lt;U+0001F318\u0026gt;\rwatch : \u0026lt;U+0001F440\u0026gt;\u0026lt;U+231A\u0026gt;\rwater : \u0026lt;U+0001F93D\u0026gt;\u0026lt;U+0001F4A6\u0026gt;\u0026lt;U+0001F403\u0026gt;\u0026lt;U+0001F964\u0026gt;\u0026lt;U+0001F4A7\u0026gt;\u0026lt;U+0001F30A\u0026gt;\u0026lt;U+0001F6BF\u0026gt;\u0026lt;U+0001F6B0\u0026gt;\u0026lt;U+0001F6BE\u0026gt;\u0026lt;U+0001F6B1\u0026gt;\u0026lt;U+2652\u0026gt;\rwave : \u0026lt;U+0001F44B\u0026gt;\u0026lt;U+0001F30A\u0026gt;\rwaving : \u0026lt;U+0001F44B\u0026gt;\u0026lt;U+0001F3F4\u0026gt;\rwaxing : \u0026lt;U+0001F312\u0026gt;\u0026lt;U+0001F314\u0026gt;\rwc : \u0026lt;U+0001F6BD\u0026gt;\u0026lt;U+0001F6B9\u0026gt;\u0026lt;U+0001F6BA\u0026gt;\u0026lt;U+0001F6BE\u0026gt;\rweapon : \u0026lt;U+0001F52A\u0026gt;\u0026lt;U+0001F3FA\u0026gt;\u0026lt;U+0001F5E1\u0026gt;\u0026lt;U+0001F52B\u0026gt;\u0026lt;U+0001F52B\u0026gt;\u0026lt;U+0001F3F9\u0026gt;\u0026lt;U+0001F6E1\u0026gt;\rweary : \u0026lt;U+0001F629\u0026gt;\u0026lt;U+0001F640\u0026gt;\rweather : \u0026lt;U+0001F321\u0026gt;\u0026lt;U+2600\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F302\u0026gt;\u0026lt;U+2744\u0026gt;\u0026lt;U+FE0F\u0026gt;\rwedding : \u0026lt;U+0001F935\u0026gt;\u0026lt;U+0001F470\u0026gt;\u0026lt;U+0001F470\u0026gt;\u0026lt;U+0001F48D\u0026gt;\u0026lt;U+0001F492\u0026gt;\rweight lifter : \u0026lt;U+0001F3CB\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F3CB\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rwhale : \u0026lt;U+0001F433\u0026gt;\u0026lt;U+0001F40B\u0026gt;\rwhew : \u0026lt;U+0001F625\u0026gt;\u0026lt;U+0001F60C\u0026gt;\rwhisky : \u0026lt;U+0001F943\u0026gt;\u0026lt;U+0001F943\u0026gt;\rwhite-collar : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BC\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BC\u0026gt;\rwind : \u0026lt;U+0001F4A8\u0026gt;\u0026lt;U+0001F343\u0026gt;\u0026lt;U+0001F32C\u0026gt;\u0026lt;U+0001F390\u0026gt;\rwink : \u0026lt;U+0001F609\u0026gt;\u0026lt;U+0001F61C\u0026gt;\rwinner : \u0026lt;U+0001F3C6\u0026gt;\u0026lt;U+0001F3C5\u0026gt;\rwinter : \u0026lt;U+2744\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+2603\u0026gt;\u0026lt;U+FE0F\u0026gt;\rwip : \u0026lt;U+0001F6A7\u0026gt;\u0026lt;U+26A0\u0026gt;\u0026lt;U+FE0F\u0026gt;\rwitch : \u0026lt;U+0001F9D9\u0026gt;\u0026lt;U+0001F9D9\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F9F9\u0026gt;\rwizard : \u0026lt;U+0001F9D9\u0026gt;\u0026lt;U+0001F9D9\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\rwoman : \u0026lt;U+0001F469\u0026gt;\u0026lt;U+0001F475\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F393\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3EB\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F33E\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F373\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F527\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3ED\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BC\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F52C\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F4BB\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A4\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3A8\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F680\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F692\u0026gt;\u0026lt;U+0001F46E\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F575\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F482\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F477\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F473\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F471\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F930\u0026gt;\u0026lt;U+0001F64D\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F64E\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F645\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F646\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F481\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F64B\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F647\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F486\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F487\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B6\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F3C3\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F483\u0026gt;\u0026lt;U+0001F3CC\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F3C4\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6A3\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F3CA\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+26F9\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F3CB\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B4\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F6B5\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F46B\u0026gt;\u0026lt;U+0001F46D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F48B\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F48B\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+2764\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F45A\u0026gt;\u0026lt;U+0001F460\u0026gt;\u0026lt;U+0001F461\u0026gt;\u0026lt;U+0001F462\u0026gt;\u0026lt;U+0001F452\u0026gt;\u0026lt;U+0001F6BA\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rwood : \u0026lt;U+0001F332\u0026gt;\u0026lt;U+0001F333\u0026gt;\rworker : \u0026lt;U+0001F468\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3ED\u0026gt;\u0026lt;U+0001F469\u0026gt;\u0026lt;U+200D\u0026gt;\u0026lt;U+0001F3ED\u0026gt;\u0026lt;U+0001F477\u0026gt;\u0026lt;U+0001F477\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F477\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\rworkout : \u0026lt;U+0001F3C3\u0026gt;\u0026lt;U+0001F3C3\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+0001F3CB\u0026gt;\u0026lt;U+0001F3CB\u0026gt;\u0026lt;U+FE0F\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F4AA\u0026gt;\u0026lt;U+0001F4A6\u0026gt;\rworld : \u0026lt;U+0001F30D\u0026gt;\u0026lt;U+0001F30D\u0026gt;\u0026lt;U+0001F30E\u0026gt;\u0026lt;U+0001F30E\u0026gt;\u0026lt;U+0001F30F\u0026gt;\u0026lt;U+0001F30F\u0026gt;\u0026lt;U+0001F310\u0026gt;\u0026lt;U+0001F310\u0026gt;\u0026lt;U+0001F5FA\u0026gt;\rwrench : \u0026lt;U+0001F6E0\u0026gt;\u0026lt;U+0001F527\u0026gt;\ryellow : \u0026lt;U+0001F49B\u0026gt;\u0026lt;U+0001F530\u0026gt;\ryen : \u0026lt;U+0001F4B4\u0026gt;\u0026lt;U+0001F4B9\u0026gt;\ryoga : \u0026lt;U+0001F9D8\u0026gt;\u0026lt;U+0001F9D8\u0026gt;\u0026lt;U+200D\u0026gt;♀\u0026lt;U+FE0F\u0026gt;\u0026lt;U+0001F9D8\u0026gt;\u0026lt;U+200D\u0026gt;♂\u0026lt;U+FE0F\u0026gt;\ryoung : \u0026lt;U+0001F476\u0026gt;\u0026lt;U+0001F9D2\u0026gt;\u0026lt;U+0001F466\u0026gt;\u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F331\u0026gt;\rzodiac : \u0026lt;U+0001F467\u0026gt;\u0026lt;U+0001F46C\u0026gt;\u0026lt;U+0001F981\u0026gt;\u0026lt;U+0001F402\u0026gt;\u0026lt;U+0001F40F\u0026gt;\u0026lt;U+0001F410\u0026gt;\u0026lt;U+0001F40D\u0026gt;\u0026lt;U+0001F41F\u0026gt;\u0026lt;U+0001F980\u0026gt;\u0026lt;U+0001F982\u0026gt;\u0026lt;U+0001F3FA\u0026gt;\u0026lt;U+0001F3F9\u0026gt;\u0026lt;U+2648\u0026gt;\u0026lt;U+2649\u0026gt;\u0026lt;U+264A\u0026gt;\u0026lt;U+264B\u0026gt;\u0026lt;U+264C\u0026gt;\u0026lt;U+264D\u0026gt;\u0026lt;U+264E\u0026gt;\u0026lt;U+264F\u0026gt;\u0026lt;U+2650\u0026gt;\u0026lt;U+2651\u0026gt;\u0026lt;U+2652\u0026gt;\u0026lt;U+2653\u0026gt;\u0026lt;U+26CE\u0026gt;\rzzz : \u0026lt;U+0001F634\u0026gt;\u0026lt;U+0001F634\u0026gt;\u0026lt;U+0001F4A4\u0026gt;\r\r"
},
{
	"uri": "/rlang/function.html",
	"title": "Functions",
	"tags": [],
	"description": "",
	"content": "\r\r\rFunctions\rIntroduction\r簡單測試\r### Quiz {-}\nAnswer the following questions to see if you can safely skip this chapter. You can find the answers in ??.\nWhat are the three components of a function?\n\rWhat does the following code return?\nx \u0026lt;- 10\rf1 \u0026lt;- function(x) {\rfunction() {\rx + 10\r}\r}\rf1(1)()\rHow would you usually write this code?\n`+`(1, `*`(2, 3))\rHow could you make this call easier to read?\nmean(, TRUE, x = c(1:10, NA))\rDoes the following code throw an error when executed? Why/why not?\nf2 \u0026lt;- function(a, b) {\ra * 10\r}\rf2(10, stop(\u0026quot;This is an error!\u0026quot;))\rWhat is an infix function? How do you write it? What’s a replacement\rfunction? How do you write it?\n\rHow do you ensure that cleanup action occurs regardless of how a function\rexits?\n\r\rOutline\r\rSection ?? describes the basics of creating a\rfunction, the three main components of a function, and the exception\rto many function rules: primitive functions (which are implemented in C, not\rR).\n\rSection ?? shows you how R finds the value associated\rwith a given name, i.e. the rules of lexical scoping.\n\rSection ?? is devoted to an important property of\rfunction arguments: they are only evaluated when used for the first time.\n\rSection ?? discusses the two primary ways that a\rfunction can exit, and how to define an exit handler, code that is run on\rexit, regardless of what triggers it.\n\rSection ?? shows you the various ways in which R\rdisguises ordinary function calls, and how you can use the standard prefix\rform to better understand what’s going on.\n\r\r\r\rFunction fundamentals\r幾個重要觀念\n\r函數也是物件,就像是vectors 也是物件。\n\r由三個部份組成: arguments, body, and environment.\n\r\rThere are exceptions to every rule, and in this case, there is a small selection of “primitive” base functions that are implemented purely in C.\nFirst-class functions\r在R中,函數也是物件,這種特性也叫做 “first-class functions”. 如下:\nf01 \u0026lt;- function(x) {\rsin(1 / x ^ 2)\r}\r匿名函數:\nlapply(mtcars, function(x) length(unique(x)))\rFilter(function(x) !is.numeric(x), mtcars)\rintegrate(function(x) sin(x) ^ 2, 0, pi)\r在list中,也可以放入:\nfuns \u0026lt;- list(\rhalf = function(x) x / 2,\rdouble = function(x) x * 2\r)\rfuns$double(10)\r[1] 20\r在R語言中,函數有時叫做closure因為,R函數包含(enclose)它們的環境 environments.\ntypeof(f01)\r[1] \u0026quot;closure\u0026quot;\r\rFunction components\r1個函數有3個部分:\n\rformals(), 參數\n\rbody(), {}內部.\n\renvironment(), 決定函數怎樣找出變數(names)的內容。.\n\r\rI’ll draw functions as in the following diagram. The black dot on the left is the environment. The two blocks to the right are the function arguments. I won’t draw the body, because it’s usually large, and doesn’t help you understand the “shape” of the function.\nThe function environment always exists, but it is only printed when the function isn’t defined in the global environment.\nf02 \u0026lt;- function(x) {\r# A comment\rx ^ 2\r}\rformals(f02)\r$x\rbody(f02)\r{\rx^2\r}\renvironment(f02)\r\u0026lt;environment: R_GlobalEnv\u0026gt;\r就像所以其他R的物件,函數也有很多 attributes(). 其中一個 “srcref”, 是 source reference的縮寫。 attr(f02, \u0026quot;srcref\u0026quot;)\rfunction(x) {\r# A comment\rx ^ 2\r}\r\rPrimitive functions\r３個組件的規則有例外，像是 Primitive functions, like sum() and [, 直接調用Ｃ語言。\nsum\rfunction (..., na.rm = FALSE) .Primitive(\u0026quot;sum\u0026quot;)\r`[`\r.Primitive(\u0026quot;[\u0026quot;)\r看一下type\r分別屬於 “builtin” or “special”:\ntypeof(sum)\r[1] \u0026quot;builtin\u0026quot;\rtypeof(`[`)\r[1] \u0026quot;special\u0026quot;\r因此， formals(), body(), and environment() 都回傳 NULL:\nformals(sum)\rNULL\rbody(sum)\rNULL\renvironment(sum)\rNULL\r這些所謂的原始函數，只存在於基本套件(base packages) 。.\n\rExercises\rGiven a function, like \"mean\", match.fun() lets you find a function.\rGiven a function, can you find its name? Why doesn’t that make sense in R?\n\rIt’s possible (although typically not useful) to call an anonymous function.\rWhich of the two approaches below is correct? Why?\nfunction(x) 3()\rfunction(x) 3()\r(function(x) 3)()\r[1] 3\rA good rule of thumb is that an anonymous function should fit on one line\rand shouldn’t need to use {}. Review your code. Where could you have\rused an anonymous function instead of a named function? Where should you\rhave used a named function instead of an anonymous function?\n\rWhat function allows you to tell if an object is a function? What function\rallows you to tell if a function is a primitive function?\n\rThis code makes a list of all functions in the base package.\nobjs \u0026lt;- mget(ls(\u0026quot;package:base\u0026quot;), inherits = TRUE)\rfuns \u0026lt;- Filter(is.function, objs)\rUse it to answer the following questions:\nWhich base function has the most arguments?\n\rHow many base functions have no arguments? What’s special about those\rfunctions?\n\rHow could you adapt the code to find all primitive functions?\n\r\rWhat are the three important components of a function?\n\rWhen does printing a function not show the environment it was created in?\n\r\r\r\rLexical scoping\rIn [Names and values], we discussed assignment, the act of binding a name to a value. Here we’ll discuss scoping, the act of finding the value associated with a name.\n下面的執行結果傳回10還是20?1\nx \u0026lt;- 10\rg01 \u0026lt;- function() {\rx \u0026lt;- 20\rx\r}\rg01()\r了解範圍規則,有助於函數的模組開發,甚至有助於將R翻譯到其他語言。\nlexical scoping　2: it looks up the values of names based on how a function is defined, not how it is called. “Lexical” here is not the English adjective “relating to words or a vocabulary”. It’s a technical CS term that tells us that the scoping rules use a parse-time, rather than a run-time structure.\nR的’s lexical scoping 遵循4個主要規則::\n\rName masking\rFunctions vs. variables\rA fresh start\rDynamic lookup\r\rName masking\r內部範圍的宣告(第一次使用)覆蓋外部範圍的宣告。.\nx \u0026lt;- 10\ry \u0026lt;- 20\rg02 \u0026lt;- function() {\rx \u0026lt;- 1\ry \u0026lt;- 2\rc(x, y)\r}\rg02()\r[1] 1 2\r如果在內部宣告找不到,就找外一層，一直到global environment。\nx \u0026lt;- 2\rg03 \u0026lt;- function() {\ry \u0026lt;- 1\rc(x, y)\r}\rg03()\r[1] 2 1\r上面的規則仍然適用於函數中的函數.\n測試:下面的R程式會有甚麼結果 ? 3\nx \u0026lt;- 1\rg04 \u0026lt;- function() {\ry \u0026lt;- 2\ri \u0026lt;- function() {\rz \u0026lt;- 3\rc(x, y, z)\r}\ri()\r}\rg04()\r同樣也適用於建立函數的函數( closures).參考 [closures]; 這裡只是用來說明上述規則的使用。 g05(), 傳回函數,猜猜執行結果?4\nx \u0026lt;- 10\ry \u0026lt;- 20\rg05 \u0026lt;- function() {\ry \u0026lt;- 2\rfunction() {\rc(x, y)\r}\r}\rg06 \u0026lt;- g05()\rg06()\rThis seems a little magical: how does R know what the value of y is after j() has returned? It works because k preserves the environment in which it was defined and because the environment includes the value of y. You’ll learn more about how environments work in Environments.\n\rFunctions vs. variables\r既然函數也只是普通的物件,那麼同樣的名稱尋找規則也適用於函數:這個例子中,g07在外部和內部皆有定義。\ng07 \u0026lt;- function(x) x + 1\rg08 \u0026lt;- function() {\rg07 \u0026lt;- function(x) x + 100\rg07(10)\r}\rg08()\r[1] 110\r但是如果同一個名稱,在不同範圍有不一樣的型態呢?例如g9一個是變數,一個是函數:\ng09 \u0026lt;- function(x) x + 100\rg10 \u0026lt;- function() {\rg09 \u0026lt;- 10\rg09(g09)\r}\rg10()\r[1] 110\r一般來講,上面的用法在語法上是沒問題,但是最好避免。\n\rA fresh start\r第一次執行和第二次執行有甚麼不同?5\n函數 exists(x) :會尋找變數名稱x是否存在,存在則無回 TRUE,否則傳回 FALSE.)\ng11 \u0026lt;- function() {\rif (!exists(\u0026quot;a\u0026quot;)) {\ra \u0026lt;- 1\r} else {\ra \u0026lt;- a + 1\r}\ra\r}\rg11()\rg11()\r每次執行g11()的時候,一個新的environment會被建立,也就是這個函數的局部空間。 這個局部空間會在函數結束的時候消失。\n\rDynamic lookup\r但是如果函數執行的時候用倒在局部環境找不到的變數的時候,會目前的總體環境(也就是函數所在的環境)找變數值。\ng12 \u0026lt;- function() x + 1\rx \u0026lt;- 15\rg12()\r[1] 16\rx \u0026lt;- 20\rg12()\r[1] 21\r上面的總體環境包含了兩個變數,一個是函數g12(),一個是變數x:\n- g12()\r- x\n如果要檢查函數的變數參考是不是有問題,可以使用工具 codetools::findGlobals(). This function lists all the external dependencies (unbound symbols) within a function:\ncodetools::findGlobals(g12)\r[1] \u0026quot;+\u0026quot; \u0026quot;x\u0026quot;\rAnother way to solve the problem would be to manually change the environment of the function to the emptyenv(), an environment which contains nothing:\nenvironment(g12) \u0026lt;- emptyenv()\rg12()\rError in x + 1:\r沒有這個函數 \u0026quot;+\u0026quot;\r\rExercises\rWhat does the following code return? Why? Describe how each of the three\rc’s is interpreted.\nc \u0026lt;- 10\rc(c = c)\rWhat are the four principles that govern how R looks for values?\n\rWhat does the following function return? Make a prediction before\rrunning the code yourself.\nf \u0026lt;- function(x) {\rf \u0026lt;- function(x) {\rf \u0026lt;- function() {\rx ^ 2\r}\rf() + 1\r}\rf(x) * 2\r}\rf(10)\r\r\r\rLazy evaluation\rIn R, function arguments are lazily evaluated: they’re only evaluated if accessed. For example, this code doesn’t generate an error because x is never used:\nh01 \u0026lt;- function(x) {\r10\r}\rh01(stop(\u0026quot;This is an error!\u0026quot;))\r[1] 10\rThis is an important feature because it allows you to do things like include potentially expensive computations in function arguments that will only be evaluated if needed.\nForcing evaluation\rTo compel the evaluation of an argument, use force():\nh02 \u0026lt;- function(x) {\rforce(x)\r10\r}\rh02(stop(\u0026quot;This is an error!\u0026quot;))\rError in force(x):\rThis is an error!\rIt is usually not necessary to force evaluation. It’s needed primarily for certain functional programming techniques which we’ll cover in detail in [function operators]. Here, I want to show you the basic issue.\nTake this small but surprisingly tricky function. It takes a single argument x, and returns a function that returns x when called.\ncapture1 \u0026lt;- function(x) {\rfunction() {\rx\r}\r}\rThere’s a subtle issue with this function: the value of x will be captured not when you call capture(), but when you call the function that capture() returns:\nx \u0026lt;- 10\rh03 \u0026lt;- capture1(x)\rh04 \u0026lt;- capture1(x)\rh03()\r[1] 10\rx \u0026lt;- 20\rh04()\r[1] 20\rEven more confusingly this only happens once: the value is locked in after you have called h03()/h04() for the first time.\nx \u0026lt;- 30\rh03()\r[1] 10\rh04()\r[1] 20\rThis behaviour is a consequence of lazy evaluation. The x argument is evaluated once h03()/h04() is called, and then its value is cached. We can avoid the confusion by forcing x:\ncapture2 \u0026lt;- function(x) {\rforce(x)\rfunction() {\rx\r}\r}\rx \u0026lt;- 10\rh05 \u0026lt;- capture2(x)\rx \u0026lt;- 20\rh05()\r[1] 10\r\rPromises (skip)\rLazy evaluation is powered by a data structure called a promise, or (less commonly) a thunk. We’ll come back to this data structure in metaprogramming because it’s one of the features of R that makes it most interesting as a programming language.\nA promise has three components:\n\rThe expression, like x + y which gives rise to the delayed computation.\n\rThe environment where the expression should be evaluated.\n\rThe value, which is computed and cached when the promise is first accessed\rby evaluating the expression in the specified environment.\n\r\rThe value cache ensures that accessing the promise multiple times always returns the same value. For example, you can see in the following code that runif(1) is only evaluated once:\nh06 \u0026lt;- function(x) { c(x, x, x) }\rh06(runif(1))\r[1] 0.0808 0.0808 0.0808\rYou can also create promises “by hand” using delayedAssign():\ndelayedAssign(\u0026quot;x\u0026quot;, {print(\u0026quot;Executing code\u0026quot;); runif(1)})\rx\r[1] \u0026quot;Executing code\u0026quot;\r[1] 0.834\rx\r[1] 0.834\rYou’ll see this idea again in [advanced bindings].\n\rDefault arguments\rh07 \u0026lt;- function(x = 1, y = x * 2) {\rc(x, y)\r}\rh07()\r[1] 1 2\r\rMissing arguments\r判斷參數內容來自使用者或者預設的函數: missing():\nh09 \u0026lt;- function(x = 10) {\rlist(missing(x), x)\r}\rstr(h09()) # 預設\rList of 2\r$ : logi TRUE\r$ : num 10\rstr(h09(10)) # 使用者\rList of 2\r$ : logi FALSE\r$ : num 10\r\r\r... (dot-dot-dot)\rtodo:\n\r\rExiting a function\rMost functions exit in one of two ways6: either returning a value, indicating successful completion, or throwing an error, indicating failure. This section describes return values (implicit vs. explicit; visible vs. invisible), briefly discusses errors, and introduces exit handlers, which allow you to run code when a function exits, regardless of how it exits.\nImplicit vs. explict returns\rThere are two ways that a function can return a value:\n\rImplicitly, where the last evaluated expression becomes the return\rvalue:\nj01 \u0026lt;- function(x) {\rif (x \u0026lt; 10) {\r0\r} else {\r10\r}\r}\rf(5)\r[1] 52\rf(15)\r[1] 452\rExplicitly, by calling return():\nj02 \u0026lt;- function(x) {\rif (x \u0026lt; 10) {\rreturn(0)\r} else {\rreturn(10)\r}\r}\r\r\rInvisible values\rMost functions return visibly: calling the function in an interactive context causes the result to be automatically printed.\nj03 \u0026lt;- function() 1\rj03()\r[1] 1\rHowever, it’s also possible to return an invisible() value, which is not automatically printed.\nj04 \u0026lt;- function() invisible(1)\rj04()\rYou can verify that the value exists either by explicitly printing it or by wrapping in parentheses:\nprint(j04())\r[1] 1\r(j04())\r[1] 1\rAlternatively, use withVisible() to return the value and a visibility flag:\nstr(withVisible(j04()))\rList of 2\r$ value : num 1\r$ visible: logi FALSE\rThe most common function that returns invisibly is \u0026lt;-:\na \u0026lt;- 2\r(a \u0026lt;- 2)\r[1] 2\rAnd this is what makes it possible to chain assignment:\na \u0026lt;- b \u0026lt;- c \u0026lt;- d \u0026lt;- 2\rIn general, any function called primarily for its side effects (like \u0026lt;-, print(), or plot()) should return an invisible value (typically the value of the first argument).\n\rErrors\rIf a function can not complete its assigned task, it should throw an error with stop(), which immediately terminates the execution of the function.\nj05 \u0026lt;- function() {\rstop(\u0026quot;I\u0026#39;m an error\u0026quot;)\rreturn(10)\r}\rj05()\rError in j05():\rI\u0026#39;m an error\rErrors indicate that something has gone wrong, and force the user to handle them. Some languages (like C, go, and rust) rely on special return values to indicate problems, but in R you should always throw an error. You’ll learn more about errors, and how to handle them, in [Conditions].\n\rExit handlers\rSometimes a function needs to make a temporary change to global state and you want to ensure those changes are restored when the function completes. It’s painful to make sure you cleanup before any explicit return, and what happens if there’s an error? Instead, you can set up an exiting handler that is called when the function terminates, regardless of whether it returns a value or throws an error.\nTo setup an exiting handler, call on.exit() with the code to be run. It will execute when the function exits, regardless of what causes it to exit:\nj06 \u0026lt;- function(x) {\rcat(\u0026quot;Hello\\n\u0026quot;)\ron.exit(cat(\u0026quot;Goodbye!\\n\u0026quot;), add = TRUE)\rif (x) {\rreturn(10)\r} else {\rstop(\u0026quot;Error\u0026quot;)\r}\r}\rf(TRUE)\r[1] 4\rf(FALSE)\r[1] 2\rAlways set add = TRUE when using on.exit(). If you don’t, each call to on.exit() will overwrite the previous exiting handler. Even when only registering a single handler, it’s good practice to set add = TRUE so that you don’t get an unpleasant surprise if you later add more exit handlers\n\ron.exit() is important because it allows you to place clean-up actions next to actions with their cleanup operations.\ncleanup \u0026lt;- function(dir, code) {\rold_dir \u0026lt;- setwd(dir)\ron.exit(setwd(old), add = TRUE)\rold_opt \u0026lt;- options(stringsAsFactors = FALSE)\ron.exit(options(old_opt), add = TRUE)\r}\rWhen coupled with lazy evaluation, this leads to a very useful pattern for running a block of code in an altered environment:\nwith_dir \u0026lt;- function(dir, code) {\rold \u0026lt;- setwd(dir)\ron.exit(setwd(old), add = TRUE)\rforce(code)\r}\rgetwd()\r[1] \u0026quot;D:/RStudio/book/classR/content/rlang\u0026quot;\rwith_dir(\u0026quot;~\u0026quot;, getwd())\r[1] \u0026quot;C:/Users/linchao/Documents\u0026quot;\rSee the withr package for a collection of functions of this nature.\nIn R 3.4 and prior, on.exit() expressions are always run in the order in which they are created:\nf \u0026lt;- function() {\ron.exit(message(\u0026quot;a\u0026quot;), add = TRUE)\ron.exit(message(\u0026quot;b\u0026quot;), add = TRUE)\r}\rf()\ra\rb\rThis can make cleanup a little tricky if some actions need to happen in a specific order; typically you want the most recent added expression to be run first. In R 3.5 and later, you can control this by setting after = FALSE:\nf \u0026lt;- function() {\ron.exit(message(\u0026quot;a\u0026quot;), add = TRUE, after = FALSE)\ron.exit(message(\u0026quot;b\u0026quot;), add = TRUE, after = FALSE)\r}\rf()\rb\ra\r\rExercises\rWhat does load() return? Why don’t you normally see these values?\n\rWhat does write.table() return? What would be more useful?\n\rHow does the chdir parameter of source() compare to in_dir()? Why\rmight you prefer one approach to the other?\n\rWrite a function that opens a graphics device, runs the supplied code, and\rcloses the graphics device (always, regardless of whether or not the plotting\rcode worked).\n\rWe can use on.exit() to implement a simple version of capture.output().\ncapture.output2 \u0026lt;- function(code) {\rtemp \u0026lt;- tempfile()\ron.exit(file.remove(temp), add = TRUE, after = TRUE)\rsink(temp)\ron.exit(sink(), add = TRUE, after = TRUE)\rforce(code)\rreadLines(temp)\r}\rcapture.output2(cat(\u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;c\u0026quot;, sep = \u0026quot;\\n\u0026quot;))\rWarning in file.remove(temp): 無法移除檔案 \u0026#39;C:\r\\Users\\linchao\\AppData\\Local\\Temp\\Rtmp82C824\\file258012086915\u0026#39; ，原因是\r\u0026#39;Permission denied\u0026#39;\r[1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot;\rCompare capture.output() to capture.output2(). How do the functions\rdiffer? What features have I removed to make the key ideas easier to see?\rHow have I rewritten the key ideas to be easier to understand?\n\r\r\r\rFunction forms (skip)\r\r\"To understand computations in R, two slogans are helpful:\n\rEverything that exists is an object.\rEverything that happens is a function call.\"\r\r— John Chambers\n\rWhile everything that happens in R is a result of a function call, not all calls look the same. Function calls come in four varieties:\n\rIn prefix form, the function name comes before its arguments, like\rfoofy(a, b, c). These constitute of the majority of function calls in R.\n\rIn infix form, the function name comes inbetween its arguments, like\rx + y. Infix forms are used for many mathematical operators, as well as\ruser-defined functions that begin and end with %.\n\rA replacement function assigns into what looks like a prefix function,\rlike names(df) \u0026lt;- c(\"a\", \"b\", \"c\").\n\rSpecial forms like [[, if, and for, don’t have a consistent\rstructure and provide some of the most important syntax in R.\n\r\rWhile four forms exist, you only need to use one, because any call can be written in prefix form. I’ll demonstrate this property, and then you’ll learn about each of the forms in turn.\nRewriting to prefix form\rAn interesting property of R is every infix, replacement, or special form can be rewritten in prefix form. Rewriting in prefix form is useful because it helps you better understand the structure of the language, and it gives you the real name of every function. Knowing the real name of non-prefix functions is useful because it allows you to modify them for fun and profit.\nThe following example shows three pairs of equivalent calls, rewriting an infix form, replacement form, and a special form into prefix form.\nx + y\r`+`(x, y)\rnames(df) \u0026lt;- c(\u0026quot;x\u0026quot;, \u0026quot;y\u0026quot;, \u0026quot;z\u0026quot;)\r`names\u0026lt;-`(df, c(\u0026quot;x\u0026quot;, \u0026quot;y\u0026quot;, \u0026quot;z\u0026quot;))\rfor(i in 1:10) print(i)\r`for`(i, 1:10, print(i))\rKnowing the function name of a non-prefix function allows you to override its behaviour. For example, if you’re ever feeling particularly evil, run the following code while a friend is away from their computer. It will introduce a fun bug: 10% of the time, 1 will be added to any numeric calculation inside of parentheses.\n`(` \u0026lt;- function(e1) {\rif (is.numeric(e1) \u0026amp;\u0026amp; runif(1) \u0026lt; 0.1) {\re1 + 1\r} else {\re1\r}\r}\rreplicate(50, (1 + 2))\r [1] 3 3 4 3 3 3 3 3 3 3 4 3 3 3 3 4 3 3 3 3 3 3 3 3 4 3 3 3 4 3 3 3 3 3 3 3 3 3\r[39] 3 3 3 3 4 3 3 3 3 3 3 3\rrm(\u0026quot;(\u0026quot;)\rOf course, overriding built-in functions like this is a bad idea, but, as you’ll learn about in [metaprogramming], it’s possible to apply it only to selected code blocks. This provides a clean and elegant approach to writing domain specific languages and translators to other languages.\nA more useful technique is to use this knowledge when using functional programming tools. For example, you could use sapply() to add 3 to every element of a list by first defining a function add(), like this:\nadd \u0026lt;- function(x, y) x + y\rsapply(1:10, add, 3)\r [1] 4 5 6 7 8 9 10 11 12 13\rBut we can also get the same effect more simply by relying on the existing + function:\nsapply(1:5, `+`, 3)\r[1] 4 5 6 7 8\rWe’ll explore this idea in detail in [functionals].\n\rPrefix form {prefix-form}\rThe prefix form is the most common form in R code, and indeed in the majority of programming languages. Prefix calls in R are a little special because you can specify arguments in three ways:\n\rBy position, like help(mean).\rUsing partial matching, like help(to = mean).\rBy name, like help(topic = mean).\r\rAs illustrated by the following chunk, arguments are matched by exact name, then with unique prefixes, and finally by position.\nk01 \u0026lt;- function(abcdef, bcde1, bcde2) {\rlist(a = abcdef, b1 = bcde1, b2 = bcde2)\r}\rstr(k01(1, 2, 3))\rList of 3\r$ a : num 1\r$ b1: num 2\r$ b2: num 3\rstr(k01(2, 3, abcdef = 1))\rList of 3\r$ a : num 1\r$ b1: num 2\r$ b2: num 3\r# Can abbreviate long argument names:\rstr(k01(2, 3, a = 1))\rList of 3\r$ a : num 1\r$ b1: num 2\r$ b2: num 3\r# But this doesn\u0026#39;t work because abbreviation is ambiguous\rstr(k01(1, 3, b = 1))\rError in k01(1, 3, b = 1):\r引數 3 有多個與之相對應的正式引數\rGenerally, only use positional matching for the first one or two arguments; they will be the most commonly used, and most readers will know what they are. Avoid using positional matching for less commonly used arguments, and never use partial matching. See the tidyverse style guide, http://style.tidyverse.org/syntax.html#argument-names, for more advice.\n\rInfix functions\rInfix functions are so called because the function name comes inbetween its arguments, and hence infix functions have two arguments. R comes with a number of built-in infix operators: :, ::, :::, $, @, ^, *, /, +, -, \u0026gt;, \u0026gt;=, \u0026lt;, \u0026lt;=, ==, !=, !, \u0026amp;, \u0026amp;\u0026amp;, |, ||, ~, \u0026lt;-, and \u0026lt;\u0026lt;-. You can also create your own infix functions that start and end with %, and base R uses this to additionally define %%, %*%, %/%, %in%, %o%, and %x%.\nDefining your own infix function is simple. You create a two argument function and bind it to a name that starts and ends with %:\n`%+%` \u0026lt;- function(a, b) paste0(a, b)\r\u0026quot;new \u0026quot; %+% \u0026quot;string\u0026quot;\r[1] \u0026quot;new string\u0026quot;\rThe names of infix functions are more flexible than regular R functions: they can contain any sequence of characters except “%”. You will need to escape any special characters in the string used to define the function, but not when you call it:\n`% %` \u0026lt;- function(a, b) paste(a, b)\r`%/\\\\%` \u0026lt;- function(a, b) paste(a, b)\r\u0026quot;a\u0026quot; % % \u0026quot;b\u0026quot;\r[1] \u0026quot;a b\u0026quot;\r\u0026quot;a\u0026quot; %/\\% \u0026quot;b\u0026quot;\r[1] \u0026quot;a b\u0026quot;\rR’s default precedence rules mean that infix operators are composed from left to right:\n`%-%` \u0026lt;- function(a, b) paste0(\u0026quot;(\u0026quot;, a, \u0026quot; %-% \u0026quot;, b, \u0026quot;)\u0026quot;)\r\u0026quot;a\u0026quot; %-% \u0026quot;b\u0026quot; %-% \u0026quot;c\u0026quot;\r[1] \u0026quot;((a %-% b) %-% c)\u0026quot;\rThere are two special infix functions that can be called with a single argument: + and -.\n-1\r[1] -1\r+10\r[1] 10\r\rReplacement functions\rReplacement functions act like they modify their arguments in place, and have the special name xxx\u0026lt;-. They must have arguments named x and value, and must return the modified object. For example, the following function allows you to modify the second element of a vector:\n`second\u0026lt;-` \u0026lt;- function(x, value) {\rx[2] \u0026lt;- value\rx\r}\rReplacement functions are used by placing the function call on the LHS of \u0026lt;-:\nx \u0026lt;- 1:10\rsecond(x) \u0026lt;- 5L\rx\r [1] 1 5 3 4 5 6 7 8 9 10\rI say they “act” like they modify their arguments in place, because, as discussed in [Modify-in-place], they actually create a modified copy. We can see that by using tracemem():\nx \u0026lt;- 1:10\rtracemem(x)\r#\u0026gt; \u0026lt;0x7ffae71bd880\u0026gt;\rsecond(x) \u0026lt;- 6L\r#\u0026gt; tracemem[0x7ffae71bd880 -\u0026gt; 0x7ffae61b5480]: #\u0026gt; tracemem[0x7ffae61b5480 -\u0026gt; 0x7ffae73f0408]: second\u0026lt;- \rIf you want to supply additional arguments, they go inbetween x and value:\n`modify\u0026lt;-` \u0026lt;- function(x, position, value) {\rx[position] \u0026lt;- value\rx\r}\rmodify(x, 1) \u0026lt;- 10\rx\r [1] 10 5 3 4 5 6 7 8 9 10\rWhen you write modify(x, 1) \u0026lt;- 10, behind the scenes R turns it into:\nx \u0026lt;- `modify\u0026lt;-`(x, 1, 10)\rCombining replacement with other functions requires more complex translation. For example, this:\nx \u0026lt;- c(a = 1, b = 2, c = 3)\rnames(x)\r[1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot;\rnames(x)[2] \u0026lt;- \u0026quot;two\u0026quot;\rnames(x)\r[1] \u0026quot;a\u0026quot; \u0026quot;two\u0026quot; \u0026quot;c\u0026quot; \rIs translated into:\n`*tmp*` \u0026lt;- x\rx \u0026lt;- `names\u0026lt;-`(`*tmp*`, `[\u0026lt;-`(names(`*tmp*`), 2, \u0026quot;two\u0026quot;))\rrm(`*tmp*`)\r(Yes, it really does create a local variable named tmp, which is removed afterwards.)\n\rSpecial forms\rFinally, there are a bunch of language features that are usually written in special ways, but also have prefix forms. These include parentheses:\n\r(x) (`(`(x))\r{x} (`{`(x)).\r\rThe subsetting operators:\n\rx[i] (`[`(x, i))\rx[[i]] (`[[`(x, i))\r\rAnd the tools of control flow:\n\rif (cond) true (`if`(cond, true))\rif (cond) true else false (`if`(cond, true, false))\rfor(var in seq) action (`for`(var, seq, action))\rwhile(cond) action (`while`(cond, action))\rrepeat expr (`repeat`(expr))\rnext (`next`())\rbreak (`break`())\r\rFinally, the most complex is the “function” function:\n\rfunction(arg1, arg2) {body} (`function`(alist(arg1, arg2), body, env))\r\rKnowing the name of the function that underlies the special form is useful for getting documentation. ?( is a syntax error; ?`(` will give you the documentation for parentheses.\nNote that all special forms are implemented as primitive functions (i.e. in C); that means printing these functions is not informative:\n`for`\r.Primitive(\u0026quot;for\u0026quot;)\r\r\rInvoking a function\r另一個do.call()的參考\nSuppose you had a list of function arguments:\nargs \u0026lt;- list(1:10, na.rm = TRUE)\rHow could you then send that list to mean()? In base R, you need do.call():\ndo.call(mean, args)\r[1] 5.5\r# Equivalent to\rmean(1:10, na.rm = TRUE)\r[1] 5.5\rExercises\rRewrite the following code snippets into prefix form:\n1 + 2 + 3\r1 + (2 + 3)\rif (length(x) \u0026lt;= 5) x[[5]] else x[[n]]\rClarify the following list of odd function calls:\nx \u0026lt;- sample(replace = TRUE, 20, x = c(1:10, NA))\ry \u0026lt;- runif(min = 0, max = 1, 20)\rcor(m = \u0026quot;k\u0026quot;, y = y, u = \u0026quot;p\u0026quot;, x = x)\rExplain why the following code fails:\nmodify(get(\u0026quot;x\u0026quot;), 1) \u0026lt;- 10\r#\u0026gt; Error: target of assignment expands to non-language object\rCreate a replacement function that modifies a random location in a vector.\n\rWrite your own version of + that will paste its inputs together if\rthey are character vectors but behaves as usual otherwise. In other words,\rmake this code work:\n1 + 2\r#\u0026gt; [1] 3\r\u0026quot;a\u0026quot; + \u0026quot;b\u0026quot;\r#\u0026gt; [1] \u0026quot;ab\u0026quot;\rCreate a list of all the replacement functions found in the base package.\rWhich ones are primitive functions? (Hint use apropros())\n\rWhat are valid names for user-created infix functions?\n\rCreate an infix xor() operator.\n\rCreate infix versions of the set functions intersect(), union(), and\rsetdiff(). You might call them %n%, %u%, and %/% to match\rconventions from mathematics.\n\r\r\r\rQuiz answers\rThe three components of a function are its body, arguments, and environment.\n\rf1(1)() returns 11.\n\rYou’d normally write it in infix style: 1 + (2 * 3).\n\rRewriting the call to mean(c(1:10, NA), na.rm = TRUE) is easier to\runderstand.\n\rNo, it does not throw an error because the second argument is never used\rso it’s never evaluated.\n\rSee infix and\rreplacement functions.\n\rYou use on.exit(); see on exit for details.\n\r\r\r\r\r20.↩︎\n\rFunctions that automatically quote one or more arguments (sometimes called NSE functions) can override the default scoping rules to implement other varieties of scoping. You’ll learn more about that in metaprogramming.↩︎\n\rg04() returns c(1, 2, 3).↩︎\n\rg06() returns c(10, 2).↩︎\n\rg11() 每次被調用都是傳回 1。.↩︎\n\rFunctions can exit in other more esoteric ways like signalling a condition that is caught by an exiting handler, invoking a restart, or pressing “Q” in an interactive browser.↩︎\n\r\r\r"
},
{
	"uri": "/topic/sitetecnote/git-note.html",
	"title": "git-note",
	"tags": [],
	"description": "",
	"content": "\r\r\rgit note\r在ubuntu 中，git push 要避免一直輸入帳號密碼的方式為：\r1.\ngit config --global credential.helper \u0026#39;store --file ~/.my-credentials\u0026#39;\r\r然後在git push 的時候，輸入帳號和密碼（只要一次，就會被紀錄在上面指定的檔案，這裡的例子是,`.my-credentials’。\r\r\r"
},
{
	"uri": "/topic/interesting.html",
	"title": "interesting",
	"tags": [],
	"description": "",
	"content": "\r\r\rseems interesting\r\r\r自動化\r\r\r\r"
},
{
	"uri": "/rlang.html",
	"title": "R language",
	"tags": [],
	"description": "常用",
	"content": ""
},
{
	"uri": "/tags.html",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/topic/test/testpage.html",
	"title": "testpage",
	"tags": [],
	"description": "",
	"content": "\r\r\r\rBy default, the publish directory is the public/ directory. However, when hosting a website on GitHub, GitHub can only recognize website files within the docs/ folder. We need to change the default publish directory from public/ to docs/.\n\r\r"
},
{
	"uri": "/topic.html",
	"title": "Topics",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/topic/experiment/central.html",
	"title": "中央",
	"tags": [],
	"description": "包括中央極限",
	"content": "\r\r\rR Markdown\r員工的薪水分配，嚴重懷疑不是常態分配\n100: -\u0026gt;\r/mu\u0026lt;-100\r/sd()\u0026lt;-100\r/se(stander error) \u0026lt;- /sd/sqrt(100)\n1.96\n-1.96/se , /mu , 1.96 /se\nboot strapping\r把我們得到的100個樣本，重複抽1000，(每次必須抽100個)然後得到1000個平均\rmu,sd\rpercentile(2.5) , mu, percentile(97.5)\nN\u0026lt;-10\rmetasample\u0026lt;-rnorm(N,5,2)\rbmu\u0026lt;-numeric(1000)\rfor(i in 1:1000){\rrndno\u0026lt;-as.integer(runif(N)*N)+1 smp\u0026lt;-metasample[rndno]\rbmu[i]\u0026lt;-mean(smp)\r}\rp\u0026lt;-density(bmu)\rplot(p)\rqq\u0026lt;-quantile(bmu)\rrug(qq,col=\u0026quot;red\u0026quot;)\rqq\r 0% 25% 50% 75% 100% 1.97 3.64 4.10 4.55 6.35 \rN\u0026lt;-100\rmetasample\u0026lt;-rnorm(N,5,2)\rbmu\u0026lt;-numeric(1000)\rfor(i in 1:1000){\rrndno\u0026lt;-as.integer(runif(N)*N)+1 smp\u0026lt;-metasample[rndno]\rbmu[i]\u0026lt;-mean(smp)\r}\rp\u0026lt;-density(bmu)\rplot(p)\rqq\u0026lt;-quantile(bmu)\rrug(qq,col=\u0026quot;red\u0026quot;)\rqq\r 0% 25% 50% 75% 100% 4.06 4.60 4.72 4.85 5.31 \rN\u0026lt;-100\rmetasample\u0026lt;-rnorm(N,5,2)\rhinfo\u0026lt;-hist(metasample)\rlx\u0026lt;-seq(min(metasample),max(metasample),length=100)\rly\u0026lt;-dnorm(lx,mean(metasample),sd(metasample))\rsy\u0026lt;-ly*(diff(lx)[1])*N lines(lx,sy,col=\u0026quot;blue\u0026quot;)\rN\u0026lt;-100\rmetasample\u0026lt;-rnorm(N,5,2)\rhinfo\u0026lt;-hist(metasample)\rly\u0026lt;-dnorm(hinfo$mids,mean(metasample),sd(metasample))\rsy\u0026lt;-ly*(diff(hinfo$mids)[1])*N lines(hinfo$mids,sy,col=\u0026quot;blue\u0026quot;)\r\r"
},
{
	"uri": "/topic/experiment.html",
	"title": "實驗",
	"tags": [],
	"description": "實驗",
	"content": ""
},
{
	"uri": "/topic/test.html",
	"title": "網頁測試",
	"tags": [],
	"description": "測試",
	"content": ""
}]