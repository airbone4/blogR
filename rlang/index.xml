<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rlangs on R in Class</title>
    <link>/rlang.html</link>
    <description>Recent content in Rlangs on R in Class</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/rlang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1 Requirement</title>
      <link>/rlang/1_0_requirement.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/1_0_requirement.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>2 data explorer 1</title>
      <link>/rlang/2_data_explorer_1.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/2_data_explorer_1.html</guid>
      <description>資料探索 常用函數  Mean
 Median
 Quartile
 Percentile
 Range
 Interquartile Range
 Box Plot
 Variance
 Standard Deviation
 Covariance
 Correlation Coefficient
 Central Moment
 Skewness
 Kurtosis
mean(mtcars$mpg)  #&amp;gt; [1] 20.09062  median(mtcars$mpg)  #&amp;gt; [1] 19.2  min(mtcars$mpg)  #&amp;gt; [1] 10.4  max(mtcars$mpg)  #&amp;gt; [1] 33.9  quantile(mtcars$mpg)  #&amp;gt; 0% 25% 50% 75% 100% #&amp;gt; 10.400 15.</description>
    </item>
    
    <item>
      <title>2.1 data explorer 2</title>
      <link>/rlang/2_1_data_explorer_2.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/2_1_data_explorer_2.html</guid>
      <description>age = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372, 34.935, 35.2115, 35.2115, 5.2115, 36.7803) group = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1) dframe = data.frame(age=age, group=group)  分組列出summary:利用函數 age = c(23.0883, 25.8344, 29.4648, 32.7858, 33.6372, 34.935, 35.2115, 35.2115, 5.2115, 36.7803) group = c(1, 1, 1, 2, 1, 1, 2, 2, 2, 1) dframe = data.frame(age=age, group=group) mygroup&amp;lt;-function(df,g,idx) { ft&amp;lt;-factor(df$g) gf&amp;lt;-ft==levels(ft)[idx] # 第一組 g1&amp;lt;-df[gf,] return(g1) } x&amp;lt;-mygroup(dframe,&amp;quot;group&amp;quot;,1)  問題： 現在把某個欄位依據分組畫出boxplot</description>
    </item>
    
    <item>
      <title>3. Quick view 1</title>
      <link>/rlang/3_quickview1.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/3_quickview1.html</guid>
      <description>quick view 快速指令
目前有哪些資料集可以測試 data()
attach()
一般是
library(sample) data(&amp;quot;mydata&amp;quot;)  attach(&amp;quot;mydata&amp;quot;) 就不用打入mydata$欄位名稱
幾個常用的統計量: x&amp;lt;-c(1,2,3) median(x) mean(x) min(x) sd(x) range(x) diff(x)  資料型態和內容 可以先看看資料描述 ?mtcars
mtcars  #&amp;gt; mpg cyl disp hp drat wt qsec vs am gear carb #&amp;gt; Mazda RX4 21.0 6 160.0 110 3.90 2.620 16.46 0 1 4 4 #&amp;gt; Mazda RX4 Wag 21.0 6 160.0 110 3.90 2.875 17.02 0 1 4 4 #&amp;gt; Datsun 710 22.</description>
    </item>
    
    <item>
      <title>3.1 Regular expression syntax</title>
      <link>/rlang/3_01_regular_expression.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/3_01_regular_expression.html</guid>
      <description>&lt;p&gt;利用一些特殊字元，例如 &lt;code&gt;$ * + . ? [ ] ^ { } | ( ) \&lt;/code&gt;構成Regular expressions，用來在文字中表達某些搜尋樣式的語法。 這裡只是簡短的介紹&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>4.1.4 type more</title>
      <link>/rlang/4_1_4_type_more.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/4_1_4_type_more.html</guid>
      <description>Factors R也能把資料存為factor。
在大部分實驗中,某些解釋變數經常有不同程度的測試,稱為因子。
大意如下：
 ... includes trials for different levels of some explanatory variable.
The different levels are also called factors.
 探索一下factors fert = c(10,20,20,50,10,20,10,50,20) fert = factor(fert,levels=c(10,20,50),ordered=TRUE)  levels()可以顯示factor的標籤
解釋：
levels(fert) 產生一個「字串向量」，內容為10, 20, 50，如下可證：
str(levels(fert))  #&amp;gt; chr [1:3] &amp;quot;10&amp;quot; &amp;quot;20&amp;quot; &amp;quot;50&amp;quot;  levels(fert)  #&amp;gt; [1] &amp;quot;10&amp;quot; &amp;quot;20&amp;quot; &amp;quot;50&amp;quot;  fert 的內容，如果忽略標籤本身，其實已經是數字,也就是:typeof(fert)=。
fert  #&amp;gt; [1] 10 20 20 50 10 20 10 50 20 #&amp;gt; Levels: 10 &amp;lt; 20 &amp;lt; 50  typeof(fert)  #&amp;gt; [1] &amp;quot;integer&amp;quot;  💡 因此, attr(x,&amp;quot;levels&amp;quot;)=levels(x)。</description>
    </item>
    
    <item>
      <title>4.2 type post</title>
      <link>/rlang/4_2_type_post.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/4_2_type_post.html</guid>
      <description>相關操作 practice1.R
問題:想要知道有甚麼資料庫可以用? 例如， 想要知道資料庫裏面有沒有&#39;mtcars&#39;
hint:
grep(&#39;pattern&#39;,target)
l&amp;lt;-list(&#39;a&#39;,&#39;b&#39;,&#39;c&#39;) grep(&#39;a&#39;,l)  #&amp;gt; [1] 1  利用指令data()可以列出內建資料：
xx&amp;lt;-data()  xx 是甚麼?直接打入xx並沒有像其他變數一樣，在console顯示內容：
xx  str(xx)  #&amp;gt; List of 4 #&amp;gt; $ title : chr &amp;quot;Data sets&amp;quot; #&amp;gt; $ header : NULL #&amp;gt; $ results: chr [1:104, 1:4] &amp;quot;datasets&amp;quot; &amp;quot;datasets&amp;quot; &amp;quot;datasets&amp;quot; &amp;quot;datasets&amp;quot; ... #&amp;gt; ..- attr(*, &amp;quot;dimnames&amp;quot;)=List of 2 #&amp;gt; .. ..$ : NULL #&amp;gt; .. ..$ : chr [1:4] &amp;quot;Package&amp;quot; &amp;quot;LibPath&amp;quot; &amp;quot;Item&amp;quot; &amp;quot;Title&amp;quot; #&amp;gt; $ footer : chr &amp;quot;Use &#39;data(package = .</description>
    </item>
    
    <item>
      <title>4.3 type matrix</title>
      <link>/rlang/4_3_type_matrix.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/4_3_type_matrix.html</guid>
      <description>matrix 矩陣的建立有多種方式,其中一種是利用向量轉填矩陣，填入的方式預設是以coumn為主要方向。
matrix(c(1,2,3,4,5,6),2,3) #&amp;gt; [,1] [,2] [,3] #&amp;gt; [1,] 1 3 5 #&amp;gt; [2,] 2 4 6  問題: 怎樣產生
1 2 3
4 5 6
的矩陣
diag(1, nrow = 5) #&amp;gt; [,1] [,2] [,3] [,4] [,5] #&amp;gt; [1,] 1 0 0 0 0 #&amp;gt; [2,] 0 1 0 0 0 #&amp;gt; [3,] 0 0 1 0 0 #&amp;gt; [4,] 0 0 0 1 0 #&amp;gt; [5,] 0 0 0 0 1  matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), nrow = 3, byrow = TRUE, dimnames = list(c(&amp;quot;r1&amp;quot;, &amp;quot;r2&amp;quot;, &amp;quot;r3&amp;quot;), c(&amp;quot;c1&amp;quot;, &amp;quot;c2&amp;quot;, &amp;quot;c3&amp;quot;))) #&amp;gt; c1 c2 c3 #&amp;gt; r1 1 2 3 #&amp;gt; r2 4 5 6 #&amp;gt; r3 7 8 9  m1 &amp;lt;- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), ncol = 3) rownames(m1) &amp;lt;- c(&amp;quot;r1&amp;quot;, &amp;quot;r2&amp;quot;, &amp;quot;r3&amp;quot;) colnames(m1) &amp;lt;- c(&amp;quot;c1&amp;quot;, &amp;quot;c2&amp;quot;, &amp;quot;c3&amp;quot;) m1 #&amp;gt; c1 c2 c3 #&amp;gt; r1 1 4 7 #&amp;gt; r2 2 5 8 #&amp;gt; r3 3 6 9  B = matrix( c(2, 4, 3, 1, 5, 7), nrow=3, ncol=2) B #&amp;gt; [,1] [,2] #&amp;gt; [1,] 2 1 #&amp;gt; [2,] 4 5 #&amp;gt; [3,] 3 7  Transpose t(B) #&amp;gt; [,1] [,2] [,3] #&amp;gt; [1,] 2 4 3 #&amp;gt; [2,] 1 5 7  合併矩陣 利用函數cbind() 可以合併同樣橫行數目的兩個矩陣,例如這裡C也是3個橫行:</description>
    </item>
    
    <item>
      <title>4.3-a type matrix</title>
      <link>/rlang/4_3_a_type_matrix.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/4_3_a_type_matrix.html</guid>
      <description>matrix 矩陣的建立有多種方式,其中一種是利用向量轉填矩陣，填入的方式預設是以coumn為主要方向。
matrix(c(1,2,3,4,5,6),2,3)  #&amp;gt; [,1] [,2] [,3] #&amp;gt; [1,] 1 3 5 #&amp;gt; [2,] 2 4 6  問題: 怎樣產生
1 2 3
4 5 6
的矩陣
diag(1, nrow = 5)  #&amp;gt; [,1] [,2] [,3] [,4] [,5] #&amp;gt; [1,] 1 0 0 0 0 #&amp;gt; [2,] 0 1 0 0 0 #&amp;gt; [3,] 0 0 1 0 0 #&amp;gt; [4,] 0 0 0 1 0 #&amp;gt; [5,] 0 0 0 0 1  matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), nrow = 3, byrow = TRUE, dimnames = list(c(&amp;quot;r1&amp;quot;, &amp;quot;r2&amp;quot;, &amp;quot;r3&amp;quot;), c(&amp;quot;c1&amp;quot;, &amp;quot;c2&amp;quot;, &amp;quot;c3&amp;quot;)))  #&amp;gt; c1 c2 c3 #&amp;gt; r1 1 2 3 #&amp;gt; r2 4 5 6 #&amp;gt; r3 7 8 9  m1 &amp;lt;- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), ncol = 3) rownames(m1) &amp;lt;- c(&amp;quot;r1&amp;quot;, &amp;quot;r2&amp;quot;, &amp;quot;r3&amp;quot;) colnames(m1) &amp;lt;- c(&amp;quot;c1&amp;quot;, &amp;quot;c2&amp;quot;, &amp;quot;c3&amp;quot;) m1  #&amp;gt; c1 c2 c3 #&amp;gt; r1 1 4 7 #&amp;gt; r2 2 5 8 #&amp;gt; r3 3 6 9  B = matrix( c(2, 4, 3, 1, 5, 7), nrow=3, ncol=2) B  #&amp;gt; [,1] [,2] #&amp;gt; [1,] 2 1 #&amp;gt; [2,] 4 5 #&amp;gt; [3,] 3 7  Transpose t(B)  #&amp;gt; [,1] [,2] [,3] #&amp;gt; [1,] 2 4 3 #&amp;gt; [2,] 1 5 7  合併矩陣 利用函數cbind() 可以合併同樣橫行數目的兩個矩陣,例如這裡C也是3個橫行:</description>
    </item>
    
    <item>
      <title>4.4 type string</title>
      <link>/rlang/4_4_type_string_function.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/4_4_type_string_function.html</guid>
      <description>字串函數 R提供的字串函數(ascii)  nchar: string length
 paste: concatenate strings
 substr: substring
 toupper: convert entire string to uppercase
 tolower: convert entire string to lowercase
 chartr: character map replacement (like &amp;quot;tr&amp;quot;)
 strtrim：trunates string
  nchar, substr, toupper, tolower will accept string vectors as arguments and return vector results.
strtrim accepts both a vector of strings and a vector of truncation positions.
 \&#39;: 等同於 &amp;quot;&#39;&amp;quot; .</description>
    </item>
    
    <item>
      <title>4.5 type vector</title>
      <link>/rlang/4_5_type_vector.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/4_5_type_vector.html</guid>
      <description>vector 函數範例 cbind,rbind x&amp;lt;-runif(5) y&amp;lt;-runif(6) cbind(x,y)  #&amp;gt; Warning in cbind(x, y): number of rows of result is not a multiple of vector #&amp;gt; length (arg 1)  #&amp;gt; x y #&amp;gt; [1,] 0.43924873 0.1709444 #&amp;gt; [2,] 0.74164621 0.9249346 #&amp;gt; [3,] 0.72473924 0.2492189 #&amp;gt; [4,] 0.04998882 0.1531836 #&amp;gt; [5,] 0.40336666 0.1483507 #&amp;gt; [6,] 0.43924873 0.1862884  函數diff Arguments
* x: a numeric vector or matrix containing the values to be differenced.</description>
    </item>
    
    <item>
      <title>4.6 topic data frame</title>
      <link>/rlang/4_06_topic_dataframe.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/4_06_topic_dataframe.html</guid>
      <description>Bootstrap method for mixed-model [](https://www.r-bloggers.com/2016/09/linear-mixed-effects-model-with-bootstrapping/)
b.coef &amp;lt;- list() for (i in 1:1000){ # 1:1000 = 執行1000次 # 隨機取樣 boot.data &amp;lt;- dataset[, .SD[sample(.N, min(.N,200), replace = FALSE)], by = list(ZONE8, Year)] # 用boot.data來跑GLMM boot.logit &amp;lt;- glmer(Count.F ~ Year.s + (0 + Year.s|ZONE8), data = boot.data, family = poisson) # 輸出斜率與截距，輸出到 b.coef 裡面 b.coef[[i]] &amp;lt;- fixef(boot.logit) } b.coef &amp;lt;- do.call(rbind, b.coef) %&amp;gt;% data.table  L3 &amp;lt;- LETTERS[1:3] fac &amp;lt;- sample(L3, 10, replace = TRUE) (d &amp;lt;- data.</description>
    </item>
    
    <item>
      <title>5 File System</title>
      <link>/rlang/5_filesystem.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/5_filesystem.html</guid>
      <description>File System 暫時子目錄 函數 tempfile() 不是建立新檔案,而是在目前的r session中隨機產生唯一檔案名稱，檔案位置預設是在暫時子目錄中。
mydirname &amp;lt;- tempfile(pattern = &amp;quot;mydir&amp;quot;) mydirname  #&amp;gt; [1] &amp;quot;C:\\Users\\linchao\\AppData\\Local\\Temp\\RtmpkLukVq\\mydir1bb05d806927&amp;quot;  在視窗系統中:
mydirname
C:\Users\使用者名稱\AppData\Local\Temp\RtmpSg2qRA\mydir326845a02140
Exploring file system function file.exists() 可以用來知道檔案是否存在,
function dir() 用來知道目前檔案位置的內容,例如dir(tempdir())
Creating of a directory dir.create 建立子目錄
dir.create(mydirname) file.exists(mydirname) # 上面指令建立的子目錄是否存在 dir(tempdir(), full.names = TRUE) #列出目前子目錄內容(全名) file.mtime(mydirname) #子目錄建立時間,make time  結果
[1] TRUE [1] &amp;quot;C:\\Users\\xxx\\AppData\\Local\\Temp\\RtmpIp3ZiD/file87e8755a1876&amp;quot; [2] &amp;quot;C:\\Users\\xxx\\AppData\\Local\\Temp\\RtmpIp3ZiD/mydir87e86b51384d&amp;quot; [3] &amp;quot;C:\\Users\\xxx\\AppData\\Local\\Temp\\RtmpIp3ZiD/rs-graphics-0f3f81af-32b7-49c4-a272-ad1a859f222f&amp;quot; [1] &amp;quot;2018-10-25 23:42:51 CST&amp;quot;  R系統檔案列表 如果要觀察安裝套件的檔案位置,可以使用指令
system.file(),這個指令可以列出套建的全路徑。例如,
system.file(package = &amp;quot;stats&amp;quot;)  [1] &amp;quot;C:/PROGRA~1/R/R-3.</description>
    </item>
    
    <item>
      <title>5 object_basic</title>
      <link>/rlang/5_objectbasic.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/5_objectbasic.html</guid>
      <description>物件 attribute oth the names and the dimensions of matrices and arrays are stored in R as attributes of the object. These attributes can be seen as labeled values you can attach to any object.
They form one of the mechanisms R uses to define specific object types like dates, time series, and so on. They can include any kind of information, and you can use them yourself to add information to any object.</description>
    </item>
    
    <item>
      <title>6. Programming 1</title>
      <link>/rlang/6_programming_1.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/6_programming_1.html</guid>
      <description>programming in R 條件指令 if 一般來講，通用寫法如下：
if(判斷式){ 成功 }else{ 失敗 }  例如
多行寫法 if(4 &amp;gt; 3){ TRUE }else{ FALSE }  另外，如果區塊內只有一行
if(4 &amp;gt; 3) TRUE else FALSE
ifelse的寫法 ifelse(&#39;判斷式&#39;,&#39;成功&#39;,&#39;失敗&#39;)
例如，
ifelse(4 &amp;gt; 3, T, F)
switch的寫法 switch(&#39;判斷式&#39;,
&#39;動作1&#39;,
&#39;動作2&#39;,
...
)
** 指定第幾行 **
switch(2, 1, 2, #因為判斷式為2，因此，執行動作2 3)   也可以利用字串
switch(&amp;quot;a&amp;quot;, a = 1, b = 2, c = &amp;quot;why&amp;quot;)  #&amp;gt; [1] 1   這個switch 並不是一個語法，而是一個函數，原理大概是 第1個參數以後的東西，會被變成是一個named list。</description>
    </item>
    
    <item>
      <title>7 Function basic</title>
      <link>/rlang/7_function_1.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/7_function_1.html</guid>
      <description>普通函數範例 fivenum function (x, na.rm = TRUE) { xna &amp;lt;- is.na(x) if (any(xna)) { if (na.rm) x &amp;lt;- x[!xna] else return(rep.int(NA, 5)) } x &amp;lt;- sort(x) n &amp;lt;- length(x) if (n == 0) rep.int(NA, 5) else { n4 &amp;lt;- floor((n + 3)/2)/2 d &amp;lt;- c(1, n4, (n + 1)/2, n + 1 - n4, n) 0.5 * (x[floor(d)] + x[ceiling(d)]) } }  自己寫一個類似which()的函數。3個逗點 (dots) 3個逗點可以利用?dots查詢。</description>
    </item>
    
    <item>
      <title>7.1 function - apply family</title>
      <link>/rlang/7_1_apply_family.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/7_1_apply_family.html</guid>
      <description>apply family  其他參考
  apply 可以處理的對象包括 矩陣、資料集、陣列(二維、多維)，可以指定直行、橫行。
函數定義：
apply(X, MARGIN, FUN, ...)  參數列表：
 X : 矩陣matrix、資料集dataframe 、陣列 array
 MARGIN : 1表示橫行，2表示直行
 FUN : the function to be applied
 ... : optional arguments to FUN
  在matlab 中,sum(矩陣,參數2) 參數2的可能值為1或2，分別指定欄位加總或是橫行加總,但是在R中sum(矩陣),卻是整個矩陣元素的加總。
範例1: 橫行加總
x&amp;lt;-matrix(1,ncol=4,nrow=3);x #&amp;gt; [,1] [,2] [,3] [,4] #&amp;gt; [1,] 1 1 1 1 #&amp;gt; [2,] 1 1 1 1 #&amp;gt; [3,] 1 1 1 1 apply(x,1,sum) #&amp;gt; [1] 4 4 4  範例：</description>
    </item>
    
    <item>
      <title>7.8 Function more</title>
      <link>/rlang/7_8_function_2.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/7_8_function_2.html</guid>
      <description># Functions## Introduction簡單測試### Quiz Answer the following questions to see if you can safely skip this chapter. You can find the answers in [function-answer](#function-answer).1. What are the three components of a function?1. What does the following code return?```rx 匿名函數:```rlapply(mtcars, function(x) length(unique(x)))Filter(function(x) !is.numeric(x), mtcars)integrate(function(x) sin(x) ^ 2, 0, pi)```在list中,也可以放入函數:```rfuns [1] 20```在R語言中,函數有時叫做closure因為,R函數包含(enclose)它們的環境 environments.```rtypeof(f01)``````# [1] &#34;</description>
    </item>
    
    <item>
      <title>8. R Package</title>
      <link>/rlang/8_00_rpackages.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/8_00_rpackages.html</guid>
      <description>基本 套件在哪裡  R package and Github
 建立R套件
   note: 可以DOS指令tree .列出目錄樹結構
 R.home() #&amp;gt; [1] &amp;quot;C:/PROGRA~1/R/R-41~1.1&amp;quot; system.file() #&amp;gt; [1] &amp;quot;C:/PROGRA~1/R/R-41~1.1/library/base&amp;quot;  如果要知道安裝的套件在電腦的哪個地方:
.libPaths()
如果要自己預設指定安裝套件位置，可以在使用者文件夾上找到.Rprofile 然後寫上這一行:
.libPaths(&amp;quot;C:/myRlibary&amp;quot;)
套件的安裝
範例:
install.packages(&#39;Rcpp&#39;, dependencies = TRUE)
第2個參數,可以讓依存的檔案自動安裝。
搜尋套件中的檔案 system.file(&amp;quot;help&amp;quot;, &amp;quot;AnIndex&amp;quot;, package = &amp;quot;splines&amp;quot;)
結果:[1] &amp;quot;C:/PROGRA~1/MICROS~4/RCLIEN~1/R_SERVER/library/splines/help/AnIndex&amp;quot;
解釋：在套件splines 中的根目錄中搜尋子目錄help，找出名稱為AnIndex的檔案，並傳回路徑名稱。
練習：
例如,套件epuRate的安裝目錄為D:\RSTUDIO\RMD\RPACK\EPURATE-MASTER\INST，目錄結構如下：
D:\RSTUDIO\RMD\RPACK\EPURATE-MASTER\INST └─rmarkdown └─templates ├─basic │ └─skeleton ├─epurate │ ├─resources │ └─skeleton └─PCTG ├─resources └─skeleton  參考上面的目錄結構，則下面程式執行的結果css,header, template 分別是什麼?
css &amp;lt;- system.</description>
    </item>
    
    <item>
      <title>9. Plot 01</title>
      <link>/rlang/9_plot01.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/9_plot01.html</guid>
      <description>提點和參考 Quick R
basic 一般視窗作業系統的繪圖，會有一個抽象物件device在這個device上，有一個抽象物件canvas，和繪圖工具例如，水彩筆之類的抽象物件可以指定顏色，線條粗細等等。 在R中,對應上述作業系統的關鍵字.Devices(paired list)、.Device(長度為1)、dev.cur(目前的裝置active device)。這裡說的Device指的是視窗。在視窗裡面的畫布,就是R提供的繪圖函數輸出所在,例如plot(),hist()等等。
所以dev.new() 指的是開啟新視窗，dev.cur是目前視窗號碼,dev.prev()前一個視窗號碼。
而plot.new() 則是新增畫布。見練習
㊙️ 怎樣快速查詢？
 ??draw
 ?plot : 參考其中的plot.default 查看圖形選項
  函數plot() 可能最常用的繪圖函數就是plot(),而這個函數比較常用的選項有：
 type: 僅分佈點（預設）是否連線等基本模板。
 lty: 線條樣式line style
 lwd: 線條寬度line width
 col:
 pch: mark
   type description     p points   l lines   o 重合的點和線段   b, c b(both) 點+線,不重合 (如果是&amp;quot;c&amp;quot; 則沒有點)   s, S stair steps   h histogram-like vertical lines   n does not produce any points or lines     資料點 符號</description>
    </item>
    
    <item>
      <title>10. TidyBasic01</title>
      <link>/rlang/10_00_tidybasic01.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/10_00_tidybasic01.html</guid>
      <description>需要安裝babynames,ggplot2  title: Tidy basic 01 Tidy Basic 01 require(tidyr) require(dplyr) # data_frame  From http://stackoverflow.com/questions/1181060
require(tidyr)  #&amp;gt; Loading required package: tidyr  #&amp;gt; Warning: package &#39;tidyr&#39; was built under R version 4.0.5  require(dplyr) # data_frame  #&amp;gt; Loading required package: dplyr  #&amp;gt; Warning: package &#39;dplyr&#39; was built under R version 4.0.5  #&amp;gt; #&amp;gt; Attaching package: &#39;dplyr&#39;  #&amp;gt; The following objects are masked from &#39;package:stats&#39;: #&amp;gt; #&amp;gt; filter, lag  #&amp;gt; The following objects are masked from &#39;package:base&#39;: #&amp;gt; #&amp;gt; intersect, setdiff, setequal, union  stocks &amp;lt;- data_frame( time = as.</description>
    </item>
    
    <item>
      <title>11. sampling</title>
      <link>/rlang/11_00_sampling.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/11_00_sampling.html</guid>
      <description>Sample and Distribution 01 N&amp;lt;-100 pop&amp;lt;-rnorm(N,5,2) rndno&amp;lt;-as.integer(runif(N)*N)+1 smp&amp;lt;-pop[rndno] ss&amp;lt;-summary(smp) s1&amp;lt;-hist(smp) rug(quantile(smp), col=2, lwd=2.5) plot(s1$mids,s1$density,type=&amp;quot;s&amp;quot;) #quiz:barplot?? s2&amp;lt;-hist(pop) plot(s1,col=&amp;quot;red&amp;quot;) lines(s2,col=&amp;quot;blue&amp;quot;)  內建隨機抽樣 函數sample(x,n,replace=FALSE ).
其中x為要抽取的向量, n為樣本容量. replace 預設為false
 no replacement, 等機率:
  例如從52張撲克牌中抽取5張:
sample(1:52, 5) #&amp;gt; [1] 19 46 43 21 41   replacement:
例如拋一枚均勻的硬幣10次
sample(c(&amp;quot;H&amp;quot;, &amp;quot;T&amp;quot;), 10, replace=T) #&amp;gt; [1] &amp;quot;T&amp;quot; &amp;quot;T&amp;quot; &amp;quot;H&amp;quot; &amp;quot;H&amp;quot; &amp;quot;T&amp;quot; &amp;quot;T&amp;quot; &amp;quot;T&amp;quot; &amp;quot;H&amp;quot; &amp;quot;T&amp;quot; &amp;quot;T&amp;quot;   練習:一棵骰子擲10次可表示為:
3) 不等可能的隨機抽樣:
sample(x, n, replace=TRUE, prob=y)</description>
    </item>
    
    <item>
      <title>13. Econometrics</title>
      <link>/rlang/13_0_eco_01_intro.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/13_0_eco_01_intro.html</guid>
      <description>package recommended package foreign 可以用來導入外部資料例如，
* stata 的資料 dta,
* SPSS
* SAS
* Systat
* Mini tab . mtp
利用foreign讀入stata 的資料檔：
require(foreign)  #&amp;gt; Loading required package: foreign  affairs&amp;lt;- read.dta(&amp;quot;http://fmwww.bc.edu/ec-p/data/wooldridge/affairs.dta&amp;quot;) save(affairs,file=&#39;./resources/affairs.RData&#39;)  測試
rm(affairs) load(&#39;./resources/affairs.RData&#39;) head(affairs)  #&amp;gt; id male age yrsmarr kids relig educ occup ratemarr naffairs affair vryhap #&amp;gt; 1 4 1 37 10.0 0 3 18 7 4 0 0 0 #&amp;gt; 2 5 0 27 4.</description>
    </item>
    
    <item>
      <title>14. simulation 1</title>
      <link>/rlang/14_00_sim_1.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/14_00_sim_1.html</guid>
      <description>basic dnorm : PDF
pnorm : CDF
qnorm : inverse CDF
rnorm : random
cdf z_scores &amp;lt;- seq(-3, 3, by = .1) pvalues &amp;lt;- pnorm(z_scores) # Now we&#39;ll plot these values plot(pvalues, # Plot where y = values and x = index of the value in the vector xaxt = &amp;quot;n&amp;quot;, # Don&#39;t label the x-axis type = &amp;quot;l&amp;quot;, # Make it a line plot main = &amp;quot;cdf of the Standard Normal&amp;quot;, xlab= &amp;quot;Quantiles&amp;quot;, ylab=&amp;quot;Probability Density&amp;quot;) # These commands label the x-axis axis(1, at=which(pvalues == pnorm(-2)), labels=round(pnorm(-2), 2)) axis(1, at=which(pvalues == pnorm(-1)), labels=round(pnorm(-1), 2)) axis(1, at=which(pvalues == pnorm(0)), labels=c(.</description>
    </item>
    
    <item>
      <title>11 Environments</title>
      <link>/rlang/11_environments.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/11_environments.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>1_1_執行</title>
      <link>/rlang/1_1_%E5%9F%B7%E8%A1%8C.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/1_1_%E5%9F%B7%E8%A1%8C.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>4.1.1 type basic</title>
      <link>/rlang/4_1_1_type_basic.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/4_1_1_type_basic.html</guid>
      <description>基本操作  操作通常和資料結構相關,可以參考 資料結構
 在R語言中,型態不須經過宣告(declared)。 一個變數的型態經由assignment的過程決定,即&amp;lt;-右邊的R-Objects。也就是在指派變數值的時候,同時決定了型態。
基本的 R-object有 −
 Vectors
 Lists
 Matrices
 Arrays
 Factors
 Data Frames
  最簡單的是vector物件,atomic vector 有6種data types(有時也叫做 6 個classes)
   Data Type Example     Logical TRUE, FALSE   Numeric 1.3, 5, 99   Integer 3L, 24L, 0L   Complex 5 + 4i   Character &#39;b&#39; , &amp;quot;good&amp;quot;, &amp;quot;TRUE&amp;quot;, &#39;23.</description>
    </item>
    
    <item>
      <title>4.1.2_type練習</title>
      <link>/rlang/4_1_2_type%E7%B7%B4%E7%BF%92.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/4_1_2_type%E7%B7%B4%E7%BF%92.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>4.1.3 type list</title>
      <link>/rlang/4_1_3_type_list.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/4_1_3_type_list.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>4.4.1 json</title>
      <link>/rlang/4_4_1_json.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/4_4_1_json.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>9.1 Plot more</title>
      <link>/rlang/9_1_plot02.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/9_1_plot02.html</guid>
      <description>更多繪圖 繪圖區中的字串 函數 text() 在繪圖區填入字串,簡化的指令如下:
text(x, y, labels)
x and y: 文字座標;
labels: 例如 &amp;quot;a label&amp;quot;
pos: 下左上右，1234
cex: 放大倍數，例如，0.65。
範例 :
d&amp;lt;-head(mtcars) plot(d[,&#39;wt&#39;], d[,&#39;mpg&#39;], main=&amp;quot;Milage vs. Car Weight\n~~~~~~~~~~~~~~~~~~~&amp;quot;, xlab=&amp;quot;Weight&amp;quot;, ylab=&amp;quot;Miles/(US) gallon&amp;quot;, pch=19, col=&amp;quot;darkgreen&amp;quot;) text(d[,&#39;wt&#39;], d[,&#39;mpg&#39;], row.names(d), cex=1,pos=3,col=&amp;quot;red&amp;quot;)  在圖形margin中填入文字 mtext(text, side=3)
text : 例如&amp;quot;a label&amp;quot;
side : 哪一側 :
順時針
1: 下
2: 左
3: 上
4: 又
範例 :
plot(1:10, 1:10, main=&amp;quot;mtext(...) examples\n~~~~~~~~~~~&amp;quot;) mtext(&amp;quot;Magic function&amp;quot;, side=3)  Add mathematical annotation to a plot plot(1:10, 1:10, main=&amp;quot;text(.</description>
    </item>
    
    <item>
      <title>作業系統</title>
      <link>/rlang/%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rlang/%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1.html</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
